// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$233,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$234,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$235,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$236,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$237,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__169755__delegate = function (args){
return console.log.apply(console,(function (){var G__169754 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__169754) : cljs.core.into_array.call(null,G__169754));
})());
};
var G__169755 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__169756__i = 0, G__169756__a = new Array(arguments.length -  0);
while (G__169756__i < G__169756__a.length) {G__169756__a[G__169756__i] = arguments[G__169756__i + 0]; ++G__169756__i;}
  args = new cljs.core.IndexedSeq(G__169756__a,0);
} 
return G__169755__delegate.call(this,args);};
G__169755.cljs$lang$maxFixedArity = 0;
G__169755.cljs$lang$applyTo = (function (arglist__169757){
var args = cljs.core.seq(arglist__169757);
return G__169755__delegate(args);
});
G__169755.cljs$core$IFn$_invoke$arity$variadic = G__169755__delegate;
return G__169755;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__169759 = x;
return goog.isString(G__169759);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__169761 = x__$1;
return goog.typeOf(G__169761);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__17458__auto__ = ty;
if(cljs.core.truth_(and__17458__auto__)){
return ty.cljs$lang$type;
} else {
return and__17458__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__169763 = obj;
return goog.typeOf(G__169763);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__169765 = Symbol;
return goog.typeOf(G__169765);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__18357__auto___169767 = len;
var i_169768 = (0);
while(true){
if((i_169768 < n__18357__auto___169767)){
(new_arr[i_169768] = (arr[i_169768]));

var G__169769 = (i_169768 + (1));
i_169768 = G__169769;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__169770 = (i + (1));
i = G__169770;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__169779__delegate = function (array,i,idxs){
var G__169776 = aget;
var G__169777 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__169778 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__169776,G__169777,G__169778) : cljs.core.apply.call(null,G__169776,G__169777,G__169778));
};
var G__169779 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__169780__i = 0, G__169780__a = new Array(arguments.length -  2);
while (G__169780__i < G__169780__a.length) {G__169780__a[G__169780__i] = arguments[G__169780__i + 2]; ++G__169780__i;}
  idxs = new cljs.core.IndexedSeq(G__169780__a,0);
} 
return G__169779__delegate.call(this,array,i,idxs);};
G__169779.cljs$lang$maxFixedArity = 2;
G__169779.cljs$lang$applyTo = (function (arglist__169781){
var array = cljs.core.first(arglist__169781);
arglist__169781 = cljs.core.next(arglist__169781);
var i = cljs.core.first(arglist__169781);
var idxs = cljs.core.rest(arglist__169781);
return G__169779__delegate(array,i,idxs);
});
G__169779.cljs$core$IFn$_invoke$arity$variadic = G__169779__delegate;
return G__169779;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__169782 = null;
if (arguments.length > 2) {
var G__169783__i = 0, G__169783__a = new Array(arguments.length -  2);
while (G__169783__i < G__169783__a.length) {G__169783__a[G__169783__i] = arguments[G__169783__i + 2]; ++G__169783__i;}
G__169782 = new cljs.core.IndexedSeq(G__169783__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__169782);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__169792__delegate = function (array,idx,idx2,idxv){
var G__169788 = aset;
var G__169789 = (array[idx]);
var G__169790 = idx2;
var G__169791 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__169788,G__169789,G__169790,G__169791) : cljs.core.apply.call(null,G__169788,G__169789,G__169790,G__169791));
};
var G__169792 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__169793__i = 0, G__169793__a = new Array(arguments.length -  3);
while (G__169793__i < G__169793__a.length) {G__169793__a[G__169793__i] = arguments[G__169793__i + 3]; ++G__169793__i;}
  idxv = new cljs.core.IndexedSeq(G__169793__a,0);
} 
return G__169792__delegate.call(this,array,idx,idx2,idxv);};
G__169792.cljs$lang$maxFixedArity = 3;
G__169792.cljs$lang$applyTo = (function (arglist__169794){
var array = cljs.core.first(arglist__169794);
arglist__169794 = cljs.core.next(arglist__169794);
var idx = cljs.core.first(arglist__169794);
arglist__169794 = cljs.core.next(arglist__169794);
var idx2 = cljs.core.first(arglist__169794);
var idxv = cljs.core.rest(arglist__169794);
return G__169792__delegate(array,idx,idx2,idxv);
});
G__169792.cljs$core$IFn$_invoke$arity$variadic = G__169792__delegate;
return G__169792;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__169795 = null;
if (arguments.length > 3) {
var G__169796__i = 0, G__169796__a = new Array(arguments.length -  3);
while (G__169796__i < G__169796__a.length) {G__169796__a[G__169796__i] = arguments[G__169796__i + 3]; ++G__169796__i;}
G__169795 = new cljs.core.IndexedSeq(G__169796__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__169795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__169802 = (function (a,x){
a.push(x);

return a;
});
var G__169803 = [];
var G__169804 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__169802,G__169803,G__169804) : cljs.core.reduce.call(null,G__169802,G__169803,G__169804));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__169805__i = 0, G__169805__a = new Array(arguments.length -  2);
while (G__169805__i < G__169805__a.length) {G__169805__a[G__169805__i] = arguments[G__169805__i + 2]; ++G__169805__i;}
  args = new cljs.core.IndexedSeq(G__169805__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__169806){
var obj = cljs.core.first(arglist__169806);
arglist__169806 = cljs.core.next(arglist__169806);
var s = cljs.core.first(arglist__169806);
var args = cljs.core.rest(arglist__169806);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj169808 = {};
return obj169808;
})();


cljs.core.IFn = (function (){var obj169810 = {};
return obj169810;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169856 = x__18114__auto__;
return goog.typeOf(G__169856);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169858 = x__18114__auto__;
return goog.typeOf(G__169858);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169860 = x__18114__auto__;
return goog.typeOf(G__169860);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169862 = x__18114__auto__;
return goog.typeOf(G__169862);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169864 = x__18114__auto__;
return goog.typeOf(G__169864);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169866 = x__18114__auto__;
return goog.typeOf(G__169866);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169868 = x__18114__auto__;
return goog.typeOf(G__169868);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169870 = x__18114__auto__;
return goog.typeOf(G__169870);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169872 = x__18114__auto__;
return goog.typeOf(G__169872);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169874 = x__18114__auto__;
return goog.typeOf(G__169874);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169876 = x__18114__auto__;
return goog.typeOf(G__169876);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169878 = x__18114__auto__;
return goog.typeOf(G__169878);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169880 = x__18114__auto__;
return goog.typeOf(G__169880);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169882 = x__18114__auto__;
return goog.typeOf(G__169882);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169884 = x__18114__auto__;
return goog.typeOf(G__169884);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169886 = x__18114__auto__;
return goog.typeOf(G__169886);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169888 = x__18114__auto__;
return goog.typeOf(G__169888);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169890 = x__18114__auto__;
return goog.typeOf(G__169890);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169892 = x__18114__auto__;
return goog.typeOf(G__169892);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169894 = x__18114__auto__;
return goog.typeOf(G__169894);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169896 = x__18114__auto__;
return goog.typeOf(G__169896);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._invoke[(function (){var G__169898 = x__18114__auto__;
return goog.typeOf(G__169898);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._invoke["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj169900 = {};
return obj169900;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__17458__auto__ = value;
if(and__17458__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__17458__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__18114__auto__ = (((value == null))?null:value);
return (function (){var or__17470__auto__ = (cljs.core._clone[(function (){var G__169904 = x__18114__auto__;
return goog.typeOf(G__169904);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._clone["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj169906 = {};
return obj169906;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._count[(function (){var G__169910 = x__18114__auto__;
return goog.typeOf(G__169910);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._count["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj169912 = {};
return obj169912;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._empty[(function (){var G__169916 = x__18114__auto__;
return goog.typeOf(G__169916);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._empty["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj169918 = {};
return obj169918;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._conj[(function (){var G__169922 = x__18114__auto__;
return goog.typeOf(G__169922);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._conj["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj169924 = {};
return obj169924;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._nth[(function (){var G__169930 = x__18114__auto__;
return goog.typeOf(G__169930);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._nth["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._nth[(function (){var G__169932 = x__18114__auto__;
return goog.typeOf(G__169932);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._nth["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj169934 = {};
return obj169934;
})();


cljs.core.ISeq = (function (){var obj169936 = {};
return obj169936;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._first[(function (){var G__169940 = x__18114__auto__;
return goog.typeOf(G__169940);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._first["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._rest[(function (){var G__169944 = x__18114__auto__;
return goog.typeOf(G__169944);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._rest["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj169946 = {};
return obj169946;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._next[(function (){var G__169950 = x__18114__auto__;
return goog.typeOf(G__169950);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._next["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj169952 = {};
return obj169952;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._lookup[(function (){var G__169958 = x__18114__auto__;
return goog.typeOf(G__169958);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._lookup["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._lookup[(function (){var G__169960 = x__18114__auto__;
return goog.typeOf(G__169960);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._lookup["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj169962 = {};
return obj169962;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__169966 = x__18114__auto__;
return goog.typeOf(G__169966);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._assoc[(function (){var G__169970 = x__18114__auto__;
return goog.typeOf(G__169970);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._assoc["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj169972 = {};
return obj169972;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._dissoc[(function (){var G__169976 = x__18114__auto__;
return goog.typeOf(G__169976);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._dissoc["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj169978 = {};
return obj169978;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._key[(function (){var G__169982 = x__18114__auto__;
return goog.typeOf(G__169982);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._key["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._val[(function (){var G__169986 = x__18114__auto__;
return goog.typeOf(G__169986);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._val["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj169988 = {};
return obj169988;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._disjoin[(function (){var G__169992 = x__18114__auto__;
return goog.typeOf(G__169992);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._disjoin["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj169994 = {};
return obj169994;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._peek[(function (){var G__169998 = x__18114__auto__;
return goog.typeOf(G__169998);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._peek["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._pop[(function (){var G__170002 = x__18114__auto__;
return goog.typeOf(G__170002);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._pop["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj170004 = {};
return obj170004;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._assoc_n[(function (){var G__170008 = x__18114__auto__;
return goog.typeOf(G__170008);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj170010 = {};
return obj170010;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._deref[(function (){var G__170014 = x__18114__auto__;
return goog.typeOf(G__170014);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._deref["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj170016 = {};
return obj170016;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._deref_with_timeout[(function (){var G__170020 = x__18114__auto__;
return goog.typeOf(G__170020);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj170022 = {};
return obj170022;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._meta[(function (){var G__170026 = x__18114__auto__;
return goog.typeOf(G__170026);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._meta["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj170028 = {};
return obj170028;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._with_meta[(function (){var G__170032 = x__18114__auto__;
return goog.typeOf(G__170032);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._with_meta["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj170034 = {};
return obj170034;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._reduce[(function (){var G__170040 = x__18114__auto__;
return goog.typeOf(G__170040);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._reduce["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._reduce[(function (){var G__170042 = x__18114__auto__;
return goog.typeOf(G__170042);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._reduce["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj170044 = {};
return obj170044;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._kv_reduce[(function (){var G__170048 = x__18114__auto__;
return goog.typeOf(G__170048);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj170050 = {};
return obj170050;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._equiv[(function (){var G__170054 = x__18114__auto__;
return goog.typeOf(G__170054);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._equiv["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj170056 = {};
return obj170056;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._hash[(function (){var G__170060 = x__18114__auto__;
return goog.typeOf(G__170060);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._hash["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj170062 = {};
return obj170062;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._seq[(function (){var G__170066 = x__18114__auto__;
return goog.typeOf(G__170066);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._seq["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj170068 = {};
return obj170068;
})();


cljs.core.IList = (function (){var obj170070 = {};
return obj170070;
})();


cljs.core.IRecord = (function (){var obj170072 = {};
return obj170072;
})();


cljs.core.IReversible = (function (){var obj170074 = {};
return obj170074;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._rseq[(function (){var G__170078 = x__18114__auto__;
return goog.typeOf(G__170078);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._rseq["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj170080 = {};
return obj170080;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._sorted_seq[(function (){var G__170084 = x__18114__auto__;
return goog.typeOf(G__170084);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._sorted_seq_from[(function (){var G__170088 = x__18114__auto__;
return goog.typeOf(G__170088);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._entry_key[(function (){var G__170092 = x__18114__auto__;
return goog.typeOf(G__170092);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._entry_key["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._comparator[(function (){var G__170096 = x__18114__auto__;
return goog.typeOf(G__170096);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._comparator["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj170098 = {};
return obj170098;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__17458__auto__ = writer;
if(and__17458__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__17458__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__18114__auto__ = (((writer == null))?null:writer);
return (function (){var or__17470__auto__ = (cljs.core._write[(function (){var G__170102 = x__18114__auto__;
return goog.typeOf(G__170102);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._write["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__17458__auto__ = writer;
if(and__17458__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__17458__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__18114__auto__ = (((writer == null))?null:writer);
return (function (){var or__17470__auto__ = (cljs.core._flush[(function (){var G__170106 = x__18114__auto__;
return goog.typeOf(G__170106);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._flush["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj170108 = {};
return obj170108;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._pr_writer[(function (){var G__170112 = x__18114__auto__;
return goog.typeOf(G__170112);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj170114 = {};
return obj170114;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__17458__auto__ = d;
if(and__17458__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__17458__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__18114__auto__ = (((d == null))?null:d);
return (function (){var or__17470__auto__ = (cljs.core._realized_QMARK_[(function (){var G__170118 = x__18114__auto__;
return goog.typeOf(G__170118);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj170120 = {};
return obj170120;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._notify_watches[(function (){var G__170124 = x__18114__auto__;
return goog.typeOf(G__170124);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._add_watch[(function (){var G__170128 = x__18114__auto__;
return goog.typeOf(G__170128);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._add_watch["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__17458__auto__ = this$;
if(and__17458__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__17458__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__18114__auto__ = (((this$ == null))?null:this$);
return (function (){var or__17470__auto__ = (cljs.core._remove_watch[(function (){var G__170132 = x__18114__auto__;
return goog.typeOf(G__170132);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj170134 = {};
return obj170134;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._as_transient[(function (){var G__170138 = x__18114__auto__;
return goog.typeOf(G__170138);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._as_transient["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj170140 = {};
return obj170140;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__17458__auto__ = tcoll;
if(and__17458__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__17458__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__18114__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17470__auto__ = (cljs.core._conj_BANG_[(function (){var G__170144 = x__18114__auto__;
return goog.typeOf(G__170144);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__17458__auto__ = tcoll;
if(and__17458__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__17458__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__18114__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17470__auto__ = (cljs.core._persistent_BANG_[(function (){var G__170148 = x__18114__auto__;
return goog.typeOf(G__170148);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj170150 = {};
return obj170150;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__17458__auto__ = tcoll;
if(and__17458__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__17458__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__18114__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17470__auto__ = (cljs.core._assoc_BANG_[(function (){var G__170154 = x__18114__auto__;
return goog.typeOf(G__170154);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj170156 = {};
return obj170156;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__17458__auto__ = tcoll;
if(and__17458__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__17458__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__18114__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17470__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__170160 = x__18114__auto__;
return goog.typeOf(G__170160);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj170162 = {};
return obj170162;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__17458__auto__ = tcoll;
if(and__17458__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__17458__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__18114__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17470__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__170166 = x__18114__auto__;
return goog.typeOf(G__170166);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__17458__auto__ = tcoll;
if(and__17458__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__17458__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__18114__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17470__auto__ = (cljs.core._pop_BANG_[(function (){var G__170170 = x__18114__auto__;
return goog.typeOf(G__170170);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj170172 = {};
return obj170172;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__17458__auto__ = tcoll;
if(and__17458__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__17458__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__18114__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__17470__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__170176 = x__18114__auto__;
return goog.typeOf(G__170176);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj170178 = {};
return obj170178;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__17458__auto__ = x;
if(and__17458__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__17458__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__18114__auto__ = (((x == null))?null:x);
return (function (){var or__17470__auto__ = (cljs.core._compare[(function (){var G__170182 = x__18114__auto__;
return goog.typeOf(G__170182);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._compare["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj170184 = {};
return obj170184;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._drop_first[(function (){var G__170188 = x__18114__auto__;
return goog.typeOf(G__170188);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._drop_first["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj170190 = {};
return obj170190;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._chunked_first[(function (){var G__170194 = x__18114__auto__;
return goog.typeOf(G__170194);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._chunked_rest[(function (){var G__170198 = x__18114__auto__;
return goog.typeOf(G__170198);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj170200 = {};
return obj170200;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._chunked_next[(function (){var G__170204 = x__18114__auto__;
return goog.typeOf(G__170204);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj170206 = {};
return obj170206;
})();

cljs.core._name = (function _name(x){
if((function (){var and__17458__auto__ = x;
if(and__17458__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__17458__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__18114__auto__ = (((x == null))?null:x);
return (function (){var or__17470__auto__ = (cljs.core._name[(function (){var G__170210 = x__18114__auto__;
return goog.typeOf(G__170210);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._name["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__17458__auto__ = x;
if(and__17458__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__17458__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__18114__auto__ = (((x == null))?null:x);
return (function (){var or__17470__auto__ = (cljs.core._namespace[(function (){var G__170214 = x__18114__auto__;
return goog.typeOf(G__170214);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._namespace["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj170216 = {};
return obj170216;
})();


cljs.core.IReset = (function (){var obj170218 = {};
return obj170218;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._reset_BANG_[(function (){var G__170222 = x__18114__auto__;
return goog.typeOf(G__170222);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj170224 = {};
return obj170224;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._swap_BANG_[(function (){var G__170234 = x__18114__auto__;
return goog.typeOf(G__170234);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._swap_BANG_[(function (){var G__170236 = x__18114__auto__;
return goog.typeOf(G__170236);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._swap_BANG_[(function (){var G__170238 = x__18114__auto__;
return goog.typeOf(G__170238);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._swap_BANG_[(function (){var G__170240 = x__18114__auto__;
return goog.typeOf(G__170240);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj170242 = {};
return obj170242;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__17458__auto__ = o;
if(and__17458__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__17458__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__18114__auto__ = (((o == null))?null:o);
return (function (){var or__17470__auto__ = (cljs.core._vreset_BANG_[(function (){var G__170246 = x__18114__auto__;
return goog.typeOf(G__170246);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj170248 = {};
return obj170248;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__17458__auto__ = coll;
if(and__17458__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__17458__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__18114__auto__ = (((coll == null))?null:coll);
return (function (){var or__17470__auto__ = (cljs.core._iterator[(function (){var G__170252 = x__18114__auto__;
return goog.typeOf(G__170252);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._iterator["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__170255 = (4294967295);
var G__170256 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__170255,G__170256) : Math.imul.call(null,G__170255,G__170256));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__170259 = a;
var G__170260 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__170259,G__170260) : Math.imul.call(null,G__170259,G__170260));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__170261 = (i + (2));
var G__170262 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__170261;
h1 = G__170262;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj170264 = {};
return obj170264;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__170265 = (i + (1));
var G__170266 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__170265;
hash = G__170266;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj170270 = {};
return obj170270;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__170273 = o;
if(G__170273){
var bit__18144__auto__ = (G__170273.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__18144__auto__) || (G__170273.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__170274 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__170274) : Math.floor.call(null,G__170274));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17458__auto__ = cljs.core.not(a.ns);
if(and__17458__auto__){
return b.ns;
} else {
return and__17458__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__170281 = a.ns;
var G__170282 = b.ns;
return goog.array.defaultCompare(G__170281,G__170282);
})();
if(((0) === nsc)){
var G__170283 = a.name;
var G__170284 = b.name;
return goog.array.defaultCompare(G__170283,G__170284);
} else {
return nsc;
}
}
} else {
var G__170285 = a.name;
var G__170286 = b.name;
return goog.array.defaultCompare(G__170285,G__170286);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__17891__auto__ = self__._hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__170288 = null;
var G__170288__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__170288__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__170288 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__170288__2.call(this,self__,coll);
case 3:
return G__170288__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__170288.cljs$core$IFn$_invoke$arity$2 = G__170288__2;
G__170288.cljs$core$IFn$_invoke$arity$3 = G__170288__3;
return G__170288;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args170287){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args170287)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__170336 = null;
var G__170336__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__170336__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__170336__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__170336__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__170336__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__170336__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__170336__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__170336__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__170336__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__170336__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__170336__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__170336__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__170336__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__170336__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__170336__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__170336__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__170336__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__170336__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__170336__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__170336__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__170336__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__170336__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170292 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__170293 = a;
var G__170294 = b;
var G__170295 = c;
var G__170296 = d;
var G__170297 = e;
var G__170298 = f;
var G__170299 = g;
var G__170300 = h;
var G__170301 = i;
var G__170302 = j;
var G__170303 = k;
var G__170304 = l;
var G__170305 = m;
var G__170306 = n;
var G__170307 = o;
var G__170308 = p;
var G__170309 = q;
var G__170310 = r;
var G__170311 = s;
var G__170312 = t;
var G__170313 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__170292,G__170293,G__170294,G__170295,G__170296,G__170297,G__170298,G__170299,G__170300,G__170301,G__170302,G__170303,G__170304,G__170305,G__170306,G__170307,G__170308,G__170309,G__170310,G__170311,G__170312,G__170313) : cljs.core.apply.call(null,G__170292,G__170293,G__170294,G__170295,G__170296,G__170297,G__170298,G__170299,G__170300,G__170301,G__170302,G__170303,G__170304,G__170305,G__170306,G__170307,G__170308,G__170309,G__170310,G__170311,G__170312,G__170313));
});
G__170336 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__170336__1.call(this,self__);
case 2:
return G__170336__2.call(this,self__,a);
case 3:
return G__170336__3.call(this,self__,a,b);
case 4:
return G__170336__4.call(this,self__,a,b,c);
case 5:
return G__170336__5.call(this,self__,a,b,c,d);
case 6:
return G__170336__6.call(this,self__,a,b,c,d,e);
case 7:
return G__170336__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__170336__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__170336__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__170336__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__170336__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__170336__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__170336__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__170336__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__170336__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__170336__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__170336__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__170336__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__170336__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__170336__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__170336__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__170336__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__170336.cljs$core$IFn$_invoke$arity$1 = G__170336__1;
G__170336.cljs$core$IFn$_invoke$arity$2 = G__170336__2;
G__170336.cljs$core$IFn$_invoke$arity$3 = G__170336__3;
G__170336.cljs$core$IFn$_invoke$arity$4 = G__170336__4;
G__170336.cljs$core$IFn$_invoke$arity$5 = G__170336__5;
G__170336.cljs$core$IFn$_invoke$arity$6 = G__170336__6;
G__170336.cljs$core$IFn$_invoke$arity$7 = G__170336__7;
G__170336.cljs$core$IFn$_invoke$arity$8 = G__170336__8;
G__170336.cljs$core$IFn$_invoke$arity$9 = G__170336__9;
G__170336.cljs$core$IFn$_invoke$arity$10 = G__170336__10;
G__170336.cljs$core$IFn$_invoke$arity$11 = G__170336__11;
G__170336.cljs$core$IFn$_invoke$arity$12 = G__170336__12;
G__170336.cljs$core$IFn$_invoke$arity$13 = G__170336__13;
G__170336.cljs$core$IFn$_invoke$arity$14 = G__170336__14;
G__170336.cljs$core$IFn$_invoke$arity$15 = G__170336__15;
G__170336.cljs$core$IFn$_invoke$arity$16 = G__170336__16;
G__170336.cljs$core$IFn$_invoke$arity$17 = G__170336__17;
G__170336.cljs$core$IFn$_invoke$arity$18 = G__170336__18;
G__170336.cljs$core$IFn$_invoke$arity$19 = G__170336__19;
G__170336.cljs$core$IFn$_invoke$arity$20 = G__170336__20;
G__170336.cljs$core$IFn$_invoke$arity$21 = G__170336__21;
G__170336.cljs$core$IFn$_invoke$arity$22 = G__170336__22;
return G__170336;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args170291){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args170291)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__170314 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__170315 = a;
var G__170316 = b;
var G__170317 = c;
var G__170318 = d;
var G__170319 = e;
var G__170320 = f;
var G__170321 = g;
var G__170322 = h;
var G__170323 = i;
var G__170324 = j;
var G__170325 = k;
var G__170326 = l;
var G__170327 = m;
var G__170328 = n;
var G__170329 = o;
var G__170330 = p;
var G__170331 = q;
var G__170332 = r;
var G__170333 = s;
var G__170334 = t;
var G__170335 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__170314,G__170315,G__170316,G__170317,G__170318,G__170319,G__170320,G__170321,G__170322,G__170323,G__170324,G__170325,G__170326,G__170327,G__170328,G__170329,G__170330,G__170331,G__170332,G__170333,G__170334,G__170335) : cljs.core.apply.call(null,G__170314,G__170315,G__170316,G__170317,G__170318,G__170319,G__170320,G__170321,G__170322,G__170323,G__170324,G__170325,G__170326,G__170327,G__170328,G__170329,G__170330,G__170331,G__170332,G__170333,G__170334,G__170335));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__170338 = x;
if(G__170338){
var bit__18151__auto__ = null;
if(cljs.core.truth_((function (){var or__17470__auto__ = bit__18151__auto__;
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return G__170338.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__170338.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__170338);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__170338);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__170340 = value;
if(G__170340){
var bit__18151__auto__ = (G__170340.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__18151__auto__) || (G__170340.cljs$core$ICloneable$)){
return true;
} else {
if((!G__170340.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__170340);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__170340);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__170342 = coll;
if(G__170342){
var bit__18144__auto__ = (G__170342.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18144__auto__) || (G__170342.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__170344 = coll;
if(G__170344){
var bit__18144__auto__ = (G__170344.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18144__auto__) || (G__170344.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__170346 = coll;
if(G__170346){
var bit__18144__auto__ = (G__170346.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18144__auto__) || (G__170346.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__170348 = coll;
if(G__170348){
var bit__18144__auto__ = (G__170348.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18144__auto__) || (G__170348.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__170353__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__170354 = y;
var G__170355 = cljs.core.first(more);
var G__170356 = cljs.core.next(more);
x = G__170354;
y = G__170355;
more = G__170356;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__170353 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__170357__i = 0, G__170357__a = new Array(arguments.length -  2);
while (G__170357__i < G__170357__a.length) {G__170357__a[G__170357__i] = arguments[G__170357__i + 2]; ++G__170357__i;}
  more = new cljs.core.IndexedSeq(G__170357__a,0);
} 
return G__170353__delegate.call(this,x,y,more);};
G__170353.cljs$lang$maxFixedArity = 2;
G__170353.cljs$lang$applyTo = (function (arglist__170358){
var x = cljs.core.first(arglist__170358);
arglist__170358 = cljs.core.next(arglist__170358);
var y = cljs.core.first(arglist__170358);
var more = cljs.core.rest(arglist__170358);
return G__170353__delegate(x,y,more);
});
G__170353.cljs$core$IFn$_invoke$arity$variadic = G__170353__delegate;
return G__170353;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__170359 = null;
if (arguments.length > 2) {
var G__170360__i = 0, G__170360__a = new Array(arguments.length -  2);
while (G__170360__i < G__170360__a.length) {G__170360__a[G__170360__i] = arguments[G__170360__i + 2]; ++G__170360__i;}
G__170359 = new cljs.core.IndexedSeq(G__170360__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__170359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__170361 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__170361) : cljs.core.es6_iterator_seq.call(null,G__170361));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__170362 = (n + (1));
var G__170363 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__170364 = cljs.core.next(coll__$1);
n = G__170362;
hash_code = G__170363;
coll__$1 = G__170364;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__170365 = (n + (1));
var G__170366 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__170367 = cljs.core.next(coll__$1);
n = G__170365;
hash_code = G__170366;
coll__$1 = G__170367;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__170368 = o;
return goog.getUid(G__170368);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__170370 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__170370) : cljs.core.deref.call(null,G__170370));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__170377 = val;
var G__170378 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__170377,G__170378) : f.call(null,G__170377,G__170378));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__170383 = nval;
var G__170384 = (n + (1));
val = G__170383;
n = G__170384;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__170379 = val__$1;
var G__170380 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__170379,G__170380) : f.call(null,G__170379,G__170380));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__170385 = nval;
var G__170386 = (n + (1));
val__$1 = G__170385;
n = G__170386;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__170381 = val__$1;
var G__170382 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__170381,G__170382) : f.call(null,G__170381,G__170382));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__170387 = nval;
var G__170388 = (n + (1));
val__$1 = G__170387;
n = G__170388;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__170395 = val;
var G__170396 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__170395,G__170396) : f.call(null,G__170395,G__170396));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__170401 = nval;
var G__170402 = (n + (1));
val = G__170401;
n = G__170402;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__170397 = val__$1;
var G__170398 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__170397,G__170398) : f.call(null,G__170397,G__170398));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__170403 = nval;
var G__170404 = (n + (1));
val__$1 = G__170403;
n = G__170404;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__170399 = val__$1;
var G__170400 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__170399,G__170400) : f.call(null,G__170399,G__170400));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__170405 = nval;
var G__170406 = (n + (1));
val__$1 = G__170405;
n = G__170406;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__170408 = x;
if(G__170408){
var bit__18151__auto__ = (G__170408.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18151__auto__) || (G__170408.cljs$core$ICounted$)){
return true;
} else {
if((!G__170408.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__170408);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__170408);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__170410 = x;
if(G__170410){
var bit__18151__auto__ = (G__170410.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18151__auto__) || (G__170410.cljs$core$IIndexed$)){
return true;
} else {
if((!G__170410.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__170410);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__170410);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__170411 = coll__$1;
var G__170412 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__170411,G__170412) : cljs.core.equiv_sequential.call(null,G__170411,G__170412));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__170413 = o;
var G__170414 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__170413,G__170414) : cljs.core.cons.call(null,G__170413,G__170414));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__170417 = coll__$1;
var G__170418 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__170417,G__170418) : cljs.core.equiv_sequential.call(null,G__170417,G__170418));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__170419 = cljs.core.List.EMPTY;
var G__170420 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__170419,G__170420) : cljs.core.with_meta.call(null,G__170419,G__170420));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__170421 = f;
var G__170422 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__170421,G__170422) : cljs.core.seq_reduce.call(null,G__170421,G__170422));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__170423 = f;
var G__170424 = start;
var G__170425 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__170423,G__170424,G__170425) : cljs.core.seq_reduce.call(null,G__170423,G__170424,G__170425));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__170426 = o;
var G__170427 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__170426,G__170427) : cljs.core.cons.call(null,G__170426,G__170427));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__170428 = sn;
s = G__170428;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__170433__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__170434 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__170435 = cljs.core.first(xs);
var G__170436 = cljs.core.next(xs);
coll = G__170434;
x = G__170435;
xs = G__170436;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__170433 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__170437__i = 0, G__170437__a = new Array(arguments.length -  2);
while (G__170437__i < G__170437__a.length) {G__170437__a[G__170437__i] = arguments[G__170437__i + 2]; ++G__170437__i;}
  xs = new cljs.core.IndexedSeq(G__170437__a,0);
} 
return G__170433__delegate.call(this,coll,x,xs);};
G__170433.cljs$lang$maxFixedArity = 2;
G__170433.cljs$lang$applyTo = (function (arglist__170438){
var coll = cljs.core.first(arglist__170438);
arglist__170438 = cljs.core.next(arglist__170438);
var x = cljs.core.first(arglist__170438);
var xs = cljs.core.rest(arglist__170438);
return G__170433__delegate(coll,x,xs);
});
G__170433.cljs$core$IFn$_invoke$arity$variadic = G__170433__delegate;
return G__170433;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__170439 = null;
if (arguments.length > 2) {
var G__170440__i = 0, G__170440__a = new Array(arguments.length -  2);
while (G__170440__i < G__170440__a.length) {G__170440__a[G__170440__i] = arguments[G__170440__i + 2]; ++G__170440__i;}
G__170439 = new cljs.core.IndexedSeq(G__170440__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__170439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__170441 = cljs.core.next(s);
var G__170442 = (acc + (1));
s = G__170441;
acc = G__170442;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__170444 = coll;
if(G__170444){
var bit__18144__auto__ = (G__170444.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__18144__auto__) || (G__170444.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__170445 = cljs.core.next(coll);
var G__170446 = (n - (1));
coll = G__170445;
n = G__170446;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__170447 = cljs.core.next(coll);
var G__170448 = (n - (1));
var G__170449 = not_found;
coll = G__170447;
n = G__170448;
not_found = G__170449;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__170454 = coll;
if(G__170454){
var bit__18144__auto__ = (G__170454.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18144__auto__) || (G__170454.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__170455 = coll;
if(G__170455){
var bit__18151__auto__ = (G__170455.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18151__auto__) || (G__170455.cljs$core$ISeq$)){
return true;
} else {
if((!G__170455.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__170455);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__170455);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__170456 = coll;
if(G__170456){
var bit__18144__auto__ = (G__170456.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__18144__auto__) || (G__170456.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__170457 = coll;
if(G__170457){
var bit__18151__auto__ = (G__170457.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18151__auto__) || (G__170457.cljs$core$ISeq$)){
return true;
} else {
if((!G__170457.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__170457);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__170457);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__170458 = (n__$1 - (1));
var G__170459 = cljs.core.rest(xs);
n__$1 = G__170458;
xs = G__170459;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__170462 = o;
if(G__170462){
var bit__18144__auto__ = (G__170462.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18144__auto__) || (G__170462.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__170463 = o;
if(G__170463){
var bit__18144__auto__ = (G__170463.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18144__auto__) || (G__170463.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__170467__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__170468 = ret;
var G__170469 = cljs.core.first(kvs);
var G__170470 = cljs.core.second(kvs);
var G__170471 = cljs.core.nnext(kvs);
coll = G__170468;
k = G__170469;
v = G__170470;
kvs = G__170471;
continue;
} else {
return ret;
}
break;
}
};
var G__170467 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__170472__i = 0, G__170472__a = new Array(arguments.length -  3);
while (G__170472__i < G__170472__a.length) {G__170472__a[G__170472__i] = arguments[G__170472__i + 3]; ++G__170472__i;}
  kvs = new cljs.core.IndexedSeq(G__170472__a,0);
} 
return G__170467__delegate.call(this,coll,k,v,kvs);};
G__170467.cljs$lang$maxFixedArity = 3;
G__170467.cljs$lang$applyTo = (function (arglist__170473){
var coll = cljs.core.first(arglist__170473);
arglist__170473 = cljs.core.next(arglist__170473);
var k = cljs.core.first(arglist__170473);
arglist__170473 = cljs.core.next(arglist__170473);
var v = cljs.core.first(arglist__170473);
var kvs = cljs.core.rest(arglist__170473);
return G__170467__delegate(coll,k,v,kvs);
});
G__170467.cljs$core$IFn$_invoke$arity$variadic = G__170467__delegate;
return G__170467;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__170474 = null;
if (arguments.length > 3) {
var G__170475__i = 0, G__170475__a = new Array(arguments.length -  3);
while (G__170475__i < G__170475__a.length) {G__170475__a[G__170475__i] = arguments[G__170475__i + 3]; ++G__170475__i;}
G__170474 = new cljs.core.IndexedSeq(G__170475__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__170474);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__170478__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__170479 = ret;
var G__170480 = cljs.core.first(ks);
var G__170481 = cljs.core.next(ks);
coll = G__170479;
k = G__170480;
ks = G__170481;
continue;
} else {
return ret;
}
}
break;
}
};
var G__170478 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__170482__i = 0, G__170482__a = new Array(arguments.length -  2);
while (G__170482__i < G__170482__a.length) {G__170482__a[G__170482__i] = arguments[G__170482__i + 2]; ++G__170482__i;}
  ks = new cljs.core.IndexedSeq(G__170482__a,0);
} 
return G__170478__delegate.call(this,coll,k,ks);};
G__170478.cljs$lang$maxFixedArity = 2;
G__170478.cljs$lang$applyTo = (function (arglist__170483){
var coll = cljs.core.first(arglist__170483);
arglist__170483 = cljs.core.next(arglist__170483);
var k = cljs.core.first(arglist__170483);
var ks = cljs.core.rest(arglist__170483);
return G__170478__delegate(coll,k,ks);
});
G__170478.cljs$core$IFn$_invoke$arity$variadic = G__170478__delegate;
return G__170478;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__170484 = null;
if (arguments.length > 2) {
var G__170485__i = 0, G__170485__a = new Array(arguments.length -  2);
while (G__170485__i < G__170485__a.length) {G__170485__a[G__170485__i] = arguments[G__170485__i + 2]; ++G__170485__i;}
G__170484 = new cljs.core.IndexedSeq(G__170485__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__170484);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__17470__auto__ = (function (){var G__170490 = f;
return goog.isFunction(G__170490);
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var G__170491 = f;
if(G__170491){
var bit__18151__auto__ = null;
if(cljs.core.truth_((function (){var or__17470__auto____$1 = bit__18151__auto__;
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
return G__170491.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__170491.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__170491);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__170491);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__170957 = null;
var G__170957__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__170957__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170493 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__170493) : self__.afn.call(null,G__170493));
});
var G__170957__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170494 = a;
var G__170495 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__170494,G__170495) : self__.afn.call(null,G__170494,G__170495));
});
var G__170957__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170496 = a;
var G__170497 = b;
var G__170498 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__170496,G__170497,G__170498) : self__.afn.call(null,G__170496,G__170497,G__170498));
});
var G__170957__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170499 = a;
var G__170500 = b;
var G__170501 = c;
var G__170502 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__170499,G__170500,G__170501,G__170502) : self__.afn.call(null,G__170499,G__170500,G__170501,G__170502));
});
var G__170957__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170503 = a;
var G__170504 = b;
var G__170505 = c;
var G__170506 = d;
var G__170507 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__170503,G__170504,G__170505,G__170506,G__170507) : self__.afn.call(null,G__170503,G__170504,G__170505,G__170506,G__170507));
});
var G__170957__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170508 = a;
var G__170509 = b;
var G__170510 = c;
var G__170511 = d;
var G__170512 = e;
var G__170513 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__170508,G__170509,G__170510,G__170511,G__170512,G__170513) : self__.afn.call(null,G__170508,G__170509,G__170510,G__170511,G__170512,G__170513));
});
var G__170957__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170514 = a;
var G__170515 = b;
var G__170516 = c;
var G__170517 = d;
var G__170518 = e;
var G__170519 = f;
var G__170520 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__170514,G__170515,G__170516,G__170517,G__170518,G__170519,G__170520) : self__.afn.call(null,G__170514,G__170515,G__170516,G__170517,G__170518,G__170519,G__170520));
});
var G__170957__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170521 = a;
var G__170522 = b;
var G__170523 = c;
var G__170524 = d;
var G__170525 = e;
var G__170526 = f;
var G__170527 = g;
var G__170528 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__170521,G__170522,G__170523,G__170524,G__170525,G__170526,G__170527,G__170528) : self__.afn.call(null,G__170521,G__170522,G__170523,G__170524,G__170525,G__170526,G__170527,G__170528));
});
var G__170957__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170529 = a;
var G__170530 = b;
var G__170531 = c;
var G__170532 = d;
var G__170533 = e;
var G__170534 = f;
var G__170535 = g;
var G__170536 = h;
var G__170537 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__170529,G__170530,G__170531,G__170532,G__170533,G__170534,G__170535,G__170536,G__170537) : self__.afn.call(null,G__170529,G__170530,G__170531,G__170532,G__170533,G__170534,G__170535,G__170536,G__170537));
});
var G__170957__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170538 = a;
var G__170539 = b;
var G__170540 = c;
var G__170541 = d;
var G__170542 = e;
var G__170543 = f;
var G__170544 = g;
var G__170545 = h;
var G__170546 = i;
var G__170547 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__170538,G__170539,G__170540,G__170541,G__170542,G__170543,G__170544,G__170545,G__170546,G__170547) : self__.afn.call(null,G__170538,G__170539,G__170540,G__170541,G__170542,G__170543,G__170544,G__170545,G__170546,G__170547));
});
var G__170957__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170548 = a;
var G__170549 = b;
var G__170550 = c;
var G__170551 = d;
var G__170552 = e;
var G__170553 = f;
var G__170554 = g;
var G__170555 = h;
var G__170556 = i;
var G__170557 = j;
var G__170558 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__170548,G__170549,G__170550,G__170551,G__170552,G__170553,G__170554,G__170555,G__170556,G__170557,G__170558) : self__.afn.call(null,G__170548,G__170549,G__170550,G__170551,G__170552,G__170553,G__170554,G__170555,G__170556,G__170557,G__170558));
});
var G__170957__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170559 = a;
var G__170560 = b;
var G__170561 = c;
var G__170562 = d;
var G__170563 = e;
var G__170564 = f;
var G__170565 = g;
var G__170566 = h;
var G__170567 = i;
var G__170568 = j;
var G__170569 = k;
var G__170570 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__170559,G__170560,G__170561,G__170562,G__170563,G__170564,G__170565,G__170566,G__170567,G__170568,G__170569,G__170570) : self__.afn.call(null,G__170559,G__170560,G__170561,G__170562,G__170563,G__170564,G__170565,G__170566,G__170567,G__170568,G__170569,G__170570));
});
var G__170957__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170571 = a;
var G__170572 = b;
var G__170573 = c;
var G__170574 = d;
var G__170575 = e;
var G__170576 = f;
var G__170577 = g;
var G__170578 = h;
var G__170579 = i;
var G__170580 = j;
var G__170581 = k;
var G__170582 = l;
var G__170583 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__170571,G__170572,G__170573,G__170574,G__170575,G__170576,G__170577,G__170578,G__170579,G__170580,G__170581,G__170582,G__170583) : self__.afn.call(null,G__170571,G__170572,G__170573,G__170574,G__170575,G__170576,G__170577,G__170578,G__170579,G__170580,G__170581,G__170582,G__170583));
});
var G__170957__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170584 = a;
var G__170585 = b;
var G__170586 = c;
var G__170587 = d;
var G__170588 = e;
var G__170589 = f;
var G__170590 = g;
var G__170591 = h;
var G__170592 = i;
var G__170593 = j;
var G__170594 = k;
var G__170595 = l;
var G__170596 = m;
var G__170597 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__170584,G__170585,G__170586,G__170587,G__170588,G__170589,G__170590,G__170591,G__170592,G__170593,G__170594,G__170595,G__170596,G__170597) : self__.afn.call(null,G__170584,G__170585,G__170586,G__170587,G__170588,G__170589,G__170590,G__170591,G__170592,G__170593,G__170594,G__170595,G__170596,G__170597));
});
var G__170957__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170598 = a;
var G__170599 = b;
var G__170600 = c;
var G__170601 = d;
var G__170602 = e;
var G__170603 = f;
var G__170604 = g;
var G__170605 = h;
var G__170606 = i;
var G__170607 = j;
var G__170608 = k;
var G__170609 = l;
var G__170610 = m;
var G__170611 = n;
var G__170612 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__170598,G__170599,G__170600,G__170601,G__170602,G__170603,G__170604,G__170605,G__170606,G__170607,G__170608,G__170609,G__170610,G__170611,G__170612) : self__.afn.call(null,G__170598,G__170599,G__170600,G__170601,G__170602,G__170603,G__170604,G__170605,G__170606,G__170607,G__170608,G__170609,G__170610,G__170611,G__170612));
});
var G__170957__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170613 = a;
var G__170614 = b;
var G__170615 = c;
var G__170616 = d;
var G__170617 = e;
var G__170618 = f;
var G__170619 = g;
var G__170620 = h;
var G__170621 = i;
var G__170622 = j;
var G__170623 = k;
var G__170624 = l;
var G__170625 = m;
var G__170626 = n;
var G__170627 = o;
var G__170628 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__170613,G__170614,G__170615,G__170616,G__170617,G__170618,G__170619,G__170620,G__170621,G__170622,G__170623,G__170624,G__170625,G__170626,G__170627,G__170628) : self__.afn.call(null,G__170613,G__170614,G__170615,G__170616,G__170617,G__170618,G__170619,G__170620,G__170621,G__170622,G__170623,G__170624,G__170625,G__170626,G__170627,G__170628));
});
var G__170957__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170629 = a;
var G__170630 = b;
var G__170631 = c;
var G__170632 = d;
var G__170633 = e;
var G__170634 = f;
var G__170635 = g;
var G__170636 = h;
var G__170637 = i;
var G__170638 = j;
var G__170639 = k;
var G__170640 = l;
var G__170641 = m;
var G__170642 = n;
var G__170643 = o;
var G__170644 = p;
var G__170645 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__170629,G__170630,G__170631,G__170632,G__170633,G__170634,G__170635,G__170636,G__170637,G__170638,G__170639,G__170640,G__170641,G__170642,G__170643,G__170644,G__170645) : self__.afn.call(null,G__170629,G__170630,G__170631,G__170632,G__170633,G__170634,G__170635,G__170636,G__170637,G__170638,G__170639,G__170640,G__170641,G__170642,G__170643,G__170644,G__170645));
});
var G__170957__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170646 = a;
var G__170647 = b;
var G__170648 = c;
var G__170649 = d;
var G__170650 = e;
var G__170651 = f;
var G__170652 = g;
var G__170653 = h;
var G__170654 = i;
var G__170655 = j;
var G__170656 = k;
var G__170657 = l;
var G__170658 = m;
var G__170659 = n;
var G__170660 = o;
var G__170661 = p;
var G__170662 = q;
var G__170663 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__170646,G__170647,G__170648,G__170649,G__170650,G__170651,G__170652,G__170653,G__170654,G__170655,G__170656,G__170657,G__170658,G__170659,G__170660,G__170661,G__170662,G__170663) : self__.afn.call(null,G__170646,G__170647,G__170648,G__170649,G__170650,G__170651,G__170652,G__170653,G__170654,G__170655,G__170656,G__170657,G__170658,G__170659,G__170660,G__170661,G__170662,G__170663));
});
var G__170957__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170664 = a;
var G__170665 = b;
var G__170666 = c;
var G__170667 = d;
var G__170668 = e;
var G__170669 = f;
var G__170670 = g;
var G__170671 = h;
var G__170672 = i;
var G__170673 = j;
var G__170674 = k;
var G__170675 = l;
var G__170676 = m;
var G__170677 = n;
var G__170678 = o;
var G__170679 = p;
var G__170680 = q;
var G__170681 = r;
var G__170682 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__170664,G__170665,G__170666,G__170667,G__170668,G__170669,G__170670,G__170671,G__170672,G__170673,G__170674,G__170675,G__170676,G__170677,G__170678,G__170679,G__170680,G__170681,G__170682) : self__.afn.call(null,G__170664,G__170665,G__170666,G__170667,G__170668,G__170669,G__170670,G__170671,G__170672,G__170673,G__170674,G__170675,G__170676,G__170677,G__170678,G__170679,G__170680,G__170681,G__170682));
});
var G__170957__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170683 = a;
var G__170684 = b;
var G__170685 = c;
var G__170686 = d;
var G__170687 = e;
var G__170688 = f;
var G__170689 = g;
var G__170690 = h;
var G__170691 = i;
var G__170692 = j;
var G__170693 = k;
var G__170694 = l;
var G__170695 = m;
var G__170696 = n;
var G__170697 = o;
var G__170698 = p;
var G__170699 = q;
var G__170700 = r;
var G__170701 = s;
var G__170702 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__170683,G__170684,G__170685,G__170686,G__170687,G__170688,G__170689,G__170690,G__170691,G__170692,G__170693,G__170694,G__170695,G__170696,G__170697,G__170698,G__170699,G__170700,G__170701,G__170702) : self__.afn.call(null,G__170683,G__170684,G__170685,G__170686,G__170687,G__170688,G__170689,G__170690,G__170691,G__170692,G__170693,G__170694,G__170695,G__170696,G__170697,G__170698,G__170699,G__170700,G__170701,G__170702));
});
var G__170957__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__170703 = self__.afn;
var G__170704 = a;
var G__170705 = b;
var G__170706 = c;
var G__170707 = d;
var G__170708 = e;
var G__170709 = f;
var G__170710 = g;
var G__170711 = h;
var G__170712 = i;
var G__170713 = j;
var G__170714 = k;
var G__170715 = l;
var G__170716 = m;
var G__170717 = n;
var G__170718 = o;
var G__170719 = p;
var G__170720 = q;
var G__170721 = r;
var G__170722 = s;
var G__170723 = t;
var G__170724 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__170703,G__170704,G__170705,G__170706,G__170707,G__170708,G__170709,G__170710,G__170711,G__170712,G__170713,G__170714,G__170715,G__170716,G__170717,G__170718,G__170719,G__170720,G__170721,G__170722,G__170723,G__170724) : cljs.core.apply.call(null,G__170703,G__170704,G__170705,G__170706,G__170707,G__170708,G__170709,G__170710,G__170711,G__170712,G__170713,G__170714,G__170715,G__170716,G__170717,G__170718,G__170719,G__170720,G__170721,G__170722,G__170723,G__170724));
});
G__170957 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__170957__1.call(this,self__);
case 2:
return G__170957__2.call(this,self__,a);
case 3:
return G__170957__3.call(this,self__,a,b);
case 4:
return G__170957__4.call(this,self__,a,b,c);
case 5:
return G__170957__5.call(this,self__,a,b,c,d);
case 6:
return G__170957__6.call(this,self__,a,b,c,d,e);
case 7:
return G__170957__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__170957__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__170957__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__170957__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__170957__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__170957__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__170957__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__170957__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__170957__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__170957__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__170957__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__170957__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__170957__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__170957__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__170957__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__170957__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__170957.cljs$core$IFn$_invoke$arity$1 = G__170957__1;
G__170957.cljs$core$IFn$_invoke$arity$2 = G__170957__2;
G__170957.cljs$core$IFn$_invoke$arity$3 = G__170957__3;
G__170957.cljs$core$IFn$_invoke$arity$4 = G__170957__4;
G__170957.cljs$core$IFn$_invoke$arity$5 = G__170957__5;
G__170957.cljs$core$IFn$_invoke$arity$6 = G__170957__6;
G__170957.cljs$core$IFn$_invoke$arity$7 = G__170957__7;
G__170957.cljs$core$IFn$_invoke$arity$8 = G__170957__8;
G__170957.cljs$core$IFn$_invoke$arity$9 = G__170957__9;
G__170957.cljs$core$IFn$_invoke$arity$10 = G__170957__10;
G__170957.cljs$core$IFn$_invoke$arity$11 = G__170957__11;
G__170957.cljs$core$IFn$_invoke$arity$12 = G__170957__12;
G__170957.cljs$core$IFn$_invoke$arity$13 = G__170957__13;
G__170957.cljs$core$IFn$_invoke$arity$14 = G__170957__14;
G__170957.cljs$core$IFn$_invoke$arity$15 = G__170957__15;
G__170957.cljs$core$IFn$_invoke$arity$16 = G__170957__16;
G__170957.cljs$core$IFn$_invoke$arity$17 = G__170957__17;
G__170957.cljs$core$IFn$_invoke$arity$18 = G__170957__18;
G__170957.cljs$core$IFn$_invoke$arity$19 = G__170957__19;
G__170957.cljs$core$IFn$_invoke$arity$20 = G__170957__20;
G__170957.cljs$core$IFn$_invoke$arity$21 = G__170957__21;
G__170957.cljs$core$IFn$_invoke$arity$22 = G__170957__22;
return G__170957;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args170492){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args170492)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__170725 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__170725) : self__.afn.call(null,G__170725));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__170726 = a;
var G__170727 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__170726,G__170727) : self__.afn.call(null,G__170726,G__170727));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__170728 = a;
var G__170729 = b;
var G__170730 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__170728,G__170729,G__170730) : self__.afn.call(null,G__170728,G__170729,G__170730));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__170731 = a;
var G__170732 = b;
var G__170733 = c;
var G__170734 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__170731,G__170732,G__170733,G__170734) : self__.afn.call(null,G__170731,G__170732,G__170733,G__170734));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__170735 = a;
var G__170736 = b;
var G__170737 = c;
var G__170738 = d;
var G__170739 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__170735,G__170736,G__170737,G__170738,G__170739) : self__.afn.call(null,G__170735,G__170736,G__170737,G__170738,G__170739));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__170740 = a;
var G__170741 = b;
var G__170742 = c;
var G__170743 = d;
var G__170744 = e;
var G__170745 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__170740,G__170741,G__170742,G__170743,G__170744,G__170745) : self__.afn.call(null,G__170740,G__170741,G__170742,G__170743,G__170744,G__170745));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__170746 = a;
var G__170747 = b;
var G__170748 = c;
var G__170749 = d;
var G__170750 = e;
var G__170751 = f;
var G__170752 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__170746,G__170747,G__170748,G__170749,G__170750,G__170751,G__170752) : self__.afn.call(null,G__170746,G__170747,G__170748,G__170749,G__170750,G__170751,G__170752));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__170753 = a;
var G__170754 = b;
var G__170755 = c;
var G__170756 = d;
var G__170757 = e;
var G__170758 = f;
var G__170759 = g;
var G__170760 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__170753,G__170754,G__170755,G__170756,G__170757,G__170758,G__170759,G__170760) : self__.afn.call(null,G__170753,G__170754,G__170755,G__170756,G__170757,G__170758,G__170759,G__170760));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__170761 = a;
var G__170762 = b;
var G__170763 = c;
var G__170764 = d;
var G__170765 = e;
var G__170766 = f;
var G__170767 = g;
var G__170768 = h;
var G__170769 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__170761,G__170762,G__170763,G__170764,G__170765,G__170766,G__170767,G__170768,G__170769) : self__.afn.call(null,G__170761,G__170762,G__170763,G__170764,G__170765,G__170766,G__170767,G__170768,G__170769));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__170770 = a;
var G__170771 = b;
var G__170772 = c;
var G__170773 = d;
var G__170774 = e;
var G__170775 = f;
var G__170776 = g;
var G__170777 = h;
var G__170778 = i;
var G__170779 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__170770,G__170771,G__170772,G__170773,G__170774,G__170775,G__170776,G__170777,G__170778,G__170779) : self__.afn.call(null,G__170770,G__170771,G__170772,G__170773,G__170774,G__170775,G__170776,G__170777,G__170778,G__170779));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__170780 = a;
var G__170781 = b;
var G__170782 = c;
var G__170783 = d;
var G__170784 = e;
var G__170785 = f;
var G__170786 = g;
var G__170787 = h;
var G__170788 = i;
var G__170789 = j;
var G__170790 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__170780,G__170781,G__170782,G__170783,G__170784,G__170785,G__170786,G__170787,G__170788,G__170789,G__170790) : self__.afn.call(null,G__170780,G__170781,G__170782,G__170783,G__170784,G__170785,G__170786,G__170787,G__170788,G__170789,G__170790));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__170791 = a;
var G__170792 = b;
var G__170793 = c;
var G__170794 = d;
var G__170795 = e;
var G__170796 = f;
var G__170797 = g;
var G__170798 = h;
var G__170799 = i;
var G__170800 = j;
var G__170801 = k;
var G__170802 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__170791,G__170792,G__170793,G__170794,G__170795,G__170796,G__170797,G__170798,G__170799,G__170800,G__170801,G__170802) : self__.afn.call(null,G__170791,G__170792,G__170793,G__170794,G__170795,G__170796,G__170797,G__170798,G__170799,G__170800,G__170801,G__170802));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__170803 = a;
var G__170804 = b;
var G__170805 = c;
var G__170806 = d;
var G__170807 = e;
var G__170808 = f;
var G__170809 = g;
var G__170810 = h;
var G__170811 = i;
var G__170812 = j;
var G__170813 = k;
var G__170814 = l;
var G__170815 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__170803,G__170804,G__170805,G__170806,G__170807,G__170808,G__170809,G__170810,G__170811,G__170812,G__170813,G__170814,G__170815) : self__.afn.call(null,G__170803,G__170804,G__170805,G__170806,G__170807,G__170808,G__170809,G__170810,G__170811,G__170812,G__170813,G__170814,G__170815));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__170816 = a;
var G__170817 = b;
var G__170818 = c;
var G__170819 = d;
var G__170820 = e;
var G__170821 = f;
var G__170822 = g;
var G__170823 = h;
var G__170824 = i;
var G__170825 = j;
var G__170826 = k;
var G__170827 = l;
var G__170828 = m;
var G__170829 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__170816,G__170817,G__170818,G__170819,G__170820,G__170821,G__170822,G__170823,G__170824,G__170825,G__170826,G__170827,G__170828,G__170829) : self__.afn.call(null,G__170816,G__170817,G__170818,G__170819,G__170820,G__170821,G__170822,G__170823,G__170824,G__170825,G__170826,G__170827,G__170828,G__170829));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__170830 = a;
var G__170831 = b;
var G__170832 = c;
var G__170833 = d;
var G__170834 = e;
var G__170835 = f;
var G__170836 = g;
var G__170837 = h;
var G__170838 = i;
var G__170839 = j;
var G__170840 = k;
var G__170841 = l;
var G__170842 = m;
var G__170843 = n;
var G__170844 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__170830,G__170831,G__170832,G__170833,G__170834,G__170835,G__170836,G__170837,G__170838,G__170839,G__170840,G__170841,G__170842,G__170843,G__170844) : self__.afn.call(null,G__170830,G__170831,G__170832,G__170833,G__170834,G__170835,G__170836,G__170837,G__170838,G__170839,G__170840,G__170841,G__170842,G__170843,G__170844));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__170845 = a;
var G__170846 = b;
var G__170847 = c;
var G__170848 = d;
var G__170849 = e;
var G__170850 = f;
var G__170851 = g;
var G__170852 = h;
var G__170853 = i;
var G__170854 = j;
var G__170855 = k;
var G__170856 = l;
var G__170857 = m;
var G__170858 = n;
var G__170859 = o;
var G__170860 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__170845,G__170846,G__170847,G__170848,G__170849,G__170850,G__170851,G__170852,G__170853,G__170854,G__170855,G__170856,G__170857,G__170858,G__170859,G__170860) : self__.afn.call(null,G__170845,G__170846,G__170847,G__170848,G__170849,G__170850,G__170851,G__170852,G__170853,G__170854,G__170855,G__170856,G__170857,G__170858,G__170859,G__170860));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__170861 = a;
var G__170862 = b;
var G__170863 = c;
var G__170864 = d;
var G__170865 = e;
var G__170866 = f;
var G__170867 = g;
var G__170868 = h;
var G__170869 = i;
var G__170870 = j;
var G__170871 = k;
var G__170872 = l;
var G__170873 = m;
var G__170874 = n;
var G__170875 = o;
var G__170876 = p;
var G__170877 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__170861,G__170862,G__170863,G__170864,G__170865,G__170866,G__170867,G__170868,G__170869,G__170870,G__170871,G__170872,G__170873,G__170874,G__170875,G__170876,G__170877) : self__.afn.call(null,G__170861,G__170862,G__170863,G__170864,G__170865,G__170866,G__170867,G__170868,G__170869,G__170870,G__170871,G__170872,G__170873,G__170874,G__170875,G__170876,G__170877));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__170878 = a;
var G__170879 = b;
var G__170880 = c;
var G__170881 = d;
var G__170882 = e;
var G__170883 = f;
var G__170884 = g;
var G__170885 = h;
var G__170886 = i;
var G__170887 = j;
var G__170888 = k;
var G__170889 = l;
var G__170890 = m;
var G__170891 = n;
var G__170892 = o;
var G__170893 = p;
var G__170894 = q;
var G__170895 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__170878,G__170879,G__170880,G__170881,G__170882,G__170883,G__170884,G__170885,G__170886,G__170887,G__170888,G__170889,G__170890,G__170891,G__170892,G__170893,G__170894,G__170895) : self__.afn.call(null,G__170878,G__170879,G__170880,G__170881,G__170882,G__170883,G__170884,G__170885,G__170886,G__170887,G__170888,G__170889,G__170890,G__170891,G__170892,G__170893,G__170894,G__170895));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__170896 = a;
var G__170897 = b;
var G__170898 = c;
var G__170899 = d;
var G__170900 = e;
var G__170901 = f;
var G__170902 = g;
var G__170903 = h;
var G__170904 = i;
var G__170905 = j;
var G__170906 = k;
var G__170907 = l;
var G__170908 = m;
var G__170909 = n;
var G__170910 = o;
var G__170911 = p;
var G__170912 = q;
var G__170913 = r;
var G__170914 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__170896,G__170897,G__170898,G__170899,G__170900,G__170901,G__170902,G__170903,G__170904,G__170905,G__170906,G__170907,G__170908,G__170909,G__170910,G__170911,G__170912,G__170913,G__170914) : self__.afn.call(null,G__170896,G__170897,G__170898,G__170899,G__170900,G__170901,G__170902,G__170903,G__170904,G__170905,G__170906,G__170907,G__170908,G__170909,G__170910,G__170911,G__170912,G__170913,G__170914));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__170915 = a;
var G__170916 = b;
var G__170917 = c;
var G__170918 = d;
var G__170919 = e;
var G__170920 = f;
var G__170921 = g;
var G__170922 = h;
var G__170923 = i;
var G__170924 = j;
var G__170925 = k;
var G__170926 = l;
var G__170927 = m;
var G__170928 = n;
var G__170929 = o;
var G__170930 = p;
var G__170931 = q;
var G__170932 = r;
var G__170933 = s;
var G__170934 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__170915,G__170916,G__170917,G__170918,G__170919,G__170920,G__170921,G__170922,G__170923,G__170924,G__170925,G__170926,G__170927,G__170928,G__170929,G__170930,G__170931,G__170932,G__170933,G__170934) : self__.afn.call(null,G__170915,G__170916,G__170917,G__170918,G__170919,G__170920,G__170921,G__170922,G__170923,G__170924,G__170925,G__170926,G__170927,G__170928,G__170929,G__170930,G__170931,G__170932,G__170933,G__170934));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__170935 = self__.afn;
var G__170936 = a;
var G__170937 = b;
var G__170938 = c;
var G__170939 = d;
var G__170940 = e;
var G__170941 = f;
var G__170942 = g;
var G__170943 = h;
var G__170944 = i;
var G__170945 = j;
var G__170946 = k;
var G__170947 = l;
var G__170948 = m;
var G__170949 = n;
var G__170950 = o;
var G__170951 = p;
var G__170952 = q;
var G__170953 = r;
var G__170954 = s;
var G__170955 = t;
var G__170956 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__170935,G__170936,G__170937,G__170938,G__170939,G__170940,G__170941,G__170942,G__170943,G__170944,G__170945,G__170946,G__170947,G__170948,G__170949,G__170950,G__170951,G__170952,G__170953,G__170954,G__170955,G__170956) : cljs.core.apply.call(null,G__170935,G__170936,G__170937,G__170938,G__170939,G__170940,G__170941,G__170942,G__170943,G__170944,G__170945,G__170946,G__170947,G__170948,G__170949,G__170950,G__170951,G__170952,G__170953,G__170954,G__170955,G__170956));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__170961 = o;
if(G__170961){
var bit__18151__auto__ = (G__170961.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__18151__auto__) || (G__170961.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__170961.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__170961);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__170961);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__17458__auto__ = !((o == null));
if(and__17458__auto__){
var G__170965 = o;
if(G__170965){
var bit__18151__auto__ = (G__170965.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18151__auto__) || (G__170965.cljs$core$IMeta$)){
return true;
} else {
if((!G__170965.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__170965);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__170965);
}
} else {
return and__17458__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__170968__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__170969 = ret;
var G__170970 = cljs.core.first(ks);
var G__170971 = cljs.core.next(ks);
coll = G__170969;
k = G__170970;
ks = G__170971;
continue;
} else {
return ret;
}
}
break;
}
};
var G__170968 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__170972__i = 0, G__170972__a = new Array(arguments.length -  2);
while (G__170972__i < G__170972__a.length) {G__170972__a[G__170972__i] = arguments[G__170972__i + 2]; ++G__170972__i;}
  ks = new cljs.core.IndexedSeq(G__170972__a,0);
} 
return G__170968__delegate.call(this,coll,k,ks);};
G__170968.cljs$lang$maxFixedArity = 2;
G__170968.cljs$lang$applyTo = (function (arglist__170973){
var coll = cljs.core.first(arglist__170973);
arglist__170973 = cljs.core.next(arglist__170973);
var k = cljs.core.first(arglist__170973);
var ks = cljs.core.rest(arglist__170973);
return G__170968__delegate(coll,k,ks);
});
G__170968.cljs$core$IFn$_invoke$arity$variadic = G__170968__delegate;
return G__170968;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__170974 = null;
if (arguments.length > 2) {
var G__170975__i = 0, G__170975__a = new Array(arguments.length -  2);
while (G__170975__i < G__170975__a.length) {G__170975__a[G__170975__i] = arguments[G__170975__i + 2]; ++G__170975__i;}
G__170974 = new cljs.core.IndexedSeq(G__170975__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__170974);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__170977 = x;
if(G__170977){
var bit__18151__auto__ = (G__170977.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__18151__auto__) || (G__170977.cljs$core$ICollection$)){
return true;
} else {
if((!G__170977.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__170977);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__170977);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__170979 = x;
if(G__170979){
var bit__18151__auto__ = (G__170979.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__18151__auto__) || (G__170979.cljs$core$ISet$)){
return true;
} else {
if((!G__170979.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__170979);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__170979);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__170981 = x;
if(G__170981){
var bit__18151__auto__ = (G__170981.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__18151__auto__) || (G__170981.cljs$core$IAssociative$)){
return true;
} else {
if((!G__170981.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__170981);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__170981);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__170983 = x;
if(G__170983){
var bit__18151__auto__ = (G__170983.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__18151__auto__) || (G__170983.cljs$core$ISequential$)){
return true;
} else {
if((!G__170983.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__170983);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__170983);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__170985 = x;
if(G__170985){
var bit__18151__auto__ = (G__170985.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__18151__auto__) || (G__170985.cljs$core$ISorted$)){
return true;
} else {
if((!G__170985.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__170985);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__170985);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__170987 = x;
if(G__170987){
var bit__18151__auto__ = (G__170987.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18151__auto__) || (G__170987.cljs$core$IReduce$)){
return true;
} else {
if((!G__170987.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__170987);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__170987);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__170989 = x;
if(G__170989){
var bit__18151__auto__ = (G__170989.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18151__auto__) || (G__170989.cljs$core$IMap$)){
return true;
} else {
if((!G__170989.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__170989);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__170989);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__170991 = x;
if(G__170991){
var bit__18151__auto__ = (G__170991.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__18151__auto__) || (G__170991.cljs$core$IVector$)){
return true;
} else {
if((!G__170991.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__170991);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__170991);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__170993 = x;
if(G__170993){
var bit__18144__auto__ = (G__170993.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__18144__auto__) || (G__170993.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj170999 = {};
return obj170999;
});
var js_obj__1 = (function() { 
var G__171002__delegate = function (keyvals){
var G__171000 = goog.object.create;
var G__171001 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__171000,G__171001) : cljs.core.apply.call(null,G__171000,G__171001));
};
var G__171002 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__171003__i = 0, G__171003__a = new Array(arguments.length -  0);
while (G__171003__i < G__171003__a.length) {G__171003__a[G__171003__i] = arguments[G__171003__i + 0]; ++G__171003__i;}
  keyvals = new cljs.core.IndexedSeq(G__171003__a,0);
} 
return G__171002__delegate.call(this,keyvals);};
G__171002.cljs$lang$maxFixedArity = 0;
G__171002.cljs$lang$applyTo = (function (arglist__171004){
var keyvals = cljs.core.seq(arglist__171004);
return G__171002__delegate(keyvals);
});
G__171002.cljs$core$IFn$_invoke$arity$variadic = G__171002__delegate;
return G__171002;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__171005 = null;
if (arguments.length > 0) {
var G__171006__i = 0, G__171006__a = new Array(arguments.length -  0);
while (G__171006__i < G__171006__a.length) {G__171006__a[G__171006__i] = arguments[G__171006__i + 0]; ++G__171006__i;}
G__171005 = new cljs.core.IndexedSeq(G__171006__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__171005);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__171009_171011 = obj;
var G__171010_171012 = ((function (G__171009_171011,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__171009_171011,keys))
;
goog.object.forEach(G__171009_171011,G__171010_171012);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__171013 = (i__$1 + (1));
var G__171014 = (j__$1 + (1));
var G__171015 = (len__$1 - (1));
i__$1 = G__171013;
j__$1 = G__171014;
len__$1 = G__171015;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__171016 = (i__$1 - (1));
var G__171017 = (j__$1 - (1));
var G__171018 = (len__$1 - (1));
i__$1 = G__171016;
j__$1 = G__171017;
len__$1 = G__171018;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj171020 = {};
return obj171020;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__171022 = s;
if(G__171022){
var bit__18151__auto__ = (G__171022.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18151__auto__) || (G__171022.cljs$core$ISeq$)){
return true;
} else {
if((!G__171022.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__171022);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__171022);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__171024 = s;
if(G__171024){
var bit__18151__auto__ = (G__171024.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__18151__auto__) || (G__171024.cljs$core$ISeqable$)){
return true;
} else {
if((!G__171024.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__171024);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__171024);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__17470__auto__ = cljs.core.fn_QMARK_(f);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var G__171028 = f;
if(G__171028){
var bit__18151__auto__ = (G__171028.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__18151__auto__) || (G__171028.cljs$core$IFn$)){
return true;
} else {
if((!G__171028.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__171028);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__171028);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__171041 = n;
return isNaN(G__171041);
})())) && (!((n === Infinity))) && (((function (){var G__171042 = n;
return parseFloat(G__171042);
})() === (function (){var G__171043 = n;
var G__171044 = (10);
return parseInt(G__171043,G__171044);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__171045__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__171046 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__171047 = etc;
s = G__171046;
xs = G__171047;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__171045 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171048__i = 0, G__171048__a = new Array(arguments.length -  2);
while (G__171048__i < G__171048__a.length) {G__171048__a[G__171048__i] = arguments[G__171048__i + 2]; ++G__171048__i;}
  more = new cljs.core.IndexedSeq(G__171048__a,0);
} 
return G__171045__delegate.call(this,x,y,more);};
G__171045.cljs$lang$maxFixedArity = 2;
G__171045.cljs$lang$applyTo = (function (arglist__171049){
var x = cljs.core.first(arglist__171049);
arglist__171049 = cljs.core.next(arglist__171049);
var y = cljs.core.first(arglist__171049);
var more = cljs.core.rest(arglist__171049);
return G__171045__delegate(x,y,more);
});
G__171045.cljs$core$IFn$_invoke$arity$variadic = G__171045__delegate;
return G__171045;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__171050 = null;
if (arguments.length > 2) {
var G__171051__i = 0, G__171051__a = new Array(arguments.length -  2);
while (G__171051__i < G__171051__a.length) {G__171051__a[G__171051__i] = arguments[G__171051__i + 2]; ++G__171051__i;}
G__171050 = new cljs.core.IndexedSeq(G__171051__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171050);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__171055 = x;
if(G__171055){
var bit__18144__auto__ = (G__171055.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__18144__auto__) || (G__171055.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__171056 = x;
var G__171057 = y;
return goog.array.defaultCompare(G__171056,G__171057);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__171062 = xs;
var G__171063 = ys;
var G__171064 = len;
var G__171065 = (n + (1));
xs = G__171062;
ys = G__171063;
len = G__171064;
n = G__171065;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__171070 = x;
var G__171071 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__171070,G__171071) : f.call(null,G__171070,G__171071));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__171072 = y;
var G__171073 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__171072,G__171073) : f.call(null,G__171072,G__171073));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__171079 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__171079) : cljs.core.to_array.call(null,G__171079));
})();
var G__171080_171082 = a;
var G__171081_171083 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__171080_171082,G__171081_171083);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__171089 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__171089) : keyfn.call(null,G__171089));
})(),(function (){var G__171090 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__171090) : keyfn.call(null,G__171090));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__171096 = f;
var G__171097 = cljs.core.first(s);
var G__171098 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__171096,G__171097,G__171098) : cljs.core.reduce.call(null,G__171096,G__171097,G__171098));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__171099 = val__$1;
var G__171100 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__171099,G__171100) : f.call(null,G__171099,G__171100));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__171101 = nval;
var G__171102 = cljs.core.next(coll__$1);
val__$1 = G__171101;
coll__$1 = G__171102;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__171106 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__171106) : cljs.core.to_array.call(null,G__171106));
})();
var G__171107_171109 = a;
goog.array.shuffle(G__171107_171109);

var G__171108 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__171108) : cljs.core.vec.call(null,G__171108));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__171112 = coll;
if(G__171112){
var bit__18144__auto__ = (G__171112.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18144__auto__) || (G__171112.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__171113 = coll;
if(G__171113){
var bit__18144__auto__ = (G__171113.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__18144__auto__) || (G__171113.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__171122 = null;
var G__171122__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__171122__1 = (function (x){
var G__171119 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__171119) : cf.call(null,G__171119));
});
var G__171122__2 = (function (x,y){
var G__171120 = x;
var G__171121 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__171120,G__171121) : f.call(null,G__171120,G__171121));
});
G__171122 = function(x,y){
switch(arguments.length){
case 0:
return G__171122__0.call(this);
case 1:
return G__171122__1.call(this,x);
case 2:
return G__171122__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__171122.cljs$core$IFn$_invoke$arity$0 = G__171122__0;
G__171122.cljs$core$IFn$_invoke$arity$1 = G__171122__1;
G__171122.cljs$core$IFn$_invoke$arity$2 = G__171122__2;
return G__171122;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__171129 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__171129) : xform.call(null,G__171129));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__171130 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__171130) : f__$1.call(null,G__171130));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__171131__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__171131 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171132__i = 0, G__171132__a = new Array(arguments.length -  2);
while (G__171132__i < G__171132__a.length) {G__171132__a[G__171132__i] = arguments[G__171132__i + 2]; ++G__171132__i;}
  more = new cljs.core.IndexedSeq(G__171132__a,0);
} 
return G__171131__delegate.call(this,x,y,more);};
G__171131.cljs$lang$maxFixedArity = 2;
G__171131.cljs$lang$applyTo = (function (arglist__171133){
var x = cljs.core.first(arglist__171133);
arglist__171133 = cljs.core.next(arglist__171133);
var y = cljs.core.first(arglist__171133);
var more = cljs.core.rest(arglist__171133);
return G__171131__delegate(x,y,more);
});
G__171131.cljs$core$IFn$_invoke$arity$variadic = G__171131__delegate;
return G__171131;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__171134 = null;
if (arguments.length > 2) {
var G__171135__i = 0, G__171135__a = new Array(arguments.length -  2);
while (G__171135__i < G__171135__a.length) {G__171135__a[G__171135__i] = arguments[G__171135__i + 2]; ++G__171135__i;}
G__171134 = new cljs.core.IndexedSeq(G__171135__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171134);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__171136__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__171136 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171137__i = 0, G__171137__a = new Array(arguments.length -  2);
while (G__171137__i < G__171137__a.length) {G__171137__a[G__171137__i] = arguments[G__171137__i + 2]; ++G__171137__i;}
  more = new cljs.core.IndexedSeq(G__171137__a,0);
} 
return G__171136__delegate.call(this,x,y,more);};
G__171136.cljs$lang$maxFixedArity = 2;
G__171136.cljs$lang$applyTo = (function (arglist__171138){
var x = cljs.core.first(arglist__171138);
arglist__171138 = cljs.core.next(arglist__171138);
var y = cljs.core.first(arglist__171138);
var more = cljs.core.rest(arglist__171138);
return G__171136__delegate(x,y,more);
});
G__171136.cljs$core$IFn$_invoke$arity$variadic = G__171136__delegate;
return G__171136;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__171139 = null;
if (arguments.length > 2) {
var G__171140__i = 0, G__171140__a = new Array(arguments.length -  2);
while (G__171140__i < G__171140__a.length) {G__171140__a[G__171140__i] = arguments[G__171140__i + 2]; ++G__171140__i;}
G__171139 = new cljs.core.IndexedSeq(G__171140__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171139);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__171141__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__171141 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171142__i = 0, G__171142__a = new Array(arguments.length -  2);
while (G__171142__i < G__171142__a.length) {G__171142__a[G__171142__i] = arguments[G__171142__i + 2]; ++G__171142__i;}
  more = new cljs.core.IndexedSeq(G__171142__a,0);
} 
return G__171141__delegate.call(this,x,y,more);};
G__171141.cljs$lang$maxFixedArity = 2;
G__171141.cljs$lang$applyTo = (function (arglist__171143){
var x = cljs.core.first(arglist__171143);
arglist__171143 = cljs.core.next(arglist__171143);
var y = cljs.core.first(arglist__171143);
var more = cljs.core.rest(arglist__171143);
return G__171141__delegate(x,y,more);
});
G__171141.cljs$core$IFn$_invoke$arity$variadic = G__171141__delegate;
return G__171141;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__171144 = null;
if (arguments.length > 2) {
var G__171145__i = 0, G__171145__a = new Array(arguments.length -  2);
while (G__171145__i < G__171145__a.length) {G__171145__a[G__171145__i] = arguments[G__171145__i + 2]; ++G__171145__i;}
G__171144 = new cljs.core.IndexedSeq(G__171145__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171144);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__171150__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__171150 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171151__i = 0, G__171151__a = new Array(arguments.length -  2);
while (G__171151__i < G__171151__a.length) {G__171151__a[G__171151__i] = arguments[G__171151__i + 2]; ++G__171151__i;}
  more = new cljs.core.IndexedSeq(G__171151__a,0);
} 
return G__171150__delegate.call(this,x,y,more);};
G__171150.cljs$lang$maxFixedArity = 2;
G__171150.cljs$lang$applyTo = (function (arglist__171152){
var x = cljs.core.first(arglist__171152);
arglist__171152 = cljs.core.next(arglist__171152);
var y = cljs.core.first(arglist__171152);
var more = cljs.core.rest(arglist__171152);
return G__171150__delegate(x,y,more);
});
G__171150.cljs$core$IFn$_invoke$arity$variadic = G__171150__delegate;
return G__171150;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__171153 = null;
if (arguments.length > 2) {
var G__171154__i = 0, G__171154__a = new Array(arguments.length -  2);
while (G__171154__i < G__171154__a.length) {G__171154__a[G__171154__i] = arguments[G__171154__i + 2]; ++G__171154__i;}
G__171153 = new cljs.core.IndexedSeq(G__171154__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171153);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__171155__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__171156 = y;
var G__171157 = cljs.core.first(more);
var G__171158 = cljs.core.next(more);
x = G__171156;
y = G__171157;
more = G__171158;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__171155 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171159__i = 0, G__171159__a = new Array(arguments.length -  2);
while (G__171159__i < G__171159__a.length) {G__171159__a[G__171159__i] = arguments[G__171159__i + 2]; ++G__171159__i;}
  more = new cljs.core.IndexedSeq(G__171159__a,0);
} 
return G__171155__delegate.call(this,x,y,more);};
G__171155.cljs$lang$maxFixedArity = 2;
G__171155.cljs$lang$applyTo = (function (arglist__171160){
var x = cljs.core.first(arglist__171160);
arglist__171160 = cljs.core.next(arglist__171160);
var y = cljs.core.first(arglist__171160);
var more = cljs.core.rest(arglist__171160);
return G__171155__delegate(x,y,more);
});
G__171155.cljs$core$IFn$_invoke$arity$variadic = G__171155__delegate;
return G__171155;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__171161 = null;
if (arguments.length > 2) {
var G__171162__i = 0, G__171162__a = new Array(arguments.length -  2);
while (G__171162__i < G__171162__a.length) {G__171162__a[G__171162__i] = arguments[G__171162__i + 2]; ++G__171162__i;}
G__171161 = new cljs.core.IndexedSeq(G__171162__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__171163__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__171164 = y;
var G__171165 = cljs.core.first(more);
var G__171166 = cljs.core.next(more);
x = G__171164;
y = G__171165;
more = G__171166;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__171163 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171167__i = 0, G__171167__a = new Array(arguments.length -  2);
while (G__171167__i < G__171167__a.length) {G__171167__a[G__171167__i] = arguments[G__171167__i + 2]; ++G__171167__i;}
  more = new cljs.core.IndexedSeq(G__171167__a,0);
} 
return G__171163__delegate.call(this,x,y,more);};
G__171163.cljs$lang$maxFixedArity = 2;
G__171163.cljs$lang$applyTo = (function (arglist__171168){
var x = cljs.core.first(arglist__171168);
arglist__171168 = cljs.core.next(arglist__171168);
var y = cljs.core.first(arglist__171168);
var more = cljs.core.rest(arglist__171168);
return G__171163__delegate(x,y,more);
});
G__171163.cljs$core$IFn$_invoke$arity$variadic = G__171163__delegate;
return G__171163;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__171169 = null;
if (arguments.length > 2) {
var G__171170__i = 0, G__171170__a = new Array(arguments.length -  2);
while (G__171170__i < G__171170__a.length) {G__171170__a[G__171170__i] = arguments[G__171170__i + 2]; ++G__171170__i;}
G__171169 = new cljs.core.IndexedSeq(G__171170__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171169);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__171171__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__171172 = y;
var G__171173 = cljs.core.first(more);
var G__171174 = cljs.core.next(more);
x = G__171172;
y = G__171173;
more = G__171174;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__171171 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171175__i = 0, G__171175__a = new Array(arguments.length -  2);
while (G__171175__i < G__171175__a.length) {G__171175__a[G__171175__i] = arguments[G__171175__i + 2]; ++G__171175__i;}
  more = new cljs.core.IndexedSeq(G__171175__a,0);
} 
return G__171171__delegate.call(this,x,y,more);};
G__171171.cljs$lang$maxFixedArity = 2;
G__171171.cljs$lang$applyTo = (function (arglist__171176){
var x = cljs.core.first(arglist__171176);
arglist__171176 = cljs.core.next(arglist__171176);
var y = cljs.core.first(arglist__171176);
var more = cljs.core.rest(arglist__171176);
return G__171171__delegate(x,y,more);
});
G__171171.cljs$core$IFn$_invoke$arity$variadic = G__171171__delegate;
return G__171171;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__171177 = null;
if (arguments.length > 2) {
var G__171178__i = 0, G__171178__a = new Array(arguments.length -  2);
while (G__171178__i < G__171178__a.length) {G__171178__a[G__171178__i] = arguments[G__171178__i + 2]; ++G__171178__i;}
G__171177 = new cljs.core.IndexedSeq(G__171178__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171177);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__171179__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__171180 = y;
var G__171181 = cljs.core.first(more);
var G__171182 = cljs.core.next(more);
x = G__171180;
y = G__171181;
more = G__171182;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__171179 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171183__i = 0, G__171183__a = new Array(arguments.length -  2);
while (G__171183__i < G__171183__a.length) {G__171183__a[G__171183__i] = arguments[G__171183__i + 2]; ++G__171183__i;}
  more = new cljs.core.IndexedSeq(G__171183__a,0);
} 
return G__171179__delegate.call(this,x,y,more);};
G__171179.cljs$lang$maxFixedArity = 2;
G__171179.cljs$lang$applyTo = (function (arglist__171184){
var x = cljs.core.first(arglist__171184);
arglist__171184 = cljs.core.next(arglist__171184);
var y = cljs.core.first(arglist__171184);
var more = cljs.core.rest(arglist__171184);
return G__171179__delegate(x,y,more);
});
G__171179.cljs$core$IFn$_invoke$arity$variadic = G__171179__delegate;
return G__171179;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__171185 = null;
if (arguments.length > 2) {
var G__171186__i = 0, G__171186__a = new Array(arguments.length -  2);
while (G__171186__i < G__171186__a.length) {G__171186__a[G__171186__i] = arguments[G__171186__i + 2]; ++G__171186__i;}
G__171185 = new cljs.core.IndexedSeq(G__171186__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__17787__auto__ = x;
var y__17788__auto__ = y;
return ((x__17787__auto__ > y__17788__auto__) ? x__17787__auto__ : y__17788__auto__);
});
var max__3 = (function() { 
var G__171187__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__17787__auto__ = x;
var y__17788__auto__ = y;
return ((x__17787__auto__ > y__17788__auto__) ? x__17787__auto__ : y__17788__auto__);
})(),more);
};
var G__171187 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171188__i = 0, G__171188__a = new Array(arguments.length -  2);
while (G__171188__i < G__171188__a.length) {G__171188__a[G__171188__i] = arguments[G__171188__i + 2]; ++G__171188__i;}
  more = new cljs.core.IndexedSeq(G__171188__a,0);
} 
return G__171187__delegate.call(this,x,y,more);};
G__171187.cljs$lang$maxFixedArity = 2;
G__171187.cljs$lang$applyTo = (function (arglist__171189){
var x = cljs.core.first(arglist__171189);
arglist__171189 = cljs.core.next(arglist__171189);
var y = cljs.core.first(arglist__171189);
var more = cljs.core.rest(arglist__171189);
return G__171187__delegate(x,y,more);
});
G__171187.cljs$core$IFn$_invoke$arity$variadic = G__171187__delegate;
return G__171187;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__171190 = null;
if (arguments.length > 2) {
var G__171191__i = 0, G__171191__a = new Array(arguments.length -  2);
while (G__171191__i < G__171191__a.length) {G__171191__a[G__171191__i] = arguments[G__171191__i + 2]; ++G__171191__i;}
G__171190 = new cljs.core.IndexedSeq(G__171191__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171190);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__17794__auto__ = x;
var y__17795__auto__ = y;
return ((x__17794__auto__ < y__17795__auto__) ? x__17794__auto__ : y__17795__auto__);
});
var min__3 = (function() { 
var G__171192__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__17794__auto__ = x;
var y__17795__auto__ = y;
return ((x__17794__auto__ < y__17795__auto__) ? x__17794__auto__ : y__17795__auto__);
})(),more);
};
var G__171192 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171193__i = 0, G__171193__a = new Array(arguments.length -  2);
while (G__171193__i < G__171193__a.length) {G__171193__a[G__171193__i] = arguments[G__171193__i + 2]; ++G__171193__i;}
  more = new cljs.core.IndexedSeq(G__171193__a,0);
} 
return G__171192__delegate.call(this,x,y,more);};
G__171192.cljs$lang$maxFixedArity = 2;
G__171192.cljs$lang$applyTo = (function (arglist__171194){
var x = cljs.core.first(arglist__171194);
arglist__171194 = cljs.core.next(arglist__171194);
var y = cljs.core.first(arglist__171194);
var more = cljs.core.rest(arglist__171194);
return G__171192__delegate(x,y,more);
});
G__171192.cljs$core$IFn$_invoke$arity$variadic = G__171192__delegate;
return G__171192;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__171195 = null;
if (arguments.length > 2) {
var G__171196__i = 0, G__171196__a = new Array(arguments.length -  2);
while (G__171196__i < G__171196__a.length) {G__171196__a[G__171196__i] = arguments[G__171196__i + 2]; ++G__171196__i;}
G__171195 = new cljs.core.IndexedSeq(G__171196__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__171197__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__171197 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171198__i = 0, G__171198__a = new Array(arguments.length -  2);
while (G__171198__i < G__171198__a.length) {G__171198__a[G__171198__i] = arguments[G__171198__i + 2]; ++G__171198__i;}
  more = new cljs.core.IndexedSeq(G__171198__a,0);
} 
return G__171197__delegate.call(this,x,y,more);};
G__171197.cljs$lang$maxFixedArity = 2;
G__171197.cljs$lang$applyTo = (function (arglist__171199){
var x = cljs.core.first(arglist__171199);
arglist__171199 = cljs.core.next(arglist__171199);
var y = cljs.core.first(arglist__171199);
var more = cljs.core.rest(arglist__171199);
return G__171197__delegate(x,y,more);
});
G__171197.cljs$core$IFn$_invoke$arity$variadic = G__171197__delegate;
return G__171197;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__171200 = null;
if (arguments.length > 2) {
var G__171201__i = 0, G__171201__a = new Array(arguments.length -  2);
while (G__171201__i < G__171201__a.length) {G__171201__a[G__171201__i] = arguments[G__171201__i + 2]; ++G__171201__i;}
G__171200 = new cljs.core.IndexedSeq(G__171201__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171200);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__171202__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__171202 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171203__i = 0, G__171203__a = new Array(arguments.length -  2);
while (G__171203__i < G__171203__a.length) {G__171203__a[G__171203__i] = arguments[G__171203__i + 2]; ++G__171203__i;}
  more = new cljs.core.IndexedSeq(G__171203__a,0);
} 
return G__171202__delegate.call(this,x,y,more);};
G__171202.cljs$lang$maxFixedArity = 2;
G__171202.cljs$lang$applyTo = (function (arglist__171204){
var x = cljs.core.first(arglist__171204);
arglist__171204 = cljs.core.next(arglist__171204);
var y = cljs.core.first(arglist__171204);
var more = cljs.core.rest(arglist__171204);
return G__171202__delegate(x,y,more);
});
G__171202.cljs$core$IFn$_invoke$arity$variadic = G__171202__delegate;
return G__171202;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__171205 = null;
if (arguments.length > 2) {
var G__171206__i = 0, G__171206__a = new Array(arguments.length -  2);
while (G__171206__i < G__171206__a.length) {G__171206__a[G__171206__i] = arguments[G__171206__i + 2]; ++G__171206__i;}
G__171205 = new cljs.core.IndexedSeq(G__171206__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__171211__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__171211 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171212__i = 0, G__171212__a = new Array(arguments.length -  2);
while (G__171212__i < G__171212__a.length) {G__171212__a[G__171212__i] = arguments[G__171212__i + 2]; ++G__171212__i;}
  more = new cljs.core.IndexedSeq(G__171212__a,0);
} 
return G__171211__delegate.call(this,x,y,more);};
G__171211.cljs$lang$maxFixedArity = 2;
G__171211.cljs$lang$applyTo = (function (arglist__171213){
var x = cljs.core.first(arglist__171213);
arglist__171213 = cljs.core.next(arglist__171213);
var y = cljs.core.first(arglist__171213);
var more = cljs.core.rest(arglist__171213);
return G__171211__delegate(x,y,more);
});
G__171211.cljs$core$IFn$_invoke$arity$variadic = G__171211__delegate;
return G__171211;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__171214 = null;
if (arguments.length > 2) {
var G__171215__i = 0, G__171215__a = new Array(arguments.length -  2);
while (G__171215__i < G__171215__a.length) {G__171215__a[G__171215__i] = arguments[G__171215__i + 2]; ++G__171215__i;}
G__171214 = new cljs.core.IndexedSeq(G__171215__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171214);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__171216__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__171216 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171217__i = 0, G__171217__a = new Array(arguments.length -  2);
while (G__171217__i < G__171217__a.length) {G__171217__a[G__171217__i] = arguments[G__171217__i + 2]; ++G__171217__i;}
  more = new cljs.core.IndexedSeq(G__171217__a,0);
} 
return G__171216__delegate.call(this,x,y,more);};
G__171216.cljs$lang$maxFixedArity = 2;
G__171216.cljs$lang$applyTo = (function (arglist__171218){
var x = cljs.core.first(arglist__171218);
arglist__171218 = cljs.core.next(arglist__171218);
var y = cljs.core.first(arglist__171218);
var more = cljs.core.rest(arglist__171218);
return G__171216__delegate(x,y,more);
});
G__171216.cljs$core$IFn$_invoke$arity$variadic = G__171216__delegate;
return G__171216;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__171219 = null;
if (arguments.length > 2) {
var G__171220__i = 0, G__171220__a = new Array(arguments.length -  2);
while (G__171220__i < G__171220__a.length) {G__171220__a[G__171220__i] = arguments[G__171220__i + 2]; ++G__171220__i;}
G__171219 = new cljs.core.IndexedSeq(G__171220__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171219);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__171221__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__171221 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171222__i = 0, G__171222__a = new Array(arguments.length -  2);
while (G__171222__i < G__171222__a.length) {G__171222__a[G__171222__i] = arguments[G__171222__i + 2]; ++G__171222__i;}
  more = new cljs.core.IndexedSeq(G__171222__a,0);
} 
return G__171221__delegate.call(this,x,y,more);};
G__171221.cljs$lang$maxFixedArity = 2;
G__171221.cljs$lang$applyTo = (function (arglist__171223){
var x = cljs.core.first(arglist__171223);
arglist__171223 = cljs.core.next(arglist__171223);
var y = cljs.core.first(arglist__171223);
var more = cljs.core.rest(arglist__171223);
return G__171221__delegate(x,y,more);
});
G__171221.cljs$core$IFn$_invoke$arity$variadic = G__171221__delegate;
return G__171221;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__171224 = null;
if (arguments.length > 2) {
var G__171225__i = 0, G__171225__a = new Array(arguments.length -  2);
while (G__171225__i < G__171225__a.length) {G__171225__a[G__171225__i] = arguments[G__171225__i + 2]; ++G__171225__i;}
G__171224 = new cljs.core.IndexedSeq(G__171225__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__171228 = x;
var G__171229 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__171228,G__171229) : cljs.core.mod.call(null,G__171228,G__171229));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__171230__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__171230 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171231__i = 0, G__171231__a = new Array(arguments.length -  2);
while (G__171231__i < G__171231__a.length) {G__171231__a[G__171231__i] = arguments[G__171231__i + 2]; ++G__171231__i;}
  more = new cljs.core.IndexedSeq(G__171231__a,0);
} 
return G__171230__delegate.call(this,x,y,more);};
G__171230.cljs$lang$maxFixedArity = 2;
G__171230.cljs$lang$applyTo = (function (arglist__171232){
var x = cljs.core.first(arglist__171232);
arglist__171232 = cljs.core.next(arglist__171232);
var y = cljs.core.first(arglist__171232);
var more = cljs.core.rest(arglist__171232);
return G__171230__delegate(x,y,more);
});
G__171230.cljs$core$IFn$_invoke$arity$variadic = G__171230__delegate;
return G__171230;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__171233 = null;
if (arguments.length > 2) {
var G__171234__i = 0, G__171234__a = new Array(arguments.length -  2);
while (G__171234__i < G__171234__a.length) {G__171234__a[G__171234__i] = arguments[G__171234__i + 2]; ++G__171234__i;}
G__171233 = new cljs.core.IndexedSeq(G__171234__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171233);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__171235__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__171235 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171236__i = 0, G__171236__a = new Array(arguments.length -  2);
while (G__171236__i < G__171236__a.length) {G__171236__a[G__171236__i] = arguments[G__171236__i + 2]; ++G__171236__i;}
  more = new cljs.core.IndexedSeq(G__171236__a,0);
} 
return G__171235__delegate.call(this,x,y,more);};
G__171235.cljs$lang$maxFixedArity = 2;
G__171235.cljs$lang$applyTo = (function (arglist__171237){
var x = cljs.core.first(arglist__171237);
arglist__171237 = cljs.core.next(arglist__171237);
var y = cljs.core.first(arglist__171237);
var more = cljs.core.rest(arglist__171237);
return G__171235__delegate(x,y,more);
});
G__171235.cljs$core$IFn$_invoke$arity$variadic = G__171235__delegate;
return G__171235;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__171238 = null;
if (arguments.length > 2) {
var G__171239__i = 0, G__171239__a = new Array(arguments.length -  2);
while (G__171239__i < G__171239__a.length) {G__171239__a[G__171239__i] = arguments[G__171239__i + 2]; ++G__171239__i;}
G__171238 = new cljs.core.IndexedSeq(G__171239__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171238);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__171242 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__171242) : Math.floor.call(null,G__171242));
} else {
var G__171243 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__171243) : Math.ceil.call(null,G__171243));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__171244__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__171244 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171245__i = 0, G__171245__a = new Array(arguments.length -  2);
while (G__171245__i < G__171245__a.length) {G__171245__a[G__171245__i] = arguments[G__171245__i + 2]; ++G__171245__i;}
  more = new cljs.core.IndexedSeq(G__171245__a,0);
} 
return G__171244__delegate.call(this,x,y,more);};
G__171244.cljs$lang$maxFixedArity = 2;
G__171244.cljs$lang$applyTo = (function (arglist__171246){
var x = cljs.core.first(arglist__171246);
arglist__171246 = cljs.core.next(arglist__171246);
var y = cljs.core.first(arglist__171246);
var more = cljs.core.rest(arglist__171246);
return G__171244__delegate(x,y,more);
});
G__171244.cljs$core$IFn$_invoke$arity$variadic = G__171244__delegate;
return G__171244;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__171247 = null;
if (arguments.length > 2) {
var G__171248__i = 0, G__171248__a = new Array(arguments.length -  2);
while (G__171248__i < G__171248__a.length) {G__171248__a[G__171248__i] = arguments[G__171248__i + 2]; ++G__171248__i;}
G__171247 = new cljs.core.IndexedSeq(G__171248__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171247);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__171249__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__171249 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171250__i = 0, G__171250__a = new Array(arguments.length -  2);
while (G__171250__i < G__171250__a.length) {G__171250__a[G__171250__i] = arguments[G__171250__i + 2]; ++G__171250__i;}
  more = new cljs.core.IndexedSeq(G__171250__a,0);
} 
return G__171249__delegate.call(this,x,y,more);};
G__171249.cljs$lang$maxFixedArity = 2;
G__171249.cljs$lang$applyTo = (function (arglist__171251){
var x = cljs.core.first(arglist__171251);
arglist__171251 = cljs.core.next(arglist__171251);
var y = cljs.core.first(arglist__171251);
var more = cljs.core.rest(arglist__171251);
return G__171249__delegate(x,y,more);
});
G__171249.cljs$core$IFn$_invoke$arity$variadic = G__171249__delegate;
return G__171249;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__171252 = null;
if (arguments.length > 2) {
var G__171253__i = 0, G__171253__a = new Array(arguments.length -  2);
while (G__171253__i < G__171253__a.length) {G__171253__a[G__171253__i] = arguments[G__171253__i + 2]; ++G__171253__i;}
G__171252 = new cljs.core.IndexedSeq(G__171253__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171252);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__171254__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__171254 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171255__i = 0, G__171255__a = new Array(arguments.length -  2);
while (G__171255__i < G__171255__a.length) {G__171255__a[G__171255__i] = arguments[G__171255__i + 2]; ++G__171255__i;}
  more = new cljs.core.IndexedSeq(G__171255__a,0);
} 
return G__171254__delegate.call(this,x,y,more);};
G__171254.cljs$lang$maxFixedArity = 2;
G__171254.cljs$lang$applyTo = (function (arglist__171256){
var x = cljs.core.first(arglist__171256);
arglist__171256 = cljs.core.next(arglist__171256);
var y = cljs.core.first(arglist__171256);
var more = cljs.core.rest(arglist__171256);
return G__171254__delegate(x,y,more);
});
G__171254.cljs$core$IFn$_invoke$arity$variadic = G__171254__delegate;
return G__171254;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__171257 = null;
if (arguments.length > 2) {
var G__171258__i = 0, G__171258__a = new Array(arguments.length -  2);
while (G__171258__i < G__171258__a.length) {G__171258__a[G__171258__i] = arguments[G__171258__i + 2]; ++G__171258__i;}
G__171257 = new cljs.core.IndexedSeq(G__171258__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171257);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__171259__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__171259 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171260__i = 0, G__171260__a = new Array(arguments.length -  2);
while (G__171260__i < G__171260__a.length) {G__171260__a[G__171260__i] = arguments[G__171260__i + 2]; ++G__171260__i;}
  more = new cljs.core.IndexedSeq(G__171260__a,0);
} 
return G__171259__delegate.call(this,x,y,more);};
G__171259.cljs$lang$maxFixedArity = 2;
G__171259.cljs$lang$applyTo = (function (arglist__171261){
var x = cljs.core.first(arglist__171261);
arglist__171261 = cljs.core.next(arglist__171261);
var y = cljs.core.first(arglist__171261);
var more = cljs.core.rest(arglist__171261);
return G__171259__delegate(x,y,more);
});
G__171259.cljs$core$IFn$_invoke$arity$variadic = G__171259__delegate;
return G__171259;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__171262 = null;
if (arguments.length > 2) {
var G__171263__i = 0, G__171263__a = new Array(arguments.length -  2);
while (G__171263__i < G__171263__a.length) {G__171263__a[G__171263__i] = arguments[G__171263__i + 2]; ++G__171263__i;}
G__171262 = new cljs.core.IndexedSeq(G__171263__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171262);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__171268__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__171269 = y;
var G__171270 = cljs.core.first(more);
var G__171271 = cljs.core.next(more);
x = G__171269;
y = G__171270;
more = G__171271;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__171268 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171272__i = 0, G__171272__a = new Array(arguments.length -  2);
while (G__171272__i < G__171272__a.length) {G__171272__a[G__171272__i] = arguments[G__171272__i + 2]; ++G__171272__i;}
  more = new cljs.core.IndexedSeq(G__171272__a,0);
} 
return G__171268__delegate.call(this,x,y,more);};
G__171268.cljs$lang$maxFixedArity = 2;
G__171268.cljs$lang$applyTo = (function (arglist__171273){
var x = cljs.core.first(arglist__171273);
arglist__171273 = cljs.core.next(arglist__171273);
var y = cljs.core.first(arglist__171273);
var more = cljs.core.rest(arglist__171273);
return G__171268__delegate(x,y,more);
});
G__171268.cljs$core$IFn$_invoke$arity$variadic = G__171268__delegate;
return G__171268;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__171274 = null;
if (arguments.length > 2) {
var G__171275__i = 0, G__171275__a = new Array(arguments.length -  2);
while (G__171275__i < G__171275__a.length) {G__171275__a[G__171275__i] = arguments[G__171275__i + 2]; ++G__171275__i;}
G__171274 = new cljs.core.IndexedSeq(G__171275__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__171276 = (n__$1 - (1));
var G__171277 = cljs.core.next(xs);
n__$1 = G__171276;
xs = G__171277;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__171281 = x;
return goog.string.buildString(G__171281);
}
});
var str__2 = (function() { 
var G__171282__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__171283 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__171284 = cljs.core.next(more);
sb = G__171283;
more = G__171284;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__171282 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__171285__i = 0, G__171285__a = new Array(arguments.length -  1);
while (G__171285__i < G__171285__a.length) {G__171285__a[G__171285__i] = arguments[G__171285__i + 1]; ++G__171285__i;}
  ys = new cljs.core.IndexedSeq(G__171285__a,0);
} 
return G__171282__delegate.call(this,x,ys);};
G__171282.cljs$lang$maxFixedArity = 1;
G__171282.cljs$lang$applyTo = (function (arglist__171286){
var x = cljs.core.first(arglist__171286);
var ys = cljs.core.rest(arglist__171286);
return G__171282__delegate(x,ys);
});
G__171282.cljs$core$IFn$_invoke$arity$variadic = G__171282__delegate;
return G__171282;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__171287 = null;
if (arguments.length > 1) {
var G__171288__i = 0, G__171288__a = new Array(arguments.length -  1);
while (G__171288__i < G__171288__a.length) {G__171288__a[G__171288__i] = arguments[G__171288__i + 1]; ++G__171288__i;}
G__171287 = new cljs.core.IndexedSeq(G__171288__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__171287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__171289 = cljs.core.next(xs);
var G__171290 = cljs.core.next(ys);
xs = G__171289;
ys = G__171290;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__171291 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__171292 = cljs.core.next(s);
res = G__171291;
s = G__171292;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__171297 = ((h + (cljs.core.hash((function (){var G__171295 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__171295) : cljs.core.key.call(null,G__171295));
})()) ^ cljs.core.hash((function (){var G__171296 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__171296) : cljs.core.val.call(null,G__171296));
})()))) % (4503599627370496));
var G__171298 = cljs.core.next(s);
h = G__171297;
s = G__171298;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__171299 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__171300 = cljs.core.next(s__$1);
h = G__171299;
s__$1 = G__171300;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__171311_171321 = cljs.core.seq(fn_map);
var chunk__171312_171322 = null;
var count__171313_171323 = (0);
var i__171314_171324 = (0);
while(true){
if((i__171314_171324 < count__171313_171323)){
var vec__171315_171325 = chunk__171312_171322.cljs$core$IIndexed$_nth$arity$2(null,i__171314_171324);
var key_name_171326 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__171315_171325,(0),null);
var f_171327 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__171315_171325,(1),null);
var str_name_171328 = (function (){var G__171316 = key_name_171326;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__171316) : cljs.core.name.call(null,G__171316));
})();
(obj[str_name_171328] = f_171327);

var G__171329 = seq__171311_171321;
var G__171330 = chunk__171312_171322;
var G__171331 = count__171313_171323;
var G__171332 = (i__171314_171324 + (1));
seq__171311_171321 = G__171329;
chunk__171312_171322 = G__171330;
count__171313_171323 = G__171331;
i__171314_171324 = G__171332;
continue;
} else {
var temp__4126__auto___171333 = cljs.core.seq(seq__171311_171321);
if(temp__4126__auto___171333){
var seq__171311_171334__$1 = temp__4126__auto___171333;
if(cljs.core.chunked_seq_QMARK_(seq__171311_171334__$1)){
var c__18257__auto___171335 = (function (){var G__171317 = seq__171311_171334__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__171317) : cljs.core.chunk_first.call(null,G__171317));
})();
var G__171336 = (function (){var G__171318 = seq__171311_171334__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__171318) : cljs.core.chunk_rest.call(null,G__171318));
})();
var G__171337 = c__18257__auto___171335;
var G__171338 = cljs.core.count(c__18257__auto___171335);
var G__171339 = (0);
seq__171311_171321 = G__171336;
chunk__171312_171322 = G__171337;
count__171313_171323 = G__171338;
i__171314_171324 = G__171339;
continue;
} else {
var vec__171319_171340 = cljs.core.first(seq__171311_171334__$1);
var key_name_171341 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__171319_171340,(0),null);
var f_171342 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__171319_171340,(1),null);
var str_name_171343 = (function (){var G__171320 = key_name_171341;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__171320) : cljs.core.name.call(null,G__171320));
})();
(obj[str_name_171343] = f_171342);

var G__171344 = cljs.core.next(seq__171311_171334__$1);
var G__171345 = null;
var G__171346 = (0);
var G__171347 = (0);
seq__171311_171321 = G__171344;
chunk__171312_171322 = G__171345;
count__171313_171323 = G__171346;
i__171314_171324 = G__171347;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__171349 = coll;
if(G__171349){
var bit__18151__auto__ = (G__171349.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__18151__auto__) || (G__171349.cljs$core$IReversible$)){
return true;
} else {
if((!G__171349.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__171349);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__171349);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__171350 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__171350;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__171351 = (i - (1));
var G__171352 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__171351;
r = G__171352;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__171353__i = 0, G__171353__a = new Array(arguments.length -  0);
while (G__171353__i < G__171353__a.length) {G__171353__a[G__171353__i] = arguments[G__171353__i + 0]; ++G__171353__i;}
  xs = new cljs.core.IndexedSeq(G__171353__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__171354){
var xs = cljs.core.seq(arglist__171354);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__17470__auto__ = (coll == null);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var G__171358 = coll;
if(G__171358){
var bit__18144__auto__ = (G__171358.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__18144__auto__) || (G__171358.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__171360 = x;
if(G__171360){
var bit__18151__auto__ = (G__171360.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__18151__auto__) || (G__171360.cljs$core$IList$)){
return true;
} else {
if((!G__171360.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__171360);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__171360);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__17458__auto__ = cljs.core.not(a.ns);
if(and__17458__auto__){
return b.ns;
} else {
return and__17458__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__171367 = a.ns;
var G__171368 = b.ns;
return goog.array.defaultCompare(G__171367,G__171368);
})();
if(((0) === nsc)){
var G__171369 = a.name;
var G__171370 = b.name;
return goog.array.defaultCompare(G__171369,G__171370);
} else {
return nsc;
}
}
} else {
var G__171371 = a.name;
var G__171372 = b.name;
return goog.array.defaultCompare(G__171371,G__171372);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__17891__auto__ = self__._hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__171374 = null;
var G__171374__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__171374__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__171374 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__171374__2.call(this,self__,coll);
case 3:
return G__171374__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__171374.cljs$core$IFn$_invoke$arity$2 = G__171374__2;
G__171374.cljs$core$IFn$_invoke$arity$3 = G__171374__3;
return G__171374;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args171373){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args171373)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__171376 = x;
if(G__171376){
var bit__18144__auto__ = (G__171376.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18144__auto__) || (G__171376.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__171378 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__171378) : cljs.core.name.call(null,G__171378));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__171379 = ls.sval();
ls = G__171379;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__171381 = s;
if(G__171381){
var bit__18144__auto__ = (G__171381.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__18144__auto__) || (G__171381.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__171382 = cljs.core.next(s__$1);
s__$1 = G__171382;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_171383 = (0);
var xs_171384 = cljs.core.seq(coll);
while(true){
if(xs_171384){
(ret[i_171383] = cljs.core.to_array(cljs.core.first(xs_171384)));

var G__171385 = (i_171383 + (1));
var G__171386 = cljs.core.next(xs_171384);
i_171383 = G__171385;
xs_171384 = G__171386;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__171389 = (i + (1));
var G__171390 = cljs.core.next(s__$1);
i = G__171389;
s__$1 = G__171390;
continue;
} else {
return a;
}
break;
}
} else {
var n__18357__auto___171391 = size;
var i_171392 = (0);
while(true){
if((i_171392 < n__18357__auto___171391)){
(a[i_171392] = init_val_or_seq);

var G__171393 = (i_171392 + (1));
i_171392 = G__171393;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__171396 = (i + (1));
var G__171397 = cljs.core.next(s__$1);
i = G__171396;
s__$1 = G__171397;
continue;
} else {
return a;
}
break;
}
} else {
var n__18357__auto___171398 = size;
var i_171399 = (0);
while(true){
if((i_171399 < n__18357__auto___171398)){
(a[i_171399] = init_val_or_seq);

var G__171400 = (i_171399 + (1));
i_171399 = G__171400;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__171403 = (i + (1));
var G__171404 = cljs.core.next(s__$1);
i = G__171403;
s__$1 = G__171404;
continue;
} else {
return a;
}
break;
}
} else {
var n__18357__auto___171405 = size;
var i_171406 = (0);
while(true){
if((i_171406 < n__18357__auto___171405)){
(a[i_171406] = init_val_or_seq);

var G__171407 = (i_171406 + (1));
i_171406 = G__171407;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__171410 = (i + (1));
var G__171411 = cljs.core.next(s__$1);
i = G__171410;
s__$1 = G__171411;
continue;
} else {
return a;
}
break;
}
} else {
var n__18357__auto___171412 = size;
var i_171413 = (0);
while(true){
if((i_171413 < n__18357__auto___171412)){
(a[i_171413] = init_val_or_seq);

var G__171414 = (i_171413 + (1));
i_171413 = G__171414;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__171415 = cljs.core.next(s__$1);
var G__171416 = (i - (1));
var G__171417 = (sum + (1));
s__$1 = G__171415;
i = G__171416;
sum = G__171417;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__171437__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__171437 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__171438__i = 0, G__171438__a = new Array(arguments.length -  2);
while (G__171438__i < G__171438__a.length) {G__171438__a[G__171438__i] = arguments[G__171438__i + 2]; ++G__171438__i;}
  zs = new cljs.core.IndexedSeq(G__171438__a,0);
} 
return G__171437__delegate.call(this,x,y,zs);};
G__171437.cljs$lang$maxFixedArity = 2;
G__171437.cljs$lang$applyTo = (function (arglist__171439){
var x = cljs.core.first(arglist__171439);
arglist__171439 = cljs.core.next(arglist__171439);
var y = cljs.core.first(arglist__171439);
var zs = cljs.core.rest(arglist__171439);
return G__171437__delegate(x,y,zs);
});
G__171437.cljs$core$IFn$_invoke$arity$variadic = G__171437__delegate;
return G__171437;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__171440 = null;
if (arguments.length > 2) {
var G__171441__i = 0, G__171441__a = new Array(arguments.length -  2);
while (G__171441__i < G__171441__a.length) {G__171441__a[G__171441__i] = arguments[G__171441__i + 2]; ++G__171441__i;}
G__171440 = new cljs.core.IndexedSeq(G__171441__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__171442__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__171442 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__171443__i = 0, G__171443__a = new Array(arguments.length -  4);
while (G__171443__i < G__171443__a.length) {G__171443__a[G__171443__i] = arguments[G__171443__i + 4]; ++G__171443__i;}
  more = new cljs.core.IndexedSeq(G__171443__a,0);
} 
return G__171442__delegate.call(this,a,b,c,d,more);};
G__171442.cljs$lang$maxFixedArity = 4;
G__171442.cljs$lang$applyTo = (function (arglist__171444){
var a = cljs.core.first(arglist__171444);
arglist__171444 = cljs.core.next(arglist__171444);
var b = cljs.core.first(arglist__171444);
arglist__171444 = cljs.core.next(arglist__171444);
var c = cljs.core.first(arglist__171444);
arglist__171444 = cljs.core.next(arglist__171444);
var d = cljs.core.first(arglist__171444);
var more = cljs.core.rest(arglist__171444);
return G__171442__delegate(a,b,c,d,more);
});
G__171442.cljs$core$IFn$_invoke$arity$variadic = G__171442__delegate;
return G__171442;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__171445 = null;
if (arguments.length > 4) {
var G__171446__i = 0, G__171446__a = new Array(arguments.length -  4);
while (G__171446__i < G__171446__a.length) {G__171446__a[G__171446__i] = arguments[G__171446__i + 4]; ++G__171446__i;}
G__171445 = new cljs.core.IndexedSeq(G__171446__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__171445);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__171447__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__171448 = ntcoll;
var G__171449 = cljs.core.first(vals);
var G__171450 = cljs.core.next(vals);
tcoll = G__171448;
val = G__171449;
vals = G__171450;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__171447 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__171451__i = 0, G__171451__a = new Array(arguments.length -  2);
while (G__171451__i < G__171451__a.length) {G__171451__a[G__171451__i] = arguments[G__171451__i + 2]; ++G__171451__i;}
  vals = new cljs.core.IndexedSeq(G__171451__a,0);
} 
return G__171447__delegate.call(this,tcoll,val,vals);};
G__171447.cljs$lang$maxFixedArity = 2;
G__171447.cljs$lang$applyTo = (function (arglist__171452){
var tcoll = cljs.core.first(arglist__171452);
arglist__171452 = cljs.core.next(arglist__171452);
var val = cljs.core.first(arglist__171452);
var vals = cljs.core.rest(arglist__171452);
return G__171447__delegate(tcoll,val,vals);
});
G__171447.cljs$core$IFn$_invoke$arity$variadic = G__171447__delegate;
return G__171447;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__171453 = null;
if (arguments.length > 2) {
var G__171454__i = 0, G__171454__a = new Array(arguments.length -  2);
while (G__171454__i < G__171454__a.length) {G__171454__a[G__171454__i] = arguments[G__171454__i + 2]; ++G__171454__i;}
G__171453 = new cljs.core.IndexedSeq(G__171454__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__171453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__171455__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__171456 = ntcoll;
var G__171457 = cljs.core.first(kvs);
var G__171458 = cljs.core.second(kvs);
var G__171459 = cljs.core.nnext(kvs);
tcoll = G__171456;
key = G__171457;
val = G__171458;
kvs = G__171459;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__171455 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__171460__i = 0, G__171460__a = new Array(arguments.length -  3);
while (G__171460__i < G__171460__a.length) {G__171460__a[G__171460__i] = arguments[G__171460__i + 3]; ++G__171460__i;}
  kvs = new cljs.core.IndexedSeq(G__171460__a,0);
} 
return G__171455__delegate.call(this,tcoll,key,val,kvs);};
G__171455.cljs$lang$maxFixedArity = 3;
G__171455.cljs$lang$applyTo = (function (arglist__171461){
var tcoll = cljs.core.first(arglist__171461);
arglist__171461 = cljs.core.next(arglist__171461);
var key = cljs.core.first(arglist__171461);
arglist__171461 = cljs.core.next(arglist__171461);
var val = cljs.core.first(arglist__171461);
var kvs = cljs.core.rest(arglist__171461);
return G__171455__delegate(tcoll,key,val,kvs);
});
G__171455.cljs$core$IFn$_invoke$arity$variadic = G__171455__delegate;
return G__171455;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__171462 = null;
if (arguments.length > 3) {
var G__171463__i = 0, G__171463__a = new Array(arguments.length -  3);
while (G__171463__i < G__171463__a.length) {G__171463__a[G__171463__i] = arguments[G__171463__i + 3]; ++G__171463__i;}
G__171462 = new cljs.core.IndexedSeq(G__171463__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__171462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__171464__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__171465 = ntcoll;
var G__171466 = cljs.core.first(ks);
var G__171467 = cljs.core.next(ks);
tcoll = G__171465;
key = G__171466;
ks = G__171467;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__171464 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__171468__i = 0, G__171468__a = new Array(arguments.length -  2);
while (G__171468__i < G__171468__a.length) {G__171468__a[G__171468__i] = arguments[G__171468__i + 2]; ++G__171468__i;}
  ks = new cljs.core.IndexedSeq(G__171468__a,0);
} 
return G__171464__delegate.call(this,tcoll,key,ks);};
G__171464.cljs$lang$maxFixedArity = 2;
G__171464.cljs$lang$applyTo = (function (arglist__171469){
var tcoll = cljs.core.first(arglist__171469);
arglist__171469 = cljs.core.next(arglist__171469);
var key = cljs.core.first(arglist__171469);
var ks = cljs.core.rest(arglist__171469);
return G__171464__delegate(tcoll,key,ks);
});
G__171464.cljs$core$IFn$_invoke$arity$variadic = G__171464__delegate;
return G__171464;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__171470 = null;
if (arguments.length > 2) {
var G__171471__i = 0, G__171471__a = new Array(arguments.length -  2);
while (G__171471__i < G__171471__a.length) {G__171471__a[G__171471__i] = arguments[G__171471__i + 2]; ++G__171471__i;}
G__171470 = new cljs.core.IndexedSeq(G__171471__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__171470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__171472__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__171473 = ntcoll;
var G__171474 = cljs.core.first(vals);
var G__171475 = cljs.core.next(vals);
tcoll = G__171473;
val = G__171474;
vals = G__171475;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__171472 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__171476__i = 0, G__171476__a = new Array(arguments.length -  2);
while (G__171476__i < G__171476__a.length) {G__171476__a[G__171476__i] = arguments[G__171476__i + 2]; ++G__171476__i;}
  vals = new cljs.core.IndexedSeq(G__171476__a,0);
} 
return G__171472__delegate.call(this,tcoll,val,vals);};
G__171472.cljs$lang$maxFixedArity = 2;
G__171472.cljs$lang$applyTo = (function (arglist__171477){
var tcoll = cljs.core.first(arglist__171477);
arglist__171477 = cljs.core.next(arglist__171477);
var val = cljs.core.first(arglist__171477);
var vals = cljs.core.rest(arglist__171477);
return G__171472__delegate(tcoll,val,vals);
});
G__171472.cljs$core$IFn$_invoke$arity$variadic = G__171472__delegate;
return G__171472;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__171478 = null;
if (arguments.length > 2) {
var G__171479__i = 0, G__171479__a = new Array(arguments.length -  2);
while (G__171479__i < G__171479__a.length) {G__171479__a[G__171479__i] = arguments[G__171479__i + 2]; ++G__171479__i;}
G__171478 = new cljs.core.IndexedSeq(G__171479__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__171478);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a18401 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a18401);
} else {
var G__171690 = a18401;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__171690) : f.call(null,G__171690));
}
} else {
var b18402 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a18401,b18402);
} else {
var G__171691 = a18401;
var G__171692 = b18402;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__171691,G__171692) : f.call(null,G__171691,G__171692));
}
} else {
var c18403 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a18401,b18402,c18403);
} else {
var G__171693 = a18401;
var G__171694 = b18402;
var G__171695 = c18403;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__171693,G__171694,G__171695) : f.call(null,G__171693,G__171694,G__171695));
}
} else {
var d18404 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a18401,b18402,c18403,d18404);
} else {
var G__171696 = a18401;
var G__171697 = b18402;
var G__171698 = c18403;
var G__171699 = d18404;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__171696,G__171697,G__171698,G__171699) : f.call(null,G__171696,G__171697,G__171698,G__171699));
}
} else {
var e18405 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a18401,b18402,c18403,d18404,e18405);
} else {
var G__171700 = a18401;
var G__171701 = b18402;
var G__171702 = c18403;
var G__171703 = d18404;
var G__171704 = e18405;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__171700,G__171701,G__171702,G__171703,G__171704) : f.call(null,G__171700,G__171701,G__171702,G__171703,G__171704));
}
} else {
var f18406 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a18401,b18402,c18403,d18404,e18405,f18406);
} else {
var G__171705 = a18401;
var G__171706 = b18402;
var G__171707 = c18403;
var G__171708 = d18404;
var G__171709 = e18405;
var G__171710 = f18406;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__171705,G__171706,G__171707,G__171708,G__171709,G__171710) : f.call(null,G__171705,G__171706,G__171707,G__171708,G__171709,G__171710));
}
} else {
var g18407 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a18401,b18402,c18403,d18404,e18405,f18406,g18407);
} else {
var G__171711 = a18401;
var G__171712 = b18402;
var G__171713 = c18403;
var G__171714 = d18404;
var G__171715 = e18405;
var G__171716 = f18406;
var G__171717 = g18407;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__171711,G__171712,G__171713,G__171714,G__171715,G__171716,G__171717) : f.call(null,G__171711,G__171712,G__171713,G__171714,G__171715,G__171716,G__171717));
}
} else {
var h18408 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408);
} else {
var G__171718 = a18401;
var G__171719 = b18402;
var G__171720 = c18403;
var G__171721 = d18404;
var G__171722 = e18405;
var G__171723 = f18406;
var G__171724 = g18407;
var G__171725 = h18408;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__171718,G__171719,G__171720,G__171721,G__171722,G__171723,G__171724,G__171725) : f.call(null,G__171718,G__171719,G__171720,G__171721,G__171722,G__171723,G__171724,G__171725));
}
} else {
var i18409 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409);
} else {
var G__171726 = a18401;
var G__171727 = b18402;
var G__171728 = c18403;
var G__171729 = d18404;
var G__171730 = e18405;
var G__171731 = f18406;
var G__171732 = g18407;
var G__171733 = h18408;
var G__171734 = i18409;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__171726,G__171727,G__171728,G__171729,G__171730,G__171731,G__171732,G__171733,G__171734) : f.call(null,G__171726,G__171727,G__171728,G__171729,G__171730,G__171731,G__171732,G__171733,G__171734));
}
} else {
var j18410 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410);
} else {
var G__171735 = a18401;
var G__171736 = b18402;
var G__171737 = c18403;
var G__171738 = d18404;
var G__171739 = e18405;
var G__171740 = f18406;
var G__171741 = g18407;
var G__171742 = h18408;
var G__171743 = i18409;
var G__171744 = j18410;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__171735,G__171736,G__171737,G__171738,G__171739,G__171740,G__171741,G__171742,G__171743,G__171744) : f.call(null,G__171735,G__171736,G__171737,G__171738,G__171739,G__171740,G__171741,G__171742,G__171743,G__171744));
}
} else {
var k18411 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411);
} else {
var G__171745 = a18401;
var G__171746 = b18402;
var G__171747 = c18403;
var G__171748 = d18404;
var G__171749 = e18405;
var G__171750 = f18406;
var G__171751 = g18407;
var G__171752 = h18408;
var G__171753 = i18409;
var G__171754 = j18410;
var G__171755 = k18411;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__171745,G__171746,G__171747,G__171748,G__171749,G__171750,G__171751,G__171752,G__171753,G__171754,G__171755) : f.call(null,G__171745,G__171746,G__171747,G__171748,G__171749,G__171750,G__171751,G__171752,G__171753,G__171754,G__171755));
}
} else {
var l18412 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412);
} else {
var G__171756 = a18401;
var G__171757 = b18402;
var G__171758 = c18403;
var G__171759 = d18404;
var G__171760 = e18405;
var G__171761 = f18406;
var G__171762 = g18407;
var G__171763 = h18408;
var G__171764 = i18409;
var G__171765 = j18410;
var G__171766 = k18411;
var G__171767 = l18412;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__171756,G__171757,G__171758,G__171759,G__171760,G__171761,G__171762,G__171763,G__171764,G__171765,G__171766,G__171767) : f.call(null,G__171756,G__171757,G__171758,G__171759,G__171760,G__171761,G__171762,G__171763,G__171764,G__171765,G__171766,G__171767));
}
} else {
var m18413 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412,m18413);
} else {
var G__171768 = a18401;
var G__171769 = b18402;
var G__171770 = c18403;
var G__171771 = d18404;
var G__171772 = e18405;
var G__171773 = f18406;
var G__171774 = g18407;
var G__171775 = h18408;
var G__171776 = i18409;
var G__171777 = j18410;
var G__171778 = k18411;
var G__171779 = l18412;
var G__171780 = m18413;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__171768,G__171769,G__171770,G__171771,G__171772,G__171773,G__171774,G__171775,G__171776,G__171777,G__171778,G__171779,G__171780) : f.call(null,G__171768,G__171769,G__171770,G__171771,G__171772,G__171773,G__171774,G__171775,G__171776,G__171777,G__171778,G__171779,G__171780));
}
} else {
var n18414 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412,m18413,n18414);
} else {
var G__171781 = a18401;
var G__171782 = b18402;
var G__171783 = c18403;
var G__171784 = d18404;
var G__171785 = e18405;
var G__171786 = f18406;
var G__171787 = g18407;
var G__171788 = h18408;
var G__171789 = i18409;
var G__171790 = j18410;
var G__171791 = k18411;
var G__171792 = l18412;
var G__171793 = m18413;
var G__171794 = n18414;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__171781,G__171782,G__171783,G__171784,G__171785,G__171786,G__171787,G__171788,G__171789,G__171790,G__171791,G__171792,G__171793,G__171794) : f.call(null,G__171781,G__171782,G__171783,G__171784,G__171785,G__171786,G__171787,G__171788,G__171789,G__171790,G__171791,G__171792,G__171793,G__171794));
}
} else {
var o18415 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412,m18413,n18414,o18415);
} else {
var G__171795 = a18401;
var G__171796 = b18402;
var G__171797 = c18403;
var G__171798 = d18404;
var G__171799 = e18405;
var G__171800 = f18406;
var G__171801 = g18407;
var G__171802 = h18408;
var G__171803 = i18409;
var G__171804 = j18410;
var G__171805 = k18411;
var G__171806 = l18412;
var G__171807 = m18413;
var G__171808 = n18414;
var G__171809 = o18415;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__171795,G__171796,G__171797,G__171798,G__171799,G__171800,G__171801,G__171802,G__171803,G__171804,G__171805,G__171806,G__171807,G__171808,G__171809) : f.call(null,G__171795,G__171796,G__171797,G__171798,G__171799,G__171800,G__171801,G__171802,G__171803,G__171804,G__171805,G__171806,G__171807,G__171808,G__171809));
}
} else {
var p18416 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412,m18413,n18414,o18415,p18416);
} else {
var G__171810 = a18401;
var G__171811 = b18402;
var G__171812 = c18403;
var G__171813 = d18404;
var G__171814 = e18405;
var G__171815 = f18406;
var G__171816 = g18407;
var G__171817 = h18408;
var G__171818 = i18409;
var G__171819 = j18410;
var G__171820 = k18411;
var G__171821 = l18412;
var G__171822 = m18413;
var G__171823 = n18414;
var G__171824 = o18415;
var G__171825 = p18416;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__171810,G__171811,G__171812,G__171813,G__171814,G__171815,G__171816,G__171817,G__171818,G__171819,G__171820,G__171821,G__171822,G__171823,G__171824,G__171825) : f.call(null,G__171810,G__171811,G__171812,G__171813,G__171814,G__171815,G__171816,G__171817,G__171818,G__171819,G__171820,G__171821,G__171822,G__171823,G__171824,G__171825));
}
} else {
var q18417 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412,m18413,n18414,o18415,p18416,q18417);
} else {
var G__171826 = a18401;
var G__171827 = b18402;
var G__171828 = c18403;
var G__171829 = d18404;
var G__171830 = e18405;
var G__171831 = f18406;
var G__171832 = g18407;
var G__171833 = h18408;
var G__171834 = i18409;
var G__171835 = j18410;
var G__171836 = k18411;
var G__171837 = l18412;
var G__171838 = m18413;
var G__171839 = n18414;
var G__171840 = o18415;
var G__171841 = p18416;
var G__171842 = q18417;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__171826,G__171827,G__171828,G__171829,G__171830,G__171831,G__171832,G__171833,G__171834,G__171835,G__171836,G__171837,G__171838,G__171839,G__171840,G__171841,G__171842) : f.call(null,G__171826,G__171827,G__171828,G__171829,G__171830,G__171831,G__171832,G__171833,G__171834,G__171835,G__171836,G__171837,G__171838,G__171839,G__171840,G__171841,G__171842));
}
} else {
var r18418 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412,m18413,n18414,o18415,p18416,q18417,r18418);
} else {
var G__171843 = a18401;
var G__171844 = b18402;
var G__171845 = c18403;
var G__171846 = d18404;
var G__171847 = e18405;
var G__171848 = f18406;
var G__171849 = g18407;
var G__171850 = h18408;
var G__171851 = i18409;
var G__171852 = j18410;
var G__171853 = k18411;
var G__171854 = l18412;
var G__171855 = m18413;
var G__171856 = n18414;
var G__171857 = o18415;
var G__171858 = p18416;
var G__171859 = q18417;
var G__171860 = r18418;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__171843,G__171844,G__171845,G__171846,G__171847,G__171848,G__171849,G__171850,G__171851,G__171852,G__171853,G__171854,G__171855,G__171856,G__171857,G__171858,G__171859,G__171860) : f.call(null,G__171843,G__171844,G__171845,G__171846,G__171847,G__171848,G__171849,G__171850,G__171851,G__171852,G__171853,G__171854,G__171855,G__171856,G__171857,G__171858,G__171859,G__171860));
}
} else {
var s18419 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412,m18413,n18414,o18415,p18416,q18417,r18418,s18419);
} else {
var G__171861 = a18401;
var G__171862 = b18402;
var G__171863 = c18403;
var G__171864 = d18404;
var G__171865 = e18405;
var G__171866 = f18406;
var G__171867 = g18407;
var G__171868 = h18408;
var G__171869 = i18409;
var G__171870 = j18410;
var G__171871 = k18411;
var G__171872 = l18412;
var G__171873 = m18413;
var G__171874 = n18414;
var G__171875 = o18415;
var G__171876 = p18416;
var G__171877 = q18417;
var G__171878 = r18418;
var G__171879 = s18419;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__171861,G__171862,G__171863,G__171864,G__171865,G__171866,G__171867,G__171868,G__171869,G__171870,G__171871,G__171872,G__171873,G__171874,G__171875,G__171876,G__171877,G__171878,G__171879) : f.call(null,G__171861,G__171862,G__171863,G__171864,G__171865,G__171866,G__171867,G__171868,G__171869,G__171870,G__171871,G__171872,G__171873,G__171874,G__171875,G__171876,G__171877,G__171878,G__171879));
}
} else {
var t18420 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a18401,b18402,c18403,d18404,e18405,f18406,g18407,h18408,i18409,j18410,k18411,l18412,m18413,n18414,o18415,p18416,q18417,r18418,s18419,t18420);
} else {
var G__171880 = a18401;
var G__171881 = b18402;
var G__171882 = c18403;
var G__171883 = d18404;
var G__171884 = e18405;
var G__171885 = f18406;
var G__171886 = g18407;
var G__171887 = h18408;
var G__171888 = i18409;
var G__171889 = j18410;
var G__171890 = k18411;
var G__171891 = l18412;
var G__171892 = m18413;
var G__171893 = n18414;
var G__171894 = o18415;
var G__171895 = p18416;
var G__171896 = q18417;
var G__171897 = r18418;
var G__171898 = s18419;
var G__171899 = t18420;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__171880,G__171881,G__171882,G__171883,G__171884,G__171885,G__171886,G__171887,G__171888,G__171889,G__171890,G__171891,G__171892,G__171893,G__171894,G__171895,G__171896,G__171897,G__171898,G__171899) : f.call(null,G__171880,G__171881,G__171882,G__171883,G__171884,G__171885,G__171886,G__171887,G__171888,G__171889,G__171890,G__171891,G__171892,G__171893,G__171894,G__171895,G__171896,G__171897,G__171898,G__171899));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__171900__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__171900 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__171901__i = 0, G__171901__a = new Array(arguments.length -  5);
while (G__171901__i < G__171901__a.length) {G__171901__a[G__171901__i] = arguments[G__171901__i + 5]; ++G__171901__i;}
  args = new cljs.core.IndexedSeq(G__171901__a,0);
} 
return G__171900__delegate.call(this,f,a,b,c,d,args);};
G__171900.cljs$lang$maxFixedArity = 5;
G__171900.cljs$lang$applyTo = (function (arglist__171902){
var f = cljs.core.first(arglist__171902);
arglist__171902 = cljs.core.next(arglist__171902);
var a = cljs.core.first(arglist__171902);
arglist__171902 = cljs.core.next(arglist__171902);
var b = cljs.core.first(arglist__171902);
arglist__171902 = cljs.core.next(arglist__171902);
var c = cljs.core.first(arglist__171902);
arglist__171902 = cljs.core.next(arglist__171902);
var d = cljs.core.first(arglist__171902);
var args = cljs.core.rest(arglist__171902);
return G__171900__delegate(f,a,b,c,d,args);
});
G__171900.cljs$core$IFn$_invoke$arity$variadic = G__171900__delegate;
return G__171900;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__171903 = null;
if (arguments.length > 5) {
var G__171904__i = 0, G__171904__a = new Array(arguments.length -  5);
while (G__171904__i < G__171904__a.length) {G__171904__a[G__171904__i] = arguments[G__171904__i + 5]; ++G__171904__i;}
G__171903 = new cljs.core.IndexedSeq(G__171904__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__171903);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__171920 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__171920) : f.call(null,G__171920));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__171921 = cljs.core.meta(obj);
var G__171922 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__171921,G__171922) : f.call(null,G__171921,G__171922));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__171923 = cljs.core.meta(obj);
var G__171924 = a;
var G__171925 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__171923,G__171924,G__171925) : f.call(null,G__171923,G__171924,G__171925));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__171926 = cljs.core.meta(obj);
var G__171927 = a;
var G__171928 = b;
var G__171929 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__171926,G__171927,G__171928,G__171929) : f.call(null,G__171926,G__171927,G__171928,G__171929));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__171930 = cljs.core.meta(obj);
var G__171931 = a;
var G__171932 = b;
var G__171933 = c;
var G__171934 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__171930,G__171931,G__171932,G__171933,G__171934) : f.call(null,G__171930,G__171931,G__171932,G__171933,G__171934));
})());
});
var vary_meta__7 = (function() { 
var G__171935__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__171935 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__171936__i = 0, G__171936__a = new Array(arguments.length -  6);
while (G__171936__i < G__171936__a.length) {G__171936__a[G__171936__i] = arguments[G__171936__i + 6]; ++G__171936__i;}
  args = new cljs.core.IndexedSeq(G__171936__a,0);
} 
return G__171935__delegate.call(this,obj,f,a,b,c,d,args);};
G__171935.cljs$lang$maxFixedArity = 6;
G__171935.cljs$lang$applyTo = (function (arglist__171937){
var obj = cljs.core.first(arglist__171937);
arglist__171937 = cljs.core.next(arglist__171937);
var f = cljs.core.first(arglist__171937);
arglist__171937 = cljs.core.next(arglist__171937);
var a = cljs.core.first(arglist__171937);
arglist__171937 = cljs.core.next(arglist__171937);
var b = cljs.core.first(arglist__171937);
arglist__171937 = cljs.core.next(arglist__171937);
var c = cljs.core.first(arglist__171937);
arglist__171937 = cljs.core.next(arglist__171937);
var d = cljs.core.first(arglist__171937);
var args = cljs.core.rest(arglist__171937);
return G__171935__delegate(obj,f,a,b,c,d,args);
});
G__171935.cljs$core$IFn$_invoke$arity$variadic = G__171935__delegate;
return G__171935;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__171938 = null;
if (arguments.length > 6) {
var G__171939__i = 0, G__171939__a = new Array(arguments.length -  6);
while (G__171939__i < G__171939__a.length) {G__171939__a[G__171939__i] = arguments[G__171939__i + 6]; ++G__171939__i;}
G__171938 = new cljs.core.IndexedSeq(G__171939__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__171938);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__171940__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__171940 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__171941__i = 0, G__171941__a = new Array(arguments.length -  2);
while (G__171941__i < G__171941__a.length) {G__171941__a[G__171941__i] = arguments[G__171941__i + 2]; ++G__171941__i;}
  more = new cljs.core.IndexedSeq(G__171941__a,0);
} 
return G__171940__delegate.call(this,x,y,more);};
G__171940.cljs$lang$maxFixedArity = 2;
G__171940.cljs$lang$applyTo = (function (arglist__171942){
var x = cljs.core.first(arglist__171942);
arglist__171942 = cljs.core.next(arglist__171942);
var y = cljs.core.first(arglist__171942);
var more = cljs.core.rest(arglist__171942);
return G__171940__delegate(x,y,more);
});
G__171940.cljs$core$IFn$_invoke$arity$variadic = G__171940__delegate;
return G__171940;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__171943 = null;
if (arguments.length > 2) {
var G__171944__i = 0, G__171944__a = new Array(arguments.length -  2);
while (G__171944__i < G__171944__a.length) {G__171944__a[G__171944__i] = arguments[G__171944__i + 2]; ++G__171944__i;}
G__171943 = new cljs.core.IndexedSeq(G__171944__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__171943);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t171948 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t171948 = (function (nil_iter,meta171949){
this.nil_iter = nil_iter;
this.meta171949 = meta171949;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t171948.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t171948.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t171948.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t171948.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_171950){
var self__ = this;
var _171950__$1 = this;
return self__.meta171949;
});

cljs.core.t171948.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_171950,meta171949__$1){
var self__ = this;
var _171950__$1 = this;
return (new cljs.core.t171948(self__.nil_iter,meta171949__$1));
});

cljs.core.t171948.cljs$lang$type = true;

cljs.core.t171948.cljs$lang$ctorStr = "cljs.core/t171948";

cljs.core.t171948.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/t171948");
});

cljs.core.__GT_t171948 = (function __GT_t171948(nil_iter__$1,meta171949){
return (new cljs.core.t171948(nil_iter__$1,meta171949));
});

}

return (new cljs.core.t171948(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17458__auto__ = !((lt.stepper == null));
if(and__17458__auto__){
return self__.iter.hasNext();
} else {
return and__17458__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__171951 = lt;
var G__171952 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__171951,G__171952) : self__.xform.call(null,G__171951,G__171952));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__171953 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__171953) : self__.xform.call(null,G__171953));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__171955 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__171955) : xform.call(null,G__171955));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__171957 = cljs.core.next(iters__$1);
iters__$1 = G__171957;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__18357__auto___171958 = self__.iters.length;
var i_171959 = (0);
while(true){
if((i_171959 < n__18357__auto___171958)){
(self__.nexts[i_171959] = (self__.iters[i_171959]).next());

var G__171960 = (i_171959 + (1));
i_171959 = G__171960;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__17458__auto__ = !((lt.stepper == null));
if(and__17458__auto__){
return this$.hasNext();
} else {
return and__17458__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__171956 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__171956) : self__.xform.call(null,G__171956));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__171965 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__171965) : xform.call(null,G__171965));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__171966_171970 = cljs.core.seq(colls);
var chunk__171967_171971 = null;
var count__171968_171972 = (0);
var i__171969_171973 = (0);
while(true){
if((i__171969_171973 < count__171968_171972)){
var coll_171974 = chunk__171967_171971.cljs$core$IIndexed$_nth$arity$2(null,i__171969_171973);
iters.push(cljs.core.iter(coll_171974));

var G__171975 = seq__171966_171970;
var G__171976 = chunk__171967_171971;
var G__171977 = count__171968_171972;
var G__171978 = (i__171969_171973 + (1));
seq__171966_171970 = G__171975;
chunk__171967_171971 = G__171976;
count__171968_171972 = G__171977;
i__171969_171973 = G__171978;
continue;
} else {
var temp__4126__auto___171979 = cljs.core.seq(seq__171966_171970);
if(temp__4126__auto___171979){
var seq__171966_171980__$1 = temp__4126__auto___171979;
if(cljs.core.chunked_seq_QMARK_(seq__171966_171980__$1)){
var c__18257__auto___171981 = cljs.core.chunk_first(seq__171966_171980__$1);
var G__171982 = cljs.core.chunk_rest(seq__171966_171980__$1);
var G__171983 = c__18257__auto___171981;
var G__171984 = cljs.core.count(c__18257__auto___171981);
var G__171985 = (0);
seq__171966_171970 = G__171982;
chunk__171967_171971 = G__171983;
count__171968_171972 = G__171984;
i__171969_171973 = G__171985;
continue;
} else {
var coll_171986 = cljs.core.first(seq__171966_171980__$1);
iters.push(cljs.core.iter(coll_171986));

var G__171987 = cljs.core.next(seq__171966_171980__$1);
var G__171988 = null;
var G__171989 = (0);
var G__171990 = (0);
seq__171966_171970 = G__171987;
chunk__171967_171971 = G__171988;
count__171968_171972 = G__171989;
i__171969_171973 = G__171990;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__17470__auto__ = cljs.core.seq(coll);
if(or__17470__auto__){
return or__17470__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__171991__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__171991 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__171992__i = 0, G__171992__a = new Array(arguments.length -  2);
while (G__171992__i < G__171992__a.length) {G__171992__a[G__171992__i] = arguments[G__171992__i + 2]; ++G__171992__i;}
  colls = new cljs.core.IndexedSeq(G__171992__a,0);
} 
return G__171991__delegate.call(this,xform,coll,colls);};
G__171991.cljs$lang$maxFixedArity = 2;
G__171991.cljs$lang$applyTo = (function (arglist__171993){
var xform = cljs.core.first(arglist__171993);
arglist__171993 = cljs.core.next(arglist__171993);
var coll = cljs.core.first(arglist__171993);
var colls = cljs.core.rest(arglist__171993);
return G__171991__delegate(xform,coll,colls);
});
G__171991.cljs$core$IFn$_invoke$arity$variadic = G__171991__delegate;
return G__171991;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__171994 = null;
if (arguments.length > 2) {
var G__171995__i = 0, G__171995__a = new Array(arguments.length -  2);
while (G__171995__i < G__171995__a.length) {G__171995__a[G__171995__i] = arguments[G__171995__i + 2]; ++G__171995__i;}
G__171994 = new cljs.core.IndexedSeq(G__171995__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__171994);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__171997 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__171997) : pred.call(null,G__171997));
})())){
var G__171998 = pred;
var G__171999 = cljs.core.next(coll);
pred = G__171998;
coll = G__171999;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__17470__auto__ = (function (){var G__172003 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__172003) : pred.call(null,G__172003));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var G__172004 = pred;
var G__172005 = cljs.core.next(coll);
pred = G__172004;
coll = G__172005;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__172012 = null;
var G__172012__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__172012__1 = (function (x){
return cljs.core.not((function (){var G__172009 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172009) : f.call(null,G__172009));
})());
});
var G__172012__2 = (function (x,y){
return cljs.core.not((function (){var G__172010 = x;
var G__172011 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172010,G__172011) : f.call(null,G__172010,G__172011));
})());
});
var G__172012__3 = (function() { 
var G__172013__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__172013 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__172014__i = 0, G__172014__a = new Array(arguments.length -  2);
while (G__172014__i < G__172014__a.length) {G__172014__a[G__172014__i] = arguments[G__172014__i + 2]; ++G__172014__i;}
  zs = new cljs.core.IndexedSeq(G__172014__a,0);
} 
return G__172013__delegate.call(this,x,y,zs);};
G__172013.cljs$lang$maxFixedArity = 2;
G__172013.cljs$lang$applyTo = (function (arglist__172015){
var x = cljs.core.first(arglist__172015);
arglist__172015 = cljs.core.next(arglist__172015);
var y = cljs.core.first(arglist__172015);
var zs = cljs.core.rest(arglist__172015);
return G__172013__delegate(x,y,zs);
});
G__172013.cljs$core$IFn$_invoke$arity$variadic = G__172013__delegate;
return G__172013;
})()
;
G__172012 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__172012__0.call(this);
case 1:
return G__172012__1.call(this,x);
case 2:
return G__172012__2.call(this,x,y);
default:
var G__172016 = null;
if (arguments.length > 2) {
var G__172017__i = 0, G__172017__a = new Array(arguments.length -  2);
while (G__172017__i < G__172017__a.length) {G__172017__a[G__172017__i] = arguments[G__172017__i + 2]; ++G__172017__i;}
G__172016 = new cljs.core.IndexedSeq(G__172017__a,0);
}
return G__172012__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__172016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172012.cljs$lang$maxFixedArity = 2;
G__172012.cljs$lang$applyTo = G__172012__3.cljs$lang$applyTo;
G__172012.cljs$core$IFn$_invoke$arity$0 = G__172012__0;
G__172012.cljs$core$IFn$_invoke$arity$1 = G__172012__1;
G__172012.cljs$core$IFn$_invoke$arity$2 = G__172012__2;
G__172012.cljs$core$IFn$_invoke$arity$variadic = G__172012__3.cljs$core$IFn$_invoke$arity$variadic;
return G__172012;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__172018__delegate = function (args){
return x;
};
var G__172018 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__172019__i = 0, G__172019__a = new Array(arguments.length -  0);
while (G__172019__i < G__172019__a.length) {G__172019__a[G__172019__i] = arguments[G__172019__i + 0]; ++G__172019__i;}
  args = new cljs.core.IndexedSeq(G__172019__a,0);
} 
return G__172018__delegate.call(this,args);};
G__172018.cljs$lang$maxFixedArity = 0;
G__172018.cljs$lang$applyTo = (function (arglist__172020){
var args = cljs.core.seq(arglist__172020);
return G__172018__delegate(args);
});
G__172018.cljs$core$IFn$_invoke$arity$variadic = G__172018__delegate;
return G__172018;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__172075 = null;
var G__172075__0 = (function (){
var G__172048 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172048) : f.call(null,G__172048));
});
var G__172075__1 = (function (x){
var G__172049 = (function (){var G__172050 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__172050) : g.call(null,G__172050));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172049) : f.call(null,G__172049));
});
var G__172075__2 = (function (x,y){
var G__172051 = (function (){var G__172052 = x;
var G__172053 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__172052,G__172053) : g.call(null,G__172052,G__172053));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172051) : f.call(null,G__172051));
});
var G__172075__3 = (function (x,y,z){
var G__172054 = (function (){var G__172055 = x;
var G__172056 = y;
var G__172057 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__172055,G__172056,G__172057) : g.call(null,G__172055,G__172056,G__172057));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172054) : f.call(null,G__172054));
});
var G__172075__4 = (function() { 
var G__172076__delegate = function (x,y,z,args){
var G__172058 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172058) : f.call(null,G__172058));
};
var G__172076 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172077__i = 0, G__172077__a = new Array(arguments.length -  3);
while (G__172077__i < G__172077__a.length) {G__172077__a[G__172077__i] = arguments[G__172077__i + 3]; ++G__172077__i;}
  args = new cljs.core.IndexedSeq(G__172077__a,0);
} 
return G__172076__delegate.call(this,x,y,z,args);};
G__172076.cljs$lang$maxFixedArity = 3;
G__172076.cljs$lang$applyTo = (function (arglist__172078){
var x = cljs.core.first(arglist__172078);
arglist__172078 = cljs.core.next(arglist__172078);
var y = cljs.core.first(arglist__172078);
arglist__172078 = cljs.core.next(arglist__172078);
var z = cljs.core.first(arglist__172078);
var args = cljs.core.rest(arglist__172078);
return G__172076__delegate(x,y,z,args);
});
G__172076.cljs$core$IFn$_invoke$arity$variadic = G__172076__delegate;
return G__172076;
})()
;
G__172075 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__172075__0.call(this);
case 1:
return G__172075__1.call(this,x);
case 2:
return G__172075__2.call(this,x,y);
case 3:
return G__172075__3.call(this,x,y,z);
default:
var G__172079 = null;
if (arguments.length > 3) {
var G__172080__i = 0, G__172080__a = new Array(arguments.length -  3);
while (G__172080__i < G__172080__a.length) {G__172080__a[G__172080__i] = arguments[G__172080__i + 3]; ++G__172080__i;}
G__172079 = new cljs.core.IndexedSeq(G__172080__a,0);
}
return G__172075__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172079);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172075.cljs$lang$maxFixedArity = 3;
G__172075.cljs$lang$applyTo = G__172075__4.cljs$lang$applyTo;
G__172075.cljs$core$IFn$_invoke$arity$0 = G__172075__0;
G__172075.cljs$core$IFn$_invoke$arity$1 = G__172075__1;
G__172075.cljs$core$IFn$_invoke$arity$2 = G__172075__2;
G__172075.cljs$core$IFn$_invoke$arity$3 = G__172075__3;
G__172075.cljs$core$IFn$_invoke$arity$variadic = G__172075__4.cljs$core$IFn$_invoke$arity$variadic;
return G__172075;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__172081 = null;
var G__172081__0 = (function (){
var G__172059 = (function (){var G__172060 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__172060) : g.call(null,G__172060));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172059) : f.call(null,G__172059));
});
var G__172081__1 = (function (x){
var G__172061 = (function (){var G__172062 = (function (){var G__172063 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__172063) : h.call(null,G__172063));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__172062) : g.call(null,G__172062));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172061) : f.call(null,G__172061));
});
var G__172081__2 = (function (x,y){
var G__172064 = (function (){var G__172065 = (function (){var G__172066 = x;
var G__172067 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__172066,G__172067) : h.call(null,G__172066,G__172067));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__172065) : g.call(null,G__172065));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172064) : f.call(null,G__172064));
});
var G__172081__3 = (function (x,y,z){
var G__172068 = (function (){var G__172069 = (function (){var G__172070 = x;
var G__172071 = y;
var G__172072 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__172070,G__172071,G__172072) : h.call(null,G__172070,G__172071,G__172072));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__172069) : g.call(null,G__172069));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172068) : f.call(null,G__172068));
});
var G__172081__4 = (function() { 
var G__172082__delegate = function (x,y,z,args){
var G__172073 = (function (){var G__172074 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__172074) : g.call(null,G__172074));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172073) : f.call(null,G__172073));
};
var G__172082 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172083__i = 0, G__172083__a = new Array(arguments.length -  3);
while (G__172083__i < G__172083__a.length) {G__172083__a[G__172083__i] = arguments[G__172083__i + 3]; ++G__172083__i;}
  args = new cljs.core.IndexedSeq(G__172083__a,0);
} 
return G__172082__delegate.call(this,x,y,z,args);};
G__172082.cljs$lang$maxFixedArity = 3;
G__172082.cljs$lang$applyTo = (function (arglist__172084){
var x = cljs.core.first(arglist__172084);
arglist__172084 = cljs.core.next(arglist__172084);
var y = cljs.core.first(arglist__172084);
arglist__172084 = cljs.core.next(arglist__172084);
var z = cljs.core.first(arglist__172084);
var args = cljs.core.rest(arglist__172084);
return G__172082__delegate(x,y,z,args);
});
G__172082.cljs$core$IFn$_invoke$arity$variadic = G__172082__delegate;
return G__172082;
})()
;
G__172081 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__172081__0.call(this);
case 1:
return G__172081__1.call(this,x);
case 2:
return G__172081__2.call(this,x,y);
case 3:
return G__172081__3.call(this,x,y,z);
default:
var G__172085 = null;
if (arguments.length > 3) {
var G__172086__i = 0, G__172086__a = new Array(arguments.length -  3);
while (G__172086__i < G__172086__a.length) {G__172086__a[G__172086__i] = arguments[G__172086__i + 3]; ++G__172086__i;}
G__172085 = new cljs.core.IndexedSeq(G__172086__a,0);
}
return G__172081__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172085);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172081.cljs$lang$maxFixedArity = 3;
G__172081.cljs$lang$applyTo = G__172081__4.cljs$lang$applyTo;
G__172081.cljs$core$IFn$_invoke$arity$0 = G__172081__0;
G__172081.cljs$core$IFn$_invoke$arity$1 = G__172081__1;
G__172081.cljs$core$IFn$_invoke$arity$2 = G__172081__2;
G__172081.cljs$core$IFn$_invoke$arity$3 = G__172081__3;
G__172081.cljs$core$IFn$_invoke$arity$variadic = G__172081__4.cljs$core$IFn$_invoke$arity$variadic;
return G__172081;
})()
});
var comp__4 = (function() { 
var G__172087__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__172088__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__172089 = cljs.core.first(fs__$2).call(null,ret);
var G__172090 = cljs.core.next(fs__$2);
ret = G__172089;
fs__$2 = G__172090;
continue;
} else {
return ret;
}
break;
}
};
var G__172088 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__172091__i = 0, G__172091__a = new Array(arguments.length -  0);
while (G__172091__i < G__172091__a.length) {G__172091__a[G__172091__i] = arguments[G__172091__i + 0]; ++G__172091__i;}
  args = new cljs.core.IndexedSeq(G__172091__a,0);
} 
return G__172088__delegate.call(this,args);};
G__172088.cljs$lang$maxFixedArity = 0;
G__172088.cljs$lang$applyTo = (function (arglist__172092){
var args = cljs.core.seq(arglist__172092);
return G__172088__delegate(args);
});
G__172088.cljs$core$IFn$_invoke$arity$variadic = G__172088__delegate;
return G__172088;
})()
;
;})(fs__$1))
};
var G__172087 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__172093__i = 0, G__172093__a = new Array(arguments.length -  3);
while (G__172093__i < G__172093__a.length) {G__172093__a[G__172093__i] = arguments[G__172093__i + 3]; ++G__172093__i;}
  fs = new cljs.core.IndexedSeq(G__172093__a,0);
} 
return G__172087__delegate.call(this,f1,f2,f3,fs);};
G__172087.cljs$lang$maxFixedArity = 3;
G__172087.cljs$lang$applyTo = (function (arglist__172094){
var f1 = cljs.core.first(arglist__172094);
arglist__172094 = cljs.core.next(arglist__172094);
var f2 = cljs.core.first(arglist__172094);
arglist__172094 = cljs.core.next(arglist__172094);
var f3 = cljs.core.first(arglist__172094);
var fs = cljs.core.rest(arglist__172094);
return G__172087__delegate(f1,f2,f3,fs);
});
G__172087.cljs$core$IFn$_invoke$arity$variadic = G__172087__delegate;
return G__172087;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__172095 = null;
if (arguments.length > 3) {
var G__172096__i = 0, G__172096__a = new Array(arguments.length -  3);
while (G__172096__i < G__172096__a.length) {G__172096__a[G__172096__i] = arguments[G__172096__i + 3]; ++G__172096__i;}
G__172095 = new cljs.core.IndexedSeq(G__172096__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__172095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__172181 = null;
var G__172181__0 = (function (){
var G__172139 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172139) : f.call(null,G__172139));
});
var G__172181__1 = (function (x){
var G__172140 = arg1;
var G__172141 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172140,G__172141) : f.call(null,G__172140,G__172141));
});
var G__172181__2 = (function (x,y){
var G__172142 = arg1;
var G__172143 = x;
var G__172144 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__172142,G__172143,G__172144) : f.call(null,G__172142,G__172143,G__172144));
});
var G__172181__3 = (function (x,y,z){
var G__172145 = arg1;
var G__172146 = x;
var G__172147 = y;
var G__172148 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__172145,G__172146,G__172147,G__172148) : f.call(null,G__172145,G__172146,G__172147,G__172148));
});
var G__172181__4 = (function() { 
var G__172182__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__172182 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172183__i = 0, G__172183__a = new Array(arguments.length -  3);
while (G__172183__i < G__172183__a.length) {G__172183__a[G__172183__i] = arguments[G__172183__i + 3]; ++G__172183__i;}
  args = new cljs.core.IndexedSeq(G__172183__a,0);
} 
return G__172182__delegate.call(this,x,y,z,args);};
G__172182.cljs$lang$maxFixedArity = 3;
G__172182.cljs$lang$applyTo = (function (arglist__172184){
var x = cljs.core.first(arglist__172184);
arglist__172184 = cljs.core.next(arglist__172184);
var y = cljs.core.first(arglist__172184);
arglist__172184 = cljs.core.next(arglist__172184);
var z = cljs.core.first(arglist__172184);
var args = cljs.core.rest(arglist__172184);
return G__172182__delegate(x,y,z,args);
});
G__172182.cljs$core$IFn$_invoke$arity$variadic = G__172182__delegate;
return G__172182;
})()
;
G__172181 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__172181__0.call(this);
case 1:
return G__172181__1.call(this,x);
case 2:
return G__172181__2.call(this,x,y);
case 3:
return G__172181__3.call(this,x,y,z);
default:
var G__172185 = null;
if (arguments.length > 3) {
var G__172186__i = 0, G__172186__a = new Array(arguments.length -  3);
while (G__172186__i < G__172186__a.length) {G__172186__a[G__172186__i] = arguments[G__172186__i + 3]; ++G__172186__i;}
G__172185 = new cljs.core.IndexedSeq(G__172186__a,0);
}
return G__172181__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172181.cljs$lang$maxFixedArity = 3;
G__172181.cljs$lang$applyTo = G__172181__4.cljs$lang$applyTo;
G__172181.cljs$core$IFn$_invoke$arity$0 = G__172181__0;
G__172181.cljs$core$IFn$_invoke$arity$1 = G__172181__1;
G__172181.cljs$core$IFn$_invoke$arity$2 = G__172181__2;
G__172181.cljs$core$IFn$_invoke$arity$3 = G__172181__3;
G__172181.cljs$core$IFn$_invoke$arity$variadic = G__172181__4.cljs$core$IFn$_invoke$arity$variadic;
return G__172181;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__172187 = null;
var G__172187__0 = (function (){
var G__172149 = arg1;
var G__172150 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172149,G__172150) : f.call(null,G__172149,G__172150));
});
var G__172187__1 = (function (x){
var G__172151 = arg1;
var G__172152 = arg2;
var G__172153 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__172151,G__172152,G__172153) : f.call(null,G__172151,G__172152,G__172153));
});
var G__172187__2 = (function (x,y){
var G__172154 = arg1;
var G__172155 = arg2;
var G__172156 = x;
var G__172157 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__172154,G__172155,G__172156,G__172157) : f.call(null,G__172154,G__172155,G__172156,G__172157));
});
var G__172187__3 = (function (x,y,z){
var G__172158 = arg1;
var G__172159 = arg2;
var G__172160 = x;
var G__172161 = y;
var G__172162 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__172158,G__172159,G__172160,G__172161,G__172162) : f.call(null,G__172158,G__172159,G__172160,G__172161,G__172162));
});
var G__172187__4 = (function() { 
var G__172188__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__172188 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172189__i = 0, G__172189__a = new Array(arguments.length -  3);
while (G__172189__i < G__172189__a.length) {G__172189__a[G__172189__i] = arguments[G__172189__i + 3]; ++G__172189__i;}
  args = new cljs.core.IndexedSeq(G__172189__a,0);
} 
return G__172188__delegate.call(this,x,y,z,args);};
G__172188.cljs$lang$maxFixedArity = 3;
G__172188.cljs$lang$applyTo = (function (arglist__172190){
var x = cljs.core.first(arglist__172190);
arglist__172190 = cljs.core.next(arglist__172190);
var y = cljs.core.first(arglist__172190);
arglist__172190 = cljs.core.next(arglist__172190);
var z = cljs.core.first(arglist__172190);
var args = cljs.core.rest(arglist__172190);
return G__172188__delegate(x,y,z,args);
});
G__172188.cljs$core$IFn$_invoke$arity$variadic = G__172188__delegate;
return G__172188;
})()
;
G__172187 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__172187__0.call(this);
case 1:
return G__172187__1.call(this,x);
case 2:
return G__172187__2.call(this,x,y);
case 3:
return G__172187__3.call(this,x,y,z);
default:
var G__172191 = null;
if (arguments.length > 3) {
var G__172192__i = 0, G__172192__a = new Array(arguments.length -  3);
while (G__172192__i < G__172192__a.length) {G__172192__a[G__172192__i] = arguments[G__172192__i + 3]; ++G__172192__i;}
G__172191 = new cljs.core.IndexedSeq(G__172192__a,0);
}
return G__172187__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172191);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172187.cljs$lang$maxFixedArity = 3;
G__172187.cljs$lang$applyTo = G__172187__4.cljs$lang$applyTo;
G__172187.cljs$core$IFn$_invoke$arity$0 = G__172187__0;
G__172187.cljs$core$IFn$_invoke$arity$1 = G__172187__1;
G__172187.cljs$core$IFn$_invoke$arity$2 = G__172187__2;
G__172187.cljs$core$IFn$_invoke$arity$3 = G__172187__3;
G__172187.cljs$core$IFn$_invoke$arity$variadic = G__172187__4.cljs$core$IFn$_invoke$arity$variadic;
return G__172187;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__172193 = null;
var G__172193__0 = (function (){
var G__172163 = arg1;
var G__172164 = arg2;
var G__172165 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__172163,G__172164,G__172165) : f.call(null,G__172163,G__172164,G__172165));
});
var G__172193__1 = (function (x){
var G__172166 = arg1;
var G__172167 = arg2;
var G__172168 = arg3;
var G__172169 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__172166,G__172167,G__172168,G__172169) : f.call(null,G__172166,G__172167,G__172168,G__172169));
});
var G__172193__2 = (function (x,y){
var G__172170 = arg1;
var G__172171 = arg2;
var G__172172 = arg3;
var G__172173 = x;
var G__172174 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__172170,G__172171,G__172172,G__172173,G__172174) : f.call(null,G__172170,G__172171,G__172172,G__172173,G__172174));
});
var G__172193__3 = (function (x,y,z){
var G__172175 = arg1;
var G__172176 = arg2;
var G__172177 = arg3;
var G__172178 = x;
var G__172179 = y;
var G__172180 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__172175,G__172176,G__172177,G__172178,G__172179,G__172180) : f.call(null,G__172175,G__172176,G__172177,G__172178,G__172179,G__172180));
});
var G__172193__4 = (function() { 
var G__172194__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__172194 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172195__i = 0, G__172195__a = new Array(arguments.length -  3);
while (G__172195__i < G__172195__a.length) {G__172195__a[G__172195__i] = arguments[G__172195__i + 3]; ++G__172195__i;}
  args = new cljs.core.IndexedSeq(G__172195__a,0);
} 
return G__172194__delegate.call(this,x,y,z,args);};
G__172194.cljs$lang$maxFixedArity = 3;
G__172194.cljs$lang$applyTo = (function (arglist__172196){
var x = cljs.core.first(arglist__172196);
arglist__172196 = cljs.core.next(arglist__172196);
var y = cljs.core.first(arglist__172196);
arglist__172196 = cljs.core.next(arglist__172196);
var z = cljs.core.first(arglist__172196);
var args = cljs.core.rest(arglist__172196);
return G__172194__delegate(x,y,z,args);
});
G__172194.cljs$core$IFn$_invoke$arity$variadic = G__172194__delegate;
return G__172194;
})()
;
G__172193 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__172193__0.call(this);
case 1:
return G__172193__1.call(this,x);
case 2:
return G__172193__2.call(this,x,y);
case 3:
return G__172193__3.call(this,x,y,z);
default:
var G__172197 = null;
if (arguments.length > 3) {
var G__172198__i = 0, G__172198__a = new Array(arguments.length -  3);
while (G__172198__i < G__172198__a.length) {G__172198__a[G__172198__i] = arguments[G__172198__i + 3]; ++G__172198__i;}
G__172197 = new cljs.core.IndexedSeq(G__172198__a,0);
}
return G__172193__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172193.cljs$lang$maxFixedArity = 3;
G__172193.cljs$lang$applyTo = G__172193__4.cljs$lang$applyTo;
G__172193.cljs$core$IFn$_invoke$arity$0 = G__172193__0;
G__172193.cljs$core$IFn$_invoke$arity$1 = G__172193__1;
G__172193.cljs$core$IFn$_invoke$arity$2 = G__172193__2;
G__172193.cljs$core$IFn$_invoke$arity$3 = G__172193__3;
G__172193.cljs$core$IFn$_invoke$arity$variadic = G__172193__4.cljs$core$IFn$_invoke$arity$variadic;
return G__172193;
})()
});
var partial__5 = (function() { 
var G__172199__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__172200__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__172200 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__172201__i = 0, G__172201__a = new Array(arguments.length -  0);
while (G__172201__i < G__172201__a.length) {G__172201__a[G__172201__i] = arguments[G__172201__i + 0]; ++G__172201__i;}
  args = new cljs.core.IndexedSeq(G__172201__a,0);
} 
return G__172200__delegate.call(this,args);};
G__172200.cljs$lang$maxFixedArity = 0;
G__172200.cljs$lang$applyTo = (function (arglist__172202){
var args = cljs.core.seq(arglist__172202);
return G__172200__delegate(args);
});
G__172200.cljs$core$IFn$_invoke$arity$variadic = G__172200__delegate;
return G__172200;
})()
;
};
var G__172199 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__172203__i = 0, G__172203__a = new Array(arguments.length -  4);
while (G__172203__i < G__172203__a.length) {G__172203__a[G__172203__i] = arguments[G__172203__i + 4]; ++G__172203__i;}
  more = new cljs.core.IndexedSeq(G__172203__a,0);
} 
return G__172199__delegate.call(this,f,arg1,arg2,arg3,more);};
G__172199.cljs$lang$maxFixedArity = 4;
G__172199.cljs$lang$applyTo = (function (arglist__172204){
var f = cljs.core.first(arglist__172204);
arglist__172204 = cljs.core.next(arglist__172204);
var arg1 = cljs.core.first(arglist__172204);
arglist__172204 = cljs.core.next(arglist__172204);
var arg2 = cljs.core.first(arglist__172204);
arglist__172204 = cljs.core.next(arglist__172204);
var arg3 = cljs.core.first(arglist__172204);
var more = cljs.core.rest(arglist__172204);
return G__172199__delegate(f,arg1,arg2,arg3,more);
});
G__172199.cljs$core$IFn$_invoke$arity$variadic = G__172199__delegate;
return G__172199;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__172205 = null;
if (arguments.length > 4) {
var G__172206__i = 0, G__172206__a = new Array(arguments.length -  4);
while (G__172206__i < G__172206__a.length) {G__172206__a[G__172206__i] = arguments[G__172206__i + 4]; ++G__172206__i;}
G__172205 = new cljs.core.IndexedSeq(G__172206__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__172205);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__172239 = null;
var G__172239__1 = (function (a){
var G__172223 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172223) : f.call(null,G__172223));
});
var G__172239__2 = (function (a,b){
var G__172224 = (((a == null))?x:a);
var G__172225 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172224,G__172225) : f.call(null,G__172224,G__172225));
});
var G__172239__3 = (function (a,b,c){
var G__172226 = (((a == null))?x:a);
var G__172227 = b;
var G__172228 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__172226,G__172227,G__172228) : f.call(null,G__172226,G__172227,G__172228));
});
var G__172239__4 = (function() { 
var G__172240__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__172240 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__172241__i = 0, G__172241__a = new Array(arguments.length -  3);
while (G__172241__i < G__172241__a.length) {G__172241__a[G__172241__i] = arguments[G__172241__i + 3]; ++G__172241__i;}
  ds = new cljs.core.IndexedSeq(G__172241__a,0);
} 
return G__172240__delegate.call(this,a,b,c,ds);};
G__172240.cljs$lang$maxFixedArity = 3;
G__172240.cljs$lang$applyTo = (function (arglist__172242){
var a = cljs.core.first(arglist__172242);
arglist__172242 = cljs.core.next(arglist__172242);
var b = cljs.core.first(arglist__172242);
arglist__172242 = cljs.core.next(arglist__172242);
var c = cljs.core.first(arglist__172242);
var ds = cljs.core.rest(arglist__172242);
return G__172240__delegate(a,b,c,ds);
});
G__172240.cljs$core$IFn$_invoke$arity$variadic = G__172240__delegate;
return G__172240;
})()
;
G__172239 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__172239__1.call(this,a);
case 2:
return G__172239__2.call(this,a,b);
case 3:
return G__172239__3.call(this,a,b,c);
default:
var G__172243 = null;
if (arguments.length > 3) {
var G__172244__i = 0, G__172244__a = new Array(arguments.length -  3);
while (G__172244__i < G__172244__a.length) {G__172244__a[G__172244__i] = arguments[G__172244__i + 3]; ++G__172244__i;}
G__172243 = new cljs.core.IndexedSeq(G__172244__a,0);
}
return G__172239__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__172243);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172239.cljs$lang$maxFixedArity = 3;
G__172239.cljs$lang$applyTo = G__172239__4.cljs$lang$applyTo;
G__172239.cljs$core$IFn$_invoke$arity$1 = G__172239__1;
G__172239.cljs$core$IFn$_invoke$arity$2 = G__172239__2;
G__172239.cljs$core$IFn$_invoke$arity$3 = G__172239__3;
G__172239.cljs$core$IFn$_invoke$arity$variadic = G__172239__4.cljs$core$IFn$_invoke$arity$variadic;
return G__172239;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__172245 = null;
var G__172245__2 = (function (a,b){
var G__172229 = (((a == null))?x:a);
var G__172230 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172229,G__172230) : f.call(null,G__172229,G__172230));
});
var G__172245__3 = (function (a,b,c){
var G__172231 = (((a == null))?x:a);
var G__172232 = (((b == null))?y:b);
var G__172233 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__172231,G__172232,G__172233) : f.call(null,G__172231,G__172232,G__172233));
});
var G__172245__4 = (function() { 
var G__172246__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__172246 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__172247__i = 0, G__172247__a = new Array(arguments.length -  3);
while (G__172247__i < G__172247__a.length) {G__172247__a[G__172247__i] = arguments[G__172247__i + 3]; ++G__172247__i;}
  ds = new cljs.core.IndexedSeq(G__172247__a,0);
} 
return G__172246__delegate.call(this,a,b,c,ds);};
G__172246.cljs$lang$maxFixedArity = 3;
G__172246.cljs$lang$applyTo = (function (arglist__172248){
var a = cljs.core.first(arglist__172248);
arglist__172248 = cljs.core.next(arglist__172248);
var b = cljs.core.first(arglist__172248);
arglist__172248 = cljs.core.next(arglist__172248);
var c = cljs.core.first(arglist__172248);
var ds = cljs.core.rest(arglist__172248);
return G__172246__delegate(a,b,c,ds);
});
G__172246.cljs$core$IFn$_invoke$arity$variadic = G__172246__delegate;
return G__172246;
})()
;
G__172245 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__172245__2.call(this,a,b);
case 3:
return G__172245__3.call(this,a,b,c);
default:
var G__172249 = null;
if (arguments.length > 3) {
var G__172250__i = 0, G__172250__a = new Array(arguments.length -  3);
while (G__172250__i < G__172250__a.length) {G__172250__a[G__172250__i] = arguments[G__172250__i + 3]; ++G__172250__i;}
G__172249 = new cljs.core.IndexedSeq(G__172250__a,0);
}
return G__172245__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__172249);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172245.cljs$lang$maxFixedArity = 3;
G__172245.cljs$lang$applyTo = G__172245__4.cljs$lang$applyTo;
G__172245.cljs$core$IFn$_invoke$arity$2 = G__172245__2;
G__172245.cljs$core$IFn$_invoke$arity$3 = G__172245__3;
G__172245.cljs$core$IFn$_invoke$arity$variadic = G__172245__4.cljs$core$IFn$_invoke$arity$variadic;
return G__172245;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__172251 = null;
var G__172251__2 = (function (a,b){
var G__172234 = (((a == null))?x:a);
var G__172235 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172234,G__172235) : f.call(null,G__172234,G__172235));
});
var G__172251__3 = (function (a,b,c){
var G__172236 = (((a == null))?x:a);
var G__172237 = (((b == null))?y:b);
var G__172238 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__172236,G__172237,G__172238) : f.call(null,G__172236,G__172237,G__172238));
});
var G__172251__4 = (function() { 
var G__172252__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__172252 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__172253__i = 0, G__172253__a = new Array(arguments.length -  3);
while (G__172253__i < G__172253__a.length) {G__172253__a[G__172253__i] = arguments[G__172253__i + 3]; ++G__172253__i;}
  ds = new cljs.core.IndexedSeq(G__172253__a,0);
} 
return G__172252__delegate.call(this,a,b,c,ds);};
G__172252.cljs$lang$maxFixedArity = 3;
G__172252.cljs$lang$applyTo = (function (arglist__172254){
var a = cljs.core.first(arglist__172254);
arglist__172254 = cljs.core.next(arglist__172254);
var b = cljs.core.first(arglist__172254);
arglist__172254 = cljs.core.next(arglist__172254);
var c = cljs.core.first(arglist__172254);
var ds = cljs.core.rest(arglist__172254);
return G__172252__delegate(a,b,c,ds);
});
G__172252.cljs$core$IFn$_invoke$arity$variadic = G__172252__delegate;
return G__172252;
})()
;
G__172251 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__172251__2.call(this,a,b);
case 3:
return G__172251__3.call(this,a,b,c);
default:
var G__172255 = null;
if (arguments.length > 3) {
var G__172256__i = 0, G__172256__a = new Array(arguments.length -  3);
while (G__172256__i < G__172256__a.length) {G__172256__a[G__172256__i] = arguments[G__172256__i + 3]; ++G__172256__i;}
G__172255 = new cljs.core.IndexedSeq(G__172256__a,0);
}
return G__172251__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__172255);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172251.cljs$lang$maxFixedArity = 3;
G__172251.cljs$lang$applyTo = G__172251__4.cljs$lang$applyTo;
G__172251.cljs$core$IFn$_invoke$arity$2 = G__172251__2;
G__172251.cljs$core$IFn$_invoke$arity$3 = G__172251__3;
G__172251.cljs$core$IFn$_invoke$arity$variadic = G__172251__4.cljs$core$IFn$_invoke$arity$variadic;
return G__172251;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__172287 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__172287) : cljs.core.volatile_BANG_.call(null,G__172287));
})();
return ((function (i){
return (function() {
var G__172317 = null;
var G__172317__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__172317__1 = (function (result){
var G__172288 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__172288) : rf.call(null,G__172288));
});
var G__172317__2 = (function (result,input){
var G__172289 = result;
var G__172290 = (function (){var G__172291 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__172292 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172291,G__172292) : f.call(null,G__172291,G__172292));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__172289,G__172290) : rf.call(null,G__172289,G__172290));
});
G__172317 = function(result,input){
switch(arguments.length){
case 0:
return G__172317__0.call(this);
case 1:
return G__172317__1.call(this,result);
case 2:
return G__172317__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172317.cljs$core$IFn$_invoke$arity$0 = G__172317__0;
G__172317.cljs$core$IFn$_invoke$arity$1 = G__172317__1;
G__172317.cljs$core$IFn$_invoke$arity$2 = G__172317__2;
return G__172317;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18357__auto___172318 = size;
var i_172319 = (0);
while(true){
if((i_172319 < n__18357__auto___172318)){
cljs.core.chunk_append(b,(function (){var G__172313 = (idx + i_172319);
var G__172314 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_172319);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172313,G__172314) : f.call(null,G__172313,G__172314));
})());

var G__172320 = (i_172319 + (1));
i_172319 = G__172320;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__172315 = idx;
var G__172316 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172315,G__172316) : f.call(null,G__172315,G__172316));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__172339 = null;
var G__172339__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__172339__1 = (function (result){
var G__172333 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__172333) : rf.call(null,G__172333));
});
var G__172339__2 = (function (result,input){
var v = (function (){var G__172334 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172334) : f.call(null,G__172334));
})();
if((v == null)){
return result;
} else {
var G__172335 = result;
var G__172336 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__172335,G__172336) : rf.call(null,G__172335,G__172336));
}
});
G__172339 = function(result,input){
switch(arguments.length){
case 0:
return G__172339__0.call(this);
case 1:
return G__172339__1.call(this,result);
case 2:
return G__172339__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172339.cljs$core$IFn$_invoke$arity$0 = G__172339__0;
G__172339.cljs$core$IFn$_invoke$arity$1 = G__172339__1;
G__172339.cljs$core$IFn$_invoke$arity$2 = G__172339__2;
return G__172339;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18357__auto___172340 = size;
var i_172341 = (0);
while(true){
if((i_172341 < n__18357__auto___172340)){
var x_172342 = (function (){var G__172337 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_172341);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172337) : f.call(null,G__172337));
})();
if((x_172342 == null)){
} else {
cljs.core.chunk_append(b,x_172342);
}

var G__172343 = (i_172341 + (1));
i_172341 = G__172343;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__172338 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172338) : f.call(null,G__172338));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__172344 = this$__$1;
return goog.getUid(G__172344);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__172345 = cljs.core.seq(self__.watches);
var chunk__172346 = null;
var count__172347 = (0);
var i__172348 = (0);
while(true){
if((i__172348 < count__172347)){
var vec__172349 = chunk__172346.cljs$core$IIndexed$_nth$arity$2(null,i__172348);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__172349,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__172349,(1),null);
var G__172350_172359 = key;
var G__172351_172360 = this$__$1;
var G__172352_172361 = oldval;
var G__172353_172362 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__172350_172359,G__172351_172360,G__172352_172361,G__172353_172362) : f.call(null,G__172350_172359,G__172351_172360,G__172352_172361,G__172353_172362));

var G__172363 = seq__172345;
var G__172364 = chunk__172346;
var G__172365 = count__172347;
var G__172366 = (i__172348 + (1));
seq__172345 = G__172363;
chunk__172346 = G__172364;
count__172347 = G__172365;
i__172348 = G__172366;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__172345);
if(temp__4126__auto__){
var seq__172345__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__172345__$1)){
var c__18257__auto__ = cljs.core.chunk_first(seq__172345__$1);
var G__172367 = cljs.core.chunk_rest(seq__172345__$1);
var G__172368 = c__18257__auto__;
var G__172369 = cljs.core.count(c__18257__auto__);
var G__172370 = (0);
seq__172345 = G__172367;
chunk__172346 = G__172368;
count__172347 = G__172369;
i__172348 = G__172370;
continue;
} else {
var vec__172354 = cljs.core.first(seq__172345__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__172354,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__172354,(1),null);
var G__172355_172371 = key;
var G__172356_172372 = this$__$1;
var G__172357_172373 = oldval;
var G__172358_172374 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__172355_172371,G__172356_172372,G__172357_172373,G__172358_172374) : f.call(null,G__172355_172371,G__172356_172372,G__172357_172373,G__172358_172374));

var G__172375 = cljs.core.next(seq__172345__$1);
var G__172376 = null;
var G__172377 = (0);
var G__172378 = (0);
seq__172345 = G__172375;
chunk__172346 = G__172376;
count__172347 = G__172377;
i__172348 = G__172378;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__172382__delegate = function (x,p__172379){
var map__172381 = p__172379;
var map__172381__$1 = ((cljs.core.seq_QMARK_(map__172381))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__172381):map__172381);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__172381__$1,cljs.core.constant$keyword$240);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__172381__$1,cljs.core.constant$keyword$235);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__172382 = function (x,var_args){
var p__172379 = null;
if (arguments.length > 1) {
var G__172383__i = 0, G__172383__a = new Array(arguments.length -  1);
while (G__172383__i < G__172383__a.length) {G__172383__a[G__172383__i] = arguments[G__172383__i + 1]; ++G__172383__i;}
  p__172379 = new cljs.core.IndexedSeq(G__172383__a,0);
} 
return G__172382__delegate.call(this,x,p__172379);};
G__172382.cljs$lang$maxFixedArity = 1;
G__172382.cljs$lang$applyTo = (function (arglist__172384){
var x = cljs.core.first(arglist__172384);
var p__172379 = cljs.core.rest(arglist__172384);
return G__172382__delegate(x,p__172379);
});
G__172382.cljs$core$IFn$_invoke$arity$variadic = G__172382__delegate;
return G__172382;
})()
;
atom = function(x,var_args){
var p__172379 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__172385 = null;
if (arguments.length > 1) {
var G__172386__i = 0, G__172386__a = new Array(arguments.length -  1);
while (G__172386__i < G__172386__a.length) {G__172386__a[G__172386__i] = arguments[G__172386__i + 1]; ++G__172386__i;}
G__172385 = new cljs.core.IndexedSeq(G__172386__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__172385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__172389 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__172389) : validate.call(null,G__172389));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__172390 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__172390) : cljs.core.pr_str.call(null,G__172390));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__172397 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__172397) : f.call(null,G__172397));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__172398 = a.state;
var G__172399 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172398,G__172399) : f.call(null,G__172398,G__172399));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__172400 = a.state;
var G__172401 = x;
var G__172402 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__172400,G__172401,G__172402) : f.call(null,G__172400,G__172401,G__172402));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__172403__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__172403 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__172404__i = 0, G__172404__a = new Array(arguments.length -  4);
while (G__172404__i < G__172404__a.length) {G__172404__a[G__172404__i] = arguments[G__172404__i + 4]; ++G__172404__i;}
  more = new cljs.core.IndexedSeq(G__172404__a,0);
} 
return G__172403__delegate.call(this,a,f,x,y,more);};
G__172403.cljs$lang$maxFixedArity = 4;
G__172403.cljs$lang$applyTo = (function (arglist__172405){
var a = cljs.core.first(arglist__172405);
arglist__172405 = cljs.core.next(arglist__172405);
var f = cljs.core.first(arglist__172405);
arglist__172405 = cljs.core.next(arglist__172405);
var x = cljs.core.first(arglist__172405);
arglist__172405 = cljs.core.next(arglist__172405);
var y = cljs.core.first(arglist__172405);
var more = cljs.core.rest(arglist__172405);
return G__172403__delegate(a,f,x,y,more);
});
G__172403.cljs$core$IFn$_invoke$arity$variadic = G__172403__delegate;
return G__172403;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__172406 = null;
if (arguments.length > 4) {
var G__172407__i = 0, G__172407__a = new Array(arguments.length -  4);
while (G__172407__i < G__172407__a.length) {G__172407__a[G__172407__i] = arguments[G__172407__i + 4]; ++G__172407__i;}
G__172406 = new cljs.core.IndexedSeq(G__172407__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__172406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__172474 = null;
var G__172474__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__172474__1 = (function (result){
var G__172441 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__172441) : rf.call(null,G__172441));
});
var G__172474__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__172442 = i;
var G__172443 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172442,G__172443) : f.call(null,G__172442,G__172443));
})();
if((v == null)){
return result;
} else {
var G__172444 = result;
var G__172445 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__172444,G__172445) : rf.call(null,G__172444,G__172445));
}
});
G__172474 = function(result,input){
switch(arguments.length){
case 0:
return G__172474__0.call(this);
case 1:
return G__172474__1.call(this,result);
case 2:
return G__172474__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__172474.cljs$core$IFn$_invoke$arity$0 = G__172474__0;
G__172474.cljs$core$IFn$_invoke$arity$1 = G__172474__1;
G__172474.cljs$core$IFn$_invoke$arity$2 = G__172474__2;
return G__172474;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18357__auto___172475 = size;
var i_172476 = (0);
while(true){
if((i_172476 < n__18357__auto___172475)){
var x_172477 = (function (){var G__172470 = (idx + i_172476);
var G__172471 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_172476);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172470,G__172471) : f.call(null,G__172470,G__172471));
})();
if((x_172477 == null)){
} else {
cljs.core.chunk_append(b,x_172477);
}

var G__172478 = (i_172476 + (1));
i_172476 = G__172478;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__172472 = idx;
var G__172473 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__172472,G__172473) : f.call(null,G__172472,G__172473));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__172692 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__172692) : p.call(null,G__172692));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17458__auto__ = (function (){var G__172694 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__172694) : p.call(null,G__172694));
})();
if(cljs.core.truth_(and__17458__auto__)){
var G__172695 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__172695) : p.call(null,G__172695));
} else {
return and__17458__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17458__auto__ = (function (){var G__172697 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__172697) : p.call(null,G__172697));
})();
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__172699 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__172699) : p.call(null,G__172699));
})();
if(cljs.core.truth_(and__17458__auto____$1)){
var G__172700 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__172700) : p.call(null,G__172700));
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__172869__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__172869 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172870__i = 0, G__172870__a = new Array(arguments.length -  3);
while (G__172870__i < G__172870__a.length) {G__172870__a[G__172870__i] = arguments[G__172870__i + 3]; ++G__172870__i;}
  args = new cljs.core.IndexedSeq(G__172870__a,0);
} 
return G__172869__delegate.call(this,x,y,z,args);};
G__172869.cljs$lang$maxFixedArity = 3;
G__172869.cljs$lang$applyTo = (function (arglist__172871){
var x = cljs.core.first(arglist__172871);
arglist__172871 = cljs.core.next(arglist__172871);
var y = cljs.core.first(arglist__172871);
arglist__172871 = cljs.core.next(arglist__172871);
var z = cljs.core.first(arglist__172871);
var args = cljs.core.rest(arglist__172871);
return G__172869__delegate(x,y,z,args);
});
G__172869.cljs$core$IFn$_invoke$arity$variadic = G__172869__delegate;
return G__172869;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__172872 = null;
if (arguments.length > 3) {
var G__172873__i = 0, G__172873__a = new Array(arguments.length -  3);
while (G__172873__i < G__172873__a.length) {G__172873__a[G__172873__i] = arguments[G__172873__i + 3]; ++G__172873__i;}
G__172872 = new cljs.core.IndexedSeq(G__172873__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172872);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__17458__auto__ = (function (){var G__172732 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172732) : p1.call(null,G__172732));
})();
if(cljs.core.truth_(and__17458__auto__)){
var G__172733 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172733) : p2.call(null,G__172733));
} else {
return and__17458__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17458__auto__ = (function (){var G__172735 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172735) : p1.call(null,G__172735));
})();
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__172737 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172737) : p1.call(null,G__172737));
})();
if(cljs.core.truth_(and__17458__auto____$1)){
var and__17458__auto____$2 = (function (){var G__172739 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172739) : p2.call(null,G__172739));
})();
if(cljs.core.truth_(and__17458__auto____$2)){
var G__172740 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172740) : p2.call(null,G__172740));
} else {
return and__17458__auto____$2;
}
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17458__auto__ = (function (){var G__172742 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172742) : p1.call(null,G__172742));
})();
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__172744 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172744) : p1.call(null,G__172744));
})();
if(cljs.core.truth_(and__17458__auto____$1)){
var and__17458__auto____$2 = (function (){var G__172746 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172746) : p1.call(null,G__172746));
})();
if(cljs.core.truth_(and__17458__auto____$2)){
var and__17458__auto____$3 = (function (){var G__172748 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172748) : p2.call(null,G__172748));
})();
if(cljs.core.truth_(and__17458__auto____$3)){
var and__17458__auto____$4 = (function (){var G__172750 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172750) : p2.call(null,G__172750));
})();
if(cljs.core.truth_(and__17458__auto____$4)){
var G__172751 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172751) : p2.call(null,G__172751));
} else {
return and__17458__auto____$4;
}
} else {
return and__17458__auto____$3;
}
} else {
return and__17458__auto____$2;
}
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__172874__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__172479_SHARP_){
var and__17458__auto__ = (function (){var G__172756 = p1__172479_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172756) : p1.call(null,G__172756));
})();
if(cljs.core.truth_(and__17458__auto__)){
var G__172757 = p1__172479_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172757) : p2.call(null,G__172757));
} else {
return and__17458__auto__;
}
}),args)));
};
var G__172874 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172875__i = 0, G__172875__a = new Array(arguments.length -  3);
while (G__172875__i < G__172875__a.length) {G__172875__a[G__172875__i] = arguments[G__172875__i + 3]; ++G__172875__i;}
  args = new cljs.core.IndexedSeq(G__172875__a,0);
} 
return G__172874__delegate.call(this,x,y,z,args);};
G__172874.cljs$lang$maxFixedArity = 3;
G__172874.cljs$lang$applyTo = (function (arglist__172876){
var x = cljs.core.first(arglist__172876);
arglist__172876 = cljs.core.next(arglist__172876);
var y = cljs.core.first(arglist__172876);
arglist__172876 = cljs.core.next(arglist__172876);
var z = cljs.core.first(arglist__172876);
var args = cljs.core.rest(arglist__172876);
return G__172874__delegate(x,y,z,args);
});
G__172874.cljs$core$IFn$_invoke$arity$variadic = G__172874__delegate;
return G__172874;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__172877 = null;
if (arguments.length > 3) {
var G__172878__i = 0, G__172878__a = new Array(arguments.length -  3);
while (G__172878__i < G__172878__a.length) {G__172878__a[G__172878__i] = arguments[G__172878__i + 3]; ++G__172878__i;}
G__172877 = new cljs.core.IndexedSeq(G__172878__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__17458__auto__ = (function (){var G__172803 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172803) : p1.call(null,G__172803));
})();
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__172805 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172805) : p2.call(null,G__172805));
})();
if(cljs.core.truth_(and__17458__auto____$1)){
var G__172806 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__172806) : p3.call(null,G__172806));
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__17458__auto__ = (function (){var G__172808 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172808) : p1.call(null,G__172808));
})();
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__172810 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172810) : p2.call(null,G__172810));
})();
if(cljs.core.truth_(and__17458__auto____$1)){
var and__17458__auto____$2 = (function (){var G__172812 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__172812) : p3.call(null,G__172812));
})();
if(cljs.core.truth_(and__17458__auto____$2)){
var and__17458__auto____$3 = (function (){var G__172814 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172814) : p1.call(null,G__172814));
})();
if(cljs.core.truth_(and__17458__auto____$3)){
var and__17458__auto____$4 = (function (){var G__172816 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172816) : p2.call(null,G__172816));
})();
if(cljs.core.truth_(and__17458__auto____$4)){
var G__172817 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__172817) : p3.call(null,G__172817));
} else {
return and__17458__auto____$4;
}
} else {
return and__17458__auto____$3;
}
} else {
return and__17458__auto____$2;
}
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__17458__auto__ = (function (){var G__172819 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172819) : p1.call(null,G__172819));
})();
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__172821 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172821) : p2.call(null,G__172821));
})();
if(cljs.core.truth_(and__17458__auto____$1)){
var and__17458__auto____$2 = (function (){var G__172823 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__172823) : p3.call(null,G__172823));
})();
if(cljs.core.truth_(and__17458__auto____$2)){
var and__17458__auto____$3 = (function (){var G__172825 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172825) : p1.call(null,G__172825));
})();
if(cljs.core.truth_(and__17458__auto____$3)){
var and__17458__auto____$4 = (function (){var G__172827 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172827) : p2.call(null,G__172827));
})();
if(cljs.core.truth_(and__17458__auto____$4)){
var and__17458__auto____$5 = (function (){var G__172829 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__172829) : p3.call(null,G__172829));
})();
if(cljs.core.truth_(and__17458__auto____$5)){
var and__17458__auto____$6 = (function (){var G__172831 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172831) : p1.call(null,G__172831));
})();
if(cljs.core.truth_(and__17458__auto____$6)){
var and__17458__auto____$7 = (function (){var G__172833 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172833) : p2.call(null,G__172833));
})();
if(cljs.core.truth_(and__17458__auto____$7)){
var G__172834 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__172834) : p3.call(null,G__172834));
} else {
return and__17458__auto____$7;
}
} else {
return and__17458__auto____$6;
}
} else {
return and__17458__auto____$5;
}
} else {
return and__17458__auto____$4;
}
} else {
return and__17458__auto____$3;
}
} else {
return and__17458__auto____$2;
}
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__172879__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__172480_SHARP_){
var and__17458__auto__ = (function (){var G__172841 = p1__172480_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__172841) : p1.call(null,G__172841));
})();
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__172843 = p1__172480_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__172843) : p2.call(null,G__172843));
})();
if(cljs.core.truth_(and__17458__auto____$1)){
var G__172844 = p1__172480_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__172844) : p3.call(null,G__172844));
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
}),args)));
};
var G__172879 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172880__i = 0, G__172880__a = new Array(arguments.length -  3);
while (G__172880__i < G__172880__a.length) {G__172880__a[G__172880__i] = arguments[G__172880__i + 3]; ++G__172880__i;}
  args = new cljs.core.IndexedSeq(G__172880__a,0);
} 
return G__172879__delegate.call(this,x,y,z,args);};
G__172879.cljs$lang$maxFixedArity = 3;
G__172879.cljs$lang$applyTo = (function (arglist__172881){
var x = cljs.core.first(arglist__172881);
arglist__172881 = cljs.core.next(arglist__172881);
var y = cljs.core.first(arglist__172881);
arglist__172881 = cljs.core.next(arglist__172881);
var z = cljs.core.first(arglist__172881);
var args = cljs.core.rest(arglist__172881);
return G__172879__delegate(x,y,z,args);
});
G__172879.cljs$core$IFn$_invoke$arity$variadic = G__172879__delegate;
return G__172879;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__172882 = null;
if (arguments.length > 3) {
var G__172883__i = 0, G__172883__a = new Array(arguments.length -  3);
while (G__172883__i < G__172883__a.length) {G__172883__a[G__172883__i] = arguments[G__172883__i + 3]; ++G__172883__i;}
G__172882 = new cljs.core.IndexedSeq(G__172883__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172882);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__172884__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__172481_SHARP_){
var G__172860 = x;
return (p1__172481_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172481_SHARP_.cljs$core$IFn$_invoke$arity$1(G__172860) : p1__172481_SHARP_.call(null,G__172860));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__172482_SHARP_){
var and__17458__auto__ = (function (){var G__172862 = x;
return (p1__172482_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172482_SHARP_.cljs$core$IFn$_invoke$arity$1(G__172862) : p1__172482_SHARP_.call(null,G__172862));
})();
if(cljs.core.truth_(and__17458__auto__)){
var G__172863 = y;
return (p1__172482_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172482_SHARP_.cljs$core$IFn$_invoke$arity$1(G__172863) : p1__172482_SHARP_.call(null,G__172863));
} else {
return and__17458__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__172483_SHARP_){
var and__17458__auto__ = (function (){var G__172865 = x;
return (p1__172483_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172483_SHARP_.cljs$core$IFn$_invoke$arity$1(G__172865) : p1__172483_SHARP_.call(null,G__172865));
})();
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__172867 = y;
return (p1__172483_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172483_SHARP_.cljs$core$IFn$_invoke$arity$1(G__172867) : p1__172483_SHARP_.call(null,G__172867));
})();
if(cljs.core.truth_(and__17458__auto____$1)){
var G__172868 = z;
return (p1__172483_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172483_SHARP_.cljs$core$IFn$_invoke$arity$1(G__172868) : p1__172483_SHARP_.call(null,G__172868));
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__172885__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__172484_SHARP_){
return cljs.core.every_QMARK_(p1__172484_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__172885 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__172886__i = 0, G__172886__a = new Array(arguments.length -  3);
while (G__172886__i < G__172886__a.length) {G__172886__a[G__172886__i] = arguments[G__172886__i + 3]; ++G__172886__i;}
  args = new cljs.core.IndexedSeq(G__172886__a,0);
} 
return G__172885__delegate.call(this,x,y,z,args);};
G__172885.cljs$lang$maxFixedArity = 3;
G__172885.cljs$lang$applyTo = (function (arglist__172887){
var x = cljs.core.first(arglist__172887);
arglist__172887 = cljs.core.next(arglist__172887);
var y = cljs.core.first(arglist__172887);
arglist__172887 = cljs.core.next(arglist__172887);
var z = cljs.core.first(arglist__172887);
var args = cljs.core.rest(arglist__172887);
return G__172885__delegate(x,y,z,args);
});
G__172885.cljs$core$IFn$_invoke$arity$variadic = G__172885__delegate;
return G__172885;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__172888 = null;
if (arguments.length > 3) {
var G__172889__i = 0, G__172889__a = new Array(arguments.length -  3);
while (G__172889__i < G__172889__a.length) {G__172889__a[G__172889__i] = arguments[G__172889__i + 3]; ++G__172889__i;}
G__172888 = new cljs.core.IndexedSeq(G__172889__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__172888);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__172884 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__172890__i = 0, G__172890__a = new Array(arguments.length -  3);
while (G__172890__i < G__172890__a.length) {G__172890__a[G__172890__i] = arguments[G__172890__i + 3]; ++G__172890__i;}
  ps = new cljs.core.IndexedSeq(G__172890__a,0);
} 
return G__172884__delegate.call(this,p1,p2,p3,ps);};
G__172884.cljs$lang$maxFixedArity = 3;
G__172884.cljs$lang$applyTo = (function (arglist__172891){
var p1 = cljs.core.first(arglist__172891);
arglist__172891 = cljs.core.next(arglist__172891);
var p2 = cljs.core.first(arglist__172891);
arglist__172891 = cljs.core.next(arglist__172891);
var p3 = cljs.core.first(arglist__172891);
var ps = cljs.core.rest(arglist__172891);
return G__172884__delegate(p1,p2,p3,ps);
});
G__172884.cljs$core$IFn$_invoke$arity$variadic = G__172884__delegate;
return G__172884;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__172892 = null;
if (arguments.length > 3) {
var G__172893__i = 0, G__172893__a = new Array(arguments.length -  3);
while (G__172893__i < G__172893__a.length) {G__172893__a[G__172893__i] = arguments[G__172893__i + 3]; ++G__172893__i;}
G__172892 = new cljs.core.IndexedSeq(G__172893__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__172892);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__173099 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__173099) : p.call(null,G__173099));
});
var sp1__2 = (function (x,y){
var or__17470__auto__ = (function (){var G__173101 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__173101) : p.call(null,G__173101));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var G__173102 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__173102) : p.call(null,G__173102));
}
});
var sp1__3 = (function (x,y,z){
var or__17470__auto__ = (function (){var G__173104 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__173104) : p.call(null,G__173104));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (function (){var G__173106 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__173106) : p.call(null,G__173106));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var G__173107 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__173107) : p.call(null,G__173107));
}
}
});
var sp1__4 = (function() { 
var G__173268__delegate = function (x,y,z,args){
var or__17470__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__173268 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__173269__i = 0, G__173269__a = new Array(arguments.length -  3);
while (G__173269__i < G__173269__a.length) {G__173269__a[G__173269__i] = arguments[G__173269__i + 3]; ++G__173269__i;}
  args = new cljs.core.IndexedSeq(G__173269__a,0);
} 
return G__173268__delegate.call(this,x,y,z,args);};
G__173268.cljs$lang$maxFixedArity = 3;
G__173268.cljs$lang$applyTo = (function (arglist__173270){
var x = cljs.core.first(arglist__173270);
arglist__173270 = cljs.core.next(arglist__173270);
var y = cljs.core.first(arglist__173270);
arglist__173270 = cljs.core.next(arglist__173270);
var z = cljs.core.first(arglist__173270);
var args = cljs.core.rest(arglist__173270);
return G__173268__delegate(x,y,z,args);
});
G__173268.cljs$core$IFn$_invoke$arity$variadic = G__173268__delegate;
return G__173268;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__173271 = null;
if (arguments.length > 3) {
var G__173272__i = 0, G__173272__a = new Array(arguments.length -  3);
while (G__173272__i < G__173272__a.length) {G__173272__a[G__173272__i] = arguments[G__173272__i + 3]; ++G__173272__i;}
G__173271 = new cljs.core.IndexedSeq(G__173272__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__173271);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__17470__auto__ = (function (){var G__173139 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173139) : p1.call(null,G__173139));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var G__173140 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173140) : p2.call(null,G__173140));
}
});
var sp2__2 = (function (x,y){
var or__17470__auto__ = (function (){var G__173142 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173142) : p1.call(null,G__173142));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (function (){var G__173144 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173144) : p1.call(null,G__173144));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var or__17470__auto____$2 = (function (){var G__173146 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173146) : p2.call(null,G__173146));
})();
if(cljs.core.truth_(or__17470__auto____$2)){
return or__17470__auto____$2;
} else {
var G__173147 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173147) : p2.call(null,G__173147));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__17470__auto__ = (function (){var G__173149 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173149) : p1.call(null,G__173149));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (function (){var G__173151 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173151) : p1.call(null,G__173151));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var or__17470__auto____$2 = (function (){var G__173153 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173153) : p1.call(null,G__173153));
})();
if(cljs.core.truth_(or__17470__auto____$2)){
return or__17470__auto____$2;
} else {
var or__17470__auto____$3 = (function (){var G__173155 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173155) : p2.call(null,G__173155));
})();
if(cljs.core.truth_(or__17470__auto____$3)){
return or__17470__auto____$3;
} else {
var or__17470__auto____$4 = (function (){var G__173157 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173157) : p2.call(null,G__173157));
})();
if(cljs.core.truth_(or__17470__auto____$4)){
return or__17470__auto____$4;
} else {
var G__173158 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173158) : p2.call(null,G__173158));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__173273__delegate = function (x,y,z,args){
var or__17470__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return cljs.core.some(((function (or__17470__auto__){
return (function (p1__172894_SHARP_){
var or__17470__auto____$1 = (function (){var G__173160 = p1__172894_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173160) : p1.call(null,G__173160));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var G__173161 = p1__172894_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173161) : p2.call(null,G__173161));
}
});})(or__17470__auto__))
,args);
}
};
var G__173273 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__173274__i = 0, G__173274__a = new Array(arguments.length -  3);
while (G__173274__i < G__173274__a.length) {G__173274__a[G__173274__i] = arguments[G__173274__i + 3]; ++G__173274__i;}
  args = new cljs.core.IndexedSeq(G__173274__a,0);
} 
return G__173273__delegate.call(this,x,y,z,args);};
G__173273.cljs$lang$maxFixedArity = 3;
G__173273.cljs$lang$applyTo = (function (arglist__173275){
var x = cljs.core.first(arglist__173275);
arglist__173275 = cljs.core.next(arglist__173275);
var y = cljs.core.first(arglist__173275);
arglist__173275 = cljs.core.next(arglist__173275);
var z = cljs.core.first(arglist__173275);
var args = cljs.core.rest(arglist__173275);
return G__173273__delegate(x,y,z,args);
});
G__173273.cljs$core$IFn$_invoke$arity$variadic = G__173273__delegate;
return G__173273;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__173276 = null;
if (arguments.length > 3) {
var G__173277__i = 0, G__173277__a = new Array(arguments.length -  3);
while (G__173277__i < G__173277__a.length) {G__173277__a[G__173277__i] = arguments[G__173277__i + 3]; ++G__173277__i;}
G__173276 = new cljs.core.IndexedSeq(G__173277__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__173276);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__17470__auto__ = (function (){var G__173207 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173207) : p1.call(null,G__173207));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (function (){var G__173209 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173209) : p2.call(null,G__173209));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var G__173210 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__173210) : p3.call(null,G__173210));
}
}
});
var sp3__2 = (function (x,y){
var or__17470__auto__ = (function (){var G__173212 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173212) : p1.call(null,G__173212));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (function (){var G__173214 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173214) : p2.call(null,G__173214));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var or__17470__auto____$2 = (function (){var G__173216 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__173216) : p3.call(null,G__173216));
})();
if(cljs.core.truth_(or__17470__auto____$2)){
return or__17470__auto____$2;
} else {
var or__17470__auto____$3 = (function (){var G__173218 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173218) : p1.call(null,G__173218));
})();
if(cljs.core.truth_(or__17470__auto____$3)){
return or__17470__auto____$3;
} else {
var or__17470__auto____$4 = (function (){var G__173220 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173220) : p2.call(null,G__173220));
})();
if(cljs.core.truth_(or__17470__auto____$4)){
return or__17470__auto____$4;
} else {
var G__173221 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__173221) : p3.call(null,G__173221));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__17470__auto__ = (function (){var G__173223 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173223) : p1.call(null,G__173223));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (function (){var G__173225 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173225) : p2.call(null,G__173225));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var or__17470__auto____$2 = (function (){var G__173227 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__173227) : p3.call(null,G__173227));
})();
if(cljs.core.truth_(or__17470__auto____$2)){
return or__17470__auto____$2;
} else {
var or__17470__auto____$3 = (function (){var G__173229 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173229) : p1.call(null,G__173229));
})();
if(cljs.core.truth_(or__17470__auto____$3)){
return or__17470__auto____$3;
} else {
var or__17470__auto____$4 = (function (){var G__173231 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173231) : p2.call(null,G__173231));
})();
if(cljs.core.truth_(or__17470__auto____$4)){
return or__17470__auto____$4;
} else {
var or__17470__auto____$5 = (function (){var G__173233 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__173233) : p3.call(null,G__173233));
})();
if(cljs.core.truth_(or__17470__auto____$5)){
return or__17470__auto____$5;
} else {
var or__17470__auto____$6 = (function (){var G__173235 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173235) : p1.call(null,G__173235));
})();
if(cljs.core.truth_(or__17470__auto____$6)){
return or__17470__auto____$6;
} else {
var or__17470__auto____$7 = (function (){var G__173237 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173237) : p2.call(null,G__173237));
})();
if(cljs.core.truth_(or__17470__auto____$7)){
return or__17470__auto____$7;
} else {
var G__173238 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__173238) : p3.call(null,G__173238));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__173278__delegate = function (x,y,z,args){
var or__17470__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return cljs.core.some(((function (or__17470__auto__){
return (function (p1__172895_SHARP_){
var or__17470__auto____$1 = (function (){var G__173240 = p1__172895_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__173240) : p1.call(null,G__173240));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var or__17470__auto____$2 = (function (){var G__173242 = p1__172895_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__173242) : p2.call(null,G__173242));
})();
if(cljs.core.truth_(or__17470__auto____$2)){
return or__17470__auto____$2;
} else {
var G__173243 = p1__172895_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__173243) : p3.call(null,G__173243));
}
}
});})(or__17470__auto__))
,args);
}
};
var G__173278 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__173279__i = 0, G__173279__a = new Array(arguments.length -  3);
while (G__173279__i < G__173279__a.length) {G__173279__a[G__173279__i] = arguments[G__173279__i + 3]; ++G__173279__i;}
  args = new cljs.core.IndexedSeq(G__173279__a,0);
} 
return G__173278__delegate.call(this,x,y,z,args);};
G__173278.cljs$lang$maxFixedArity = 3;
G__173278.cljs$lang$applyTo = (function (arglist__173280){
var x = cljs.core.first(arglist__173280);
arglist__173280 = cljs.core.next(arglist__173280);
var y = cljs.core.first(arglist__173280);
arglist__173280 = cljs.core.next(arglist__173280);
var z = cljs.core.first(arglist__173280);
var args = cljs.core.rest(arglist__173280);
return G__173278__delegate(x,y,z,args);
});
G__173278.cljs$core$IFn$_invoke$arity$variadic = G__173278__delegate;
return G__173278;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__173281 = null;
if (arguments.length > 3) {
var G__173282__i = 0, G__173282__a = new Array(arguments.length -  3);
while (G__173282__i < G__173282__a.length) {G__173282__a[G__173282__i] = arguments[G__173282__i + 3]; ++G__173282__i;}
G__173281 = new cljs.core.IndexedSeq(G__173282__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__173281);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__173283__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__172896_SHARP_){
var G__173259 = x;
return (p1__172896_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172896_SHARP_.cljs$core$IFn$_invoke$arity$1(G__173259) : p1__172896_SHARP_.call(null,G__173259));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__172897_SHARP_){
var or__17470__auto__ = (function (){var G__173261 = x;
return (p1__172897_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172897_SHARP_.cljs$core$IFn$_invoke$arity$1(G__173261) : p1__172897_SHARP_.call(null,G__173261));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var G__173262 = y;
return (p1__172897_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172897_SHARP_.cljs$core$IFn$_invoke$arity$1(G__173262) : p1__172897_SHARP_.call(null,G__173262));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__172898_SHARP_){
var or__17470__auto__ = (function (){var G__173264 = x;
return (p1__172898_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172898_SHARP_.cljs$core$IFn$_invoke$arity$1(G__173264) : p1__172898_SHARP_.call(null,G__173264));
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (function (){var G__173266 = y;
return (p1__172898_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172898_SHARP_.cljs$core$IFn$_invoke$arity$1(G__173266) : p1__172898_SHARP_.call(null,G__173266));
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var G__173267 = z;
return (p1__172898_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__172898_SHARP_.cljs$core$IFn$_invoke$arity$1(G__173267) : p1__172898_SHARP_.call(null,G__173267));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__173284__delegate = function (x,y,z,args){
var or__17470__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return cljs.core.some(((function (or__17470__auto__,ps__$1){
return (function (p1__172899_SHARP_){
return cljs.core.some(p1__172899_SHARP_,args);
});})(or__17470__auto__,ps__$1))
,ps__$1);
}
};
var G__173284 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__173285__i = 0, G__173285__a = new Array(arguments.length -  3);
while (G__173285__i < G__173285__a.length) {G__173285__a[G__173285__i] = arguments[G__173285__i + 3]; ++G__173285__i;}
  args = new cljs.core.IndexedSeq(G__173285__a,0);
} 
return G__173284__delegate.call(this,x,y,z,args);};
G__173284.cljs$lang$maxFixedArity = 3;
G__173284.cljs$lang$applyTo = (function (arglist__173286){
var x = cljs.core.first(arglist__173286);
arglist__173286 = cljs.core.next(arglist__173286);
var y = cljs.core.first(arglist__173286);
arglist__173286 = cljs.core.next(arglist__173286);
var z = cljs.core.first(arglist__173286);
var args = cljs.core.rest(arglist__173286);
return G__173284__delegate(x,y,z,args);
});
G__173284.cljs$core$IFn$_invoke$arity$variadic = G__173284__delegate;
return G__173284;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__173287 = null;
if (arguments.length > 3) {
var G__173288__i = 0, G__173288__a = new Array(arguments.length -  3);
while (G__173288__i < G__173288__a.length) {G__173288__a[G__173288__i] = arguments[G__173288__i + 3]; ++G__173288__i;}
G__173287 = new cljs.core.IndexedSeq(G__173288__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__173287);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__173283 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__173289__i = 0, G__173289__a = new Array(arguments.length -  3);
while (G__173289__i < G__173289__a.length) {G__173289__a[G__173289__i] = arguments[G__173289__i + 3]; ++G__173289__i;}
  ps = new cljs.core.IndexedSeq(G__173289__a,0);
} 
return G__173283__delegate.call(this,p1,p2,p3,ps);};
G__173283.cljs$lang$maxFixedArity = 3;
G__173283.cljs$lang$applyTo = (function (arglist__173290){
var p1 = cljs.core.first(arglist__173290);
arglist__173290 = cljs.core.next(arglist__173290);
var p2 = cljs.core.first(arglist__173290);
arglist__173290 = cljs.core.next(arglist__173290);
var p3 = cljs.core.first(arglist__173290);
var ps = cljs.core.rest(arglist__173290);
return G__173283__delegate(p1,p2,p3,ps);
});
G__173283.cljs$core$IFn$_invoke$arity$variadic = G__173283__delegate;
return G__173283;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__173291 = null;
if (arguments.length > 3) {
var G__173292__i = 0, G__173292__a = new Array(arguments.length -  3);
while (G__173292__i < G__173292__a.length) {G__173292__a[G__173292__i] = arguments[G__173292__i + 3]; ++G__173292__i;}
G__173291 = new cljs.core.IndexedSeq(G__173292__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__173291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__173347 = null;
var G__173347__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__173347__1 = (function (result){
var G__173333 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__173333) : rf.call(null,G__173333));
});
var G__173347__2 = (function (result,input){
var G__173334 = result;
var G__173335 = (function (){var G__173336 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__173336) : f.call(null,G__173336));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173334,G__173335) : rf.call(null,G__173334,G__173335));
});
var G__173347__3 = (function() { 
var G__173348__delegate = function (result,input,inputs){
var G__173337 = result;
var G__173338 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173337,G__173338) : rf.call(null,G__173337,G__173338));
};
var G__173348 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__173349__i = 0, G__173349__a = new Array(arguments.length -  2);
while (G__173349__i < G__173349__a.length) {G__173349__a[G__173349__i] = arguments[G__173349__i + 2]; ++G__173349__i;}
  inputs = new cljs.core.IndexedSeq(G__173349__a,0);
} 
return G__173348__delegate.call(this,result,input,inputs);};
G__173348.cljs$lang$maxFixedArity = 2;
G__173348.cljs$lang$applyTo = (function (arglist__173350){
var result = cljs.core.first(arglist__173350);
arglist__173350 = cljs.core.next(arglist__173350);
var input = cljs.core.first(arglist__173350);
var inputs = cljs.core.rest(arglist__173350);
return G__173348__delegate(result,input,inputs);
});
G__173348.cljs$core$IFn$_invoke$arity$variadic = G__173348__delegate;
return G__173348;
})()
;
G__173347 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__173347__0.call(this);
case 1:
return G__173347__1.call(this,result);
case 2:
return G__173347__2.call(this,result,input);
default:
var G__173351 = null;
if (arguments.length > 2) {
var G__173352__i = 0, G__173352__a = new Array(arguments.length -  2);
while (G__173352__i < G__173352__a.length) {G__173352__a[G__173352__i] = arguments[G__173352__i + 2]; ++G__173352__i;}
G__173351 = new cljs.core.IndexedSeq(G__173352__a,0);
}
return G__173347__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__173351);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173347.cljs$lang$maxFixedArity = 2;
G__173347.cljs$lang$applyTo = G__173347__3.cljs$lang$applyTo;
G__173347.cljs$core$IFn$_invoke$arity$0 = G__173347__0;
G__173347.cljs$core$IFn$_invoke$arity$1 = G__173347__1;
G__173347.cljs$core$IFn$_invoke$arity$2 = G__173347__2;
G__173347.cljs$core$IFn$_invoke$arity$variadic = G__173347__3.cljs$core$IFn$_invoke$arity$variadic;
return G__173347;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18357__auto___173353 = size;
var i_173354 = (0);
while(true){
if((i_173354 < n__18357__auto___173353)){
cljs.core.chunk_append(b,(function (){var G__173339 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_173354);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__173339) : f.call(null,G__173339));
})());

var G__173355 = (i_173354 + (1));
i_173354 = G__173355;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__173340 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__173340) : f.call(null,G__173340));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__173341 = cljs.core.first(s1);
var G__173342 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__173341,G__173342) : f.call(null,G__173341,G__173342));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__173343 = cljs.core.first(s1);
var G__173344 = cljs.core.first(s2);
var G__173345 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173343,G__173344,G__173345) : f.call(null,G__173343,G__173344,G__173345));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__173356__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__173293_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__173293_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__173356 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__173357__i = 0, G__173357__a = new Array(arguments.length -  4);
while (G__173357__i < G__173357__a.length) {G__173357__a[G__173357__i] = arguments[G__173357__i + 4]; ++G__173357__i;}
  colls = new cljs.core.IndexedSeq(G__173357__a,0);
} 
return G__173356__delegate.call(this,f,c1,c2,c3,colls);};
G__173356.cljs$lang$maxFixedArity = 4;
G__173356.cljs$lang$applyTo = (function (arglist__173358){
var f = cljs.core.first(arglist__173358);
arglist__173358 = cljs.core.next(arglist__173358);
var c1 = cljs.core.first(arglist__173358);
arglist__173358 = cljs.core.next(arglist__173358);
var c2 = cljs.core.first(arglist__173358);
arglist__173358 = cljs.core.next(arglist__173358);
var c3 = cljs.core.first(arglist__173358);
var colls = cljs.core.rest(arglist__173358);
return G__173356__delegate(f,c1,c2,c3,colls);
});
G__173356.cljs$core$IFn$_invoke$arity$variadic = G__173356__delegate;
return G__173356;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__173359 = null;
if (arguments.length > 4) {
var G__173360__i = 0, G__173360__a = new Array(arguments.length -  4);
while (G__173360__i < G__173360__a.length) {G__173360__a[G__173360__i] = arguments[G__173360__i + 4]; ++G__173360__i;}
G__173359 = new cljs.core.IndexedSeq(G__173360__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__173359);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__173369 = null;
var G__173369__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__173369__1 = (function (result){
var G__173366 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__173366) : rf.call(null,G__173366));
});
var G__173369__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__173367 = result;
var G__173368 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173367,G__173368) : rf.call(null,G__173367,G__173368));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__173369 = function(result,input){
switch(arguments.length){
case 0:
return G__173369__0.call(this);
case 1:
return G__173369__1.call(this,result);
case 2:
return G__173369__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173369.cljs$core$IFn$_invoke$arity$0 = G__173369__0;
G__173369.cljs$core$IFn$_invoke$arity$1 = G__173369__1;
G__173369.cljs$core$IFn$_invoke$arity$2 = G__173369__2;
return G__173369;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__173376 = null;
var G__173376__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__173376__1 = (function (result){
var G__173373 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__173373) : rf.call(null,G__173373));
});
var G__173376__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__173374 = result;
var G__173375 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173374,G__173375) : rf.call(null,G__173374,G__173375));
}
});
G__173376 = function(result,input){
switch(arguments.length){
case 0:
return G__173376__0.call(this);
case 1:
return G__173376__1.call(this,result);
case 2:
return G__173376__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173376.cljs$core$IFn$_invoke$arity$0 = G__173376__0;
G__173376.cljs$core$IFn$_invoke$arity$1 = G__173376__1;
G__173376.cljs$core$IFn$_invoke$arity$2 = G__173376__2;
return G__173376;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__173377 = (n__$1 - (1));
var G__173378 = cljs.core.rest(s);
n__$1 = G__173377;
coll__$1 = G__173378;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__173381 = cljs.core.next(s);
var G__173382 = cljs.core.next(lead);
s = G__173381;
lead = G__173382;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__173395 = null;
var G__173395__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__173395__1 = (function (result){
var G__173389 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__173389) : rf.call(null,G__173389));
});
var G__173395__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__17458__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__17458__auto__)){
var G__173390 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__173390) : pred.call(null,G__173390));
} else {
return and__17458__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__173391 = result;
var G__173392 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173391,G__173392) : rf.call(null,G__173391,G__173392));
}
});
G__173395 = function(result,input){
switch(arguments.length){
case 0:
return G__173395__0.call(this);
case 1:
return G__173395__1.call(this,result);
case 2:
return G__173395__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173395.cljs$core$IFn$_invoke$arity$0 = G__173395__0;
G__173395.cljs$core$IFn$_invoke$arity$1 = G__173395__1;
G__173395.cljs$core$IFn$_invoke$arity$2 = G__173395__2;
return G__173395;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__17458__auto__ = s;
if(and__17458__auto__){
var G__173394 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__173394) : pred__$1.call(null,G__173394));
} else {
return and__17458__auto__;
}
})())){
var G__173396 = pred__$1;
var G__173397 = cljs.core.rest(s);
pred__$1 = G__173396;
coll__$1 = G__173397;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__173406 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__173406) : f.call(null,G__173406));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__173409__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__173409 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__173410__i = 0, G__173410__a = new Array(arguments.length -  2);
while (G__173410__i < G__173410__a.length) {G__173410__a[G__173410__i] = arguments[G__173410__i + 2]; ++G__173410__i;}
  colls = new cljs.core.IndexedSeq(G__173410__a,0);
} 
return G__173409__delegate.call(this,c1,c2,colls);};
G__173409.cljs$lang$maxFixedArity = 2;
G__173409.cljs$lang$applyTo = (function (arglist__173411){
var c1 = cljs.core.first(arglist__173411);
arglist__173411 = cljs.core.next(arglist__173411);
var c2 = cljs.core.first(arglist__173411);
var colls = cljs.core.rest(arglist__173411);
return G__173409__delegate(c1,c2,colls);
});
G__173409.cljs$core$IFn$_invoke$arity$variadic = G__173409__delegate;
return G__173409;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__173412 = null;
if (arguments.length > 2) {
var G__173413__i = 0, G__173413__a = new Array(arguments.length -  2);
while (G__173413__i < G__173413__a.length) {G__173413__a[G__173413__i] = arguments[G__173413__i + 2]; ++G__173413__i;}
G__173412 = new cljs.core.IndexedSeq(G__173413__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__173412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__173428 = null;
var G__173428__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__173428__1 = (function (result){
var G__173421 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__173421) : rf.call(null,G__173421));
});
var G__173428__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__173422 = result;
var G__173423 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173422,G__173423) : rf.call(null,G__173422,G__173423));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__173424 = sepr;
var G__173425 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173424,G__173425) : rf.call(null,G__173424,G__173425));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__173426 = result;
var G__173427 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173426,G__173427) : rf.call(null,G__173426,G__173427));
}
});
G__173428 = function(result,input){
switch(arguments.length){
case 0:
return G__173428__0.call(this);
case 1:
return G__173428__1.call(this,result);
case 2:
return G__173428__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173428.cljs$core$IFn$_invoke$arity$0 = G__173428__0;
G__173428.cljs$core$IFn$_invoke$arity$1 = G__173428__1;
G__173428.cljs$core$IFn$_invoke$arity$2 = G__173428__2;
return G__173428;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__173437__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__173437 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__173438__i = 0, G__173438__a = new Array(arguments.length -  1);
while (G__173438__i < G__173438__a.length) {G__173438__a[G__173438__i] = arguments[G__173438__i + 1]; ++G__173438__i;}
  colls = new cljs.core.IndexedSeq(G__173438__a,0);
} 
return G__173437__delegate.call(this,f,colls);};
G__173437.cljs$lang$maxFixedArity = 1;
G__173437.cljs$lang$applyTo = (function (arglist__173439){
var f = cljs.core.first(arglist__173439);
var colls = cljs.core.rest(arglist__173439);
return G__173437__delegate(f,colls);
});
G__173437.cljs$core$IFn$_invoke$arity$variadic = G__173437__delegate;
return G__173437;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__173440 = null;
if (arguments.length > 1) {
var G__173441__i = 0, G__173441__a = new Array(arguments.length -  1);
while (G__173441__i < G__173441__a.length) {G__173441__a[G__173441__i] = arguments[G__173441__i + 1]; ++G__173441__i;}
G__173440 = new cljs.core.IndexedSeq(G__173441__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__173440);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__173460 = null;
var G__173460__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__173460__1 = (function (result){
var G__173454 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__173454) : rf.call(null,G__173454));
});
var G__173460__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__173455 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__173455) : pred.call(null,G__173455));
})())){
var G__173456 = result;
var G__173457 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__173456,G__173457) : rf.call(null,G__173456,G__173457));
} else {
return result;
}
});
G__173460 = function(result,input){
switch(arguments.length){
case 0:
return G__173460__0.call(this);
case 1:
return G__173460__1.call(this,result);
case 2:
return G__173460__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173460.cljs$core$IFn$_invoke$arity$0 = G__173460__0;
G__173460.cljs$core$IFn$_invoke$arity$1 = G__173460__1;
G__173460.cljs$core$IFn$_invoke$arity$2 = G__173460__2;
return G__173460;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__18357__auto___173461 = size;
var i_173462 = (0);
while(true){
if((i_173462 < n__18357__auto___173461)){
if(cljs.core.truth_((function (){var G__173458 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_173462);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__173458) : pred.call(null,G__173458));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_173462));
} else {
}

var G__173463 = (i_173462 + (1));
i_173462 = G__173463;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__173459 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__173459) : pred.call(null,G__173459));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__173470 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__173470) : branch_QMARK_.call(null,G__173470));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__173471 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__173471) : children.call(null,G__173471));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__173472_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__173472_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__173475 = to;
if(G__173475){
var bit__18144__auto__ = (G__173475.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18144__auto__) || (G__173475.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__173476 = to;
if(G__173476){
var bit__18144__auto__ = (G__173476.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__18144__auto__) || (G__173476.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__173478 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__173478) : f.call(null,G__173478));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__173479__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__173479 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__173480__i = 0, G__173480__a = new Array(arguments.length -  4);
while (G__173480__i < G__173480__a.length) {G__173480__a[G__173480__i] = arguments[G__173480__i + 4]; ++G__173480__i;}
  colls = new cljs.core.IndexedSeq(G__173480__a,0);
} 
return G__173479__delegate.call(this,f,c1,c2,c3,colls);};
G__173479.cljs$lang$maxFixedArity = 4;
G__173479.cljs$lang$applyTo = (function (arglist__173481){
var f = cljs.core.first(arglist__173481);
arglist__173481 = cljs.core.next(arglist__173481);
var c1 = cljs.core.first(arglist__173481);
arglist__173481 = cljs.core.next(arglist__173481);
var c2 = cljs.core.first(arglist__173481);
arglist__173481 = cljs.core.next(arglist__173481);
var c3 = cljs.core.first(arglist__173481);
var colls = cljs.core.rest(arglist__173481);
return G__173479__delegate(f,c1,c2,c3,colls);
});
G__173479.cljs$core$IFn$_invoke$arity$variadic = G__173479__delegate;
return G__173479;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__173482 = null;
if (arguments.length > 4) {
var G__173483__i = 0, G__173483__a = new Array(arguments.length -  4);
while (G__173483__i < G__173483__a.length) {G__173483__a[G__173483__i] = arguments[G__173483__i + 4]; ++G__173483__i;}
G__173482 = new cljs.core.IndexedSeq(G__173483__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__173482);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__173485 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__173485) : pred.call(null,G__173485));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__173500 = m__$1;
if(G__173500){
var bit__18151__auto__ = (G__173500.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__18151__auto__) || (G__173500.cljs$core$ILookup$)){
return true;
} else {
if((!G__173500.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__173500);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__173500);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__173501 = sentinel;
var G__173502 = m__$2;
var G__173503 = cljs.core.next(ks__$1);
sentinel = G__173501;
m__$1 = G__173502;
ks__$1 = G__173503;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__173504,v){
var vec__173509 = p__173504;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173509,(0),null);
var ks = cljs.core.nthnext(vec__173509,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__173510,f){
var vec__173548 = p__173510;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173548,(0),null);
var ks = cljs.core.nthnext(vec__173548,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__173549 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__173549) : f.call(null,G__173549));
})());
}
});
var update_in__4 = (function (m,p__173511,f,a){
var vec__173550 = p__173511;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173550,(0),null);
var ks = cljs.core.nthnext(vec__173550,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__173551 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__173552 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__173551,G__173552) : f.call(null,G__173551,G__173552));
})());
}
});
var update_in__5 = (function (m,p__173512,f,a,b){
var vec__173553 = p__173512;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173553,(0),null);
var ks = cljs.core.nthnext(vec__173553,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__173554 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__173555 = a;
var G__173556 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173554,G__173555,G__173556) : f.call(null,G__173554,G__173555,G__173556));
})());
}
});
var update_in__6 = (function (m,p__173513,f,a,b,c){
var vec__173557 = p__173513;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173557,(0),null);
var ks = cljs.core.nthnext(vec__173557,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__173558 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__173559 = a;
var G__173560 = b;
var G__173561 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__173558,G__173559,G__173560,G__173561) : f.call(null,G__173558,G__173559,G__173560,G__173561));
})());
}
});
var update_in__7 = (function() { 
var G__173563__delegate = function (m,p__173514,f,a,b,c,args){
var vec__173562 = p__173514;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173562,(0),null);
var ks = cljs.core.nthnext(vec__173562,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__173563 = function (m,p__173514,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__173564__i = 0, G__173564__a = new Array(arguments.length -  6);
while (G__173564__i < G__173564__a.length) {G__173564__a[G__173564__i] = arguments[G__173564__i + 6]; ++G__173564__i;}
  args = new cljs.core.IndexedSeq(G__173564__a,0);
} 
return G__173563__delegate.call(this,m,p__173514,f,a,b,c,args);};
G__173563.cljs$lang$maxFixedArity = 6;
G__173563.cljs$lang$applyTo = (function (arglist__173565){
var m = cljs.core.first(arglist__173565);
arglist__173565 = cljs.core.next(arglist__173565);
var p__173514 = cljs.core.first(arglist__173565);
arglist__173565 = cljs.core.next(arglist__173565);
var f = cljs.core.first(arglist__173565);
arglist__173565 = cljs.core.next(arglist__173565);
var a = cljs.core.first(arglist__173565);
arglist__173565 = cljs.core.next(arglist__173565);
var b = cljs.core.first(arglist__173565);
arglist__173565 = cljs.core.next(arglist__173565);
var c = cljs.core.first(arglist__173565);
var args = cljs.core.rest(arglist__173565);
return G__173563__delegate(m,p__173514,f,a,b,c,args);
});
G__173563.cljs$core$IFn$_invoke$arity$variadic = G__173563__delegate;
return G__173563;
})()
;
update_in = function(m,p__173514,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__173514,f);
case 4:
return update_in__4.call(this,m,p__173514,f,a);
case 5:
return update_in__5.call(this,m,p__173514,f,a,b);
case 6:
return update_in__6.call(this,m,p__173514,f,a,b,c);
default:
var G__173566 = null;
if (arguments.length > 6) {
var G__173567__i = 0, G__173567__a = new Array(arguments.length -  6);
while (G__173567__i < G__173567__a.length) {G__173567__a[G__173567__i] = arguments[G__173567__i + 6]; ++G__173567__i;}
G__173566 = new cljs.core.IndexedSeq(G__173567__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__173514,f,a,b,c, G__173566);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__173578 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__173578) : f.call(null,G__173578));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__173579 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__173580 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__173579,G__173580) : f.call(null,G__173579,G__173580));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__173581 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__173582 = x;
var G__173583 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173581,G__173582,G__173583) : f.call(null,G__173581,G__173582,G__173583));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__173584 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__173585 = x;
var G__173586 = y;
var G__173587 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__173584,G__173585,G__173586,G__173587) : f.call(null,G__173584,G__173585,G__173586,G__173587));
})());
});
var update__7 = (function() { 
var G__173588__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__173588 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__173589__i = 0, G__173589__a = new Array(arguments.length -  6);
while (G__173589__i < G__173589__a.length) {G__173589__a[G__173589__i] = arguments[G__173589__i + 6]; ++G__173589__i;}
  more = new cljs.core.IndexedSeq(G__173589__a,0);
} 
return G__173588__delegate.call(this,m,k,f,x,y,z,more);};
G__173588.cljs$lang$maxFixedArity = 6;
G__173588.cljs$lang$applyTo = (function (arglist__173590){
var m = cljs.core.first(arglist__173590);
arglist__173590 = cljs.core.next(arglist__173590);
var k = cljs.core.first(arglist__173590);
arglist__173590 = cljs.core.next(arglist__173590);
var f = cljs.core.first(arglist__173590);
arglist__173590 = cljs.core.next(arglist__173590);
var x = cljs.core.first(arglist__173590);
arglist__173590 = cljs.core.next(arglist__173590);
var y = cljs.core.first(arglist__173590);
arglist__173590 = cljs.core.next(arglist__173590);
var z = cljs.core.first(arglist__173590);
var more = cljs.core.rest(arglist__173590);
return G__173588__delegate(m,k,f,x,y,z,more);
});
G__173588.cljs$core$IFn$_invoke$arity$variadic = G__173588__delegate;
return G__173588;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__173591 = null;
if (arguments.length > 6) {
var G__173592__i = 0, G__173592__a = new Array(arguments.length -  6);
while (G__173592__i < G__173592__a.length) {G__173592__a[G__173592__i] = arguments[G__173592__i + 6]; ++G__173592__i;}
G__173591 = new cljs.core.IndexedSeq(G__173592__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__173591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__173593 = (ll - (5));
var G__173594 = r;
ll = G__173593;
ret = G__173594;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__173599 = cljs.core.pv_aget(node,(0));
var G__173600 = (level - (5));
node = G__173599;
level = G__173600;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__173601 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__173602 = (level - (5));
node = G__173601;
level = G__173602;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__173612 = init__$2;
var G__173613 = (j + i);
var G__173614 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173612,G__173613,G__173614) : f.call(null,G__173612,G__173613,G__173614));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__173625 = (j + (1));
var G__173626 = init__$3;
j = G__173625;
init__$2 = G__173626;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__173615 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173615) : cljs.core.deref.call(null,G__173615));
} else {
var G__173627 = (i + len);
var G__173628 = init__$2;
i = G__173627;
init__$1 = G__173628;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__173616 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__173616) : cljs.core.tv_editable_root.call(null,G__173616));
})(),(function (){var G__173617 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__173617) : cljs.core.tv_editable_tail.call(null,G__173617));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__173618 = init__$2;
var G__173619 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__173618,G__173619) : f.call(null,G__173618,G__173619));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__173629 = (j + (1));
var G__173630 = init__$3;
j = G__173629;
init__$2 = G__173630;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__173620 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173620) : cljs.core.deref.call(null,G__173620));
} else {
var G__173631 = (i + len);
var G__173632 = init__$2;
i = G__173631;
init__$1 = G__173632;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__173621 = coll__$1;
var G__173622 = cljs.core.first_array_for_longvec(coll__$1);
var G__173623 = (0);
var G__173624 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__173621,G__173622,G__173623,G__173624) : cljs.core.chunked_seq.call(null,G__173621,G__173622,G__173623,G__173624));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__18357__auto___173633 = len;
var i_173634 = (0);
while(true){
if((i_173634 < n__18357__auto___173633)){
(new_tail[i_173634] = (self__.tail[i_173634]));

var G__173635 = (i_173634 + (1));
i_173634 = G__173635;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__173636 = null;
var G__173636__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__173636__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__173636 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__173636__2.call(this,self__,k);
case 3:
return G__173636__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173636.cljs$core$IFn$_invoke$arity$2 = G__173636__2;
G__173636.cljs$core$IFn$_invoke$arity$3 = G__173636__3;
return G__173636;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args173611){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args173611)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__173637 = (i + (1));
var G__173638 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__173637;
out = G__173638;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__173639__i = 0, G__173639__a = new Array(arguments.length -  0);
while (G__173639__i < G__173639__a.length) {G__173639__a[G__173639__i] = arguments[G__173639__i + 0]; ++G__173639__i;}
  args = new cljs.core.IndexedSeq(G__173639__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__173640){
var args = cljs.core.seq(arglist__173640);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__173641 = self__.vec;
var G__173642 = self__.node;
var G__173643 = self__.i;
var G__173644 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__173641,G__173642,G__173643,G__173644) : cljs.core.chunked_seq.call(null,G__173641,G__173642,G__173643,G__173644));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__173645 = self__.vec;
var G__173646 = (self__.i + self__.off);
var G__173647 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__173645,G__173646,G__173647) : cljs.core.subvec.call(null,G__173645,G__173646,G__173647));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__173648 = self__.vec;
var G__173649 = (self__.i + self__.off);
var G__173650 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__173648,G__173649,G__173650) : cljs.core.subvec.call(null,G__173648,G__173649,G__173650));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__173651 = self__.vec;
var G__173652 = self__.node;
var G__173653 = self__.i;
var G__173654 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__173651,G__173652,G__173653,G__173654) : cljs.core.chunked_seq.call(null,G__173651,G__173652,G__173653,G__173654));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__173655 = self__.vec;
var G__173656 = cljs.core.unchecked_array_for(self__.vec,end);
var G__173657 = end;
var G__173658 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__173655,G__173656,G__173657,G__173658) : cljs.core.chunked_seq.call(null,G__173655,G__173656,G__173657,G__173658));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__173659 = self__.vec;
var G__173660 = self__.node;
var G__173661 = self__.i;
var G__173662 = self__.off;
var G__173663 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__173659,G__173660,G__173661,G__173662,G__173663) : cljs.core.chunked_seq.call(null,G__173659,G__173660,G__173661,G__173662,G__173663));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__173664 = self__.vec;
var G__173665 = cljs.core.unchecked_array_for(self__.vec,end);
var G__173666 = end;
var G__173667 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__173664,G__173665,G__173666,G__173667) : cljs.core.chunked_seq.call(null,G__173664,G__173665,G__173666,G__173667));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__173669 = self__.meta;
var G__173670 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__173671 = self__.start;
var G__173672 = (function (){var x__17787__auto__ = self__.end;
var y__17788__auto__ = (v_pos + (1));
return ((x__17787__auto__ > y__17788__auto__) ? x__17787__auto__ : y__17788__auto__);
})();
var G__173673 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__173669,G__173670,G__173671,G__173672,G__173673) : cljs.core.build_subvec.call(null,G__173669,G__173670,G__173671,G__173672,G__173673));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__173674 = self__.meta;
var G__173675 = self__.v;
var G__173676 = self__.start;
var G__173677 = (self__.end - (1));
var G__173678 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__173674,G__173675,G__173676,G__173677,G__173678) : cljs.core.build_subvec.call(null,G__173674,G__173675,G__173676,G__173677,G__173678));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__173680 = meta__$1;
var G__173681 = self__.v;
var G__173682 = self__.start;
var G__173683 = self__.end;
var G__173684 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__173680,G__173681,G__173682,G__173683,G__173684) : cljs.core.build_subvec.call(null,G__173680,G__173681,G__173682,G__173683,G__173684));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__173685 = self__.meta;
var G__173686 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__173687 = self__.start;
var G__173688 = (self__.end + (1));
var G__173689 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__173685,G__173686,G__173687,G__173688,G__173689) : cljs.core.build_subvec.call(null,G__173685,G__173686,G__173687,G__173688,G__173689));
});

cljs.core.Subvec.prototype.call = (function() {
var G__173690 = null;
var G__173690__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__173690__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__173690 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__173690__2.call(this,self__,k);
case 3:
return G__173690__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173690.cljs$core$IFn$_invoke$arity$2 = G__173690__2;
G__173690.cljs$core$IFn$_invoke$arity$3 = G__173690__3;
return G__173690;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args173668){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args173668)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__173691 = meta;
var G__173692 = v.v;
var G__173693 = (v.start + start);
var G__173694 = (v.start + end);
var G__173695 = __hash;
meta = G__173691;
v = G__173692;
start = G__173693;
end = G__173694;
__hash = G__173695;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj173702 = {};
return obj173702;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__173710 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__173711 = (level - (5));
node = G__173710;
level = G__173711;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__173715 = null;
var G__173715__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__173715__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__173715 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__173715__2.call(this,self__,k);
case 3:
return G__173715__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173715.cljs$core$IFn$_invoke$arity$2 = G__173715__2;
G__173715.cljs$core$IFn$_invoke$arity$3 = G__173715__3;
return G__173715;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args173712){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args173712)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__17470__auto__ = self__.front;
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17470__auto__ = self__.rear;
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__173716 = (i + incr);
i = G__173716;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__173717 = (i + (1));
var G__173718 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__173717;
out = G__173718;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj173722 = {};
return obj173722;
})();
var l = ks.length;
var i_173723 = (0);
while(true){
if((i_173723 < l)){
var k_173724 = (ks[i_173723]);
(new_obj[k_173724] = (obj[k_173724]));

var G__173725 = (i_173723 + (1));
i_173723 = G__173725;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17458__auto__ = (function (){var G__173729 = k;
return goog.isString(G__173729);
})();
if(cljs.core.truth_(and__17458__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17458__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__173730 = init__$1;
var G__173731 = k;
var G__173732 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173730,G__173731,G__173732) : f.call(null,G__173730,G__173731,G__173732));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__173733 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173733) : cljs.core.deref.call(null,G__173733));
} else {
var G__173739 = cljs.core.rest(keys__$1);
var G__173740 = init__$2;
keys__$1 = G__173739;
init__$1 = G__173740;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17458__auto__ = (function (){var G__173735 = k;
return goog.isString(G__173735);
})();
if(cljs.core.truth_(and__17458__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17458__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__173736 = k;
return goog.isString(G__173736);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__17458__auto__ = (function (){var G__173738 = k;
return goog.isString(G__173738);
})();
if(cljs.core.truth_(and__17458__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__17458__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__173726_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__173726_SHARP_,(self__.strobj[p1__173726_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__173741 = null;
var G__173741__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__173741__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__173741 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__173741__2.call(this,self__,k);
case 3:
return G__173741__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173741.cljs$core$IFn$_invoke$arity$2 = G__173741__2;
G__173741.cljs$core$IFn$_invoke$arity$3 = G__173741__3;
return G__173741;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args173727){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args173727)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj173743 = {};
return obj173743;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__173744 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173744,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173744,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__173745 = (i + (2));
i = G__173745;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__173746 = (i + (2));
i = G__173746;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__173747 = (i + (2));
i = G__173747;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__173748 = (i + (2));
i = G__173748;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__173749 = (i + (2));
i = G__173749;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__17470__auto__ = (function (){var G__173753 = k;
return goog.isString(G__173753);
})();
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_173754 = (0);
while(true){
if((i_173754 < l)){
(narr[i_173754] = (arr[i_173754]));

var G__173755 = (i_173754 + (1));
i_173754 = G__173755;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__173757 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__173757) : cljs.core.keys.call(null,G__173757));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__173758 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__173758) : cljs.core.vals.call(null,G__173758));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__173759 = cljs.core.seq(coll);
var chunk__173760 = null;
var count__173761 = (0);
var i__173762 = (0);
while(true){
if((i__173762 < count__173761)){
var vec__173763 = chunk__173760.cljs$core$IIndexed$_nth$arity$2(null,i__173762);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173763,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173763,(1),null);
var G__173764_173777 = v;
var G__173765_173778 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__173764_173777,G__173765_173778) : f.call(null,G__173764_173777,G__173765_173778));

var G__173779 = seq__173759;
var G__173780 = chunk__173760;
var G__173781 = count__173761;
var G__173782 = (i__173762 + (1));
seq__173759 = G__173779;
chunk__173760 = G__173780;
count__173761 = G__173781;
i__173762 = G__173782;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__173759);
if(temp__4126__auto__){
var seq__173759__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__173759__$1)){
var c__18257__auto__ = cljs.core.chunk_first(seq__173759__$1);
var G__173783 = cljs.core.chunk_rest(seq__173759__$1);
var G__173784 = c__18257__auto__;
var G__173785 = cljs.core.count(c__18257__auto__);
var G__173786 = (0);
seq__173759 = G__173783;
chunk__173760 = G__173784;
count__173761 = G__173785;
i__173762 = G__173786;
continue;
} else {
var vec__173766 = cljs.core.first(seq__173759__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173766,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173766,(1),null);
var G__173767_173787 = v;
var G__173768_173788 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__173767_173787,G__173768_173788) : f.call(null,G__173767_173787,G__173768_173788));

var G__173789 = cljs.core.next(seq__173759__$1);
var G__173790 = null;
var G__173791 = (0);
var G__173792 = (0);
seq__173759 = G__173789;
chunk__173760 = G__173790;
count__173761 = G__173791;
i__173762 = G__173792;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__173769 = init__$1;
var G__173770 = (self__.arr[i]);
var G__173771 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173769,G__173770,G__173771) : f.call(null,G__173769,G__173770,G__173771));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__173772 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173772) : cljs.core.deref.call(null,G__173772));
} else {
var G__173793 = (i + (2));
var G__173794 = init__$2;
i = G__173793;
init__$1 = G__173794;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__173773 = other;
if(G__173773){
var bit__18144__auto__ = (G__173773.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__18144__auto__) || (G__173773.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__173795 = (i + (2));
i = G__173795;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj173775 = {};
return obj173775;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__173796 = (s + (2));
var G__173797 = d;
s = G__173796;
d = G__173797;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__173798 = (s + (2));
var G__173799 = (d + (2));
s = G__173798;
d = G__173799;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__173776 = cljs.core.aclone(self__.arr);
(G__173776[(idx + (1))] = v);

return G__173776;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__173800 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__173801 = cljs.core.next(es);
ret = G__173800;
es = G__173801;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__173802 = null;
var G__173802__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__173802__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__173802 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__173802__2.call(this,self__,k);
case 3:
return G__173802__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173802.cljs$core$IFn$_invoke$arity$2 = G__173802__2;
G__173802.cljs$core$IFn$_invoke$arity$3 = G__173802__3;
return G__173802;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args173756){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args173756)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__173803 = (i + (2));
var G__173804 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__173803;
ret = G__173804;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__173805_173813 = self__.arr;
G__173805_173813.pop();

G__173805_173813.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__173806 = self__.len;
var G__173807 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__173806,G__173807) : cljs.core.array__GT_transient_hash_map.call(null,G__173806,G__173807));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__173808 = o;
if(G__173808){
var bit__18151__auto__ = (G__173808.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18151__auto__) || (G__173808.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__173808.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__173808);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__173808);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__173809 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__173809) : cljs.core.key.call(null,G__173809));
})(),(function (){var G__173810 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__173810) : cljs.core.val.call(null,G__173810));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__173814 = cljs.core.next(es);
var G__173815 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__173811 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__173811) : cljs.core.key.call(null,G__173811));
})(),(function (){var G__173812 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__173812) : cljs.core.val.call(null,G__173812));
})());
es = G__173814;
tcoll__$2 = G__173815;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__173816 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__173817 = (i + (2));
out = G__173816;
i = G__173817;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__173820 = cljs.core.aclone(arr);
(G__173820[i] = a);

return G__173820;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__173821 = cljs.core.aclone(arr);
(G__173821[i] = a);

(G__173821[j] = b);

return G__173821;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__173826 = init__$1;
var G__173827 = k;
var G__173828 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173826,G__173827,G__173828) : f.call(null,G__173826,G__173827,G__173828));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__173829 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173829) : cljs.core.deref.call(null,G__173829));
} else {
var G__173830 = (i + (2));
var G__173831 = init__$2;
i = G__173830;
init__$1 = G__173831;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__173832 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__173832) : cljs.core.create_inode_seq.call(null,G__173832));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_173846 = (0);
var j_173847 = (0);
while(true){
if((i_173846 < (32))){
if((((self__.bitmap >>> i_173846) & (1)) === (0))){
var G__173848 = (i_173846 + (1));
var G__173849 = j_173847;
i_173846 = G__173848;
j_173847 = G__173849;
continue;
} else {
(nodes[i_173846] = ((!(((self__.arr[j_173847]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_173847])),(self__.arr[j_173847]),(self__.arr[(j_173847 + (1))]),added_leaf_QMARK_):(self__.arr[(j_173847 + (1))])));

var G__173850 = (i_173846 + (1));
var G__173851 = (j_173847 + (2));
i_173846 = G__173850;
j_173847 = G__173851;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__173833 = edit__$1;
var G__173834 = (shift + (5));
var G__173835 = key_or_nil;
var G__173836 = val_or_node;
var G__173837 = hash;
var G__173838 = key;
var G__173839 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__173833,G__173834,G__173835,G__173836,G__173837,G__173838,G__173839) : cljs.core.create_node.call(null,G__173833,G__173834,G__173835,G__173836,G__173837,G__173838,G__173839));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_173852 = (0);
var j_173853 = (0);
while(true){
if((i_173852 < (32))){
if((((self__.bitmap >>> i_173852) & (1)) === (0))){
var G__173854 = (i_173852 + (1));
var G__173855 = j_173853;
i_173852 = G__173854;
j_173853 = G__173855;
continue;
} else {
(nodes[i_173852] = ((!(((self__.arr[j_173853]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_173853])),(self__.arr[j_173853]),(self__.arr[(j_173853 + (1))]),added_leaf_QMARK_):(self__.arr[(j_173853 + (1))])));

var G__173856 = (i_173852 + (1));
var G__173857 = (j_173853 + (2));
i_173852 = G__173856;
j_173853 = G__173857;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__173840 = (shift + (5));
var G__173841 = key_or_nil;
var G__173842 = val_or_node;
var G__173843 = hash;
var G__173844 = key;
var G__173845 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__173840,G__173841,G__173842,G__173843,G__173844,G__173845) : cljs.core.create_node.call(null,G__173840,G__173841,G__173842,G__173843,G__173844,G__173845));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__173858 = (i + (1));
var G__173859 = (j + (2));
var G__173860 = (bitmap | ((1) << i));
i = G__173858;
j = G__173859;
bitmap = G__173860;
continue;
} else {
var G__173861 = (i + (1));
var G__173862 = j;
var G__173863 = bitmap;
i = G__173861;
j = G__173862;
bitmap = G__173863;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__173864 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__173864) : cljs.core.create_array_node_seq.call(null,G__173864));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__173865 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173865) : cljs.core.deref.call(null,G__173865));
} else {
var G__173866 = (i + (1));
var G__173867 = init__$2;
i = G__173866;
init__$1 = G__173867;
continue;
}
} else {
var G__173868 = (i + (1));
var G__173869 = init__$1;
i = G__173868;
init__$1 = G__173869;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__173870 = (i + (2));
i = G__173870;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__173871 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__173871) : cljs.core.create_inode_seq.call(null,G__173871));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__173872 = self__.nodes;
var G__173873 = (self__.i + (2));
var G__173874 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__173872,G__173873,G__173874) : cljs.core.create_inode_seq.call(null,G__173872,G__173873,G__173874));
} else {
var G__173875 = self__.nodes;
var G__173876 = self__.i;
var G__173877 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__173875,G__173876,G__173877) : cljs.core.create_inode_seq.call(null,G__173875,G__173876,G__173877));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__173881 = (j + (2));
j = G__173881;
continue;
}
} else {
var G__173882 = (j + (2));
j = G__173882;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__173883 = null;
var G__173884 = self__.nodes;
var G__173885 = self__.i;
var G__173886 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__173883,G__173884,G__173885,G__173886) : cljs.core.create_array_node_seq.call(null,G__173883,G__173884,G__173885,G__173886));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__173891 = (j + (1));
j = G__173891;
continue;
}
} else {
var G__173892 = (j + (1));
j = G__173892;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__173894 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__173894) : cljs.core.keys.call(null,G__173894));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__173895 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__173895) : cljs.core.vals.call(null,G__173895));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__173896 = cljs.core.seq(coll);
var chunk__173897 = null;
var count__173898 = (0);
var i__173899 = (0);
while(true){
if((i__173899 < count__173898)){
var vec__173900 = chunk__173897.cljs$core$IIndexed$_nth$arity$2(null,i__173899);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173900,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173900,(1),null);
var G__173901_173912 = v;
var G__173902_173913 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__173901_173912,G__173902_173913) : f.call(null,G__173901_173912,G__173902_173913));

var G__173914 = seq__173896;
var G__173915 = chunk__173897;
var G__173916 = count__173898;
var G__173917 = (i__173899 + (1));
seq__173896 = G__173914;
chunk__173897 = G__173915;
count__173898 = G__173916;
i__173899 = G__173917;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__173896);
if(temp__4126__auto__){
var seq__173896__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__173896__$1)){
var c__18257__auto__ = cljs.core.chunk_first(seq__173896__$1);
var G__173918 = cljs.core.chunk_rest(seq__173896__$1);
var G__173919 = c__18257__auto__;
var G__173920 = cljs.core.count(c__18257__auto__);
var G__173921 = (0);
seq__173896 = G__173918;
chunk__173897 = G__173919;
count__173898 = G__173920;
i__173899 = G__173921;
continue;
} else {
var vec__173903 = cljs.core.first(seq__173896__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173903,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__173903,(1),null);
var G__173904_173922 = v;
var G__173905_173923 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__173904_173922,G__173905_173923) : f.call(null,G__173904_173922,G__173905_173923));

var G__173924 = cljs.core.next(seq__173896__$1);
var G__173925 = null;
var G__173926 = (0);
var G__173927 = (0);
seq__173896 = G__173924;
chunk__173897 = G__173925;
count__173898 = G__173926;
i__173899 = G__173927;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__173906 = init;
var G__173907 = null;
var G__173908 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173906,G__173907,G__173908) : f.call(null,G__173906,G__173907,G__173908));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__173909 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173909) : cljs.core.deref.call(null,G__173909));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj173911 = {};
return obj173911;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__173928 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__173929 = cljs.core.next(es);
ret = G__173928;
es = G__173929;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__173930 = null;
var G__173930__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__173930__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__173930 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__173930__2.call(this,self__,k);
case 3:
return G__173930__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173930.cljs$core$IFn$_invoke$arity$2 = G__173930__2;
G__173930.cljs$core$IFn$_invoke$arity$3 = G__173930__3;
return G__173930;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args173893){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args173893)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__173931 = (i + (2));
var G__173932 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__173931;
ret = G__173932;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__173933 = (i + (1));
var G__173934 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__173933;
out = G__173934;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__173935 = o;
if(G__173935){
var bit__18151__auto__ = (G__173935.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__18151__auto__) || (G__173935.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__173935.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__173935);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__173935);
}
})()){
return tcoll.assoc_BANG_((function (){var G__173936 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__173936) : cljs.core.key.call(null,G__173936));
})(),(function (){var G__173937 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__173937) : cljs.core.val.call(null,G__173937));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__173940 = cljs.core.next(es);
var G__173941 = tcoll__$1.assoc_BANG_((function (){var G__173938 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__173938) : cljs.core.key.call(null,G__173938));
})(),(function (){var G__173939 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__173939) : cljs.core.val.call(null,G__173939));
})());
es = G__173940;
tcoll__$1 = G__173941;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__173942 = ((ascending_QMARK_)?t.left:t.right);
var G__173943 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__173942;
stack__$1 = G__173943;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__173956 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173956) : cljs.core.deref.call(null,G__173956));
} else {
var init__$2 = (function (){var G__173957 = init__$1;
var G__173958 = node.key;
var G__173959 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__173957,G__173958,G__173959) : f.call(null,G__173957,G__173958,G__173959));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__173960 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173960) : cljs.core.deref.call(null,G__173960));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__173961 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__173961) : cljs.core.deref.call(null,G__173961));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__173963 = null;
var G__173963__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__173963__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__173963 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__173963__2.call(this,self__,k);
case 3:
return G__173963__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173963.cljs$core$IFn$_invoke$arity$2 = G__173963__2;
G__173963.cljs$core$IFn$_invoke$arity$3 = G__173963__3;
return G__173963;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args173962){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args173962)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__173965 = null;
var G__173965__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__173965__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__173965 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__173965__2.call(this,self__,k);
case 3:
return G__173965__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__173965.cljs$core$IFn$_invoke$arity$2 = G__173965__2;
G__173965.cljs$core$IFn$_invoke$arity$3 = G__173965__3;
return G__173965;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args173964){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args173964)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__173978 = k;
var G__173979 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__173978,G__173979) : comp.call(null,G__173978,G__173979));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__173998 = k;
var G__173999 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__173998,G__173999) : comp.call(null,G__173998,G__173999));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__174010 = k;
var G__174011 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__174010,G__174011) : comp.call(null,G__174010,G__174011));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__174013 = cljs.core.seq(coll);
var chunk__174014 = null;
var count__174015 = (0);
var i__174016 = (0);
while(true){
if((i__174016 < count__174015)){
var vec__174017 = chunk__174014.cljs$core$IIndexed$_nth$arity$2(null,i__174016);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174017,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174017,(1),null);
var G__174018_174030 = v;
var G__174019_174031 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174018_174030,G__174019_174031) : f.call(null,G__174018_174030,G__174019_174031));

var G__174032 = seq__174013;
var G__174033 = chunk__174014;
var G__174034 = count__174015;
var G__174035 = (i__174016 + (1));
seq__174013 = G__174032;
chunk__174014 = G__174033;
count__174015 = G__174034;
i__174016 = G__174035;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__174013);
if(temp__4126__auto__){
var seq__174013__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__174013__$1)){
var c__18257__auto__ = cljs.core.chunk_first(seq__174013__$1);
var G__174036 = cljs.core.chunk_rest(seq__174013__$1);
var G__174037 = c__18257__auto__;
var G__174038 = cljs.core.count(c__18257__auto__);
var G__174039 = (0);
seq__174013 = G__174036;
chunk__174014 = G__174037;
count__174015 = G__174038;
i__174016 = G__174039;
continue;
} else {
var vec__174020 = cljs.core.first(seq__174013__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174020,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174020,(1),null);
var G__174021_174040 = v;
var G__174022_174041 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174021_174040,G__174022_174041) : f.call(null,G__174021_174040,G__174022_174041));

var G__174042 = cljs.core.next(seq__174013__$1);
var G__174043 = null;
var G__174044 = (0);
var G__174045 = (0);
seq__174013 = G__174042;
chunk__174014 = G__174043;
count__174015 = G__174044;
i__174016 = G__174045;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__174023 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__174023) : cljs.core.keys.call(null,G__174023));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__174024 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__174024) : cljs.core.vals.call(null,G__174024));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__174025 = k;
var G__174026 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__174025,G__174026) : self__.comp.call(null,G__174025,G__174026));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__174046 = t.left;
t = G__174046;
continue;
} else {
var G__174047 = t.right;
t = G__174047;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__174048 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__174049 = cljs.core.next(es);
ret = G__174048;
es = G__174049;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__174050 = null;
var G__174050__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__174050__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__174050 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__174050__2.call(this,self__,k);
case 3:
return G__174050__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174050.cljs$core$IFn$_invoke$arity$2 = G__174050__2;
G__174050.cljs$core$IFn$_invoke$arity$3 = G__174050__3;
return G__174050;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args174012){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args174012)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__174027 = k;
var G__174028 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__174027,G__174028) : self__.comp.call(null,G__174027,G__174028));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__174051 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__174052 = t.left;
stack = G__174051;
t = G__174052;
continue;
} else {
var G__174053 = stack;
var G__174054 = t.right;
stack = G__174053;
t = G__174054;
continue;
}
} else {
if((c > (0))){
var G__174055 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__174056 = t.right;
stack = G__174055;
t = G__174056;
continue;
} else {
var G__174057 = stack;
var G__174058 = t.left;
stack = G__174057;
t = G__174058;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__174029 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__174029) : cljs.core.key.call(null,G__174029));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__174059 = cljs.core.nnext(in$);
var G__174060 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__174059;
out = G__174060;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__174061__i = 0, G__174061__a = new Array(arguments.length -  0);
while (G__174061__i < G__174061__a.length) {G__174061__a[G__174061__i] = arguments[G__174061__i + 0]; ++G__174061__i;}
  keyvals = new cljs.core.IndexedSeq(G__174061__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__174062){
var keyvals = cljs.core.seq(arglist__174062);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__174063__i = 0, G__174063__a = new Array(arguments.length -  0);
while (G__174063__i < G__174063__a.length) {G__174063__a[G__174063__i] = arguments[G__174063__i + 0]; ++G__174063__i;}
  keyvals = new cljs.core.IndexedSeq(G__174063__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__174064){
var keyvals = cljs.core.seq(arglist__174064);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj174068 = {};
return obj174068;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__174069 = cljs.core.nnext(kvs);
kvs = G__174069;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__174070__i = 0, G__174070__a = new Array(arguments.length -  0);
while (G__174070__i < G__174070__a.length) {G__174070__a[G__174070__i] = arguments[G__174070__i + 0]; ++G__174070__i;}
  keyvals = new cljs.core.IndexedSeq(G__174070__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__174071){
var keyvals = cljs.core.seq(arglist__174071);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__174072 = cljs.core.nnext(in$);
var G__174073 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__174072;
out = G__174073;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__174074__i = 0, G__174074__a = new Array(arguments.length -  0);
while (G__174074__i < G__174074__a.length) {G__174074__a[G__174074__i] = arguments[G__174074__i + 0]; ++G__174074__i;}
  keyvals = new cljs.core.IndexedSeq(G__174074__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__174075){
var keyvals = cljs.core.seq(arglist__174075);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__174076 = cljs.core.nnext(in$);
var G__174077 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__174076;
out = G__174077;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__174078__i = 0, G__174078__a = new Array(arguments.length -  1);
while (G__174078__i < G__174078__a.length) {G__174078__a[G__174078__i] = arguments[G__174078__i + 1]; ++G__174078__i;}
  keyvals = new cljs.core.IndexedSeq(G__174078__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__174079){
var comparator = cljs.core.first(arglist__174079);
var keyvals = cljs.core.rest(arglist__174079);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__174080 = self__.mseq;
if(G__174080){
var bit__18151__auto__ = (G__174080.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18151__auto__) || (G__174080.cljs$core$INext$)){
return true;
} else {
if((!G__174080.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__174080);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__174080);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__174081 = self__.mseq;
if(G__174081){
var bit__18151__auto__ = (G__174081.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18151__auto__) || (G__174081.cljs$core$INext$)){
return true;
} else {
if((!G__174081.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__174081);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__174081);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__174082 = self__.mseq;
if(G__174082){
var bit__18151__auto__ = (G__174082.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18151__auto__) || (G__174082.cljs$core$INext$)){
return true;
} else {
if((!G__174082.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__174082);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__174082);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__174083 = self__.mseq;
if(G__174083){
var bit__18151__auto__ = (G__174083.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__18151__auto__) || (G__174083.cljs$core$INext$)){
return true;
} else {
if((!G__174083.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__174083);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__174083);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__174084_SHARP_,p2__174085_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__17470__auto__ = p1__174084_SHARP_;
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__174085_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__174086__i = 0, G__174086__a = new Array(arguments.length -  0);
while (G__174086__i < G__174086__a.length) {G__174086__a[G__174086__i] = arguments[G__174086__i + 0]; ++G__174086__i;}
  maps = new cljs.core.IndexedSeq(G__174086__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__174087){
var maps = cljs.core.seq(arglist__174087);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__174090 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__174091 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174090,G__174091) : f.call(null,G__174090,G__174091));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__17470__auto__ = m1;
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__174092__i = 0, G__174092__a = new Array(arguments.length -  1);
while (G__174092__i < G__174092__a.length) {G__174092__a[G__174092__i] = arguments[G__174092__i + 1]; ++G__174092__i;}
  maps = new cljs.core.IndexedSeq(G__174092__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__174093){
var f = cljs.core.first(arglist__174093);
var maps = cljs.core.rest(arglist__174093);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$241);
var G__174094 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$241))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__174095 = cljs.core.next(keys);
ret = G__174094;
keys = G__174095;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__174098 = cljs.core.seq(coll);
var chunk__174099 = null;
var count__174100 = (0);
var i__174101 = (0);
while(true){
if((i__174101 < count__174100)){
var vec__174102 = chunk__174099.cljs$core$IIndexed$_nth$arity$2(null,i__174101);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174102,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174102,(1),null);
var G__174103_174108 = v;
var G__174104_174109 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174103_174108,G__174104_174109) : f.call(null,G__174103_174108,G__174104_174109));

var G__174110 = seq__174098;
var G__174111 = chunk__174099;
var G__174112 = count__174100;
var G__174113 = (i__174101 + (1));
seq__174098 = G__174110;
chunk__174099 = G__174111;
count__174100 = G__174112;
i__174101 = G__174113;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__174098);
if(temp__4126__auto__){
var seq__174098__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__174098__$1)){
var c__18257__auto__ = cljs.core.chunk_first(seq__174098__$1);
var G__174114 = cljs.core.chunk_rest(seq__174098__$1);
var G__174115 = c__18257__auto__;
var G__174116 = cljs.core.count(c__18257__auto__);
var G__174117 = (0);
seq__174098 = G__174114;
chunk__174099 = G__174115;
count__174100 = G__174116;
i__174101 = G__174117;
continue;
} else {
var vec__174105 = cljs.core.first(seq__174098__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174105,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174105,(1),null);
var G__174106_174118 = v;
var G__174107_174119 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174106_174118,G__174107_174119) : f.call(null,G__174106_174118,G__174107_174119));

var G__174120 = cljs.core.next(seq__174098__$1);
var G__174121 = null;
var G__174122 = (0);
var G__174123 = (0);
seq__174098 = G__174120;
chunk__174099 = G__174121;
count__174100 = G__174122;
i__174101 = G__174123;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__174096_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__174096_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__174124 = null;
var G__174124__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__174124__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__174124 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__174124__2.call(this,self__,k);
case 3:
return G__174124__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174124.cljs$core$IFn$_invoke$arity$2 = G__174124__2;
G__174124.cljs$core$IFn$_invoke$arity$3 = G__174124__3;
return G__174124;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args174097){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args174097)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__174125 = (i + (1));
var G__174126 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__174125;
out = G__174126;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__174127 = (i + (1));
var G__174128 = cljs.core._conj_BANG_(out,(items[i]));
i = G__174127;
out = G__174128;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__174130 = null;
var G__174130__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__174130__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__174130 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__174130__2.call(this,self__,k);
case 3:
return G__174130__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174130.cljs$core$IFn$_invoke$arity$2 = G__174130__2;
G__174130.cljs$core$IFn$_invoke$arity$3 = G__174130__3;
return G__174130;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args174129){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args174129)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__174133 = cljs.core.seq(coll);
var chunk__174134 = null;
var count__174135 = (0);
var i__174136 = (0);
while(true){
if((i__174136 < count__174135)){
var vec__174137 = chunk__174134.cljs$core$IIndexed$_nth$arity$2(null,i__174136);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174137,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174137,(1),null);
var G__174138_174143 = v;
var G__174139_174144 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174138_174143,G__174139_174144) : f.call(null,G__174138_174143,G__174139_174144));

var G__174145 = seq__174133;
var G__174146 = chunk__174134;
var G__174147 = count__174135;
var G__174148 = (i__174136 + (1));
seq__174133 = G__174145;
chunk__174134 = G__174146;
count__174135 = G__174147;
i__174136 = G__174148;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__174133);
if(temp__4126__auto__){
var seq__174133__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__174133__$1)){
var c__18257__auto__ = cljs.core.chunk_first(seq__174133__$1);
var G__174149 = cljs.core.chunk_rest(seq__174133__$1);
var G__174150 = c__18257__auto__;
var G__174151 = cljs.core.count(c__18257__auto__);
var G__174152 = (0);
seq__174133 = G__174149;
chunk__174134 = G__174150;
count__174135 = G__174151;
i__174136 = G__174152;
continue;
} else {
var vec__174140 = cljs.core.first(seq__174133__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174140,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174140,(1),null);
var G__174141_174153 = v;
var G__174142_174154 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174141_174153,G__174142_174154) : f.call(null,G__174141_174153,G__174142_174154));

var G__174155 = cljs.core.next(seq__174133__$1);
var G__174156 = null;
var G__174157 = (0);
var G__174158 = (0);
seq__174133 = G__174155;
chunk__174134 = G__174156;
count__174135 = G__174157;
i__174136 = G__174158;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__174131_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__174131_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__174159 = null;
var G__174159__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__174159__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__174159 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__174159__2.call(this,self__,k);
case 3:
return G__174159__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174159.cljs$core$IFn$_invoke$arity$2 = G__174159__2;
G__174159.cljs$core$IFn$_invoke$arity$3 = G__174159__3;
return G__174159;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args174132){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args174132)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__18351__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__18351__auto__.length)){
var G__174160 = (i + (1));
var G__174161 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__174160;
res = G__174161;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__174162 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__174163 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__174162;
out = G__174163;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__174164__delegate = function (keys){
return cljs.core.set(keys);
};
var G__174164 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__174165__i = 0, G__174165__a = new Array(arguments.length -  0);
while (G__174165__i < G__174165__a.length) {G__174165__a[G__174165__i] = arguments[G__174165__i + 0]; ++G__174165__i;}
  keys = new cljs.core.IndexedSeq(G__174165__a,0);
} 
return G__174164__delegate.call(this,keys);};
G__174164.cljs$lang$maxFixedArity = 0;
G__174164.cljs$lang$applyTo = (function (arglist__174166){
var keys = cljs.core.seq(arglist__174166);
return G__174164__delegate(keys);
});
G__174164.cljs$core$IFn$_invoke$arity$variadic = G__174164__delegate;
return G__174164;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__174167 = null;
if (arguments.length > 0) {
var G__174168__i = 0, G__174168__a = new Array(arguments.length -  0);
while (G__174168__i < G__174168__a.length) {G__174168__a[G__174168__i] = arguments[G__174168__i + 0]; ++G__174168__i;}
G__174167 = new cljs.core.IndexedSeq(G__174168__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__174167);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__174169__i = 0, G__174169__a = new Array(arguments.length -  0);
while (G__174169__i < G__174169__a.length) {G__174169__a[G__174169__i] = arguments[G__174169__i + 0]; ++G__174169__i;}
  keys = new cljs.core.IndexedSeq(G__174169__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__174170){
var keys = cljs.core.seq(arglist__174170);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__174171__i = 0, G__174171__a = new Array(arguments.length -  1);
while (G__174171__i < G__174171__a.length) {G__174171__a[G__174171__i] = arguments[G__174171__i + 1]; ++G__174171__i;}
  keys = new cljs.core.IndexedSeq(G__174171__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__174172){
var comparator = cljs.core.first(arglist__174172);
var keys = cljs.core.rest(arglist__174172);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__174173_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__174173_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__174173_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__174174_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__174174_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__174174_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__174195 = null;
var G__174195__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__174195__1 = (function (result){
var G__174185 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__174185) : rf.call(null,G__174185));
});
var G__174195__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__174186 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174186) : cljs.core.deref.call(null,G__174186));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__174187 = result;
var G__174188 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174187,G__174188) : rf.call(null,G__174187,G__174188));
}
});
G__174195 = function(result,input){
switch(arguments.length){
case 0:
return G__174195__0.call(this);
case 1:
return G__174195__1.call(this,result);
case 2:
return G__174195__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174195.cljs$core$IFn$_invoke$arity$0 = G__174195__0;
G__174195.cljs$core$IFn$_invoke$arity$1 = G__174195__1;
G__174195.cljs$core$IFn$_invoke$arity$2 = G__174195__2;
return G__174195;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__174193,seen__$1){
while(true){
var vec__174194 = p__174193;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174194,(0),null);
var xs__$1 = vec__174194;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__174196 = cljs.core.rest(s);
var G__174197 = seen__$1;
p__174193 = G__174196;
seen__$1 = G__174197;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__174198 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__174199 = cljs.core.next(s__$1);
ret = G__174198;
s__$1 = G__174199;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__174201 = x;
if(G__174201){
var bit__18144__auto__ = (G__174201.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__18144__auto__) || (G__174201.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__174202 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__174203 = cljs.core.next(ks);
var G__174204 = cljs.core.next(vs);
map = G__174202;
ks = G__174203;
vs = G__174204;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__174215 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__174215) : k.call(null,G__174215));
})() > (function (){var G__174216 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__174216) : k.call(null,G__174216));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__174217__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__174205_SHARP_,p2__174206_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__174205_SHARP_,p2__174206_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__174217 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__174218__i = 0, G__174218__a = new Array(arguments.length -  3);
while (G__174218__i < G__174218__a.length) {G__174218__a[G__174218__i] = arguments[G__174218__i + 3]; ++G__174218__i;}
  more = new cljs.core.IndexedSeq(G__174218__a,0);
} 
return G__174217__delegate.call(this,k,x,y,more);};
G__174217.cljs$lang$maxFixedArity = 3;
G__174217.cljs$lang$applyTo = (function (arglist__174219){
var k = cljs.core.first(arglist__174219);
arglist__174219 = cljs.core.next(arglist__174219);
var x = cljs.core.first(arglist__174219);
arglist__174219 = cljs.core.next(arglist__174219);
var y = cljs.core.first(arglist__174219);
var more = cljs.core.rest(arglist__174219);
return G__174217__delegate(k,x,y,more);
});
G__174217.cljs$core$IFn$_invoke$arity$variadic = G__174217__delegate;
return G__174217;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__174220 = null;
if (arguments.length > 3) {
var G__174221__i = 0, G__174221__a = new Array(arguments.length -  3);
while (G__174221__i < G__174221__a.length) {G__174221__a[G__174221__i] = arguments[G__174221__i + 3]; ++G__174221__i;}
G__174220 = new cljs.core.IndexedSeq(G__174221__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__174220);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__174232 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__174232) : k.call(null,G__174232));
})() < (function (){var G__174233 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__174233) : k.call(null,G__174233));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__174234__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__174222_SHARP_,p2__174223_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__174222_SHARP_,p2__174223_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__174234 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__174235__i = 0, G__174235__a = new Array(arguments.length -  3);
while (G__174235__i < G__174235__a.length) {G__174235__a[G__174235__i] = arguments[G__174235__i + 3]; ++G__174235__i;}
  more = new cljs.core.IndexedSeq(G__174235__a,0);
} 
return G__174234__delegate.call(this,k,x,y,more);};
G__174234.cljs$lang$maxFixedArity = 3;
G__174234.cljs$lang$applyTo = (function (arglist__174236){
var k = cljs.core.first(arglist__174236);
arglist__174236 = cljs.core.next(arglist__174236);
var x = cljs.core.first(arglist__174236);
arglist__174236 = cljs.core.next(arglist__174236);
var y = cljs.core.first(arglist__174236);
var more = cljs.core.rest(arglist__174236);
return G__174234__delegate(k,x,y,more);
});
G__174234.cljs$core$IFn$_invoke$arity$variadic = G__174234__delegate;
return G__174234;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__174237 = null;
if (arguments.length > 3) {
var G__174238__i = 0, G__174238__a = new Array(arguments.length -  3);
while (G__174238__i < G__174238__a.length) {G__174238__a[G__174238__i] = arguments[G__174238__i + 3]; ++G__174238__i;}
G__174237 = new cljs.core.IndexedSeq(G__174238__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__174237);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__174255 = null;
var G__174255__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__174255__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__174250 = result;
var G__174251 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174250,G__174251) : rf.call(null,G__174250,G__174251));
})());
})());
var G__174252 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__174252) : rf.call(null,G__174252));
});
var G__174255__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__174253 = result;
var G__174254 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174253,G__174254) : rf.call(null,G__174253,G__174254));
} else {
return result;
}
});
G__174255 = function(result,input){
switch(arguments.length){
case 0:
return G__174255__0.call(this);
case 1:
return G__174255__1.call(this,result);
case 2:
return G__174255__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174255.cljs$core$IFn$_invoke$arity$0 = G__174255__0;
G__174255.cljs$core$IFn$_invoke$arity$1 = G__174255__1;
G__174255.cljs$core$IFn$_invoke$arity$2 = G__174255__2;
return G__174255;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__174268 = null;
var G__174268__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__174268__1 = (function (result){
var G__174263 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__174263) : rf.call(null,G__174263));
});
var G__174268__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__174264 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__174264) : pred.call(null,G__174264));
})())){
var G__174265 = result;
var G__174266 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174265,G__174266) : rf.call(null,G__174265,G__174266));
} else {
return cljs.core.reduced(result);
}
});
G__174268 = function(result,input){
switch(arguments.length){
case 0:
return G__174268__0.call(this);
case 1:
return G__174268__1.call(this,result);
case 2:
return G__174268__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174268.cljs$core$IFn$_invoke$arity$0 = G__174268__0;
G__174268.cljs$core$IFn$_invoke$arity$1 = G__174268__1;
G__174268.cljs$core$IFn$_invoke$arity$2 = G__174268__2;
return G__174268;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__174267 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__174267) : pred.call(null,G__174267));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__174273 = (function (){var G__174275 = cljs.core._entry_key(sc,e);
var G__174276 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__174275,G__174276) : comp.call(null,G__174275,G__174276));
})();
var G__174274 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__174273,G__174274) : test.call(null,G__174273,G__174274));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__174280 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174280,(0),null);
var s = vec__174280;
if(cljs.core.truth_((function (){var G__174281 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__174281) : include.call(null,G__174281));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__174282 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174282,(0),null);
var s = vec__174282;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__174286 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174286,(0),null);
var s = vec__174286;
if(cljs.core.truth_((function (){var G__174287 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__174287) : include.call(null,G__174287));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__174288 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174288,(0),null);
var s = vec__174288;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__174289 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__174289) : Math.ceil.call(null,G__174289));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__17891__auto__ = self__.__hash;
if(!((h__17891__auto__ == null))){
return h__17891__auto__;
} else {
var h__17891__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__17891__auto____$1;

return h__17891__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__174290 = ret;
var G__174291 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174290,G__174291) : f.call(null,G__174290,G__174291));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__174292 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174292) : cljs.core.deref.call(null,G__174292));
} else {
var G__174293 = (i + self__.step);
var G__174294 = ret__$1;
i = G__174293;
ret = G__174294;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__174312 = null;
var G__174312__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__174312__1 = (function (result){
var G__174309 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__174309) : rf.call(null,G__174309));
});
var G__174312__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__174310 = result;
var G__174311 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174310,G__174311) : rf.call(null,G__174310,G__174311));
} else {
return result;
}
});
G__174312 = function(result,input){
switch(arguments.length){
case 0:
return G__174312__0.call(this);
case 1:
return G__174312__1.call(this,result);
case 2:
return G__174312__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174312.cljs$core$IFn$_invoke$arity$0 = G__174312__0;
G__174312.cljs$core$IFn$_invoke$arity$1 = G__174312__1;
G__174312.cljs$core$IFn$_invoke$arity$2 = G__174312__2;
return G__174312;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$242);
return ((function (a,pa){
return (function() {
var G__174334 = null;
var G__174334__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__174334__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__174325 = result;
var G__174326 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174325,G__174326) : rf.call(null,G__174325,G__174326));
})());
})());
var G__174327 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__174327) : rf.call(null,G__174327));
});
var G__174334__2 = (function (result,input){
var pval = (function (){var G__174328 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174328) : cljs.core.deref.call(null,G__174328));
})();
var val = (function (){var G__174329 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__174329) : f.call(null,G__174329));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$242)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__174330 = result;
var G__174331 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174330,G__174331) : rf.call(null,G__174330,G__174331));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__174334 = function(result,input){
switch(arguments.length){
case 0:
return G__174334__0.call(this);
case 1:
return G__174334__1.call(this,result);
case 2:
return G__174334__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174334.cljs$core$IFn$_invoke$arity$0 = G__174334__0;
G__174334.cljs$core$IFn$_invoke$arity$1 = G__174334__1;
G__174334.cljs$core$IFn$_invoke$arity$2 = G__174334__2;
return G__174334;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__174332 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__174332) : f.call(null,G__174332));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__174313_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__174333 = p1__174313_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__174333) : f.call(null,G__174333));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__174343 = init;
var G__174344 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174343,G__174344) : f.call(null,G__174343,G__174344));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__174439 = null;
var G__174439__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__174439__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174397 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__174397) : f.call(null,G__174397));
})()],null));
});
var G__174439__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174398 = x;
var G__174399 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174398,G__174399) : f.call(null,G__174398,G__174399));
})()],null));
});
var G__174439__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174400 = x;
var G__174401 = y;
var G__174402 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__174400,G__174401,G__174402) : f.call(null,G__174400,G__174401,G__174402));
})()],null));
});
var G__174439__4 = (function() { 
var G__174440__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__174440 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__174441__i = 0, G__174441__a = new Array(arguments.length -  3);
while (G__174441__i < G__174441__a.length) {G__174441__a[G__174441__i] = arguments[G__174441__i + 3]; ++G__174441__i;}
  args = new cljs.core.IndexedSeq(G__174441__a,0);
} 
return G__174440__delegate.call(this,x,y,z,args);};
G__174440.cljs$lang$maxFixedArity = 3;
G__174440.cljs$lang$applyTo = (function (arglist__174442){
var x = cljs.core.first(arglist__174442);
arglist__174442 = cljs.core.next(arglist__174442);
var y = cljs.core.first(arglist__174442);
arglist__174442 = cljs.core.next(arglist__174442);
var z = cljs.core.first(arglist__174442);
var args = cljs.core.rest(arglist__174442);
return G__174440__delegate(x,y,z,args);
});
G__174440.cljs$core$IFn$_invoke$arity$variadic = G__174440__delegate;
return G__174440;
})()
;
G__174439 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__174439__0.call(this);
case 1:
return G__174439__1.call(this,x);
case 2:
return G__174439__2.call(this,x,y);
case 3:
return G__174439__3.call(this,x,y,z);
default:
var G__174443 = null;
if (arguments.length > 3) {
var G__174444__i = 0, G__174444__a = new Array(arguments.length -  3);
while (G__174444__i < G__174444__a.length) {G__174444__a[G__174444__i] = arguments[G__174444__i + 3]; ++G__174444__i;}
G__174443 = new cljs.core.IndexedSeq(G__174444__a,0);
}
return G__174439__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__174443);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174439.cljs$lang$maxFixedArity = 3;
G__174439.cljs$lang$applyTo = G__174439__4.cljs$lang$applyTo;
G__174439.cljs$core$IFn$_invoke$arity$0 = G__174439__0;
G__174439.cljs$core$IFn$_invoke$arity$1 = G__174439__1;
G__174439.cljs$core$IFn$_invoke$arity$2 = G__174439__2;
G__174439.cljs$core$IFn$_invoke$arity$3 = G__174439__3;
G__174439.cljs$core$IFn$_invoke$arity$variadic = G__174439__4.cljs$core$IFn$_invoke$arity$variadic;
return G__174439;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__174445 = null;
var G__174445__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__174445__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174403 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__174403) : f.call(null,G__174403));
})(),(function (){var G__174404 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__174404) : g.call(null,G__174404));
})()],null));
});
var G__174445__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174405 = x;
var G__174406 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174405,G__174406) : f.call(null,G__174405,G__174406));
})(),(function (){var G__174407 = x;
var G__174408 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__174407,G__174408) : g.call(null,G__174407,G__174408));
})()],null));
});
var G__174445__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174409 = x;
var G__174410 = y;
var G__174411 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__174409,G__174410,G__174411) : f.call(null,G__174409,G__174410,G__174411));
})(),(function (){var G__174412 = x;
var G__174413 = y;
var G__174414 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__174412,G__174413,G__174414) : g.call(null,G__174412,G__174413,G__174414));
})()],null));
});
var G__174445__4 = (function() { 
var G__174446__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__174446 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__174447__i = 0, G__174447__a = new Array(arguments.length -  3);
while (G__174447__i < G__174447__a.length) {G__174447__a[G__174447__i] = arguments[G__174447__i + 3]; ++G__174447__i;}
  args = new cljs.core.IndexedSeq(G__174447__a,0);
} 
return G__174446__delegate.call(this,x,y,z,args);};
G__174446.cljs$lang$maxFixedArity = 3;
G__174446.cljs$lang$applyTo = (function (arglist__174448){
var x = cljs.core.first(arglist__174448);
arglist__174448 = cljs.core.next(arglist__174448);
var y = cljs.core.first(arglist__174448);
arglist__174448 = cljs.core.next(arglist__174448);
var z = cljs.core.first(arglist__174448);
var args = cljs.core.rest(arglist__174448);
return G__174446__delegate(x,y,z,args);
});
G__174446.cljs$core$IFn$_invoke$arity$variadic = G__174446__delegate;
return G__174446;
})()
;
G__174445 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__174445__0.call(this);
case 1:
return G__174445__1.call(this,x);
case 2:
return G__174445__2.call(this,x,y);
case 3:
return G__174445__3.call(this,x,y,z);
default:
var G__174449 = null;
if (arguments.length > 3) {
var G__174450__i = 0, G__174450__a = new Array(arguments.length -  3);
while (G__174450__i < G__174450__a.length) {G__174450__a[G__174450__i] = arguments[G__174450__i + 3]; ++G__174450__i;}
G__174449 = new cljs.core.IndexedSeq(G__174450__a,0);
}
return G__174445__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__174449);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174445.cljs$lang$maxFixedArity = 3;
G__174445.cljs$lang$applyTo = G__174445__4.cljs$lang$applyTo;
G__174445.cljs$core$IFn$_invoke$arity$0 = G__174445__0;
G__174445.cljs$core$IFn$_invoke$arity$1 = G__174445__1;
G__174445.cljs$core$IFn$_invoke$arity$2 = G__174445__2;
G__174445.cljs$core$IFn$_invoke$arity$3 = G__174445__3;
G__174445.cljs$core$IFn$_invoke$arity$variadic = G__174445__4.cljs$core$IFn$_invoke$arity$variadic;
return G__174445;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__174451 = null;
var G__174451__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__174451__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174415 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__174415) : f.call(null,G__174415));
})(),(function (){var G__174416 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__174416) : g.call(null,G__174416));
})(),(function (){var G__174417 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__174417) : h.call(null,G__174417));
})()],null));
});
var G__174451__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174418 = x;
var G__174419 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__174418,G__174419) : f.call(null,G__174418,G__174419));
})(),(function (){var G__174420 = x;
var G__174421 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__174420,G__174421) : g.call(null,G__174420,G__174421));
})(),(function (){var G__174422 = x;
var G__174423 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__174422,G__174423) : h.call(null,G__174422,G__174423));
})()],null));
});
var G__174451__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__174424 = x;
var G__174425 = y;
var G__174426 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__174424,G__174425,G__174426) : f.call(null,G__174424,G__174425,G__174426));
})(),(function (){var G__174427 = x;
var G__174428 = y;
var G__174429 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__174427,G__174428,G__174429) : g.call(null,G__174427,G__174428,G__174429));
})(),(function (){var G__174430 = x;
var G__174431 = y;
var G__174432 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__174430,G__174431,G__174432) : h.call(null,G__174430,G__174431,G__174432));
})()],null));
});
var G__174451__4 = (function() { 
var G__174452__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__174452 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__174453__i = 0, G__174453__a = new Array(arguments.length -  3);
while (G__174453__i < G__174453__a.length) {G__174453__a[G__174453__i] = arguments[G__174453__i + 3]; ++G__174453__i;}
  args = new cljs.core.IndexedSeq(G__174453__a,0);
} 
return G__174452__delegate.call(this,x,y,z,args);};
G__174452.cljs$lang$maxFixedArity = 3;
G__174452.cljs$lang$applyTo = (function (arglist__174454){
var x = cljs.core.first(arglist__174454);
arglist__174454 = cljs.core.next(arglist__174454);
var y = cljs.core.first(arglist__174454);
arglist__174454 = cljs.core.next(arglist__174454);
var z = cljs.core.first(arglist__174454);
var args = cljs.core.rest(arglist__174454);
return G__174452__delegate(x,y,z,args);
});
G__174452.cljs$core$IFn$_invoke$arity$variadic = G__174452__delegate;
return G__174452;
})()
;
G__174451 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__174451__0.call(this);
case 1:
return G__174451__1.call(this,x);
case 2:
return G__174451__2.call(this,x,y);
case 3:
return G__174451__3.call(this,x,y,z);
default:
var G__174455 = null;
if (arguments.length > 3) {
var G__174456__i = 0, G__174456__a = new Array(arguments.length -  3);
while (G__174456__i < G__174456__a.length) {G__174456__a[G__174456__i] = arguments[G__174456__i + 3]; ++G__174456__i;}
G__174455 = new cljs.core.IndexedSeq(G__174456__a,0);
}
return G__174451__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__174455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174451.cljs$lang$maxFixedArity = 3;
G__174451.cljs$lang$applyTo = G__174451__4.cljs$lang$applyTo;
G__174451.cljs$core$IFn$_invoke$arity$0 = G__174451__0;
G__174451.cljs$core$IFn$_invoke$arity$1 = G__174451__1;
G__174451.cljs$core$IFn$_invoke$arity$2 = G__174451__2;
G__174451.cljs$core$IFn$_invoke$arity$3 = G__174451__3;
G__174451.cljs$core$IFn$_invoke$arity$variadic = G__174451__4.cljs$core$IFn$_invoke$arity$variadic;
return G__174451;
})()
});
var juxt__4 = (function() { 
var G__174457__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__174458 = null;
var G__174458__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__174345_SHARP_,p2__174346_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__174345_SHARP_,(function (){return (p2__174346_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__174346_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__174346_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__174458__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__174347_SHARP_,p2__174348_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__174347_SHARP_,(function (){var G__174433 = x;
return (p2__174348_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__174348_SHARP_.cljs$core$IFn$_invoke$arity$1(G__174433) : p2__174348_SHARP_.call(null,G__174433));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__174458__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__174349_SHARP_,p2__174350_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__174349_SHARP_,(function (){var G__174434 = x;
var G__174435 = y;
return (p2__174350_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__174350_SHARP_.cljs$core$IFn$_invoke$arity$2(G__174434,G__174435) : p2__174350_SHARP_.call(null,G__174434,G__174435));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__174458__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__174351_SHARP_,p2__174352_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__174351_SHARP_,(function (){var G__174436 = x;
var G__174437 = y;
var G__174438 = z;
return (p2__174352_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__174352_SHARP_.cljs$core$IFn$_invoke$arity$3(G__174436,G__174437,G__174438) : p2__174352_SHARP_.call(null,G__174436,G__174437,G__174438));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__174458__4 = (function() { 
var G__174459__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__174353_SHARP_,p2__174354_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__174353_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__174354_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__174459 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__174460__i = 0, G__174460__a = new Array(arguments.length -  3);
while (G__174460__i < G__174460__a.length) {G__174460__a[G__174460__i] = arguments[G__174460__i + 3]; ++G__174460__i;}
  args = new cljs.core.IndexedSeq(G__174460__a,0);
} 
return G__174459__delegate.call(this,x,y,z,args);};
G__174459.cljs$lang$maxFixedArity = 3;
G__174459.cljs$lang$applyTo = (function (arglist__174461){
var x = cljs.core.first(arglist__174461);
arglist__174461 = cljs.core.next(arglist__174461);
var y = cljs.core.first(arglist__174461);
arglist__174461 = cljs.core.next(arglist__174461);
var z = cljs.core.first(arglist__174461);
var args = cljs.core.rest(arglist__174461);
return G__174459__delegate(x,y,z,args);
});
G__174459.cljs$core$IFn$_invoke$arity$variadic = G__174459__delegate;
return G__174459;
})()
;
G__174458 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__174458__0.call(this);
case 1:
return G__174458__1.call(this,x);
case 2:
return G__174458__2.call(this,x,y);
case 3:
return G__174458__3.call(this,x,y,z);
default:
var G__174462 = null;
if (arguments.length > 3) {
var G__174463__i = 0, G__174463__a = new Array(arguments.length -  3);
while (G__174463__i < G__174463__a.length) {G__174463__a[G__174463__i] = arguments[G__174463__i + 3]; ++G__174463__i;}
G__174462 = new cljs.core.IndexedSeq(G__174463__a,0);
}
return G__174458__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__174462);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174458.cljs$lang$maxFixedArity = 3;
G__174458.cljs$lang$applyTo = G__174458__4.cljs$lang$applyTo;
G__174458.cljs$core$IFn$_invoke$arity$0 = G__174458__0;
G__174458.cljs$core$IFn$_invoke$arity$1 = G__174458__1;
G__174458.cljs$core$IFn$_invoke$arity$2 = G__174458__2;
G__174458.cljs$core$IFn$_invoke$arity$3 = G__174458__3;
G__174458.cljs$core$IFn$_invoke$arity$variadic = G__174458__4.cljs$core$IFn$_invoke$arity$variadic;
return G__174458;
})()
;})(fs__$1))
};
var G__174457 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__174464__i = 0, G__174464__a = new Array(arguments.length -  3);
while (G__174464__i < G__174464__a.length) {G__174464__a[G__174464__i] = arguments[G__174464__i + 3]; ++G__174464__i;}
  fs = new cljs.core.IndexedSeq(G__174464__a,0);
} 
return G__174457__delegate.call(this,f,g,h,fs);};
G__174457.cljs$lang$maxFixedArity = 3;
G__174457.cljs$lang$applyTo = (function (arglist__174465){
var f = cljs.core.first(arglist__174465);
arglist__174465 = cljs.core.next(arglist__174465);
var g = cljs.core.first(arglist__174465);
arglist__174465 = cljs.core.next(arglist__174465);
var h = cljs.core.first(arglist__174465);
var fs = cljs.core.rest(arglist__174465);
return G__174457__delegate(f,g,h,fs);
});
G__174457.cljs$core$IFn$_invoke$arity$variadic = G__174457__delegate;
return G__174457;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__174466 = null;
if (arguments.length > 3) {
var G__174467__i = 0, G__174467__a = new Array(arguments.length -  3);
while (G__174467__i < G__174467__a.length) {G__174467__a[G__174467__i] = arguments[G__174467__i + 3]; ++G__174467__i;}
G__174466 = new cljs.core.IndexedSeq(G__174467__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__174466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__174468 = cljs.core.next(coll);
coll = G__174468;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__174469 = (n - (1));
var G__174470 = cljs.core.next(coll);
n = G__174469;
coll = G__174470;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__174474 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174474,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174474,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174474,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_174482 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$237.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__17470__auto__ = cljs.core.constant$keyword$243.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__174483_174489 = cljs.core.first(coll);
var G__174484_174490 = writer;
var G__174485_174491 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__174483_174489,G__174484_174490,G__174485_174491) : print_one.call(null,G__174483_174489,G__174484_174490,G__174485_174491));
} else {
}

var coll_174492__$1 = cljs.core.next(coll);
var n_174493 = (cljs.core.constant$keyword$237.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_174492__$1) && (((n_174493 == null)) || (!((n_174493 === (0)))))){
cljs.core._write(writer,sep);

var G__174486_174494 = cljs.core.first(coll_174492__$1);
var G__174487_174495 = writer;
var G__174488_174496 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__174486_174494,G__174487_174495,G__174488_174496) : print_one.call(null,G__174486_174494,G__174487_174495,G__174488_174496));

var G__174497 = cljs.core.next(coll_174492__$1);
var G__174498 = (n_174493 - (1));
coll_174492__$1 = G__174497;
n_174493 = G__174498;
continue;
} else {
if((cljs.core.seq(coll_174492__$1)) && ((n_174493 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__17470__auto__ = cljs.core.constant$keyword$243.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_174482;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__174503 = cljs.core.seq(ss);
var chunk__174504 = null;
var count__174505 = (0);
var i__174506 = (0);
while(true){
if((i__174506 < count__174505)){
var s = chunk__174504.cljs$core$IIndexed$_nth$arity$2(null,i__174506);
cljs.core._write(writer,s);

var G__174507 = seq__174503;
var G__174508 = chunk__174504;
var G__174509 = count__174505;
var G__174510 = (i__174506 + (1));
seq__174503 = G__174507;
chunk__174504 = G__174508;
count__174505 = G__174509;
i__174506 = G__174510;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__174503);
if(temp__4126__auto__){
var seq__174503__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__174503__$1)){
var c__18257__auto__ = cljs.core.chunk_first(seq__174503__$1);
var G__174511 = cljs.core.chunk_rest(seq__174503__$1);
var G__174512 = c__18257__auto__;
var G__174513 = cljs.core.count(c__18257__auto__);
var G__174514 = (0);
seq__174503 = G__174511;
chunk__174504 = G__174512;
count__174505 = G__174513;
i__174506 = G__174514;
continue;
} else {
var s = cljs.core.first(seq__174503__$1);
cljs.core._write(writer,s);

var G__174515 = cljs.core.next(seq__174503__$1);
var G__174516 = null;
var G__174517 = (0);
var G__174518 = (0);
seq__174503 = G__174515;
chunk__174504 = G__174516;
count__174505 = G__174517;
i__174506 = G__174518;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__174519__i = 0, G__174519__a = new Array(arguments.length -  1);
while (G__174519__i < G__174519__a.length) {G__174519__a[G__174519__i] = arguments[G__174519__i + 1]; ++G__174519__i;}
  ss = new cljs.core.IndexedSeq(G__174519__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__174520){
var writer = cljs.core.first(arglist__174520);
var ss = cljs.core.rest(arglist__174520);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj174522 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj174522;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__174525 = "[\\\\\"\b\f\n\r\t]";
var G__174526 = "g";
return RegExp(G__174525,G__174526);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__17458__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$235);
if(cljs.core.truth_(and__17458__auto__)){
var and__17458__auto____$1 = (function (){var G__174540 = obj;
if(G__174540){
var bit__18151__auto__ = (G__174540.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__18151__auto__) || (G__174540.cljs$core$IMeta$)){
return true;
} else {
if((!G__174540.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__174540);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__174540);
}
})();
if(and__17458__auto____$1){
return cljs.core.meta(obj);
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__174541_174551 = cljs.core.meta(obj);
var G__174542_174552 = writer;
var G__174543_174553 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__174541_174551,G__174542_174552,G__174543_174553) : cljs.core.pr_writer.call(null,G__174541_174551,G__174542_174552,G__174543_174553));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__174544 = obj;
if(G__174544){
var bit__18144__auto__ = (G__174544.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18144__auto__) || (G__174544.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__174545 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__174546 = cljs.core.pr_writer;
var G__174547 = writer;
var G__174548 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__174545,G__174546,G__174547,G__174548) : cljs.core.print_map.call(null,G__174545,G__174546,G__174547,G__174548));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__174549 = obj;
return goog.isString(G__174549);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$234.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__174554 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__174554;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__174550 = obj;
if(G__174550){
var bit__18151__auto__ = (G__174550.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__18151__auto__) || (G__174550.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__174550.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__174550);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__174550);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$244.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__174558 = obj;
var G__174559 = writer;
var G__174560 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$245,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__174558,G__174559,G__174560) : alt_impl.call(null,G__174558,G__174559,G__174560));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__174565 = cljs.core.seq(cljs.core.next(objs));
var chunk__174566 = null;
var count__174567 = (0);
var i__174568 = (0);
while(true){
if((i__174568 < count__174567)){
var obj = chunk__174566.cljs$core$IIndexed$_nth$arity$2(null,i__174568);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__174569 = seq__174565;
var G__174570 = chunk__174566;
var G__174571 = count__174567;
var G__174572 = (i__174568 + (1));
seq__174565 = G__174569;
chunk__174566 = G__174570;
count__174567 = G__174571;
i__174568 = G__174572;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__174565);
if(temp__4126__auto__){
var seq__174565__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__174565__$1)){
var c__18257__auto__ = cljs.core.chunk_first(seq__174565__$1);
var G__174573 = cljs.core.chunk_rest(seq__174565__$1);
var G__174574 = c__18257__auto__;
var G__174575 = cljs.core.count(c__18257__auto__);
var G__174576 = (0);
seq__174565 = G__174573;
chunk__174566 = G__174574;
count__174567 = G__174575;
i__174568 = G__174576;
continue;
} else {
var obj = cljs.core.first(seq__174565__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__174577 = cljs.core.next(seq__174565__$1);
var G__174578 = null;
var G__174579 = (0);
var G__174580 = (0);
seq__174565 = G__174577;
chunk__174566 = G__174578;
count__174567 = G__174579;
i__174568 = G__174580;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$233))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__174581__i = 0, G__174581__a = new Array(arguments.length -  0);
while (G__174581__i < G__174581__a.length) {G__174581__a[G__174581__i] = arguments[G__174581__i + 0]; ++G__174581__i;}
  objs = new cljs.core.IndexedSeq(G__174581__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__174582){
var objs = cljs.core.seq(arglist__174582);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__174583__i = 0, G__174583__a = new Array(arguments.length -  0);
while (G__174583__i < G__174583__a.length) {G__174583__a[G__174583__i] = arguments[G__174583__i + 0]; ++G__174583__i;}
  objs = new cljs.core.IndexedSeq(G__174583__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__174584){
var objs = cljs.core.seq(arglist__174584);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__174585__i = 0, G__174585__a = new Array(arguments.length -  0);
while (G__174585__i < G__174585__a.length) {G__174585__a[G__174585__i] = arguments[G__174585__i + 0]; ++G__174585__i;}
  objs = new cljs.core.IndexedSeq(G__174585__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__174586){
var objs = cljs.core.seq(arglist__174586);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$234,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__174587__i = 0, G__174587__a = new Array(arguments.length -  0);
while (G__174587__i < G__174587__a.length) {G__174587__a[G__174587__i] = arguments[G__174587__i + 0]; ++G__174587__i;}
  objs = new cljs.core.IndexedSeq(G__174587__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__174588){
var objs = cljs.core.seq(arglist__174588);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$234,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__174589__i = 0, G__174589__a = new Array(arguments.length -  0);
while (G__174589__i < G__174589__a.length) {G__174589__a[G__174589__i] = arguments[G__174589__i + 0]; ++G__174589__i;}
  objs = new cljs.core.IndexedSeq(G__174589__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__174590){
var objs = cljs.core.seq(arglist__174590);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$234,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__174591__i = 0, G__174591__a = new Array(arguments.length -  0);
while (G__174591__i < G__174591__a.length) {G__174591__a[G__174591__i] = arguments[G__174591__i + 0]; ++G__174591__i;}
  objs = new cljs.core.IndexedSeq(G__174591__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__174592){
var objs = cljs.core.seq(arglist__174592);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$234,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__174593__i = 0, G__174593__a = new Array(arguments.length -  0);
while (G__174593__i < G__174593__a.length) {G__174593__a[G__174593__i] = arguments[G__174593__i + 0]; ++G__174593__i;}
  objs = new cljs.core.IndexedSeq(G__174593__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__174594){
var objs = cljs.core.seq(arglist__174594);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__174595__i = 0, G__174595__a = new Array(arguments.length -  0);
while (G__174595__i < G__174595__a.length) {G__174595__a[G__174595__i] = arguments[G__174595__i + 0]; ++G__174595__i;}
  objs = new cljs.core.IndexedSeq(G__174595__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__174596){
var objs = cljs.core.seq(arglist__174596);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__174603_174609 = cljs.core.key(e);
var G__174604_174610 = w;
var G__174605_174611 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__174603_174609,G__174604_174610,G__174605_174611) : print_one.call(null,G__174603_174609,G__174604_174610,G__174605_174611));

cljs.core._write(w," ");

var G__174606 = cljs.core.val(e);
var G__174607 = w;
var G__174608 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__174606,G__174607,G__174608) : print_one.call(null,G__174606,G__174607,G__174608));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__174612__i = 0, G__174612__a = new Array(arguments.length -  2);
while (G__174612__i < G__174612__a.length) {G__174612__a[G__174612__i] = arguments[G__174612__i + 2]; ++G__174612__i;}
  args = new cljs.core.IndexedSeq(G__174612__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__174613){
var iref = cljs.core.first(arglist__174613);
arglist__174613 = cljs.core.next(arglist__174613);
var f = cljs.core.first(arglist__174613);
var args = cljs.core.rest(arglist__174613);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__174616 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__174616) : cljs.core.atom.call(null,G__174616));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__174618 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174618) : cljs.core.deref.call(null,G__174618));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__174619_SHARP_,p2__174620_SHARP_){
var ret = (function (){var G__174623 = p1__174619_SHARP_;
var G__174624 = p2__174620_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174623,G__174624) : rf.call(null,G__174623,G__174624));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__174627 = null;
var G__174627__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__174627__1 = (function (result){
var G__174626 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__174626) : rf.call(null,G__174626));
});
var G__174627__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__174627 = function(result,input){
switch(arguments.length){
case 0:
return G__174627__0.call(this);
case 1:
return G__174627__1.call(this,result);
case 2:
return G__174627__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174627.cljs$core$IFn$_invoke$arity$0 = G__174627__0;
G__174627.cljs$core$IFn$_invoke$arity$1 = G__174627__1;
G__174627.cljs$core$IFn$_invoke$arity$2 = G__174627__2;
return G__174627;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$242);
return ((function (pa){
return (function() {
var G__174636 = null;
var G__174636__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__174636__1 = (function (result){
var G__174632 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__174632) : rf.call(null,G__174632));
});
var G__174636__2 = (function (result,input){
var prior = (function (){var G__174633 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174633) : cljs.core.deref.call(null,G__174633));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__174634 = result;
var G__174635 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__174634,G__174635) : rf.call(null,G__174634,G__174635));
}
});
G__174636 = function(result,input){
switch(arguments.length){
case 0:
return G__174636__0.call(this);
case 1:
return G__174636__1.call(this,result);
case 2:
return G__174636__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__174636.cljs$core$IFn$_invoke$arity$0 = G__174636__0;
G__174636.cljs$core$IFn$_invoke$arity$1 = G__174636__1;
G__174636.cljs$core$IFn$_invoke$arity$2 = G__174636__2;
return G__174636;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__18448__auto__ = this;
return cljs.core.es6_iterator(this__18448__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__174638_SHARP_,p2__174637_SHARP_){
var G__174640 = p2__174637_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__174640) : proc.call(null,G__174640));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj174642 = {};
return obj174642;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__17458__auto__ = x;
if(and__17458__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__17458__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__18114__auto__ = (((x == null))?null:x);
return (function (){var or__17470__auto__ = (cljs.core._clj__GT_js[(function (){var G__174646 = x__18114__auto__;
return goog.typeOf(G__174646);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__17458__auto__ = x;
if(and__17458__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__17458__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__18114__auto__ = (((x == null))?null:x);
return (function (){var or__17470__auto__ = (cljs.core._key__GT_js[(function (){var G__174650 = x__18114__auto__;
return goog.typeOf(G__174650);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__174653 = k;
if(G__174653){
var bit__18151__auto__ = null;
if(cljs.core.truth_((function (){var or__17470__auto__ = bit__18151__auto__;
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return G__174653.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__174653.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__174653);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__174653);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__174654 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__174654) : cljs.core.clj__GT_js.call(null,G__174654));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__174670 = x;
if(G__174670){
var bit__18151__auto__ = null;
if(cljs.core.truth_((function (){var or__17470__auto__ = bit__18151__auto__;
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return G__174670.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__174670.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__174670);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__174670);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj174672 = {};
return obj174672;
})();
var seq__174673_174683 = cljs.core.seq(x);
var chunk__174674_174684 = null;
var count__174675_174685 = (0);
var i__174676_174686 = (0);
while(true){
if((i__174676_174686 < count__174675_174685)){
var vec__174677_174687 = chunk__174674_174684.cljs$core$IIndexed$_nth$arity$2(null,i__174676_174686);
var k_174688 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174677_174687,(0),null);
var v_174689 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174677_174687,(1),null);
(m[cljs.core.key__GT_js(k_174688)] = clj__GT_js(v_174689));

var G__174690 = seq__174673_174683;
var G__174691 = chunk__174674_174684;
var G__174692 = count__174675_174685;
var G__174693 = (i__174676_174686 + (1));
seq__174673_174683 = G__174690;
chunk__174674_174684 = G__174691;
count__174675_174685 = G__174692;
i__174676_174686 = G__174693;
continue;
} else {
var temp__4126__auto___174694 = cljs.core.seq(seq__174673_174683);
if(temp__4126__auto___174694){
var seq__174673_174695__$1 = temp__4126__auto___174694;
if(cljs.core.chunked_seq_QMARK_(seq__174673_174695__$1)){
var c__18257__auto___174696 = cljs.core.chunk_first(seq__174673_174695__$1);
var G__174697 = cljs.core.chunk_rest(seq__174673_174695__$1);
var G__174698 = c__18257__auto___174696;
var G__174699 = cljs.core.count(c__18257__auto___174696);
var G__174700 = (0);
seq__174673_174683 = G__174697;
chunk__174674_174684 = G__174698;
count__174675_174685 = G__174699;
i__174676_174686 = G__174700;
continue;
} else {
var vec__174678_174701 = cljs.core.first(seq__174673_174695__$1);
var k_174702 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174678_174701,(0),null);
var v_174703 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174678_174701,(1),null);
(m[cljs.core.key__GT_js(k_174702)] = clj__GT_js(v_174703));

var G__174704 = cljs.core.next(seq__174673_174695__$1);
var G__174705 = null;
var G__174706 = (0);
var G__174707 = (0);
seq__174673_174683 = G__174704;
chunk__174674_174684 = G__174705;
count__174675_174685 = G__174706;
i__174676_174686 = G__174707;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__174679_174708 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__174680_174709 = null;
var count__174681_174710 = (0);
var i__174682_174711 = (0);
while(true){
if((i__174682_174711 < count__174681_174710)){
var x_174712__$1 = chunk__174680_174709.cljs$core$IIndexed$_nth$arity$2(null,i__174682_174711);
arr.push(x_174712__$1);

var G__174713 = seq__174679_174708;
var G__174714 = chunk__174680_174709;
var G__174715 = count__174681_174710;
var G__174716 = (i__174682_174711 + (1));
seq__174679_174708 = G__174713;
chunk__174680_174709 = G__174714;
count__174681_174710 = G__174715;
i__174682_174711 = G__174716;
continue;
} else {
var temp__4126__auto___174717 = cljs.core.seq(seq__174679_174708);
if(temp__4126__auto___174717){
var seq__174679_174718__$1 = temp__4126__auto___174717;
if(cljs.core.chunked_seq_QMARK_(seq__174679_174718__$1)){
var c__18257__auto___174719 = cljs.core.chunk_first(seq__174679_174718__$1);
var G__174720 = cljs.core.chunk_rest(seq__174679_174718__$1);
var G__174721 = c__18257__auto___174719;
var G__174722 = cljs.core.count(c__18257__auto___174719);
var G__174723 = (0);
seq__174679_174708 = G__174720;
chunk__174680_174709 = G__174721;
count__174681_174710 = G__174722;
i__174682_174711 = G__174723;
continue;
} else {
var x_174724__$1 = cljs.core.first(seq__174679_174718__$1);
arr.push(x_174724__$1);

var G__174725 = cljs.core.next(seq__174679_174718__$1);
var G__174726 = null;
var G__174727 = (0);
var G__174728 = (0);
seq__174679_174708 = G__174725;
chunk__174680_174709 = G__174726;
count__174681_174710 = G__174727;
i__174682_174711 = G__174728;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj174730 = {};
return obj174730;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__17458__auto__ = x;
if(and__17458__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__17458__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__18114__auto__ = (((x == null))?null:x);
return (function (){var or__17470__auto__ = (cljs.core._js__GT_clj[(function (){var G__174734 = x__18114__auto__;
return goog.typeOf(G__174734);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$246,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__174791__delegate = function (x,opts){
var map__174764 = opts;
var map__174764__$1 = ((cljs.core.seq_QMARK_(map__174764))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__174764):map__174764);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__174764__$1,cljs.core.constant$keyword$246);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__174764,map__174764__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__174780 = x__$1;
if(G__174780){
var bit__18151__auto__ = null;
if(cljs.core.truth_((function (){var or__17470__auto__ = bit__18151__auto__;
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return G__174780.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__174780.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__174780);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__174780);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__18226__auto__ = ((function (map__174764,map__174764__$1,keywordize_keys,keyfn){
return (function iter__174781(s__174782){
return (new cljs.core.LazySeq(null,((function (map__174764,map__174764__$1,keywordize_keys,keyfn){
return (function (){
var s__174782__$1 = s__174782;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__174782__$1);
if(temp__4126__auto__){
var s__174782__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__174782__$2)){
var c__18224__auto__ = cljs.core.chunk_first(s__174782__$2);
var size__18225__auto__ = cljs.core.count(c__18224__auto__);
var b__174784 = cljs.core.chunk_buffer(size__18225__auto__);
if((function (){var i__174783 = (0);
while(true){
if((i__174783 < size__18225__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__18224__auto__,i__174783);
cljs.core.chunk_append(b__174784,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__174789 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__174789) : keyfn.call(null,G__174789));
})(),thisfn((x__$1[k]))], null));

var G__174792 = (i__174783 + (1));
i__174783 = G__174792;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__174784),iter__174781(cljs.core.chunk_rest(s__174782__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__174784),null);
}
} else {
var k = cljs.core.first(s__174782__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__174790 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__174790) : keyfn.call(null,G__174790));
})(),thisfn((x__$1[k]))], null),iter__174781(cljs.core.rest(s__174782__$2)));
}
} else {
return null;
}
break;
}
});})(map__174764,map__174764__$1,keywordize_keys,keyfn))
,null,null));
});})(map__174764,map__174764__$1,keywordize_keys,keyfn))
;
return iter__18226__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__174764,map__174764__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__174791 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__174793__i = 0, G__174793__a = new Array(arguments.length -  1);
while (G__174793__i < G__174793__a.length) {G__174793__a[G__174793__i] = arguments[G__174793__i + 1]; ++G__174793__i;}
  opts = new cljs.core.IndexedSeq(G__174793__a,0);
} 
return G__174791__delegate.call(this,x,opts);};
G__174791.cljs$lang$maxFixedArity = 1;
G__174791.cljs$lang$applyTo = (function (arglist__174794){
var x = cljs.core.first(arglist__174794);
var opts = cljs.core.rest(arglist__174794);
return G__174791__delegate(x,opts);
});
G__174791.cljs$core$IFn$_invoke$arity$variadic = G__174791__delegate;
return G__174791;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__174795 = null;
if (arguments.length > 1) {
var G__174796__i = 0, G__174796__a = new Array(arguments.length -  1);
while (G__174796__i < G__174796__a.length) {G__174796__a[G__174796__i] = arguments[G__174796__i + 1]; ++G__174796__i;}
G__174795 = new cljs.core.IndexedSeq(G__174796__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__174795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__174799 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__174799) : cljs.core.atom.call(null,G__174799));
})();
return ((function (mem){
return (function() { 
var G__174801__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__174800 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174800) : cljs.core.deref.call(null,G__174800));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__174801 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__174802__i = 0, G__174802__a = new Array(arguments.length -  0);
while (G__174802__i < G__174802__a.length) {G__174802__a[G__174802__i] = arguments[G__174802__i + 0]; ++G__174802__i;}
  args = new cljs.core.IndexedSeq(G__174802__a,0);
} 
return G__174801__delegate.call(this,args);};
G__174801.cljs$lang$maxFixedArity = 0;
G__174801.cljs$lang$applyTo = (function (arglist__174803){
var args = cljs.core.seq(arglist__174803);
return G__174801__delegate(args);
});
G__174801.cljs$core$IFn$_invoke$arity$variadic = G__174801__delegate;
return G__174801;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__174805 = ret;
f = G__174805;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__174806__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__174806 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__174807__i = 0, G__174807__a = new Array(arguments.length -  1);
while (G__174807__i < G__174807__a.length) {G__174807__a[G__174807__i] = arguments[G__174807__i + 1]; ++G__174807__i;}
  args = new cljs.core.IndexedSeq(G__174807__a,0);
} 
return G__174806__delegate.call(this,f,args);};
G__174806.cljs$lang$maxFixedArity = 1;
G__174806.cljs$lang$applyTo = (function (arglist__174808){
var f = cljs.core.first(arglist__174808);
var args = cljs.core.rest(arglist__174808);
return G__174806__delegate(f,args);
});
G__174806.cljs$core$IFn$_invoke$arity$variadic = G__174806__delegate;
return G__174806;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__174809 = null;
if (arguments.length > 1) {
var G__174810__i = 0, G__174810__a = new Array(arguments.length -  1);
while (G__174810__i < G__174810__a.length) {G__174810__a[G__174810__i] = arguments[G__174810__i + 1]; ++G__174810__i;}
G__174809 = new cljs.core.IndexedSeq(G__174810__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__174809);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__174813 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__174813) : Math.floor.call(null,G__174813));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__174815 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__174815) : f.call(null,G__174815));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$247,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$248,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$249,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__174817 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__174817) : cljs.core.atom.call(null,G__174817));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__174818__i = 0, G__174818__a = new Array(arguments.length -  1);
while (G__174818__i < G__174818__a.length) {G__174818__a[G__174818__i] = arguments[G__174818__i + 1]; ++G__174818__i;}
  args = new cljs.core.IndexedSeq(G__174818__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__174819){
var f = cljs.core.first(arglist__174819);
var args = cljs.core.rest(arglist__174819);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__174884 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174884) : cljs.core.deref.call(null,G__174884));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__17470__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$249.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
var and__17458__auto__ = cljs.core.vector_QMARK_(parent);
if(and__17458__auto__){
var and__17458__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__17458__auto____$1){
var and__17458__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__17458__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__174909 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__174907 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__174907) : child.call(null,G__174907));
})(),(function (){var G__174908 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__174908) : parent.call(null,G__174908));
})());
var G__174910 = (i + (1));
ret = G__174909;
i = G__174910;
continue;
}
break;
}
} else {
return and__17458__auto____$2;
}
} else {
return and__17458__auto____$1;
}
} else {
return and__17458__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__174914 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174914) : cljs.core.deref.call(null,G__174914));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$247.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__174918 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174918) : cljs.core.deref.call(null,G__174918));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$249.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__174922 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174922) : cljs.core.deref.call(null,G__174922));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$248.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$247.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$248.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$249.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__174931 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__174931) : targets.call(null,G__174931));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__174932 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__174932) : sources.call(null,G__174932));
})()));
});})(tp,td,ta))
;
var or__17470__auto__ = ((cljs.core.contains_QMARK_((function (){var G__174936 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__174936) : tp.call(null,G__174936));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__174937 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__174937) : ta.call(null,G__174937));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__174938 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__174938) : ta.call(null,G__174938));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$247,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$247.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$249,tf(cljs.core.constant$keyword$249.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$248,tf(cljs.core.constant$keyword$248.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$247.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__174945 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__174945) : parentMap.call(null,G__174945));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__174946 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__174946) : parentMap.call(null,G__174946));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__174939_SHARP_){
return cljs.core.cons(cljs.core.first(p1__174939_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__174939_SHARP_),cljs.core.second(p1__174939_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__174947 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__174947) : parentMap.call(null,G__174947));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__174940_SHARP_,p2__174941_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__174940_SHARP_,p2__174941_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__174950 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174950) : cljs.core.deref.call(null,G__174950));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__174951 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174951) : cljs.core.deref.call(null,G__174951));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__174967 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174967) : cljs.core.deref.call(null,G__174967));
})().call(null,x);
var or__17470__auto__ = (cljs.core.truth_((function (){var and__17458__auto__ = xprefs;
if(cljs.core.truth_(and__17458__auto__)){
var G__174969 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__174969) : xprefs.call(null,G__174969));
} else {
return and__17458__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__174970 = cljs.core.rest(ps);
ps = G__174970;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17470__auto____$1)){
return or__17470__auto____$1;
} else {
var or__17470__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__174971 = cljs.core.rest(ps);
ps = G__174971;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__17470__auto____$2)){
return or__17470__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__17470__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__17470__auto__)){
return or__17470__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__174985){
var vec__174986 = p__174985;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174986,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__174986,(1),null);
var e = vec__174986;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__174987 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174987) : cljs.core.deref.call(null,G__174987));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__17470__auto__ = (be == null);
if(or__17470__auto__){
return or__17470__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__174988 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174988) : cljs.core.deref.call(null,G__174988));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__174989 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174989) : cljs.core.deref.call(null,G__174989));
})(),(function (){var G__174990 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__174990) : cljs.core.deref.call(null,G__174990));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj174992 = {};
return obj174992;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__17458__auto__ = mf;
if(and__17458__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__17458__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__18114__auto__ = (((mf == null))?null:mf);
return (function (){var or__17470__auto__ = (cljs.core._reset[(function (){var G__174996 = x__18114__auto__;
return goog.typeOf(G__174996);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._reset["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__17458__auto__ = mf;
if(and__17458__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__17458__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__18114__auto__ = (((mf == null))?null:mf);
return (function (){var or__17470__auto__ = (cljs.core._add_method[(function (){var G__175000 = x__18114__auto__;
return goog.typeOf(G__175000);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._add_method["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__17458__auto__ = mf;
if(and__17458__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__17458__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__18114__auto__ = (((mf == null))?null:mf);
return (function (){var or__17470__auto__ = (cljs.core._remove_method[(function (){var G__175004 = x__18114__auto__;
return goog.typeOf(G__175004);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._remove_method["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__17458__auto__ = mf;
if(and__17458__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__17458__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__18114__auto__ = (((mf == null))?null:mf);
return (function (){var or__17470__auto__ = (cljs.core._prefer_method[(function (){var G__175008 = x__18114__auto__;
return goog.typeOf(G__175008);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__17458__auto__ = mf;
if(and__17458__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__17458__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__18114__auto__ = (((mf == null))?null:mf);
return (function (){var or__17470__auto__ = (cljs.core._get_method[(function (){var G__175012 = x__18114__auto__;
return goog.typeOf(G__175012);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._get_method["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__17458__auto__ = mf;
if(and__17458__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__17458__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__18114__auto__ = (((mf == null))?null:mf);
return (function (){var or__17470__auto__ = (cljs.core._methods[(function (){var G__175016 = x__18114__auto__;
return goog.typeOf(G__175016);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._methods["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__17458__auto__ = mf;
if(and__17458__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__17458__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__18114__auto__ = (((mf == null))?null:mf);
return (function (){var or__17470__auto__ = (cljs.core._prefers[(function (){var G__175020 = x__18114__auto__;
return goog.typeOf(G__175020);
})()]);
if(or__17470__auto__){
return or__17470__auto__;
} else {
var or__17470__auto____$1 = (cljs.core._prefers["_"]);
if(or__17470__auto____$1){
return or__17470__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__175022 = this$__$1;
return goog.getUid(G__175022);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__175023 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__175023) : cljs.core.deref.call(null,G__175023));
})(),(function (){var G__175024 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__175024) : cljs.core.deref.call(null,G__175024));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__175025 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__175025) : cljs.core.deref.call(null,G__175025));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__175026 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__175026) : cljs.core.deref.call(null,G__175026));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__175027 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__175027) : cljs.core.deref.call(null,G__175027));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__175028 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__175028) : cljs.core.deref.call(null,G__175028));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__175869 = null;
var G__175869__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__175869__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175029 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__175029) : self__.dispatch_fn.call(null,G__175029));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175030 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__175030) : target_fn.call(null,G__175030));
});
var G__175869__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175031 = a;
var G__175032 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__175031,G__175032) : self__.dispatch_fn.call(null,G__175031,G__175032));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175033 = a;
var G__175034 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__175033,G__175034) : target_fn.call(null,G__175033,G__175034));
});
var G__175869__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175035 = a;
var G__175036 = b;
var G__175037 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__175035,G__175036,G__175037) : self__.dispatch_fn.call(null,G__175035,G__175036,G__175037));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175038 = a;
var G__175039 = b;
var G__175040 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__175038,G__175039,G__175040) : target_fn.call(null,G__175038,G__175039,G__175040));
});
var G__175869__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175041 = a;
var G__175042 = b;
var G__175043 = c;
var G__175044 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__175041,G__175042,G__175043,G__175044) : self__.dispatch_fn.call(null,G__175041,G__175042,G__175043,G__175044));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175045 = a;
var G__175046 = b;
var G__175047 = c;
var G__175048 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__175045,G__175046,G__175047,G__175048) : target_fn.call(null,G__175045,G__175046,G__175047,G__175048));
});
var G__175869__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175049 = a;
var G__175050 = b;
var G__175051 = c;
var G__175052 = d;
var G__175053 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__175049,G__175050,G__175051,G__175052,G__175053) : self__.dispatch_fn.call(null,G__175049,G__175050,G__175051,G__175052,G__175053));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175054 = a;
var G__175055 = b;
var G__175056 = c;
var G__175057 = d;
var G__175058 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__175054,G__175055,G__175056,G__175057,G__175058) : target_fn.call(null,G__175054,G__175055,G__175056,G__175057,G__175058));
});
var G__175869__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175059 = a;
var G__175060 = b;
var G__175061 = c;
var G__175062 = d;
var G__175063 = e;
var G__175064 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__175059,G__175060,G__175061,G__175062,G__175063,G__175064) : self__.dispatch_fn.call(null,G__175059,G__175060,G__175061,G__175062,G__175063,G__175064));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175065 = a;
var G__175066 = b;
var G__175067 = c;
var G__175068 = d;
var G__175069 = e;
var G__175070 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__175065,G__175066,G__175067,G__175068,G__175069,G__175070) : target_fn.call(null,G__175065,G__175066,G__175067,G__175068,G__175069,G__175070));
});
var G__175869__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175071 = a;
var G__175072 = b;
var G__175073 = c;
var G__175074 = d;
var G__175075 = e;
var G__175076 = f;
var G__175077 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__175071,G__175072,G__175073,G__175074,G__175075,G__175076,G__175077) : self__.dispatch_fn.call(null,G__175071,G__175072,G__175073,G__175074,G__175075,G__175076,G__175077));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175078 = a;
var G__175079 = b;
var G__175080 = c;
var G__175081 = d;
var G__175082 = e;
var G__175083 = f;
var G__175084 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__175078,G__175079,G__175080,G__175081,G__175082,G__175083,G__175084) : target_fn.call(null,G__175078,G__175079,G__175080,G__175081,G__175082,G__175083,G__175084));
});
var G__175869__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175085 = a;
var G__175086 = b;
var G__175087 = c;
var G__175088 = d;
var G__175089 = e;
var G__175090 = f;
var G__175091 = g;
var G__175092 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__175085,G__175086,G__175087,G__175088,G__175089,G__175090,G__175091,G__175092) : self__.dispatch_fn.call(null,G__175085,G__175086,G__175087,G__175088,G__175089,G__175090,G__175091,G__175092));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175093 = a;
var G__175094 = b;
var G__175095 = c;
var G__175096 = d;
var G__175097 = e;
var G__175098 = f;
var G__175099 = g;
var G__175100 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__175093,G__175094,G__175095,G__175096,G__175097,G__175098,G__175099,G__175100) : target_fn.call(null,G__175093,G__175094,G__175095,G__175096,G__175097,G__175098,G__175099,G__175100));
});
var G__175869__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175101 = a;
var G__175102 = b;
var G__175103 = c;
var G__175104 = d;
var G__175105 = e;
var G__175106 = f;
var G__175107 = g;
var G__175108 = h;
var G__175109 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__175101,G__175102,G__175103,G__175104,G__175105,G__175106,G__175107,G__175108,G__175109) : self__.dispatch_fn.call(null,G__175101,G__175102,G__175103,G__175104,G__175105,G__175106,G__175107,G__175108,G__175109));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175110 = a;
var G__175111 = b;
var G__175112 = c;
var G__175113 = d;
var G__175114 = e;
var G__175115 = f;
var G__175116 = g;
var G__175117 = h;
var G__175118 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__175110,G__175111,G__175112,G__175113,G__175114,G__175115,G__175116,G__175117,G__175118) : target_fn.call(null,G__175110,G__175111,G__175112,G__175113,G__175114,G__175115,G__175116,G__175117,G__175118));
});
var G__175869__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175119 = a;
var G__175120 = b;
var G__175121 = c;
var G__175122 = d;
var G__175123 = e;
var G__175124 = f;
var G__175125 = g;
var G__175126 = h;
var G__175127 = i;
var G__175128 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__175119,G__175120,G__175121,G__175122,G__175123,G__175124,G__175125,G__175126,G__175127,G__175128) : self__.dispatch_fn.call(null,G__175119,G__175120,G__175121,G__175122,G__175123,G__175124,G__175125,G__175126,G__175127,G__175128));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175129 = a;
var G__175130 = b;
var G__175131 = c;
var G__175132 = d;
var G__175133 = e;
var G__175134 = f;
var G__175135 = g;
var G__175136 = h;
var G__175137 = i;
var G__175138 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__175129,G__175130,G__175131,G__175132,G__175133,G__175134,G__175135,G__175136,G__175137,G__175138) : target_fn.call(null,G__175129,G__175130,G__175131,G__175132,G__175133,G__175134,G__175135,G__175136,G__175137,G__175138));
});
var G__175869__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175139 = a;
var G__175140 = b;
var G__175141 = c;
var G__175142 = d;
var G__175143 = e;
var G__175144 = f;
var G__175145 = g;
var G__175146 = h;
var G__175147 = i;
var G__175148 = j;
var G__175149 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__175139,G__175140,G__175141,G__175142,G__175143,G__175144,G__175145,G__175146,G__175147,G__175148,G__175149) : self__.dispatch_fn.call(null,G__175139,G__175140,G__175141,G__175142,G__175143,G__175144,G__175145,G__175146,G__175147,G__175148,G__175149));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175150 = a;
var G__175151 = b;
var G__175152 = c;
var G__175153 = d;
var G__175154 = e;
var G__175155 = f;
var G__175156 = g;
var G__175157 = h;
var G__175158 = i;
var G__175159 = j;
var G__175160 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__175150,G__175151,G__175152,G__175153,G__175154,G__175155,G__175156,G__175157,G__175158,G__175159,G__175160) : target_fn.call(null,G__175150,G__175151,G__175152,G__175153,G__175154,G__175155,G__175156,G__175157,G__175158,G__175159,G__175160));
});
var G__175869__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175161 = a;
var G__175162 = b;
var G__175163 = c;
var G__175164 = d;
var G__175165 = e;
var G__175166 = f;
var G__175167 = g;
var G__175168 = h;
var G__175169 = i;
var G__175170 = j;
var G__175171 = k;
var G__175172 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__175161,G__175162,G__175163,G__175164,G__175165,G__175166,G__175167,G__175168,G__175169,G__175170,G__175171,G__175172) : self__.dispatch_fn.call(null,G__175161,G__175162,G__175163,G__175164,G__175165,G__175166,G__175167,G__175168,G__175169,G__175170,G__175171,G__175172));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175173 = a;
var G__175174 = b;
var G__175175 = c;
var G__175176 = d;
var G__175177 = e;
var G__175178 = f;
var G__175179 = g;
var G__175180 = h;
var G__175181 = i;
var G__175182 = j;
var G__175183 = k;
var G__175184 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__175173,G__175174,G__175175,G__175176,G__175177,G__175178,G__175179,G__175180,G__175181,G__175182,G__175183,G__175184) : target_fn.call(null,G__175173,G__175174,G__175175,G__175176,G__175177,G__175178,G__175179,G__175180,G__175181,G__175182,G__175183,G__175184));
});
var G__175869__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175185 = a;
var G__175186 = b;
var G__175187 = c;
var G__175188 = d;
var G__175189 = e;
var G__175190 = f;
var G__175191 = g;
var G__175192 = h;
var G__175193 = i;
var G__175194 = j;
var G__175195 = k;
var G__175196 = l;
var G__175197 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__175185,G__175186,G__175187,G__175188,G__175189,G__175190,G__175191,G__175192,G__175193,G__175194,G__175195,G__175196,G__175197) : self__.dispatch_fn.call(null,G__175185,G__175186,G__175187,G__175188,G__175189,G__175190,G__175191,G__175192,G__175193,G__175194,G__175195,G__175196,G__175197));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175198 = a;
var G__175199 = b;
var G__175200 = c;
var G__175201 = d;
var G__175202 = e;
var G__175203 = f;
var G__175204 = g;
var G__175205 = h;
var G__175206 = i;
var G__175207 = j;
var G__175208 = k;
var G__175209 = l;
var G__175210 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__175198,G__175199,G__175200,G__175201,G__175202,G__175203,G__175204,G__175205,G__175206,G__175207,G__175208,G__175209,G__175210) : target_fn.call(null,G__175198,G__175199,G__175200,G__175201,G__175202,G__175203,G__175204,G__175205,G__175206,G__175207,G__175208,G__175209,G__175210));
});
var G__175869__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175211 = a;
var G__175212 = b;
var G__175213 = c;
var G__175214 = d;
var G__175215 = e;
var G__175216 = f;
var G__175217 = g;
var G__175218 = h;
var G__175219 = i;
var G__175220 = j;
var G__175221 = k;
var G__175222 = l;
var G__175223 = m;
var G__175224 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__175211,G__175212,G__175213,G__175214,G__175215,G__175216,G__175217,G__175218,G__175219,G__175220,G__175221,G__175222,G__175223,G__175224) : self__.dispatch_fn.call(null,G__175211,G__175212,G__175213,G__175214,G__175215,G__175216,G__175217,G__175218,G__175219,G__175220,G__175221,G__175222,G__175223,G__175224));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175225 = a;
var G__175226 = b;
var G__175227 = c;
var G__175228 = d;
var G__175229 = e;
var G__175230 = f;
var G__175231 = g;
var G__175232 = h;
var G__175233 = i;
var G__175234 = j;
var G__175235 = k;
var G__175236 = l;
var G__175237 = m;
var G__175238 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__175225,G__175226,G__175227,G__175228,G__175229,G__175230,G__175231,G__175232,G__175233,G__175234,G__175235,G__175236,G__175237,G__175238) : target_fn.call(null,G__175225,G__175226,G__175227,G__175228,G__175229,G__175230,G__175231,G__175232,G__175233,G__175234,G__175235,G__175236,G__175237,G__175238));
});
var G__175869__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175239 = a;
var G__175240 = b;
var G__175241 = c;
var G__175242 = d;
var G__175243 = e;
var G__175244 = f;
var G__175245 = g;
var G__175246 = h;
var G__175247 = i;
var G__175248 = j;
var G__175249 = k;
var G__175250 = l;
var G__175251 = m;
var G__175252 = n;
var G__175253 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__175239,G__175240,G__175241,G__175242,G__175243,G__175244,G__175245,G__175246,G__175247,G__175248,G__175249,G__175250,G__175251,G__175252,G__175253) : self__.dispatch_fn.call(null,G__175239,G__175240,G__175241,G__175242,G__175243,G__175244,G__175245,G__175246,G__175247,G__175248,G__175249,G__175250,G__175251,G__175252,G__175253));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175254 = a;
var G__175255 = b;
var G__175256 = c;
var G__175257 = d;
var G__175258 = e;
var G__175259 = f;
var G__175260 = g;
var G__175261 = h;
var G__175262 = i;
var G__175263 = j;
var G__175264 = k;
var G__175265 = l;
var G__175266 = m;
var G__175267 = n;
var G__175268 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__175254,G__175255,G__175256,G__175257,G__175258,G__175259,G__175260,G__175261,G__175262,G__175263,G__175264,G__175265,G__175266,G__175267,G__175268) : target_fn.call(null,G__175254,G__175255,G__175256,G__175257,G__175258,G__175259,G__175260,G__175261,G__175262,G__175263,G__175264,G__175265,G__175266,G__175267,G__175268));
});
var G__175869__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175269 = a;
var G__175270 = b;
var G__175271 = c;
var G__175272 = d;
var G__175273 = e;
var G__175274 = f;
var G__175275 = g;
var G__175276 = h;
var G__175277 = i;
var G__175278 = j;
var G__175279 = k;
var G__175280 = l;
var G__175281 = m;
var G__175282 = n;
var G__175283 = o;
var G__175284 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__175269,G__175270,G__175271,G__175272,G__175273,G__175274,G__175275,G__175276,G__175277,G__175278,G__175279,G__175280,G__175281,G__175282,G__175283,G__175284) : self__.dispatch_fn.call(null,G__175269,G__175270,G__175271,G__175272,G__175273,G__175274,G__175275,G__175276,G__175277,G__175278,G__175279,G__175280,G__175281,G__175282,G__175283,G__175284));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175285 = a;
var G__175286 = b;
var G__175287 = c;
var G__175288 = d;
var G__175289 = e;
var G__175290 = f;
var G__175291 = g;
var G__175292 = h;
var G__175293 = i;
var G__175294 = j;
var G__175295 = k;
var G__175296 = l;
var G__175297 = m;
var G__175298 = n;
var G__175299 = o;
var G__175300 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__175285,G__175286,G__175287,G__175288,G__175289,G__175290,G__175291,G__175292,G__175293,G__175294,G__175295,G__175296,G__175297,G__175298,G__175299,G__175300) : target_fn.call(null,G__175285,G__175286,G__175287,G__175288,G__175289,G__175290,G__175291,G__175292,G__175293,G__175294,G__175295,G__175296,G__175297,G__175298,G__175299,G__175300));
});
var G__175869__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175301 = a;
var G__175302 = b;
var G__175303 = c;
var G__175304 = d;
var G__175305 = e;
var G__175306 = f;
var G__175307 = g;
var G__175308 = h;
var G__175309 = i;
var G__175310 = j;
var G__175311 = k;
var G__175312 = l;
var G__175313 = m;
var G__175314 = n;
var G__175315 = o;
var G__175316 = p;
var G__175317 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__175301,G__175302,G__175303,G__175304,G__175305,G__175306,G__175307,G__175308,G__175309,G__175310,G__175311,G__175312,G__175313,G__175314,G__175315,G__175316,G__175317) : self__.dispatch_fn.call(null,G__175301,G__175302,G__175303,G__175304,G__175305,G__175306,G__175307,G__175308,G__175309,G__175310,G__175311,G__175312,G__175313,G__175314,G__175315,G__175316,G__175317));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175318 = a;
var G__175319 = b;
var G__175320 = c;
var G__175321 = d;
var G__175322 = e;
var G__175323 = f;
var G__175324 = g;
var G__175325 = h;
var G__175326 = i;
var G__175327 = j;
var G__175328 = k;
var G__175329 = l;
var G__175330 = m;
var G__175331 = n;
var G__175332 = o;
var G__175333 = p;
var G__175334 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__175318,G__175319,G__175320,G__175321,G__175322,G__175323,G__175324,G__175325,G__175326,G__175327,G__175328,G__175329,G__175330,G__175331,G__175332,G__175333,G__175334) : target_fn.call(null,G__175318,G__175319,G__175320,G__175321,G__175322,G__175323,G__175324,G__175325,G__175326,G__175327,G__175328,G__175329,G__175330,G__175331,G__175332,G__175333,G__175334));
});
var G__175869__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175335 = a;
var G__175336 = b;
var G__175337 = c;
var G__175338 = d;
var G__175339 = e;
var G__175340 = f;
var G__175341 = g;
var G__175342 = h;
var G__175343 = i;
var G__175344 = j;
var G__175345 = k;
var G__175346 = l;
var G__175347 = m;
var G__175348 = n;
var G__175349 = o;
var G__175350 = p;
var G__175351 = q;
var G__175352 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__175335,G__175336,G__175337,G__175338,G__175339,G__175340,G__175341,G__175342,G__175343,G__175344,G__175345,G__175346,G__175347,G__175348,G__175349,G__175350,G__175351,G__175352) : self__.dispatch_fn.call(null,G__175335,G__175336,G__175337,G__175338,G__175339,G__175340,G__175341,G__175342,G__175343,G__175344,G__175345,G__175346,G__175347,G__175348,G__175349,G__175350,G__175351,G__175352));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175353 = a;
var G__175354 = b;
var G__175355 = c;
var G__175356 = d;
var G__175357 = e;
var G__175358 = f;
var G__175359 = g;
var G__175360 = h;
var G__175361 = i;
var G__175362 = j;
var G__175363 = k;
var G__175364 = l;
var G__175365 = m;
var G__175366 = n;
var G__175367 = o;
var G__175368 = p;
var G__175369 = q;
var G__175370 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__175353,G__175354,G__175355,G__175356,G__175357,G__175358,G__175359,G__175360,G__175361,G__175362,G__175363,G__175364,G__175365,G__175366,G__175367,G__175368,G__175369,G__175370) : target_fn.call(null,G__175353,G__175354,G__175355,G__175356,G__175357,G__175358,G__175359,G__175360,G__175361,G__175362,G__175363,G__175364,G__175365,G__175366,G__175367,G__175368,G__175369,G__175370));
});
var G__175869__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175371 = a;
var G__175372 = b;
var G__175373 = c;
var G__175374 = d;
var G__175375 = e;
var G__175376 = f;
var G__175377 = g;
var G__175378 = h;
var G__175379 = i;
var G__175380 = j;
var G__175381 = k;
var G__175382 = l;
var G__175383 = m;
var G__175384 = n;
var G__175385 = o;
var G__175386 = p;
var G__175387 = q;
var G__175388 = r;
var G__175389 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__175371,G__175372,G__175373,G__175374,G__175375,G__175376,G__175377,G__175378,G__175379,G__175380,G__175381,G__175382,G__175383,G__175384,G__175385,G__175386,G__175387,G__175388,G__175389) : self__.dispatch_fn.call(null,G__175371,G__175372,G__175373,G__175374,G__175375,G__175376,G__175377,G__175378,G__175379,G__175380,G__175381,G__175382,G__175383,G__175384,G__175385,G__175386,G__175387,G__175388,G__175389));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175390 = a;
var G__175391 = b;
var G__175392 = c;
var G__175393 = d;
var G__175394 = e;
var G__175395 = f;
var G__175396 = g;
var G__175397 = h;
var G__175398 = i;
var G__175399 = j;
var G__175400 = k;
var G__175401 = l;
var G__175402 = m;
var G__175403 = n;
var G__175404 = o;
var G__175405 = p;
var G__175406 = q;
var G__175407 = r;
var G__175408 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__175390,G__175391,G__175392,G__175393,G__175394,G__175395,G__175396,G__175397,G__175398,G__175399,G__175400,G__175401,G__175402,G__175403,G__175404,G__175405,G__175406,G__175407,G__175408) : target_fn.call(null,G__175390,G__175391,G__175392,G__175393,G__175394,G__175395,G__175396,G__175397,G__175398,G__175399,G__175400,G__175401,G__175402,G__175403,G__175404,G__175405,G__175406,G__175407,G__175408));
});
var G__175869__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__175409 = a;
var G__175410 = b;
var G__175411 = c;
var G__175412 = d;
var G__175413 = e;
var G__175414 = f;
var G__175415 = g;
var G__175416 = h;
var G__175417 = i;
var G__175418 = j;
var G__175419 = k;
var G__175420 = l;
var G__175421 = m;
var G__175422 = n;
var G__175423 = o;
var G__175424 = p;
var G__175425 = q;
var G__175426 = r;
var G__175427 = s;
var G__175428 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__175409,G__175410,G__175411,G__175412,G__175413,G__175414,G__175415,G__175416,G__175417,G__175418,G__175419,G__175420,G__175421,G__175422,G__175423,G__175424,G__175425,G__175426,G__175427,G__175428) : self__.dispatch_fn.call(null,G__175409,G__175410,G__175411,G__175412,G__175413,G__175414,G__175415,G__175416,G__175417,G__175418,G__175419,G__175420,G__175421,G__175422,G__175423,G__175424,G__175425,G__175426,G__175427,G__175428));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175429 = a;
var G__175430 = b;
var G__175431 = c;
var G__175432 = d;
var G__175433 = e;
var G__175434 = f;
var G__175435 = g;
var G__175436 = h;
var G__175437 = i;
var G__175438 = j;
var G__175439 = k;
var G__175440 = l;
var G__175441 = m;
var G__175442 = n;
var G__175443 = o;
var G__175444 = p;
var G__175445 = q;
var G__175446 = r;
var G__175447 = s;
var G__175448 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__175429,G__175430,G__175431,G__175432,G__175433,G__175434,G__175435,G__175436,G__175437,G__175438,G__175439,G__175440,G__175441,G__175442,G__175443,G__175444,G__175445,G__175446,G__175447,G__175448) : target_fn.call(null,G__175429,G__175430,G__175431,G__175432,G__175433,G__175434,G__175435,G__175436,G__175437,G__175438,G__175439,G__175440,G__175441,G__175442,G__175443,G__175444,G__175445,G__175446,G__175447,G__175448));
});
var G__175869__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__175869 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__175869__1.call(this,self__);
case 2:
return G__175869__2.call(this,self__,a);
case 3:
return G__175869__3.call(this,self__,a,b);
case 4:
return G__175869__4.call(this,self__,a,b,c);
case 5:
return G__175869__5.call(this,self__,a,b,c,d);
case 6:
return G__175869__6.call(this,self__,a,b,c,d,e);
case 7:
return G__175869__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__175869__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__175869__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__175869__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__175869__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__175869__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__175869__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__175869__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__175869__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__175869__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__175869__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__175869__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__175869__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__175869__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__175869__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__175869__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__175869.cljs$core$IFn$_invoke$arity$1 = G__175869__1;
G__175869.cljs$core$IFn$_invoke$arity$2 = G__175869__2;
G__175869.cljs$core$IFn$_invoke$arity$3 = G__175869__3;
G__175869.cljs$core$IFn$_invoke$arity$4 = G__175869__4;
G__175869.cljs$core$IFn$_invoke$arity$5 = G__175869__5;
G__175869.cljs$core$IFn$_invoke$arity$6 = G__175869__6;
G__175869.cljs$core$IFn$_invoke$arity$7 = G__175869__7;
G__175869.cljs$core$IFn$_invoke$arity$8 = G__175869__8;
G__175869.cljs$core$IFn$_invoke$arity$9 = G__175869__9;
G__175869.cljs$core$IFn$_invoke$arity$10 = G__175869__10;
G__175869.cljs$core$IFn$_invoke$arity$11 = G__175869__11;
G__175869.cljs$core$IFn$_invoke$arity$12 = G__175869__12;
G__175869.cljs$core$IFn$_invoke$arity$13 = G__175869__13;
G__175869.cljs$core$IFn$_invoke$arity$14 = G__175869__14;
G__175869.cljs$core$IFn$_invoke$arity$15 = G__175869__15;
G__175869.cljs$core$IFn$_invoke$arity$16 = G__175869__16;
G__175869.cljs$core$IFn$_invoke$arity$17 = G__175869__17;
G__175869.cljs$core$IFn$_invoke$arity$18 = G__175869__18;
G__175869.cljs$core$IFn$_invoke$arity$19 = G__175869__19;
G__175869.cljs$core$IFn$_invoke$arity$20 = G__175869__20;
G__175869.cljs$core$IFn$_invoke$arity$21 = G__175869__21;
G__175869.cljs$core$IFn$_invoke$arity$22 = G__175869__22;
return G__175869;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args175021){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args175021)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175449 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__175449) : self__.dispatch_fn.call(null,G__175449));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175450 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__175450) : target_fn.call(null,G__175450));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175451 = a;
var G__175452 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__175451,G__175452) : self__.dispatch_fn.call(null,G__175451,G__175452));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175453 = a;
var G__175454 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__175453,G__175454) : target_fn.call(null,G__175453,G__175454));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175455 = a;
var G__175456 = b;
var G__175457 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__175455,G__175456,G__175457) : self__.dispatch_fn.call(null,G__175455,G__175456,G__175457));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175458 = a;
var G__175459 = b;
var G__175460 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__175458,G__175459,G__175460) : target_fn.call(null,G__175458,G__175459,G__175460));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175461 = a;
var G__175462 = b;
var G__175463 = c;
var G__175464 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__175461,G__175462,G__175463,G__175464) : self__.dispatch_fn.call(null,G__175461,G__175462,G__175463,G__175464));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175465 = a;
var G__175466 = b;
var G__175467 = c;
var G__175468 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__175465,G__175466,G__175467,G__175468) : target_fn.call(null,G__175465,G__175466,G__175467,G__175468));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175469 = a;
var G__175470 = b;
var G__175471 = c;
var G__175472 = d;
var G__175473 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__175469,G__175470,G__175471,G__175472,G__175473) : self__.dispatch_fn.call(null,G__175469,G__175470,G__175471,G__175472,G__175473));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175474 = a;
var G__175475 = b;
var G__175476 = c;
var G__175477 = d;
var G__175478 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__175474,G__175475,G__175476,G__175477,G__175478) : target_fn.call(null,G__175474,G__175475,G__175476,G__175477,G__175478));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175479 = a;
var G__175480 = b;
var G__175481 = c;
var G__175482 = d;
var G__175483 = e;
var G__175484 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__175479,G__175480,G__175481,G__175482,G__175483,G__175484) : self__.dispatch_fn.call(null,G__175479,G__175480,G__175481,G__175482,G__175483,G__175484));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175485 = a;
var G__175486 = b;
var G__175487 = c;
var G__175488 = d;
var G__175489 = e;
var G__175490 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__175485,G__175486,G__175487,G__175488,G__175489,G__175490) : target_fn.call(null,G__175485,G__175486,G__175487,G__175488,G__175489,G__175490));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175491 = a;
var G__175492 = b;
var G__175493 = c;
var G__175494 = d;
var G__175495 = e;
var G__175496 = f;
var G__175497 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__175491,G__175492,G__175493,G__175494,G__175495,G__175496,G__175497) : self__.dispatch_fn.call(null,G__175491,G__175492,G__175493,G__175494,G__175495,G__175496,G__175497));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175498 = a;
var G__175499 = b;
var G__175500 = c;
var G__175501 = d;
var G__175502 = e;
var G__175503 = f;
var G__175504 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__175498,G__175499,G__175500,G__175501,G__175502,G__175503,G__175504) : target_fn.call(null,G__175498,G__175499,G__175500,G__175501,G__175502,G__175503,G__175504));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175505 = a;
var G__175506 = b;
var G__175507 = c;
var G__175508 = d;
var G__175509 = e;
var G__175510 = f;
var G__175511 = g;
var G__175512 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__175505,G__175506,G__175507,G__175508,G__175509,G__175510,G__175511,G__175512) : self__.dispatch_fn.call(null,G__175505,G__175506,G__175507,G__175508,G__175509,G__175510,G__175511,G__175512));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175513 = a;
var G__175514 = b;
var G__175515 = c;
var G__175516 = d;
var G__175517 = e;
var G__175518 = f;
var G__175519 = g;
var G__175520 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__175513,G__175514,G__175515,G__175516,G__175517,G__175518,G__175519,G__175520) : target_fn.call(null,G__175513,G__175514,G__175515,G__175516,G__175517,G__175518,G__175519,G__175520));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175521 = a;
var G__175522 = b;
var G__175523 = c;
var G__175524 = d;
var G__175525 = e;
var G__175526 = f;
var G__175527 = g;
var G__175528 = h;
var G__175529 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__175521,G__175522,G__175523,G__175524,G__175525,G__175526,G__175527,G__175528,G__175529) : self__.dispatch_fn.call(null,G__175521,G__175522,G__175523,G__175524,G__175525,G__175526,G__175527,G__175528,G__175529));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175530 = a;
var G__175531 = b;
var G__175532 = c;
var G__175533 = d;
var G__175534 = e;
var G__175535 = f;
var G__175536 = g;
var G__175537 = h;
var G__175538 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__175530,G__175531,G__175532,G__175533,G__175534,G__175535,G__175536,G__175537,G__175538) : target_fn.call(null,G__175530,G__175531,G__175532,G__175533,G__175534,G__175535,G__175536,G__175537,G__175538));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175539 = a;
var G__175540 = b;
var G__175541 = c;
var G__175542 = d;
var G__175543 = e;
var G__175544 = f;
var G__175545 = g;
var G__175546 = h;
var G__175547 = i;
var G__175548 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__175539,G__175540,G__175541,G__175542,G__175543,G__175544,G__175545,G__175546,G__175547,G__175548) : self__.dispatch_fn.call(null,G__175539,G__175540,G__175541,G__175542,G__175543,G__175544,G__175545,G__175546,G__175547,G__175548));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175549 = a;
var G__175550 = b;
var G__175551 = c;
var G__175552 = d;
var G__175553 = e;
var G__175554 = f;
var G__175555 = g;
var G__175556 = h;
var G__175557 = i;
var G__175558 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__175549,G__175550,G__175551,G__175552,G__175553,G__175554,G__175555,G__175556,G__175557,G__175558) : target_fn.call(null,G__175549,G__175550,G__175551,G__175552,G__175553,G__175554,G__175555,G__175556,G__175557,G__175558));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175559 = a;
var G__175560 = b;
var G__175561 = c;
var G__175562 = d;
var G__175563 = e;
var G__175564 = f;
var G__175565 = g;
var G__175566 = h;
var G__175567 = i;
var G__175568 = j;
var G__175569 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__175559,G__175560,G__175561,G__175562,G__175563,G__175564,G__175565,G__175566,G__175567,G__175568,G__175569) : self__.dispatch_fn.call(null,G__175559,G__175560,G__175561,G__175562,G__175563,G__175564,G__175565,G__175566,G__175567,G__175568,G__175569));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175570 = a;
var G__175571 = b;
var G__175572 = c;
var G__175573 = d;
var G__175574 = e;
var G__175575 = f;
var G__175576 = g;
var G__175577 = h;
var G__175578 = i;
var G__175579 = j;
var G__175580 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__175570,G__175571,G__175572,G__175573,G__175574,G__175575,G__175576,G__175577,G__175578,G__175579,G__175580) : target_fn.call(null,G__175570,G__175571,G__175572,G__175573,G__175574,G__175575,G__175576,G__175577,G__175578,G__175579,G__175580));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175581 = a;
var G__175582 = b;
var G__175583 = c;
var G__175584 = d;
var G__175585 = e;
var G__175586 = f;
var G__175587 = g;
var G__175588 = h;
var G__175589 = i;
var G__175590 = j;
var G__175591 = k;
var G__175592 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__175581,G__175582,G__175583,G__175584,G__175585,G__175586,G__175587,G__175588,G__175589,G__175590,G__175591,G__175592) : self__.dispatch_fn.call(null,G__175581,G__175582,G__175583,G__175584,G__175585,G__175586,G__175587,G__175588,G__175589,G__175590,G__175591,G__175592));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175593 = a;
var G__175594 = b;
var G__175595 = c;
var G__175596 = d;
var G__175597 = e;
var G__175598 = f;
var G__175599 = g;
var G__175600 = h;
var G__175601 = i;
var G__175602 = j;
var G__175603 = k;
var G__175604 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__175593,G__175594,G__175595,G__175596,G__175597,G__175598,G__175599,G__175600,G__175601,G__175602,G__175603,G__175604) : target_fn.call(null,G__175593,G__175594,G__175595,G__175596,G__175597,G__175598,G__175599,G__175600,G__175601,G__175602,G__175603,G__175604));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175605 = a;
var G__175606 = b;
var G__175607 = c;
var G__175608 = d;
var G__175609 = e;
var G__175610 = f;
var G__175611 = g;
var G__175612 = h;
var G__175613 = i;
var G__175614 = j;
var G__175615 = k;
var G__175616 = l;
var G__175617 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__175605,G__175606,G__175607,G__175608,G__175609,G__175610,G__175611,G__175612,G__175613,G__175614,G__175615,G__175616,G__175617) : self__.dispatch_fn.call(null,G__175605,G__175606,G__175607,G__175608,G__175609,G__175610,G__175611,G__175612,G__175613,G__175614,G__175615,G__175616,G__175617));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175618 = a;
var G__175619 = b;
var G__175620 = c;
var G__175621 = d;
var G__175622 = e;
var G__175623 = f;
var G__175624 = g;
var G__175625 = h;
var G__175626 = i;
var G__175627 = j;
var G__175628 = k;
var G__175629 = l;
var G__175630 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__175618,G__175619,G__175620,G__175621,G__175622,G__175623,G__175624,G__175625,G__175626,G__175627,G__175628,G__175629,G__175630) : target_fn.call(null,G__175618,G__175619,G__175620,G__175621,G__175622,G__175623,G__175624,G__175625,G__175626,G__175627,G__175628,G__175629,G__175630));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175631 = a;
var G__175632 = b;
var G__175633 = c;
var G__175634 = d;
var G__175635 = e;
var G__175636 = f;
var G__175637 = g;
var G__175638 = h;
var G__175639 = i;
var G__175640 = j;
var G__175641 = k;
var G__175642 = l;
var G__175643 = m;
var G__175644 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__175631,G__175632,G__175633,G__175634,G__175635,G__175636,G__175637,G__175638,G__175639,G__175640,G__175641,G__175642,G__175643,G__175644) : self__.dispatch_fn.call(null,G__175631,G__175632,G__175633,G__175634,G__175635,G__175636,G__175637,G__175638,G__175639,G__175640,G__175641,G__175642,G__175643,G__175644));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175645 = a;
var G__175646 = b;
var G__175647 = c;
var G__175648 = d;
var G__175649 = e;
var G__175650 = f;
var G__175651 = g;
var G__175652 = h;
var G__175653 = i;
var G__175654 = j;
var G__175655 = k;
var G__175656 = l;
var G__175657 = m;
var G__175658 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__175645,G__175646,G__175647,G__175648,G__175649,G__175650,G__175651,G__175652,G__175653,G__175654,G__175655,G__175656,G__175657,G__175658) : target_fn.call(null,G__175645,G__175646,G__175647,G__175648,G__175649,G__175650,G__175651,G__175652,G__175653,G__175654,G__175655,G__175656,G__175657,G__175658));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175659 = a;
var G__175660 = b;
var G__175661 = c;
var G__175662 = d;
var G__175663 = e;
var G__175664 = f;
var G__175665 = g;
var G__175666 = h;
var G__175667 = i;
var G__175668 = j;
var G__175669 = k;
var G__175670 = l;
var G__175671 = m;
var G__175672 = n;
var G__175673 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__175659,G__175660,G__175661,G__175662,G__175663,G__175664,G__175665,G__175666,G__175667,G__175668,G__175669,G__175670,G__175671,G__175672,G__175673) : self__.dispatch_fn.call(null,G__175659,G__175660,G__175661,G__175662,G__175663,G__175664,G__175665,G__175666,G__175667,G__175668,G__175669,G__175670,G__175671,G__175672,G__175673));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175674 = a;
var G__175675 = b;
var G__175676 = c;
var G__175677 = d;
var G__175678 = e;
var G__175679 = f;
var G__175680 = g;
var G__175681 = h;
var G__175682 = i;
var G__175683 = j;
var G__175684 = k;
var G__175685 = l;
var G__175686 = m;
var G__175687 = n;
var G__175688 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__175674,G__175675,G__175676,G__175677,G__175678,G__175679,G__175680,G__175681,G__175682,G__175683,G__175684,G__175685,G__175686,G__175687,G__175688) : target_fn.call(null,G__175674,G__175675,G__175676,G__175677,G__175678,G__175679,G__175680,G__175681,G__175682,G__175683,G__175684,G__175685,G__175686,G__175687,G__175688));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175689 = a;
var G__175690 = b;
var G__175691 = c;
var G__175692 = d;
var G__175693 = e;
var G__175694 = f;
var G__175695 = g;
var G__175696 = h;
var G__175697 = i;
var G__175698 = j;
var G__175699 = k;
var G__175700 = l;
var G__175701 = m;
var G__175702 = n;
var G__175703 = o;
var G__175704 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__175689,G__175690,G__175691,G__175692,G__175693,G__175694,G__175695,G__175696,G__175697,G__175698,G__175699,G__175700,G__175701,G__175702,G__175703,G__175704) : self__.dispatch_fn.call(null,G__175689,G__175690,G__175691,G__175692,G__175693,G__175694,G__175695,G__175696,G__175697,G__175698,G__175699,G__175700,G__175701,G__175702,G__175703,G__175704));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175705 = a;
var G__175706 = b;
var G__175707 = c;
var G__175708 = d;
var G__175709 = e;
var G__175710 = f;
var G__175711 = g;
var G__175712 = h;
var G__175713 = i;
var G__175714 = j;
var G__175715 = k;
var G__175716 = l;
var G__175717 = m;
var G__175718 = n;
var G__175719 = o;
var G__175720 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__175705,G__175706,G__175707,G__175708,G__175709,G__175710,G__175711,G__175712,G__175713,G__175714,G__175715,G__175716,G__175717,G__175718,G__175719,G__175720) : target_fn.call(null,G__175705,G__175706,G__175707,G__175708,G__175709,G__175710,G__175711,G__175712,G__175713,G__175714,G__175715,G__175716,G__175717,G__175718,G__175719,G__175720));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175721 = a;
var G__175722 = b;
var G__175723 = c;
var G__175724 = d;
var G__175725 = e;
var G__175726 = f;
var G__175727 = g;
var G__175728 = h;
var G__175729 = i;
var G__175730 = j;
var G__175731 = k;
var G__175732 = l;
var G__175733 = m;
var G__175734 = n;
var G__175735 = o;
var G__175736 = p;
var G__175737 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__175721,G__175722,G__175723,G__175724,G__175725,G__175726,G__175727,G__175728,G__175729,G__175730,G__175731,G__175732,G__175733,G__175734,G__175735,G__175736,G__175737) : self__.dispatch_fn.call(null,G__175721,G__175722,G__175723,G__175724,G__175725,G__175726,G__175727,G__175728,G__175729,G__175730,G__175731,G__175732,G__175733,G__175734,G__175735,G__175736,G__175737));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175738 = a;
var G__175739 = b;
var G__175740 = c;
var G__175741 = d;
var G__175742 = e;
var G__175743 = f;
var G__175744 = g;
var G__175745 = h;
var G__175746 = i;
var G__175747 = j;
var G__175748 = k;
var G__175749 = l;
var G__175750 = m;
var G__175751 = n;
var G__175752 = o;
var G__175753 = p;
var G__175754 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__175738,G__175739,G__175740,G__175741,G__175742,G__175743,G__175744,G__175745,G__175746,G__175747,G__175748,G__175749,G__175750,G__175751,G__175752,G__175753,G__175754) : target_fn.call(null,G__175738,G__175739,G__175740,G__175741,G__175742,G__175743,G__175744,G__175745,G__175746,G__175747,G__175748,G__175749,G__175750,G__175751,G__175752,G__175753,G__175754));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175755 = a;
var G__175756 = b;
var G__175757 = c;
var G__175758 = d;
var G__175759 = e;
var G__175760 = f;
var G__175761 = g;
var G__175762 = h;
var G__175763 = i;
var G__175764 = j;
var G__175765 = k;
var G__175766 = l;
var G__175767 = m;
var G__175768 = n;
var G__175769 = o;
var G__175770 = p;
var G__175771 = q;
var G__175772 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__175755,G__175756,G__175757,G__175758,G__175759,G__175760,G__175761,G__175762,G__175763,G__175764,G__175765,G__175766,G__175767,G__175768,G__175769,G__175770,G__175771,G__175772) : self__.dispatch_fn.call(null,G__175755,G__175756,G__175757,G__175758,G__175759,G__175760,G__175761,G__175762,G__175763,G__175764,G__175765,G__175766,G__175767,G__175768,G__175769,G__175770,G__175771,G__175772));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175773 = a;
var G__175774 = b;
var G__175775 = c;
var G__175776 = d;
var G__175777 = e;
var G__175778 = f;
var G__175779 = g;
var G__175780 = h;
var G__175781 = i;
var G__175782 = j;
var G__175783 = k;
var G__175784 = l;
var G__175785 = m;
var G__175786 = n;
var G__175787 = o;
var G__175788 = p;
var G__175789 = q;
var G__175790 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__175773,G__175774,G__175775,G__175776,G__175777,G__175778,G__175779,G__175780,G__175781,G__175782,G__175783,G__175784,G__175785,G__175786,G__175787,G__175788,G__175789,G__175790) : target_fn.call(null,G__175773,G__175774,G__175775,G__175776,G__175777,G__175778,G__175779,G__175780,G__175781,G__175782,G__175783,G__175784,G__175785,G__175786,G__175787,G__175788,G__175789,G__175790));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175791 = a;
var G__175792 = b;
var G__175793 = c;
var G__175794 = d;
var G__175795 = e;
var G__175796 = f;
var G__175797 = g;
var G__175798 = h;
var G__175799 = i;
var G__175800 = j;
var G__175801 = k;
var G__175802 = l;
var G__175803 = m;
var G__175804 = n;
var G__175805 = o;
var G__175806 = p;
var G__175807 = q;
var G__175808 = r;
var G__175809 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__175791,G__175792,G__175793,G__175794,G__175795,G__175796,G__175797,G__175798,G__175799,G__175800,G__175801,G__175802,G__175803,G__175804,G__175805,G__175806,G__175807,G__175808,G__175809) : self__.dispatch_fn.call(null,G__175791,G__175792,G__175793,G__175794,G__175795,G__175796,G__175797,G__175798,G__175799,G__175800,G__175801,G__175802,G__175803,G__175804,G__175805,G__175806,G__175807,G__175808,G__175809));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175810 = a;
var G__175811 = b;
var G__175812 = c;
var G__175813 = d;
var G__175814 = e;
var G__175815 = f;
var G__175816 = g;
var G__175817 = h;
var G__175818 = i;
var G__175819 = j;
var G__175820 = k;
var G__175821 = l;
var G__175822 = m;
var G__175823 = n;
var G__175824 = o;
var G__175825 = p;
var G__175826 = q;
var G__175827 = r;
var G__175828 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__175810,G__175811,G__175812,G__175813,G__175814,G__175815,G__175816,G__175817,G__175818,G__175819,G__175820,G__175821,G__175822,G__175823,G__175824,G__175825,G__175826,G__175827,G__175828) : target_fn.call(null,G__175810,G__175811,G__175812,G__175813,G__175814,G__175815,G__175816,G__175817,G__175818,G__175819,G__175820,G__175821,G__175822,G__175823,G__175824,G__175825,G__175826,G__175827,G__175828));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__175829 = a;
var G__175830 = b;
var G__175831 = c;
var G__175832 = d;
var G__175833 = e;
var G__175834 = f;
var G__175835 = g;
var G__175836 = h;
var G__175837 = i;
var G__175838 = j;
var G__175839 = k;
var G__175840 = l;
var G__175841 = m;
var G__175842 = n;
var G__175843 = o;
var G__175844 = p;
var G__175845 = q;
var G__175846 = r;
var G__175847 = s;
var G__175848 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__175829,G__175830,G__175831,G__175832,G__175833,G__175834,G__175835,G__175836,G__175837,G__175838,G__175839,G__175840,G__175841,G__175842,G__175843,G__175844,G__175845,G__175846,G__175847,G__175848) : self__.dispatch_fn.call(null,G__175829,G__175830,G__175831,G__175832,G__175833,G__175834,G__175835,G__175836,G__175837,G__175838,G__175839,G__175840,G__175841,G__175842,G__175843,G__175844,G__175845,G__175846,G__175847,G__175848));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__175849 = a;
var G__175850 = b;
var G__175851 = c;
var G__175852 = d;
var G__175853 = e;
var G__175854 = f;
var G__175855 = g;
var G__175856 = h;
var G__175857 = i;
var G__175858 = j;
var G__175859 = k;
var G__175860 = l;
var G__175861 = m;
var G__175862 = n;
var G__175863 = o;
var G__175864 = p;
var G__175865 = q;
var G__175866 = r;
var G__175867 = s;
var G__175868 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__175849,G__175850,G__175851,G__175852,G__175853,G__175854,G__175855,G__175856,G__175857,G__175858,G__175859,G__175860,G__175861,G__175862,G__175863,G__175864,G__175865,G__175866,G__175867,G__175868) : target_fn.call(null,G__175849,G__175850,G__175851,G__175852,G__175853,G__175854,G__175855,G__175856,G__175857,G__175858,G__175859,G__175860,G__175861,G__175862,G__175863,G__175864,G__175865,G__175866,G__175867,G__175868));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__175870 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__175870);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__18057__auto__,writer__18058__auto__,opt__18059__auto__){
return cljs.core._write(writer__18058__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__175875 = msg;
return Error(G__175875);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__175880 = x;
var G__175881 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__175880,G__175881) : pred.call(null,G__175880,G__175881));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__175882 = y;
var G__175883 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__175882,G__175883) : pred.call(null,G__175882,G__175883));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$250;
} else {
return cljs.core.constant$keyword$251;
}
});
