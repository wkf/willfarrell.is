// Compiled by ClojureScript 0.0-3119 {:optimize-constants true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3119";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$flush_DASH_on_DASH_newline,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$readably,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$meta,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$dup,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$print_DASH_length,cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__30897__delegate = function (args){
return console.log.apply(console,(function (){var G__30896 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__30896) : cljs.core.into_array.call(null,G__30896));
})());
};
var G__30897 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30898__i = 0, G__30898__a = new Array(arguments.length -  0);
while (G__30898__i < G__30898__a.length) {G__30898__a[G__30898__i] = arguments[G__30898__i + 0]; ++G__30898__i;}
  args = new cljs.core.IndexedSeq(G__30898__a,0);
} 
return G__30897__delegate.call(this,args);};
G__30897.cljs$lang$maxFixedArity = 0;
G__30897.cljs$lang$applyTo = (function (arglist__30899){
var args = cljs.core.seq(arglist__30899);
return G__30897__delegate(args);
});
G__30897.cljs$core$IFn$_invoke$arity$variadic = G__30897__delegate;
return G__30897;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__30901 = x;
return goog.isString(G__30901);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__30903 = x__$1;
return goog.typeOf(G__30903);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24165__auto__ = ty;
if(cljs.core.truth_(and__24165__auto__)){
return ty.cljs$lang$type;
} else {
return and__24165__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__30905 = obj;
return goog.typeOf(G__30905);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__30907 = Symbol;
return goog.typeOf(G__30907);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25062__auto___30909 = len;
var i_30910 = (0);
while(true){
if((i_30910 < n__25062__auto___30909)){
(new_arr[i_30910] = (arr[i_30910]));

var G__30911 = (i_30910 + (1));
i_30910 = G__30911;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__30912 = (i + (1));
i = G__30912;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__30921__delegate = function (array,i,idxs){
var G__30918 = cljs$core$aget;
var G__30919 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__30920 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__30918,G__30919,G__30920) : cljs.core.apply.call(null,G__30918,G__30919,G__30920));
};
var G__30921 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__30922__i = 0, G__30922__a = new Array(arguments.length -  2);
while (G__30922__i < G__30922__a.length) {G__30922__a[G__30922__i] = arguments[G__30922__i + 2]; ++G__30922__i;}
  idxs = new cljs.core.IndexedSeq(G__30922__a,0);
} 
return G__30921__delegate.call(this,array,i,idxs);};
G__30921.cljs$lang$maxFixedArity = 2;
G__30921.cljs$lang$applyTo = (function (arglist__30923){
var array = cljs.core.first(arglist__30923);
arglist__30923 = cljs.core.next(arglist__30923);
var i = cljs.core.first(arglist__30923);
var idxs = cljs.core.rest(arglist__30923);
return G__30921__delegate(array,i,idxs);
});
G__30921.cljs$core$IFn$_invoke$arity$variadic = G__30921__delegate;
return G__30921;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__30924 = null;
if (arguments.length > 2) {
var G__30925__i = 0, G__30925__a = new Array(arguments.length -  2);
while (G__30925__i < G__30925__a.length) {G__30925__a[G__30925__i] = arguments[G__30925__i + 2]; ++G__30925__i;}
G__30924 = new cljs.core.IndexedSeq(G__30925__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__30924);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__30934__delegate = function (array,idx,idx2,idxv){
var G__30930 = cljs$core$aset;
var G__30931 = (array[idx]);
var G__30932 = idx2;
var G__30933 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__30930,G__30931,G__30932,G__30933) : cljs.core.apply.call(null,G__30930,G__30931,G__30932,G__30933));
};
var G__30934 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__30935__i = 0, G__30935__a = new Array(arguments.length -  3);
while (G__30935__i < G__30935__a.length) {G__30935__a[G__30935__i] = arguments[G__30935__i + 3]; ++G__30935__i;}
  idxv = new cljs.core.IndexedSeq(G__30935__a,0);
} 
return G__30934__delegate.call(this,array,idx,idx2,idxv);};
G__30934.cljs$lang$maxFixedArity = 3;
G__30934.cljs$lang$applyTo = (function (arglist__30936){
var array = cljs.core.first(arglist__30936);
arglist__30936 = cljs.core.next(arglist__30936);
var idx = cljs.core.first(arglist__30936);
arglist__30936 = cljs.core.next(arglist__30936);
var idx2 = cljs.core.first(arglist__30936);
var idxv = cljs.core.rest(arglist__30936);
return G__30934__delegate(array,idx,idx2,idxv);
});
G__30934.cljs$core$IFn$_invoke$arity$variadic = G__30934__delegate;
return G__30934;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__30937 = null;
if (arguments.length > 3) {
var G__30938__i = 0, G__30938__a = new Array(arguments.length -  3);
while (G__30938__i < G__30938__a.length) {G__30938__a[G__30938__i] = arguments[G__30938__i + 3]; ++G__30938__i;}
G__30937 = new cljs.core.IndexedSeq(G__30938__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__30937);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__30944 = (function (a,x){
a.push(x);

return a;
});
var G__30945 = [];
var G__30946 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__30944,G__30945,G__30946) : cljs.core.reduce.call(null,G__30944,G__30945,G__30946));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__30947__i = 0, G__30947__a = new Array(arguments.length -  2);
while (G__30947__i < G__30947__a.length) {G__30947__a[G__30947__i] = arguments[G__30947__i + 2]; ++G__30947__i;}
  args = new cljs.core.IndexedSeq(G__30947__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__30948){
var obj = cljs.core.first(arglist__30948);
arglist__30948 = cljs.core.next(arglist__30948);
var s = cljs.core.first(arglist__30948);
var args = cljs.core.rest(arglist__30948);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj30950 = {};
return obj30950;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj30952 = {};
return obj30952;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30998 = x__24813__auto__;
return goog.typeOf(G__30998);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31000 = x__24813__auto__;
return goog.typeOf(G__31000);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31002 = x__24813__auto__;
return goog.typeOf(G__31002);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31004 = x__24813__auto__;
return goog.typeOf(G__31004);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31006 = x__24813__auto__;
return goog.typeOf(G__31006);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31008 = x__24813__auto__;
return goog.typeOf(G__31008);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31010 = x__24813__auto__;
return goog.typeOf(G__31010);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31012 = x__24813__auto__;
return goog.typeOf(G__31012);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31014 = x__24813__auto__;
return goog.typeOf(G__31014);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31016 = x__24813__auto__;
return goog.typeOf(G__31016);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31018 = x__24813__auto__;
return goog.typeOf(G__31018);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31020 = x__24813__auto__;
return goog.typeOf(G__31020);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31022 = x__24813__auto__;
return goog.typeOf(G__31022);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31024 = x__24813__auto__;
return goog.typeOf(G__31024);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31026 = x__24813__auto__;
return goog.typeOf(G__31026);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31028 = x__24813__auto__;
return goog.typeOf(G__31028);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31030 = x__24813__auto__;
return goog.typeOf(G__31030);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31032 = x__24813__auto__;
return goog.typeOf(G__31032);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31034 = x__24813__auto__;
return goog.typeOf(G__31034);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31036 = x__24813__auto__;
return goog.typeOf(G__31036);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31038 = x__24813__auto__;
return goog.typeOf(G__31038);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__31040 = x__24813__auto__;
return goog.typeOf(G__31040);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj31042 = {};
return obj31042;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__24165__auto__ = value;
if(and__24165__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24165__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24813__auto__ = (((value == null))?null:value);
return (function (){var or__24177__auto__ = (cljs.core._clone[(function (){var G__31046 = x__24813__auto__;
return goog.typeOf(G__31046);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._clone["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj31048 = {};
return obj31048;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._count[(function (){var G__31052 = x__24813__auto__;
return goog.typeOf(G__31052);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._count["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj31054 = {};
return obj31054;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._empty[(function (){var G__31058 = x__24813__auto__;
return goog.typeOf(G__31058);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._empty["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj31060 = {};
return obj31060;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._conj[(function (){var G__31064 = x__24813__auto__;
return goog.typeOf(G__31064);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._conj["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj31066 = {};
return obj31066;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._nth[(function (){var G__31072 = x__24813__auto__;
return goog.typeOf(G__31072);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._nth["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._nth[(function (){var G__31074 = x__24813__auto__;
return goog.typeOf(G__31074);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._nth["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj31076 = {};
return obj31076;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj31078 = {};
return obj31078;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._first[(function (){var G__31082 = x__24813__auto__;
return goog.typeOf(G__31082);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._first["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._rest[(function (){var G__31086 = x__24813__auto__;
return goog.typeOf(G__31086);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._rest["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj31088 = {};
return obj31088;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._next[(function (){var G__31092 = x__24813__auto__;
return goog.typeOf(G__31092);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._next["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj31094 = {};
return obj31094;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._lookup[(function (){var G__31100 = x__24813__auto__;
return goog.typeOf(G__31100);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._lookup["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._lookup[(function (){var G__31102 = x__24813__auto__;
return goog.typeOf(G__31102);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._lookup["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj31104 = {};
return obj31104;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__31108 = x__24813__auto__;
return goog.typeOf(G__31108);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._assoc[(function (){var G__31112 = x__24813__auto__;
return goog.typeOf(G__31112);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._assoc["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj31114 = {};
return obj31114;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._dissoc[(function (){var G__31118 = x__24813__auto__;
return goog.typeOf(G__31118);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj31120 = {};
return obj31120;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._key[(function (){var G__31124 = x__24813__auto__;
return goog.typeOf(G__31124);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._key["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._val[(function (){var G__31128 = x__24813__auto__;
return goog.typeOf(G__31128);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._val["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj31130 = {};
return obj31130;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._disjoin[(function (){var G__31134 = x__24813__auto__;
return goog.typeOf(G__31134);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj31136 = {};
return obj31136;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._peek[(function (){var G__31140 = x__24813__auto__;
return goog.typeOf(G__31140);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._peek["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._pop[(function (){var G__31144 = x__24813__auto__;
return goog.typeOf(G__31144);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._pop["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj31146 = {};
return obj31146;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._assoc_n[(function (){var G__31150 = x__24813__auto__;
return goog.typeOf(G__31150);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj31152 = {};
return obj31152;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._deref[(function (){var G__31156 = x__24813__auto__;
return goog.typeOf(G__31156);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._deref["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj31158 = {};
return obj31158;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._deref_with_timeout[(function (){var G__31162 = x__24813__auto__;
return goog.typeOf(G__31162);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj31164 = {};
return obj31164;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._meta[(function (){var G__31168 = x__24813__auto__;
return goog.typeOf(G__31168);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._meta["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj31170 = {};
return obj31170;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._with_meta[(function (){var G__31174 = x__24813__auto__;
return goog.typeOf(G__31174);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj31176 = {};
return obj31176;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._reduce[(function (){var G__31182 = x__24813__auto__;
return goog.typeOf(G__31182);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._reduce["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._reduce[(function (){var G__31184 = x__24813__auto__;
return goog.typeOf(G__31184);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._reduce["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj31186 = {};
return obj31186;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._kv_reduce[(function (){var G__31190 = x__24813__auto__;
return goog.typeOf(G__31190);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj31192 = {};
return obj31192;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._equiv[(function (){var G__31196 = x__24813__auto__;
return goog.typeOf(G__31196);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._equiv["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj31198 = {};
return obj31198;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._hash[(function (){var G__31202 = x__24813__auto__;
return goog.typeOf(G__31202);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._hash["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj31204 = {};
return obj31204;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._seq[(function (){var G__31208 = x__24813__auto__;
return goog.typeOf(G__31208);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._seq["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj31210 = {};
return obj31210;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj31212 = {};
return obj31212;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj31214 = {};
return obj31214;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj31216 = {};
return obj31216;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._rseq[(function (){var G__31220 = x__24813__auto__;
return goog.typeOf(G__31220);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._rseq["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj31222 = {};
return obj31222;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._sorted_seq[(function (){var G__31226 = x__24813__auto__;
return goog.typeOf(G__31226);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._sorted_seq_from[(function (){var G__31230 = x__24813__auto__;
return goog.typeOf(G__31230);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._entry_key[(function (){var G__31234 = x__24813__auto__;
return goog.typeOf(G__31234);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._comparator[(function (){var G__31238 = x__24813__auto__;
return goog.typeOf(G__31238);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._comparator["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj31240 = {};
return obj31240;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__24165__auto__ = writer;
if(and__24165__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24165__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24813__auto__ = (((writer == null))?null:writer);
return (function (){var or__24177__auto__ = (cljs.core._write[(function (){var G__31244 = x__24813__auto__;
return goog.typeOf(G__31244);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._write["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__24165__auto__ = writer;
if(and__24165__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24165__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24813__auto__ = (((writer == null))?null:writer);
return (function (){var or__24177__auto__ = (cljs.core._flush[(function (){var G__31248 = x__24813__auto__;
return goog.typeOf(G__31248);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._flush["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj31250 = {};
return obj31250;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._pr_writer[(function (){var G__31254 = x__24813__auto__;
return goog.typeOf(G__31254);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj31256 = {};
return obj31256;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__24165__auto__ = d;
if(and__24165__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24165__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24813__auto__ = (((d == null))?null:d);
return (function (){var or__24177__auto__ = (cljs.core._realized_QMARK_[(function (){var G__31260 = x__24813__auto__;
return goog.typeOf(G__31260);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj31262 = {};
return obj31262;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._notify_watches[(function (){var G__31266 = x__24813__auto__;
return goog.typeOf(G__31266);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._add_watch[(function (){var G__31270 = x__24813__auto__;
return goog.typeOf(G__31270);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._remove_watch[(function (){var G__31274 = x__24813__auto__;
return goog.typeOf(G__31274);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj31276 = {};
return obj31276;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._as_transient[(function (){var G__31280 = x__24813__auto__;
return goog.typeOf(G__31280);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj31282 = {};
return obj31282;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._conj_BANG_[(function (){var G__31286 = x__24813__auto__;
return goog.typeOf(G__31286);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._persistent_BANG_[(function (){var G__31290 = x__24813__auto__;
return goog.typeOf(G__31290);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj31292 = {};
return obj31292;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._assoc_BANG_[(function (){var G__31296 = x__24813__auto__;
return goog.typeOf(G__31296);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj31298 = {};
return obj31298;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__31302 = x__24813__auto__;
return goog.typeOf(G__31302);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj31304 = {};
return obj31304;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__31308 = x__24813__auto__;
return goog.typeOf(G__31308);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._pop_BANG_[(function (){var G__31312 = x__24813__auto__;
return goog.typeOf(G__31312);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj31314 = {};
return obj31314;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__31318 = x__24813__auto__;
return goog.typeOf(G__31318);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj31320 = {};
return obj31320;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._compare[(function (){var G__31324 = x__24813__auto__;
return goog.typeOf(G__31324);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._compare["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj31326 = {};
return obj31326;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._drop_first[(function (){var G__31330 = x__24813__auto__;
return goog.typeOf(G__31330);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj31332 = {};
return obj31332;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._chunked_first[(function (){var G__31336 = x__24813__auto__;
return goog.typeOf(G__31336);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._chunked_rest[(function (){var G__31340 = x__24813__auto__;
return goog.typeOf(G__31340);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj31342 = {};
return obj31342;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._chunked_next[(function (){var G__31346 = x__24813__auto__;
return goog.typeOf(G__31346);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj31348 = {};
return obj31348;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._name[(function (){var G__31352 = x__24813__auto__;
return goog.typeOf(G__31352);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._name["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._namespace[(function (){var G__31356 = x__24813__auto__;
return goog.typeOf(G__31356);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._namespace["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj31358 = {};
return obj31358;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj31360 = {};
return obj31360;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._reset_BANG_[(function (){var G__31364 = x__24813__auto__;
return goog.typeOf(G__31364);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj31366 = {};
return obj31366;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._swap_BANG_[(function (){var G__31376 = x__24813__auto__;
return goog.typeOf(G__31376);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._swap_BANG_[(function (){var G__31378 = x__24813__auto__;
return goog.typeOf(G__31378);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._swap_BANG_[(function (){var G__31380 = x__24813__auto__;
return goog.typeOf(G__31380);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._swap_BANG_[(function (){var G__31382 = x__24813__auto__;
return goog.typeOf(G__31382);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj31384 = {};
return obj31384;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._vreset_BANG_[(function (){var G__31388 = x__24813__auto__;
return goog.typeOf(G__31388);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj31390 = {};
return obj31390;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._iterator[(function (){var G__31394 = x__24813__auto__;
return goog.typeOf(G__31394);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._iterator["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__31397 = (4294967295);
var G__31398 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__31397,G__31398) : Math.imul.call(null,G__31397,G__31398));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__31401 = a;
var G__31402 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__31401,G__31402) : Math.imul.call(null,G__31401,G__31402));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__31403 = (i + (2));
var G__31404 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__31403;
h1 = G__31404;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj31406 = {};
return obj31406;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__31407 = (i + (1));
var G__31408 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__31407;
hash = G__31408;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj31412 = {};
return obj31412;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__31415 = o;
if(G__31415){
var bit__24844__auto__ = (G__31415.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24844__auto__) || (G__31415.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__31416 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__31416) : Math.floor.call(null,G__31416));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24165__auto__ = cljs.core.not(a.ns);
if(and__24165__auto__){
return b.ns;
} else {
return and__24165__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__31423 = a.ns;
var G__31424 = b.ns;
return goog.array.defaultCompare(G__31423,G__31424);
})();
if(((0) === nsc)){
var G__31425 = a.name;
var G__31426 = b.name;
return goog.array.defaultCompare(G__31425,G__31426);
} else {
return nsc;
}
}
} else {
var G__31427 = a.name;
var G__31428 = b.name;
return goog.array.defaultCompare(G__31427,G__31428);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24593__auto__ = self__._hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__31430 = null;
var G__31430__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__31430__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__31430 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__31430__2.call(this,self__,coll);
case 3:
return G__31430__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31430.cljs$core$IFn$_invoke$arity$2 = G__31430__2;
G__31430.cljs$core$IFn$_invoke$arity$3 = G__31430__3;
return G__31430;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args31429){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31429)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__31478 = null;
var G__31478__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__31478__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__31478__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__31478__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__31478__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__31478__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__31478__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__31478__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__31478__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__31478__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__31478__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__31478__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__31478__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__31478__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__31478__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__31478__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__31478__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__31478__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__31478__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__31478__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__31478__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__31478__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31434 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__31435 = a;
var G__31436 = b;
var G__31437 = c;
var G__31438 = d;
var G__31439 = e;
var G__31440 = f;
var G__31441 = g;
var G__31442 = h;
var G__31443 = i;
var G__31444 = j;
var G__31445 = k;
var G__31446 = l;
var G__31447 = m;
var G__31448 = n;
var G__31449 = o;
var G__31450 = p;
var G__31451 = q;
var G__31452 = r;
var G__31453 = s;
var G__31454 = t;
var G__31455 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31434,G__31435,G__31436,G__31437,G__31438,G__31439,G__31440,G__31441,G__31442,G__31443,G__31444,G__31445,G__31446,G__31447,G__31448,G__31449,G__31450,G__31451,G__31452,G__31453,G__31454,G__31455) : cljs.core.apply.call(null,G__31434,G__31435,G__31436,G__31437,G__31438,G__31439,G__31440,G__31441,G__31442,G__31443,G__31444,G__31445,G__31446,G__31447,G__31448,G__31449,G__31450,G__31451,G__31452,G__31453,G__31454,G__31455));
});
G__31478 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__31478__1.call(this,self__);
case 2:
return G__31478__2.call(this,self__,a);
case 3:
return G__31478__3.call(this,self__,a,b);
case 4:
return G__31478__4.call(this,self__,a,b,c);
case 5:
return G__31478__5.call(this,self__,a,b,c,d);
case 6:
return G__31478__6.call(this,self__,a,b,c,d,e);
case 7:
return G__31478__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__31478__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__31478__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__31478__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__31478__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__31478__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__31478__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__31478__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__31478__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__31478__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__31478__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__31478__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__31478__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__31478__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__31478__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__31478__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31478.cljs$core$IFn$_invoke$arity$1 = G__31478__1;
G__31478.cljs$core$IFn$_invoke$arity$2 = G__31478__2;
G__31478.cljs$core$IFn$_invoke$arity$3 = G__31478__3;
G__31478.cljs$core$IFn$_invoke$arity$4 = G__31478__4;
G__31478.cljs$core$IFn$_invoke$arity$5 = G__31478__5;
G__31478.cljs$core$IFn$_invoke$arity$6 = G__31478__6;
G__31478.cljs$core$IFn$_invoke$arity$7 = G__31478__7;
G__31478.cljs$core$IFn$_invoke$arity$8 = G__31478__8;
G__31478.cljs$core$IFn$_invoke$arity$9 = G__31478__9;
G__31478.cljs$core$IFn$_invoke$arity$10 = G__31478__10;
G__31478.cljs$core$IFn$_invoke$arity$11 = G__31478__11;
G__31478.cljs$core$IFn$_invoke$arity$12 = G__31478__12;
G__31478.cljs$core$IFn$_invoke$arity$13 = G__31478__13;
G__31478.cljs$core$IFn$_invoke$arity$14 = G__31478__14;
G__31478.cljs$core$IFn$_invoke$arity$15 = G__31478__15;
G__31478.cljs$core$IFn$_invoke$arity$16 = G__31478__16;
G__31478.cljs$core$IFn$_invoke$arity$17 = G__31478__17;
G__31478.cljs$core$IFn$_invoke$arity$18 = G__31478__18;
G__31478.cljs$core$IFn$_invoke$arity$19 = G__31478__19;
G__31478.cljs$core$IFn$_invoke$arity$20 = G__31478__20;
G__31478.cljs$core$IFn$_invoke$arity$21 = G__31478__21;
G__31478.cljs$core$IFn$_invoke$arity$22 = G__31478__22;
return G__31478;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args31433){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31433)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__31456 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__31457 = a;
var G__31458 = b;
var G__31459 = c;
var G__31460 = d;
var G__31461 = e;
var G__31462 = f;
var G__31463 = g;
var G__31464 = h;
var G__31465 = i;
var G__31466 = j;
var G__31467 = k;
var G__31468 = l;
var G__31469 = m;
var G__31470 = n;
var G__31471 = o;
var G__31472 = p;
var G__31473 = q;
var G__31474 = r;
var G__31475 = s;
var G__31476 = t;
var G__31477 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31456,G__31457,G__31458,G__31459,G__31460,G__31461,G__31462,G__31463,G__31464,G__31465,G__31466,G__31467,G__31468,G__31469,G__31470,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476,G__31477) : cljs.core.apply.call(null,G__31456,G__31457,G__31458,G__31459,G__31460,G__31461,G__31462,G__31463,G__31464,G__31465,G__31466,G__31467,G__31468,G__31469,G__31470,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476,G__31477));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__31480 = x;
if(G__31480){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto__ = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return G__31480.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__31480.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__31480);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__31480);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__31482 = value;
if(G__31482){
var bit__24851__auto__ = (G__31482.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24851__auto__) || (G__31482.cljs$core$ICloneable$)){
return true;
} else {
if((!G__31482.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__31482);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__31482);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31484 = coll;
if(G__31484){
var bit__24844__auto__ = (G__31484.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24844__auto__) || (G__31484.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31486 = coll;
if(G__31486){
var bit__24844__auto__ = (G__31486.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24844__auto__) || (G__31486.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__31488 = coll;
if(G__31488){
var bit__24844__auto__ = (G__31488.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24844__auto__) || (G__31488.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31490 = coll;
if(G__31490){
var bit__24844__auto__ = (G__31490.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24844__auto__) || (G__31490.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__31495__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__31496 = y;
var G__31497 = cljs.core.first(more);
var G__31498 = cljs.core.next(more);
x = G__31496;
y = G__31497;
more = G__31498;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31495 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31499__i = 0, G__31499__a = new Array(arguments.length -  2);
while (G__31499__i < G__31499__a.length) {G__31499__a[G__31499__i] = arguments[G__31499__i + 2]; ++G__31499__i;}
  more = new cljs.core.IndexedSeq(G__31499__a,0);
} 
return G__31495__delegate.call(this,x,y,more);};
G__31495.cljs$lang$maxFixedArity = 2;
G__31495.cljs$lang$applyTo = (function (arglist__31500){
var x = cljs.core.first(arglist__31500);
arglist__31500 = cljs.core.next(arglist__31500);
var y = cljs.core.first(arglist__31500);
var more = cljs.core.rest(arglist__31500);
return G__31495__delegate(x,y,more);
});
G__31495.cljs$core$IFn$_invoke$arity$variadic = G__31495__delegate;
return G__31495;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__31501 = null;
if (arguments.length > 2) {
var G__31502__i = 0, G__31502__a = new Array(arguments.length -  2);
while (G__31502__i < G__31502__a.length) {G__31502__a[G__31502__i] = arguments[G__31502__i + 2]; ++G__31502__i;}
G__31501 = new cljs.core.IndexedSeq(G__31502__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31501);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__31503 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__31503) : cljs.core.es6_iterator_seq.call(null,G__31503));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__31504 = (n + (1));
var G__31505 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__31506 = cljs.core.next(coll__$1);
n = G__31504;
hash_code = G__31505;
coll__$1 = G__31506;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__31507 = (n + (1));
var G__31508 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__31509 = cljs.core.next(coll__$1);
n = G__31507;
hash_code = G__31508;
coll__$1 = G__31509;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__31510 = this$__$1.valueOf();
var G__31511 = other.valueOf();
return goog.array.defaultCompare(G__31510,G__31511);
});

Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__31512 = o;
return goog.getUid(G__31512);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__31514 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31514) : cljs.core.deref.call(null,G__31514));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__31521 = val;
var G__31522 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31521,G__31522) : f.call(null,G__31521,G__31522));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31527 = nval;
var G__31528 = (n + (1));
val = G__31527;
n = G__31528;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__31523 = val__$1;
var G__31524 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31523,G__31524) : f.call(null,G__31523,G__31524));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31529 = nval;
var G__31530 = (n + (1));
val__$1 = G__31529;
n = G__31530;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__31525 = val__$1;
var G__31526 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31525,G__31526) : f.call(null,G__31525,G__31526));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31531 = nval;
var G__31532 = (n + (1));
val__$1 = G__31531;
n = G__31532;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__31539 = val;
var G__31540 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31539,G__31540) : f.call(null,G__31539,G__31540));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31545 = nval;
var G__31546 = (n + (1));
val = G__31545;
n = G__31546;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__31541 = val__$1;
var G__31542 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31541,G__31542) : f.call(null,G__31541,G__31542));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31547 = nval;
var G__31548 = (n + (1));
val__$1 = G__31547;
n = G__31548;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__31543 = val__$1;
var G__31544 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31543,G__31544) : f.call(null,G__31543,G__31544));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31549 = nval;
var G__31550 = (n + (1));
val__$1 = G__31549;
n = G__31550;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__31552 = x;
if(G__31552){
var bit__24851__auto__ = (G__31552.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24851__auto__) || (G__31552.cljs$core$ICounted$)){
return true;
} else {
if((!G__31552.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__31552);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__31552);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__31554 = x;
if(G__31554){
var bit__24851__auto__ = (G__31554.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24851__auto__) || (G__31554.cljs$core$IIndexed$)){
return true;
} else {
if((!G__31554.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__31554);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__31554);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__31555 = coll__$1;
var G__31556 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__31555,G__31556) : cljs.core.equiv_sequential.call(null,G__31555,G__31556));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31557 = o;
var G__31558 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__31557,G__31558) : cljs.core.cons.call(null,G__31557,G__31558));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__31561 = coll__$1;
var G__31562 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__31561,G__31562) : cljs.core.equiv_sequential.call(null,G__31561,G__31562));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__31563 = cljs.core.List.EMPTY;
var G__31564 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__31563,G__31564) : cljs.core.with_meta.call(null,G__31563,G__31564));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__31565 = f;
var G__31566 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__31565,G__31566) : cljs.core.seq_reduce.call(null,G__31565,G__31566));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__31567 = f;
var G__31568 = start;
var G__31569 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__31567,G__31568,G__31569) : cljs.core.seq_reduce.call(null,G__31567,G__31568,G__31569));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31570 = o;
var G__31571 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__31570,G__31571) : cljs.core.cons.call(null,G__31570,G__31571));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__31572 = sn;
s = G__31572;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__31577__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__31578 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__31579 = cljs.core.first(xs);
var G__31580 = cljs.core.next(xs);
coll = G__31578;
x = G__31579;
xs = G__31580;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__31577 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__31581__i = 0, G__31581__a = new Array(arguments.length -  2);
while (G__31581__i < G__31581__a.length) {G__31581__a[G__31581__i] = arguments[G__31581__i + 2]; ++G__31581__i;}
  xs = new cljs.core.IndexedSeq(G__31581__a,0);
} 
return G__31577__delegate.call(this,coll,x,xs);};
G__31577.cljs$lang$maxFixedArity = 2;
G__31577.cljs$lang$applyTo = (function (arglist__31582){
var coll = cljs.core.first(arglist__31582);
arglist__31582 = cljs.core.next(arglist__31582);
var x = cljs.core.first(arglist__31582);
var xs = cljs.core.rest(arglist__31582);
return G__31577__delegate(coll,x,xs);
});
G__31577.cljs$core$IFn$_invoke$arity$variadic = G__31577__delegate;
return G__31577;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__31583 = null;
if (arguments.length > 2) {
var G__31584__i = 0, G__31584__a = new Array(arguments.length -  2);
while (G__31584__i < G__31584__a.length) {G__31584__a[G__31584__i] = arguments[G__31584__i + 2]; ++G__31584__i;}
G__31583 = new cljs.core.IndexedSeq(G__31584__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__31583);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__31585 = cljs.core.next(s);
var G__31586 = (acc + (1));
s = G__31585;
acc = G__31586;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__31588 = coll;
if(G__31588){
var bit__24844__auto__ = (G__31588.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24844__auto__) || (G__31588.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__31589 = cljs.core.next(coll);
var G__31590 = (n - (1));
coll = G__31589;
n = G__31590;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__31591 = cljs.core.next(coll);
var G__31592 = (n - (1));
var G__31593 = not_found;
coll = G__31591;
n = G__31592;
not_found = G__31593;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__31598 = coll;
if(G__31598){
var bit__24844__auto__ = (G__31598.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24844__auto__) || (G__31598.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__31599 = coll;
if(G__31599){
var bit__24851__auto__ = (G__31599.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24851__auto__) || (G__31599.cljs$core$ISeq$)){
return true;
} else {
if((!G__31599.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31599);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31599);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__31600 = coll;
if(G__31600){
var bit__24844__auto__ = (G__31600.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24844__auto__) || (G__31600.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__31601 = coll;
if(G__31601){
var bit__24851__auto__ = (G__31601.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24851__auto__) || (G__31601.cljs$core$ISeq$)){
return true;
} else {
if((!G__31601.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31601);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31601);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__31602 = (n__$1 - (1));
var G__31603 = cljs.core.rest(xs);
n__$1 = G__31602;
xs = G__31603;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__31606 = o;
if(G__31606){
var bit__24844__auto__ = (G__31606.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24844__auto__) || (G__31606.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__31607 = o;
if(G__31607){
var bit__24844__auto__ = (G__31607.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24844__auto__) || (G__31607.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__31611__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__31612 = ret;
var G__31613 = cljs.core.first(kvs);
var G__31614 = cljs.core.second(kvs);
var G__31615 = cljs.core.nnext(kvs);
coll = G__31612;
k = G__31613;
v = G__31614;
kvs = G__31615;
continue;
} else {
return ret;
}
break;
}
};
var G__31611 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__31616__i = 0, G__31616__a = new Array(arguments.length -  3);
while (G__31616__i < G__31616__a.length) {G__31616__a[G__31616__i] = arguments[G__31616__i + 3]; ++G__31616__i;}
  kvs = new cljs.core.IndexedSeq(G__31616__a,0);
} 
return G__31611__delegate.call(this,coll,k,v,kvs);};
G__31611.cljs$lang$maxFixedArity = 3;
G__31611.cljs$lang$applyTo = (function (arglist__31617){
var coll = cljs.core.first(arglist__31617);
arglist__31617 = cljs.core.next(arglist__31617);
var k = cljs.core.first(arglist__31617);
arglist__31617 = cljs.core.next(arglist__31617);
var v = cljs.core.first(arglist__31617);
var kvs = cljs.core.rest(arglist__31617);
return G__31611__delegate(coll,k,v,kvs);
});
G__31611.cljs$core$IFn$_invoke$arity$variadic = G__31611__delegate;
return G__31611;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__31618 = null;
if (arguments.length > 3) {
var G__31619__i = 0, G__31619__a = new Array(arguments.length -  3);
while (G__31619__i < G__31619__a.length) {G__31619__a[G__31619__i] = arguments[G__31619__i + 3]; ++G__31619__i;}
G__31618 = new cljs.core.IndexedSeq(G__31619__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__31618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__31622__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__31623 = ret;
var G__31624 = cljs.core.first(ks);
var G__31625 = cljs.core.next(ks);
coll = G__31623;
k = G__31624;
ks = G__31625;
continue;
} else {
return ret;
}
}
break;
}
};
var G__31622 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__31626__i = 0, G__31626__a = new Array(arguments.length -  2);
while (G__31626__i < G__31626__a.length) {G__31626__a[G__31626__i] = arguments[G__31626__i + 2]; ++G__31626__i;}
  ks = new cljs.core.IndexedSeq(G__31626__a,0);
} 
return G__31622__delegate.call(this,coll,k,ks);};
G__31622.cljs$lang$maxFixedArity = 2;
G__31622.cljs$lang$applyTo = (function (arglist__31627){
var coll = cljs.core.first(arglist__31627);
arglist__31627 = cljs.core.next(arglist__31627);
var k = cljs.core.first(arglist__31627);
var ks = cljs.core.rest(arglist__31627);
return G__31622__delegate(coll,k,ks);
});
G__31622.cljs$core$IFn$_invoke$arity$variadic = G__31622__delegate;
return G__31622;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__31628 = null;
if (arguments.length > 2) {
var G__31629__i = 0, G__31629__a = new Array(arguments.length -  2);
while (G__31629__i < G__31629__a.length) {G__31629__a[G__31629__i] = arguments[G__31629__i + 2]; ++G__31629__i;}
G__31628 = new cljs.core.IndexedSeq(G__31629__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__31628);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__24177__auto__ = (function (){var G__31634 = f;
return goog.isFunction(G__31634);
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__31635 = f;
if(G__31635){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto____$1 = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
return G__31635.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__31635.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__31635);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__31635);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__32101 = null;
var G__32101__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__32101__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31637 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__31637) : self__.afn.call(null,G__31637));
});
var G__32101__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31638 = a;
var G__31639 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__31638,G__31639) : self__.afn.call(null,G__31638,G__31639));
});
var G__32101__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31640 = a;
var G__31641 = b;
var G__31642 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__31640,G__31641,G__31642) : self__.afn.call(null,G__31640,G__31641,G__31642));
});
var G__32101__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31643 = a;
var G__31644 = b;
var G__31645 = c;
var G__31646 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__31643,G__31644,G__31645,G__31646) : self__.afn.call(null,G__31643,G__31644,G__31645,G__31646));
});
var G__32101__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31647 = a;
var G__31648 = b;
var G__31649 = c;
var G__31650 = d;
var G__31651 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__31647,G__31648,G__31649,G__31650,G__31651) : self__.afn.call(null,G__31647,G__31648,G__31649,G__31650,G__31651));
});
var G__32101__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31652 = a;
var G__31653 = b;
var G__31654 = c;
var G__31655 = d;
var G__31656 = e;
var G__31657 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__31652,G__31653,G__31654,G__31655,G__31656,G__31657) : self__.afn.call(null,G__31652,G__31653,G__31654,G__31655,G__31656,G__31657));
});
var G__32101__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31658 = a;
var G__31659 = b;
var G__31660 = c;
var G__31661 = d;
var G__31662 = e;
var G__31663 = f;
var G__31664 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__31658,G__31659,G__31660,G__31661,G__31662,G__31663,G__31664) : self__.afn.call(null,G__31658,G__31659,G__31660,G__31661,G__31662,G__31663,G__31664));
});
var G__32101__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31665 = a;
var G__31666 = b;
var G__31667 = c;
var G__31668 = d;
var G__31669 = e;
var G__31670 = f;
var G__31671 = g;
var G__31672 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__31665,G__31666,G__31667,G__31668,G__31669,G__31670,G__31671,G__31672) : self__.afn.call(null,G__31665,G__31666,G__31667,G__31668,G__31669,G__31670,G__31671,G__31672));
});
var G__32101__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31673 = a;
var G__31674 = b;
var G__31675 = c;
var G__31676 = d;
var G__31677 = e;
var G__31678 = f;
var G__31679 = g;
var G__31680 = h;
var G__31681 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__31673,G__31674,G__31675,G__31676,G__31677,G__31678,G__31679,G__31680,G__31681) : self__.afn.call(null,G__31673,G__31674,G__31675,G__31676,G__31677,G__31678,G__31679,G__31680,G__31681));
});
var G__32101__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31682 = a;
var G__31683 = b;
var G__31684 = c;
var G__31685 = d;
var G__31686 = e;
var G__31687 = f;
var G__31688 = g;
var G__31689 = h;
var G__31690 = i;
var G__31691 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__31682,G__31683,G__31684,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690,G__31691) : self__.afn.call(null,G__31682,G__31683,G__31684,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690,G__31691));
});
var G__32101__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31692 = a;
var G__31693 = b;
var G__31694 = c;
var G__31695 = d;
var G__31696 = e;
var G__31697 = f;
var G__31698 = g;
var G__31699 = h;
var G__31700 = i;
var G__31701 = j;
var G__31702 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__31692,G__31693,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699,G__31700,G__31701,G__31702) : self__.afn.call(null,G__31692,G__31693,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699,G__31700,G__31701,G__31702));
});
var G__32101__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31703 = a;
var G__31704 = b;
var G__31705 = c;
var G__31706 = d;
var G__31707 = e;
var G__31708 = f;
var G__31709 = g;
var G__31710 = h;
var G__31711 = i;
var G__31712 = j;
var G__31713 = k;
var G__31714 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__31703,G__31704,G__31705,G__31706,G__31707,G__31708,G__31709,G__31710,G__31711,G__31712,G__31713,G__31714) : self__.afn.call(null,G__31703,G__31704,G__31705,G__31706,G__31707,G__31708,G__31709,G__31710,G__31711,G__31712,G__31713,G__31714));
});
var G__32101__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31715 = a;
var G__31716 = b;
var G__31717 = c;
var G__31718 = d;
var G__31719 = e;
var G__31720 = f;
var G__31721 = g;
var G__31722 = h;
var G__31723 = i;
var G__31724 = j;
var G__31725 = k;
var G__31726 = l;
var G__31727 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__31715,G__31716,G__31717,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726,G__31727) : self__.afn.call(null,G__31715,G__31716,G__31717,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726,G__31727));
});
var G__32101__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31728 = a;
var G__31729 = b;
var G__31730 = c;
var G__31731 = d;
var G__31732 = e;
var G__31733 = f;
var G__31734 = g;
var G__31735 = h;
var G__31736 = i;
var G__31737 = j;
var G__31738 = k;
var G__31739 = l;
var G__31740 = m;
var G__31741 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__31728,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737,G__31738,G__31739,G__31740,G__31741) : self__.afn.call(null,G__31728,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737,G__31738,G__31739,G__31740,G__31741));
});
var G__32101__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31742 = a;
var G__31743 = b;
var G__31744 = c;
var G__31745 = d;
var G__31746 = e;
var G__31747 = f;
var G__31748 = g;
var G__31749 = h;
var G__31750 = i;
var G__31751 = j;
var G__31752 = k;
var G__31753 = l;
var G__31754 = m;
var G__31755 = n;
var G__31756 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749,G__31750,G__31751,G__31752,G__31753,G__31754,G__31755,G__31756) : self__.afn.call(null,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749,G__31750,G__31751,G__31752,G__31753,G__31754,G__31755,G__31756));
});
var G__32101__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31757 = a;
var G__31758 = b;
var G__31759 = c;
var G__31760 = d;
var G__31761 = e;
var G__31762 = f;
var G__31763 = g;
var G__31764 = h;
var G__31765 = i;
var G__31766 = j;
var G__31767 = k;
var G__31768 = l;
var G__31769 = m;
var G__31770 = n;
var G__31771 = o;
var G__31772 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767,G__31768,G__31769,G__31770,G__31771,G__31772) : self__.afn.call(null,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767,G__31768,G__31769,G__31770,G__31771,G__31772));
});
var G__32101__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31773 = a;
var G__31774 = b;
var G__31775 = c;
var G__31776 = d;
var G__31777 = e;
var G__31778 = f;
var G__31779 = g;
var G__31780 = h;
var G__31781 = i;
var G__31782 = j;
var G__31783 = k;
var G__31784 = l;
var G__31785 = m;
var G__31786 = n;
var G__31787 = o;
var G__31788 = p;
var G__31789 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__31773,G__31774,G__31775,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789) : self__.afn.call(null,G__31773,G__31774,G__31775,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789));
});
var G__32101__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31790 = a;
var G__31791 = b;
var G__31792 = c;
var G__31793 = d;
var G__31794 = e;
var G__31795 = f;
var G__31796 = g;
var G__31797 = h;
var G__31798 = i;
var G__31799 = j;
var G__31800 = k;
var G__31801 = l;
var G__31802 = m;
var G__31803 = n;
var G__31804 = o;
var G__31805 = p;
var G__31806 = q;
var G__31807 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__31790,G__31791,G__31792,G__31793,G__31794,G__31795,G__31796,G__31797,G__31798,G__31799,G__31800,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807) : self__.afn.call(null,G__31790,G__31791,G__31792,G__31793,G__31794,G__31795,G__31796,G__31797,G__31798,G__31799,G__31800,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807));
});
var G__32101__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31808 = a;
var G__31809 = b;
var G__31810 = c;
var G__31811 = d;
var G__31812 = e;
var G__31813 = f;
var G__31814 = g;
var G__31815 = h;
var G__31816 = i;
var G__31817 = j;
var G__31818 = k;
var G__31819 = l;
var G__31820 = m;
var G__31821 = n;
var G__31822 = o;
var G__31823 = p;
var G__31824 = q;
var G__31825 = r;
var G__31826 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815,G__31816,G__31817,G__31818,G__31819,G__31820,G__31821,G__31822,G__31823,G__31824,G__31825,G__31826) : self__.afn.call(null,G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815,G__31816,G__31817,G__31818,G__31819,G__31820,G__31821,G__31822,G__31823,G__31824,G__31825,G__31826));
});
var G__32101__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31827 = a;
var G__31828 = b;
var G__31829 = c;
var G__31830 = d;
var G__31831 = e;
var G__31832 = f;
var G__31833 = g;
var G__31834 = h;
var G__31835 = i;
var G__31836 = j;
var G__31837 = k;
var G__31838 = l;
var G__31839 = m;
var G__31840 = n;
var G__31841 = o;
var G__31842 = p;
var G__31843 = q;
var G__31844 = r;
var G__31845 = s;
var G__31846 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__31827,G__31828,G__31829,G__31830,G__31831,G__31832,G__31833,G__31834,G__31835,G__31836,G__31837,G__31838,G__31839,G__31840,G__31841,G__31842,G__31843,G__31844,G__31845,G__31846) : self__.afn.call(null,G__31827,G__31828,G__31829,G__31830,G__31831,G__31832,G__31833,G__31834,G__31835,G__31836,G__31837,G__31838,G__31839,G__31840,G__31841,G__31842,G__31843,G__31844,G__31845,G__31846));
});
var G__32101__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31847 = self__.afn;
var G__31848 = a;
var G__31849 = b;
var G__31850 = c;
var G__31851 = d;
var G__31852 = e;
var G__31853 = f;
var G__31854 = g;
var G__31855 = h;
var G__31856 = i;
var G__31857 = j;
var G__31858 = k;
var G__31859 = l;
var G__31860 = m;
var G__31861 = n;
var G__31862 = o;
var G__31863 = p;
var G__31864 = q;
var G__31865 = r;
var G__31866 = s;
var G__31867 = t;
var G__31868 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31847,G__31848,G__31849,G__31850,G__31851,G__31852,G__31853,G__31854,G__31855,G__31856,G__31857,G__31858,G__31859,G__31860,G__31861,G__31862,G__31863,G__31864,G__31865,G__31866,G__31867,G__31868) : cljs.core.apply.call(null,G__31847,G__31848,G__31849,G__31850,G__31851,G__31852,G__31853,G__31854,G__31855,G__31856,G__31857,G__31858,G__31859,G__31860,G__31861,G__31862,G__31863,G__31864,G__31865,G__31866,G__31867,G__31868));
});
G__32101 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__32101__1.call(this,self__);
case 2:
return G__32101__2.call(this,self__,a);
case 3:
return G__32101__3.call(this,self__,a,b);
case 4:
return G__32101__4.call(this,self__,a,b,c);
case 5:
return G__32101__5.call(this,self__,a,b,c,d);
case 6:
return G__32101__6.call(this,self__,a,b,c,d,e);
case 7:
return G__32101__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__32101__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__32101__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__32101__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__32101__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__32101__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__32101__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__32101__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__32101__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__32101__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__32101__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__32101__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__32101__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__32101__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__32101__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__32101__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32101.cljs$core$IFn$_invoke$arity$1 = G__32101__1;
G__32101.cljs$core$IFn$_invoke$arity$2 = G__32101__2;
G__32101.cljs$core$IFn$_invoke$arity$3 = G__32101__3;
G__32101.cljs$core$IFn$_invoke$arity$4 = G__32101__4;
G__32101.cljs$core$IFn$_invoke$arity$5 = G__32101__5;
G__32101.cljs$core$IFn$_invoke$arity$6 = G__32101__6;
G__32101.cljs$core$IFn$_invoke$arity$7 = G__32101__7;
G__32101.cljs$core$IFn$_invoke$arity$8 = G__32101__8;
G__32101.cljs$core$IFn$_invoke$arity$9 = G__32101__9;
G__32101.cljs$core$IFn$_invoke$arity$10 = G__32101__10;
G__32101.cljs$core$IFn$_invoke$arity$11 = G__32101__11;
G__32101.cljs$core$IFn$_invoke$arity$12 = G__32101__12;
G__32101.cljs$core$IFn$_invoke$arity$13 = G__32101__13;
G__32101.cljs$core$IFn$_invoke$arity$14 = G__32101__14;
G__32101.cljs$core$IFn$_invoke$arity$15 = G__32101__15;
G__32101.cljs$core$IFn$_invoke$arity$16 = G__32101__16;
G__32101.cljs$core$IFn$_invoke$arity$17 = G__32101__17;
G__32101.cljs$core$IFn$_invoke$arity$18 = G__32101__18;
G__32101.cljs$core$IFn$_invoke$arity$19 = G__32101__19;
G__32101.cljs$core$IFn$_invoke$arity$20 = G__32101__20;
G__32101.cljs$core$IFn$_invoke$arity$21 = G__32101__21;
G__32101.cljs$core$IFn$_invoke$arity$22 = G__32101__22;
return G__32101;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args31636){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31636)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__31869 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__31869) : self__.afn.call(null,G__31869));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__31870 = a;
var G__31871 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__31870,G__31871) : self__.afn.call(null,G__31870,G__31871));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__31872 = a;
var G__31873 = b;
var G__31874 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__31872,G__31873,G__31874) : self__.afn.call(null,G__31872,G__31873,G__31874));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__31875 = a;
var G__31876 = b;
var G__31877 = c;
var G__31878 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__31875,G__31876,G__31877,G__31878) : self__.afn.call(null,G__31875,G__31876,G__31877,G__31878));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__31879 = a;
var G__31880 = b;
var G__31881 = c;
var G__31882 = d;
var G__31883 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__31879,G__31880,G__31881,G__31882,G__31883) : self__.afn.call(null,G__31879,G__31880,G__31881,G__31882,G__31883));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__31884 = a;
var G__31885 = b;
var G__31886 = c;
var G__31887 = d;
var G__31888 = e;
var G__31889 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__31884,G__31885,G__31886,G__31887,G__31888,G__31889) : self__.afn.call(null,G__31884,G__31885,G__31886,G__31887,G__31888,G__31889));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__31890 = a;
var G__31891 = b;
var G__31892 = c;
var G__31893 = d;
var G__31894 = e;
var G__31895 = f;
var G__31896 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__31890,G__31891,G__31892,G__31893,G__31894,G__31895,G__31896) : self__.afn.call(null,G__31890,G__31891,G__31892,G__31893,G__31894,G__31895,G__31896));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__31897 = a;
var G__31898 = b;
var G__31899 = c;
var G__31900 = d;
var G__31901 = e;
var G__31902 = f;
var G__31903 = g;
var G__31904 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__31897,G__31898,G__31899,G__31900,G__31901,G__31902,G__31903,G__31904) : self__.afn.call(null,G__31897,G__31898,G__31899,G__31900,G__31901,G__31902,G__31903,G__31904));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__31905 = a;
var G__31906 = b;
var G__31907 = c;
var G__31908 = d;
var G__31909 = e;
var G__31910 = f;
var G__31911 = g;
var G__31912 = h;
var G__31913 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__31905,G__31906,G__31907,G__31908,G__31909,G__31910,G__31911,G__31912,G__31913) : self__.afn.call(null,G__31905,G__31906,G__31907,G__31908,G__31909,G__31910,G__31911,G__31912,G__31913));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__31914 = a;
var G__31915 = b;
var G__31916 = c;
var G__31917 = d;
var G__31918 = e;
var G__31919 = f;
var G__31920 = g;
var G__31921 = h;
var G__31922 = i;
var G__31923 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__31914,G__31915,G__31916,G__31917,G__31918,G__31919,G__31920,G__31921,G__31922,G__31923) : self__.afn.call(null,G__31914,G__31915,G__31916,G__31917,G__31918,G__31919,G__31920,G__31921,G__31922,G__31923));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__31924 = a;
var G__31925 = b;
var G__31926 = c;
var G__31927 = d;
var G__31928 = e;
var G__31929 = f;
var G__31930 = g;
var G__31931 = h;
var G__31932 = i;
var G__31933 = j;
var G__31934 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__31924,G__31925,G__31926,G__31927,G__31928,G__31929,G__31930,G__31931,G__31932,G__31933,G__31934) : self__.afn.call(null,G__31924,G__31925,G__31926,G__31927,G__31928,G__31929,G__31930,G__31931,G__31932,G__31933,G__31934));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__31935 = a;
var G__31936 = b;
var G__31937 = c;
var G__31938 = d;
var G__31939 = e;
var G__31940 = f;
var G__31941 = g;
var G__31942 = h;
var G__31943 = i;
var G__31944 = j;
var G__31945 = k;
var G__31946 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__31935,G__31936,G__31937,G__31938,G__31939,G__31940,G__31941,G__31942,G__31943,G__31944,G__31945,G__31946) : self__.afn.call(null,G__31935,G__31936,G__31937,G__31938,G__31939,G__31940,G__31941,G__31942,G__31943,G__31944,G__31945,G__31946));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__31947 = a;
var G__31948 = b;
var G__31949 = c;
var G__31950 = d;
var G__31951 = e;
var G__31952 = f;
var G__31953 = g;
var G__31954 = h;
var G__31955 = i;
var G__31956 = j;
var G__31957 = k;
var G__31958 = l;
var G__31959 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__31947,G__31948,G__31949,G__31950,G__31951,G__31952,G__31953,G__31954,G__31955,G__31956,G__31957,G__31958,G__31959) : self__.afn.call(null,G__31947,G__31948,G__31949,G__31950,G__31951,G__31952,G__31953,G__31954,G__31955,G__31956,G__31957,G__31958,G__31959));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__31960 = a;
var G__31961 = b;
var G__31962 = c;
var G__31963 = d;
var G__31964 = e;
var G__31965 = f;
var G__31966 = g;
var G__31967 = h;
var G__31968 = i;
var G__31969 = j;
var G__31970 = k;
var G__31971 = l;
var G__31972 = m;
var G__31973 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__31960,G__31961,G__31962,G__31963,G__31964,G__31965,G__31966,G__31967,G__31968,G__31969,G__31970,G__31971,G__31972,G__31973) : self__.afn.call(null,G__31960,G__31961,G__31962,G__31963,G__31964,G__31965,G__31966,G__31967,G__31968,G__31969,G__31970,G__31971,G__31972,G__31973));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__31974 = a;
var G__31975 = b;
var G__31976 = c;
var G__31977 = d;
var G__31978 = e;
var G__31979 = f;
var G__31980 = g;
var G__31981 = h;
var G__31982 = i;
var G__31983 = j;
var G__31984 = k;
var G__31985 = l;
var G__31986 = m;
var G__31987 = n;
var G__31988 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__31974,G__31975,G__31976,G__31977,G__31978,G__31979,G__31980,G__31981,G__31982,G__31983,G__31984,G__31985,G__31986,G__31987,G__31988) : self__.afn.call(null,G__31974,G__31975,G__31976,G__31977,G__31978,G__31979,G__31980,G__31981,G__31982,G__31983,G__31984,G__31985,G__31986,G__31987,G__31988));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__31989 = a;
var G__31990 = b;
var G__31991 = c;
var G__31992 = d;
var G__31993 = e;
var G__31994 = f;
var G__31995 = g;
var G__31996 = h;
var G__31997 = i;
var G__31998 = j;
var G__31999 = k;
var G__32000 = l;
var G__32001 = m;
var G__32002 = n;
var G__32003 = o;
var G__32004 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__31989,G__31990,G__31991,G__31992,G__31993,G__31994,G__31995,G__31996,G__31997,G__31998,G__31999,G__32000,G__32001,G__32002,G__32003,G__32004) : self__.afn.call(null,G__31989,G__31990,G__31991,G__31992,G__31993,G__31994,G__31995,G__31996,G__31997,G__31998,G__31999,G__32000,G__32001,G__32002,G__32003,G__32004));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__32005 = a;
var G__32006 = b;
var G__32007 = c;
var G__32008 = d;
var G__32009 = e;
var G__32010 = f;
var G__32011 = g;
var G__32012 = h;
var G__32013 = i;
var G__32014 = j;
var G__32015 = k;
var G__32016 = l;
var G__32017 = m;
var G__32018 = n;
var G__32019 = o;
var G__32020 = p;
var G__32021 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__32005,G__32006,G__32007,G__32008,G__32009,G__32010,G__32011,G__32012,G__32013,G__32014,G__32015,G__32016,G__32017,G__32018,G__32019,G__32020,G__32021) : self__.afn.call(null,G__32005,G__32006,G__32007,G__32008,G__32009,G__32010,G__32011,G__32012,G__32013,G__32014,G__32015,G__32016,G__32017,G__32018,G__32019,G__32020,G__32021));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__32022 = a;
var G__32023 = b;
var G__32024 = c;
var G__32025 = d;
var G__32026 = e;
var G__32027 = f;
var G__32028 = g;
var G__32029 = h;
var G__32030 = i;
var G__32031 = j;
var G__32032 = k;
var G__32033 = l;
var G__32034 = m;
var G__32035 = n;
var G__32036 = o;
var G__32037 = p;
var G__32038 = q;
var G__32039 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__32022,G__32023,G__32024,G__32025,G__32026,G__32027,G__32028,G__32029,G__32030,G__32031,G__32032,G__32033,G__32034,G__32035,G__32036,G__32037,G__32038,G__32039) : self__.afn.call(null,G__32022,G__32023,G__32024,G__32025,G__32026,G__32027,G__32028,G__32029,G__32030,G__32031,G__32032,G__32033,G__32034,G__32035,G__32036,G__32037,G__32038,G__32039));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__32040 = a;
var G__32041 = b;
var G__32042 = c;
var G__32043 = d;
var G__32044 = e;
var G__32045 = f;
var G__32046 = g;
var G__32047 = h;
var G__32048 = i;
var G__32049 = j;
var G__32050 = k;
var G__32051 = l;
var G__32052 = m;
var G__32053 = n;
var G__32054 = o;
var G__32055 = p;
var G__32056 = q;
var G__32057 = r;
var G__32058 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__32040,G__32041,G__32042,G__32043,G__32044,G__32045,G__32046,G__32047,G__32048,G__32049,G__32050,G__32051,G__32052,G__32053,G__32054,G__32055,G__32056,G__32057,G__32058) : self__.afn.call(null,G__32040,G__32041,G__32042,G__32043,G__32044,G__32045,G__32046,G__32047,G__32048,G__32049,G__32050,G__32051,G__32052,G__32053,G__32054,G__32055,G__32056,G__32057,G__32058));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__32059 = a;
var G__32060 = b;
var G__32061 = c;
var G__32062 = d;
var G__32063 = e;
var G__32064 = f;
var G__32065 = g;
var G__32066 = h;
var G__32067 = i;
var G__32068 = j;
var G__32069 = k;
var G__32070 = l;
var G__32071 = m;
var G__32072 = n;
var G__32073 = o;
var G__32074 = p;
var G__32075 = q;
var G__32076 = r;
var G__32077 = s;
var G__32078 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__32059,G__32060,G__32061,G__32062,G__32063,G__32064,G__32065,G__32066,G__32067,G__32068,G__32069,G__32070,G__32071,G__32072,G__32073,G__32074,G__32075,G__32076,G__32077,G__32078) : self__.afn.call(null,G__32059,G__32060,G__32061,G__32062,G__32063,G__32064,G__32065,G__32066,G__32067,G__32068,G__32069,G__32070,G__32071,G__32072,G__32073,G__32074,G__32075,G__32076,G__32077,G__32078));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__32079 = self__.afn;
var G__32080 = a;
var G__32081 = b;
var G__32082 = c;
var G__32083 = d;
var G__32084 = e;
var G__32085 = f;
var G__32086 = g;
var G__32087 = h;
var G__32088 = i;
var G__32089 = j;
var G__32090 = k;
var G__32091 = l;
var G__32092 = m;
var G__32093 = n;
var G__32094 = o;
var G__32095 = p;
var G__32096 = q;
var G__32097 = r;
var G__32098 = s;
var G__32099 = t;
var G__32100 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32079,G__32080,G__32081,G__32082,G__32083,G__32084,G__32085,G__32086,G__32087,G__32088,G__32089,G__32090,G__32091,G__32092,G__32093,G__32094,G__32095,G__32096,G__32097,G__32098,G__32099,G__32100) : cljs.core.apply.call(null,G__32079,G__32080,G__32081,G__32082,G__32083,G__32084,G__32085,G__32086,G__32087,G__32088,G__32089,G__32090,G__32091,G__32092,G__32093,G__32094,G__32095,G__32096,G__32097,G__32098,G__32099,G__32100));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__32105 = o;
if(G__32105){
var bit__24851__auto__ = (G__32105.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24851__auto__) || (G__32105.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__32105.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__32105);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__32105);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__24165__auto__ = !((o == null));
if(and__24165__auto__){
var G__32109 = o;
if(G__32109){
var bit__24851__auto__ = (G__32109.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24851__auto__) || (G__32109.cljs$core$IMeta$)){
return true;
} else {
if((!G__32109.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32109);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32109);
}
} else {
return and__24165__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__32112__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__32113 = ret;
var G__32114 = cljs.core.first(ks);
var G__32115 = cljs.core.next(ks);
coll = G__32113;
k = G__32114;
ks = G__32115;
continue;
} else {
return ret;
}
}
break;
}
};
var G__32112 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__32116__i = 0, G__32116__a = new Array(arguments.length -  2);
while (G__32116__i < G__32116__a.length) {G__32116__a[G__32116__i] = arguments[G__32116__i + 2]; ++G__32116__i;}
  ks = new cljs.core.IndexedSeq(G__32116__a,0);
} 
return G__32112__delegate.call(this,coll,k,ks);};
G__32112.cljs$lang$maxFixedArity = 2;
G__32112.cljs$lang$applyTo = (function (arglist__32117){
var coll = cljs.core.first(arglist__32117);
arglist__32117 = cljs.core.next(arglist__32117);
var k = cljs.core.first(arglist__32117);
var ks = cljs.core.rest(arglist__32117);
return G__32112__delegate(coll,k,ks);
});
G__32112.cljs$core$IFn$_invoke$arity$variadic = G__32112__delegate;
return G__32112;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__32118 = null;
if (arguments.length > 2) {
var G__32119__i = 0, G__32119__a = new Array(arguments.length -  2);
while (G__32119__i < G__32119__a.length) {G__32119__a[G__32119__i] = arguments[G__32119__i + 2]; ++G__32119__i;}
G__32118 = new cljs.core.IndexedSeq(G__32119__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__32118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32121 = x;
if(G__32121){
var bit__24851__auto__ = (G__32121.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24851__auto__) || (G__32121.cljs$core$ICollection$)){
return true;
} else {
if((!G__32121.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__32121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__32121);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32123 = x;
if(G__32123){
var bit__24851__auto__ = (G__32123.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24851__auto__) || (G__32123.cljs$core$ISet$)){
return true;
} else {
if((!G__32123.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__32123);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__32123);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__32125 = x;
if(G__32125){
var bit__24851__auto__ = (G__32125.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24851__auto__) || (G__32125.cljs$core$IAssociative$)){
return true;
} else {
if((!G__32125.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__32125);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__32125);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__32127 = x;
if(G__32127){
var bit__24851__auto__ = (G__32127.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24851__auto__) || (G__32127.cljs$core$ISequential$)){
return true;
} else {
if((!G__32127.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__32127);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__32127);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__32129 = x;
if(G__32129){
var bit__24851__auto__ = (G__32129.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24851__auto__) || (G__32129.cljs$core$ISorted$)){
return true;
} else {
if((!G__32129.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__32129);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__32129);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__32131 = x;
if(G__32131){
var bit__24851__auto__ = (G__32131.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24851__auto__) || (G__32131.cljs$core$IReduce$)){
return true;
} else {
if((!G__32131.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__32131);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__32131);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32133 = x;
if(G__32133){
var bit__24851__auto__ = (G__32133.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24851__auto__) || (G__32133.cljs$core$IMap$)){
return true;
} else {
if((!G__32133.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__32133);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__32133);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__32135 = x;
if(G__32135){
var bit__24851__auto__ = (G__32135.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24851__auto__) || (G__32135.cljs$core$IVector$)){
return true;
} else {
if((!G__32135.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__32135);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__32135);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__32137 = x;
if(G__32137){
var bit__24844__auto__ = (G__32137.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24844__auto__) || (G__32137.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj32143 = {};
return obj32143;
});
var cljs$core$js_obj__1 = (function() { 
var G__32146__delegate = function (keyvals){
var G__32144 = goog.object.create;
var G__32145 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__32144,G__32145) : cljs.core.apply.call(null,G__32144,G__32145));
};
var G__32146 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__32147__i = 0, G__32147__a = new Array(arguments.length -  0);
while (G__32147__i < G__32147__a.length) {G__32147__a[G__32147__i] = arguments[G__32147__i + 0]; ++G__32147__i;}
  keyvals = new cljs.core.IndexedSeq(G__32147__a,0);
} 
return G__32146__delegate.call(this,keyvals);};
G__32146.cljs$lang$maxFixedArity = 0;
G__32146.cljs$lang$applyTo = (function (arglist__32148){
var keyvals = cljs.core.seq(arglist__32148);
return G__32146__delegate(keyvals);
});
G__32146.cljs$core$IFn$_invoke$arity$variadic = G__32146__delegate;
return G__32146;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__32149 = null;
if (arguments.length > 0) {
var G__32150__i = 0, G__32150__a = new Array(arguments.length -  0);
while (G__32150__i < G__32150__a.length) {G__32150__a[G__32150__i] = arguments[G__32150__i + 0]; ++G__32150__i;}
G__32149 = new cljs.core.IndexedSeq(G__32150__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__32149);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__32153_32155 = obj;
var G__32154_32156 = ((function (G__32153_32155,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__32153_32155,keys))
;
goog.object.forEach(G__32153_32155,G__32154_32156);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__32157 = (i__$1 + (1));
var G__32158 = (j__$1 + (1));
var G__32159 = (len__$1 - (1));
i__$1 = G__32157;
j__$1 = G__32158;
len__$1 = G__32159;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__32160 = (i__$1 - (1));
var G__32161 = (j__$1 - (1));
var G__32162 = (len__$1 - (1));
i__$1 = G__32160;
j__$1 = G__32161;
len__$1 = G__32162;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj32164 = {};
return obj32164;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__32166 = s;
if(G__32166){
var bit__24851__auto__ = (G__32166.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24851__auto__) || (G__32166.cljs$core$ISeq$)){
return true;
} else {
if((!G__32166.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32166);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32166);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__32168 = s;
if(G__32168){
var bit__24851__auto__ = (G__32168.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24851__auto__) || (G__32168.cljs$core$ISeqable$)){
return true;
} else {
if((!G__32168.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__32168);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__32168);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__24177__auto__ = cljs.core.fn_QMARK_(f);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var G__32172 = f;
if(G__32172){
var bit__24851__auto__ = (G__32172.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24851__auto__) || (G__32172.cljs$core$IFn$)){
return true;
} else {
if((!G__32172.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__32172);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__32172);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__32185 = n;
return isNaN(G__32185);
})())) && (!((n === Infinity))) && (((function (){var G__32186 = n;
return parseFloat(G__32186);
})() === (function (){var G__32187 = n;
var G__32188 = (10);
return parseInt(G__32187,G__32188);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__32189__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__32190 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__32191 = etc;
s = G__32190;
xs = G__32191;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__32189 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32192__i = 0, G__32192__a = new Array(arguments.length -  2);
while (G__32192__i < G__32192__a.length) {G__32192__a[G__32192__i] = arguments[G__32192__i + 2]; ++G__32192__i;}
  more = new cljs.core.IndexedSeq(G__32192__a,0);
} 
return G__32189__delegate.call(this,x,y,more);};
G__32189.cljs$lang$maxFixedArity = 2;
G__32189.cljs$lang$applyTo = (function (arglist__32193){
var x = cljs.core.first(arglist__32193);
arglist__32193 = cljs.core.next(arglist__32193);
var y = cljs.core.first(arglist__32193);
var more = cljs.core.rest(arglist__32193);
return G__32189__delegate(x,y,more);
});
G__32189.cljs$core$IFn$_invoke$arity$variadic = G__32189__delegate;
return G__32189;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__32194 = null;
if (arguments.length > 2) {
var G__32195__i = 0, G__32195__a = new Array(arguments.length -  2);
while (G__32195__i < G__32195__a.length) {G__32195__a[G__32195__i] = arguments[G__32195__i + 2]; ++G__32195__i;}
G__32194 = new cljs.core.IndexedSeq(G__32195__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__32199 = x;
if(G__32199){
var bit__24844__auto__ = (G__32199.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24844__auto__) || (G__32199.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__32200 = x;
var G__32201 = y;
return goog.array.defaultCompare(G__32200,G__32201);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__32206 = xs;
var G__32207 = ys;
var G__32208 = len;
var G__32209 = (n + (1));
xs = G__32206;
ys = G__32207;
len = G__32208;
n = G__32209;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__32214 = x;
var G__32215 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32214,G__32215) : f.call(null,G__32214,G__32215));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__32216 = y;
var G__32217 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32216,G__32217) : f.call(null,G__32216,G__32217));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__32223 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__32223) : cljs.core.to_array.call(null,G__32223));
})();
var G__32224_32226 = a;
var G__32225_32227 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__32224_32226,G__32225_32227);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__32233 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32233) : keyfn.call(null,G__32233));
})(),(function (){var G__32234 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32234) : keyfn.call(null,G__32234));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__32240 = f;
var G__32241 = cljs.core.first(s);
var G__32242 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__32240,G__32241,G__32242) : cljs.core.reduce.call(null,G__32240,G__32241,G__32242));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__32243 = val__$1;
var G__32244 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32243,G__32244) : f.call(null,G__32243,G__32244));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32245 = nval;
var G__32246 = cljs.core.next(coll__$1);
val__$1 = G__32245;
coll__$1 = G__32246;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__32250 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__32250) : cljs.core.to_array.call(null,G__32250));
})();
var G__32251_32253 = a;
goog.array.shuffle(G__32251_32253);

var G__32252 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__32252) : cljs.core.vec.call(null,G__32252));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__32256 = coll;
if(G__32256){
var bit__24844__auto__ = (G__32256.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24844__auto__) || (G__32256.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__32257 = coll;
if(G__32257){
var bit__24844__auto__ = (G__32257.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24844__auto__) || (G__32257.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__32266 = null;
var G__32266__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__32266__1 = (function (x){
var G__32263 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__32263) : cf.call(null,G__32263));
});
var G__32266__2 = (function (x,y){
var G__32264 = x;
var G__32265 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32264,G__32265) : f.call(null,G__32264,G__32265));
});
G__32266 = function(x,y){
switch(arguments.length){
case 0:
return G__32266__0.call(this);
case 1:
return G__32266__1.call(this,x);
case 2:
return G__32266__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32266.cljs$core$IFn$_invoke$arity$0 = G__32266__0;
G__32266.cljs$core$IFn$_invoke$arity$1 = G__32266__1;
G__32266.cljs$core$IFn$_invoke$arity$2 = G__32266__2;
return G__32266;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__32273 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__32273) : xform.call(null,G__32273));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__32274 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__32274) : f__$1.call(null,G__32274));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__32275__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__32275 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32276__i = 0, G__32276__a = new Array(arguments.length -  2);
while (G__32276__i < G__32276__a.length) {G__32276__a[G__32276__i] = arguments[G__32276__i + 2]; ++G__32276__i;}
  more = new cljs.core.IndexedSeq(G__32276__a,0);
} 
return G__32275__delegate.call(this,x,y,more);};
G__32275.cljs$lang$maxFixedArity = 2;
G__32275.cljs$lang$applyTo = (function (arglist__32277){
var x = cljs.core.first(arglist__32277);
arglist__32277 = cljs.core.next(arglist__32277);
var y = cljs.core.first(arglist__32277);
var more = cljs.core.rest(arglist__32277);
return G__32275__delegate(x,y,more);
});
G__32275.cljs$core$IFn$_invoke$arity$variadic = G__32275__delegate;
return G__32275;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__32278 = null;
if (arguments.length > 2) {
var G__32279__i = 0, G__32279__a = new Array(arguments.length -  2);
while (G__32279__i < G__32279__a.length) {G__32279__a[G__32279__i] = arguments[G__32279__i + 2]; ++G__32279__i;}
G__32278 = new cljs.core.IndexedSeq(G__32279__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32278);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__32280__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__32280 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32281__i = 0, G__32281__a = new Array(arguments.length -  2);
while (G__32281__i < G__32281__a.length) {G__32281__a[G__32281__i] = arguments[G__32281__i + 2]; ++G__32281__i;}
  more = new cljs.core.IndexedSeq(G__32281__a,0);
} 
return G__32280__delegate.call(this,x,y,more);};
G__32280.cljs$lang$maxFixedArity = 2;
G__32280.cljs$lang$applyTo = (function (arglist__32282){
var x = cljs.core.first(arglist__32282);
arglist__32282 = cljs.core.next(arglist__32282);
var y = cljs.core.first(arglist__32282);
var more = cljs.core.rest(arglist__32282);
return G__32280__delegate(x,y,more);
});
G__32280.cljs$core$IFn$_invoke$arity$variadic = G__32280__delegate;
return G__32280;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__32283 = null;
if (arguments.length > 2) {
var G__32284__i = 0, G__32284__a = new Array(arguments.length -  2);
while (G__32284__i < G__32284__a.length) {G__32284__a[G__32284__i] = arguments[G__32284__i + 2]; ++G__32284__i;}
G__32283 = new cljs.core.IndexedSeq(G__32284__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32283);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__32285__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__32285 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32286__i = 0, G__32286__a = new Array(arguments.length -  2);
while (G__32286__i < G__32286__a.length) {G__32286__a[G__32286__i] = arguments[G__32286__i + 2]; ++G__32286__i;}
  more = new cljs.core.IndexedSeq(G__32286__a,0);
} 
return G__32285__delegate.call(this,x,y,more);};
G__32285.cljs$lang$maxFixedArity = 2;
G__32285.cljs$lang$applyTo = (function (arglist__32287){
var x = cljs.core.first(arglist__32287);
arglist__32287 = cljs.core.next(arglist__32287);
var y = cljs.core.first(arglist__32287);
var more = cljs.core.rest(arglist__32287);
return G__32285__delegate(x,y,more);
});
G__32285.cljs$core$IFn$_invoke$arity$variadic = G__32285__delegate;
return G__32285;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__32288 = null;
if (arguments.length > 2) {
var G__32289__i = 0, G__32289__a = new Array(arguments.length -  2);
while (G__32289__i < G__32289__a.length) {G__32289__a[G__32289__i] = arguments[G__32289__i + 2]; ++G__32289__i;}
G__32288 = new cljs.core.IndexedSeq(G__32289__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32288);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__32294__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__32294 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32295__i = 0, G__32295__a = new Array(arguments.length -  2);
while (G__32295__i < G__32295__a.length) {G__32295__a[G__32295__i] = arguments[G__32295__i + 2]; ++G__32295__i;}
  more = new cljs.core.IndexedSeq(G__32295__a,0);
} 
return G__32294__delegate.call(this,x,y,more);};
G__32294.cljs$lang$maxFixedArity = 2;
G__32294.cljs$lang$applyTo = (function (arglist__32296){
var x = cljs.core.first(arglist__32296);
arglist__32296 = cljs.core.next(arglist__32296);
var y = cljs.core.first(arglist__32296);
var more = cljs.core.rest(arglist__32296);
return G__32294__delegate(x,y,more);
});
G__32294.cljs$core$IFn$_invoke$arity$variadic = G__32294__delegate;
return G__32294;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__32297 = null;
if (arguments.length > 2) {
var G__32298__i = 0, G__32298__a = new Array(arguments.length -  2);
while (G__32298__i < G__32298__a.length) {G__32298__a[G__32298__i] = arguments[G__32298__i + 2]; ++G__32298__i;}
G__32297 = new cljs.core.IndexedSeq(G__32298__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32297);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__32299__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__32300 = y;
var G__32301 = cljs.core.first(more);
var G__32302 = cljs.core.next(more);
x = G__32300;
y = G__32301;
more = G__32302;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32299 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32303__i = 0, G__32303__a = new Array(arguments.length -  2);
while (G__32303__i < G__32303__a.length) {G__32303__a[G__32303__i] = arguments[G__32303__i + 2]; ++G__32303__i;}
  more = new cljs.core.IndexedSeq(G__32303__a,0);
} 
return G__32299__delegate.call(this,x,y,more);};
G__32299.cljs$lang$maxFixedArity = 2;
G__32299.cljs$lang$applyTo = (function (arglist__32304){
var x = cljs.core.first(arglist__32304);
arglist__32304 = cljs.core.next(arglist__32304);
var y = cljs.core.first(arglist__32304);
var more = cljs.core.rest(arglist__32304);
return G__32299__delegate(x,y,more);
});
G__32299.cljs$core$IFn$_invoke$arity$variadic = G__32299__delegate;
return G__32299;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__32305 = null;
if (arguments.length > 2) {
var G__32306__i = 0, G__32306__a = new Array(arguments.length -  2);
while (G__32306__i < G__32306__a.length) {G__32306__a[G__32306__i] = arguments[G__32306__i + 2]; ++G__32306__i;}
G__32305 = new cljs.core.IndexedSeq(G__32306__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32305);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__32307__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__32308 = y;
var G__32309 = cljs.core.first(more);
var G__32310 = cljs.core.next(more);
x = G__32308;
y = G__32309;
more = G__32310;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32307 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32311__i = 0, G__32311__a = new Array(arguments.length -  2);
while (G__32311__i < G__32311__a.length) {G__32311__a[G__32311__i] = arguments[G__32311__i + 2]; ++G__32311__i;}
  more = new cljs.core.IndexedSeq(G__32311__a,0);
} 
return G__32307__delegate.call(this,x,y,more);};
G__32307.cljs$lang$maxFixedArity = 2;
G__32307.cljs$lang$applyTo = (function (arglist__32312){
var x = cljs.core.first(arglist__32312);
arglist__32312 = cljs.core.next(arglist__32312);
var y = cljs.core.first(arglist__32312);
var more = cljs.core.rest(arglist__32312);
return G__32307__delegate(x,y,more);
});
G__32307.cljs$core$IFn$_invoke$arity$variadic = G__32307__delegate;
return G__32307;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__32313 = null;
if (arguments.length > 2) {
var G__32314__i = 0, G__32314__a = new Array(arguments.length -  2);
while (G__32314__i < G__32314__a.length) {G__32314__a[G__32314__i] = arguments[G__32314__i + 2]; ++G__32314__i;}
G__32313 = new cljs.core.IndexedSeq(G__32314__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__32315__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__32316 = y;
var G__32317 = cljs.core.first(more);
var G__32318 = cljs.core.next(more);
x = G__32316;
y = G__32317;
more = G__32318;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32315 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32319__i = 0, G__32319__a = new Array(arguments.length -  2);
while (G__32319__i < G__32319__a.length) {G__32319__a[G__32319__i] = arguments[G__32319__i + 2]; ++G__32319__i;}
  more = new cljs.core.IndexedSeq(G__32319__a,0);
} 
return G__32315__delegate.call(this,x,y,more);};
G__32315.cljs$lang$maxFixedArity = 2;
G__32315.cljs$lang$applyTo = (function (arglist__32320){
var x = cljs.core.first(arglist__32320);
arglist__32320 = cljs.core.next(arglist__32320);
var y = cljs.core.first(arglist__32320);
var more = cljs.core.rest(arglist__32320);
return G__32315__delegate(x,y,more);
});
G__32315.cljs$core$IFn$_invoke$arity$variadic = G__32315__delegate;
return G__32315;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__32321 = null;
if (arguments.length > 2) {
var G__32322__i = 0, G__32322__a = new Array(arguments.length -  2);
while (G__32322__i < G__32322__a.length) {G__32322__a[G__32322__i] = arguments[G__32322__i + 2]; ++G__32322__i;}
G__32321 = new cljs.core.IndexedSeq(G__32322__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32321);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__32323__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__32324 = y;
var G__32325 = cljs.core.first(more);
var G__32326 = cljs.core.next(more);
x = G__32324;
y = G__32325;
more = G__32326;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32323 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32327__i = 0, G__32327__a = new Array(arguments.length -  2);
while (G__32327__i < G__32327__a.length) {G__32327__a[G__32327__i] = arguments[G__32327__i + 2]; ++G__32327__i;}
  more = new cljs.core.IndexedSeq(G__32327__a,0);
} 
return G__32323__delegate.call(this,x,y,more);};
G__32323.cljs$lang$maxFixedArity = 2;
G__32323.cljs$lang$applyTo = (function (arglist__32328){
var x = cljs.core.first(arglist__32328);
arglist__32328 = cljs.core.next(arglist__32328);
var y = cljs.core.first(arglist__32328);
var more = cljs.core.rest(arglist__32328);
return G__32323__delegate(x,y,more);
});
G__32323.cljs$core$IFn$_invoke$arity$variadic = G__32323__delegate;
return G__32323;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__32329 = null;
if (arguments.length > 2) {
var G__32330__i = 0, G__32330__a = new Array(arguments.length -  2);
while (G__32330__i < G__32330__a.length) {G__32330__a[G__32330__i] = arguments[G__32330__i + 2]; ++G__32330__i;}
G__32329 = new cljs.core.IndexedSeq(G__32330__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__24489__auto__ = x;
var y__24490__auto__ = y;
return ((x__24489__auto__ > y__24490__auto__) ? x__24489__auto__ : y__24490__auto__);
});
var cljs$core$max__3 = (function() { 
var G__32331__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__24489__auto__ = x;
var y__24490__auto__ = y;
return ((x__24489__auto__ > y__24490__auto__) ? x__24489__auto__ : y__24490__auto__);
})(),more);
};
var G__32331 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32332__i = 0, G__32332__a = new Array(arguments.length -  2);
while (G__32332__i < G__32332__a.length) {G__32332__a[G__32332__i] = arguments[G__32332__i + 2]; ++G__32332__i;}
  more = new cljs.core.IndexedSeq(G__32332__a,0);
} 
return G__32331__delegate.call(this,x,y,more);};
G__32331.cljs$lang$maxFixedArity = 2;
G__32331.cljs$lang$applyTo = (function (arglist__32333){
var x = cljs.core.first(arglist__32333);
arglist__32333 = cljs.core.next(arglist__32333);
var y = cljs.core.first(arglist__32333);
var more = cljs.core.rest(arglist__32333);
return G__32331__delegate(x,y,more);
});
G__32331.cljs$core$IFn$_invoke$arity$variadic = G__32331__delegate;
return G__32331;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__32334 = null;
if (arguments.length > 2) {
var G__32335__i = 0, G__32335__a = new Array(arguments.length -  2);
while (G__32335__i < G__32335__a.length) {G__32335__a[G__32335__i] = arguments[G__32335__i + 2]; ++G__32335__i;}
G__32334 = new cljs.core.IndexedSeq(G__32335__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32334);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__24496__auto__ = x;
var y__24497__auto__ = y;
return ((x__24496__auto__ < y__24497__auto__) ? x__24496__auto__ : y__24497__auto__);
});
var cljs$core$min__3 = (function() { 
var G__32336__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__24496__auto__ = x;
var y__24497__auto__ = y;
return ((x__24496__auto__ < y__24497__auto__) ? x__24496__auto__ : y__24497__auto__);
})(),more);
};
var G__32336 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32337__i = 0, G__32337__a = new Array(arguments.length -  2);
while (G__32337__i < G__32337__a.length) {G__32337__a[G__32337__i] = arguments[G__32337__i + 2]; ++G__32337__i;}
  more = new cljs.core.IndexedSeq(G__32337__a,0);
} 
return G__32336__delegate.call(this,x,y,more);};
G__32336.cljs$lang$maxFixedArity = 2;
G__32336.cljs$lang$applyTo = (function (arglist__32338){
var x = cljs.core.first(arglist__32338);
arglist__32338 = cljs.core.next(arglist__32338);
var y = cljs.core.first(arglist__32338);
var more = cljs.core.rest(arglist__32338);
return G__32336__delegate(x,y,more);
});
G__32336.cljs$core$IFn$_invoke$arity$variadic = G__32336__delegate;
return G__32336;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__32339 = null;
if (arguments.length > 2) {
var G__32340__i = 0, G__32340__a = new Array(arguments.length -  2);
while (G__32340__i < G__32340__a.length) {G__32340__a[G__32340__i] = arguments[G__32340__i + 2]; ++G__32340__i;}
G__32339 = new cljs.core.IndexedSeq(G__32340__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32339);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__32341__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__32341 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32342__i = 0, G__32342__a = new Array(arguments.length -  2);
while (G__32342__i < G__32342__a.length) {G__32342__a[G__32342__i] = arguments[G__32342__i + 2]; ++G__32342__i;}
  more = new cljs.core.IndexedSeq(G__32342__a,0);
} 
return G__32341__delegate.call(this,x,y,more);};
G__32341.cljs$lang$maxFixedArity = 2;
G__32341.cljs$lang$applyTo = (function (arglist__32343){
var x = cljs.core.first(arglist__32343);
arglist__32343 = cljs.core.next(arglist__32343);
var y = cljs.core.first(arglist__32343);
var more = cljs.core.rest(arglist__32343);
return G__32341__delegate(x,y,more);
});
G__32341.cljs$core$IFn$_invoke$arity$variadic = G__32341__delegate;
return G__32341;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__32344 = null;
if (arguments.length > 2) {
var G__32345__i = 0, G__32345__a = new Array(arguments.length -  2);
while (G__32345__i < G__32345__a.length) {G__32345__a[G__32345__i] = arguments[G__32345__i + 2]; ++G__32345__i;}
G__32344 = new cljs.core.IndexedSeq(G__32345__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32344);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__32346__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__32346 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32347__i = 0, G__32347__a = new Array(arguments.length -  2);
while (G__32347__i < G__32347__a.length) {G__32347__a[G__32347__i] = arguments[G__32347__i + 2]; ++G__32347__i;}
  more = new cljs.core.IndexedSeq(G__32347__a,0);
} 
return G__32346__delegate.call(this,x,y,more);};
G__32346.cljs$lang$maxFixedArity = 2;
G__32346.cljs$lang$applyTo = (function (arglist__32348){
var x = cljs.core.first(arglist__32348);
arglist__32348 = cljs.core.next(arglist__32348);
var y = cljs.core.first(arglist__32348);
var more = cljs.core.rest(arglist__32348);
return G__32346__delegate(x,y,more);
});
G__32346.cljs$core$IFn$_invoke$arity$variadic = G__32346__delegate;
return G__32346;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__32349 = null;
if (arguments.length > 2) {
var G__32350__i = 0, G__32350__a = new Array(arguments.length -  2);
while (G__32350__i < G__32350__a.length) {G__32350__a[G__32350__i] = arguments[G__32350__i + 2]; ++G__32350__i;}
G__32349 = new cljs.core.IndexedSeq(G__32350__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__32355__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__32355 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32356__i = 0, G__32356__a = new Array(arguments.length -  2);
while (G__32356__i < G__32356__a.length) {G__32356__a[G__32356__i] = arguments[G__32356__i + 2]; ++G__32356__i;}
  more = new cljs.core.IndexedSeq(G__32356__a,0);
} 
return G__32355__delegate.call(this,x,y,more);};
G__32355.cljs$lang$maxFixedArity = 2;
G__32355.cljs$lang$applyTo = (function (arglist__32357){
var x = cljs.core.first(arglist__32357);
arglist__32357 = cljs.core.next(arglist__32357);
var y = cljs.core.first(arglist__32357);
var more = cljs.core.rest(arglist__32357);
return G__32355__delegate(x,y,more);
});
G__32355.cljs$core$IFn$_invoke$arity$variadic = G__32355__delegate;
return G__32355;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__32358 = null;
if (arguments.length > 2) {
var G__32359__i = 0, G__32359__a = new Array(arguments.length -  2);
while (G__32359__i < G__32359__a.length) {G__32359__a[G__32359__i] = arguments[G__32359__i + 2]; ++G__32359__i;}
G__32358 = new cljs.core.IndexedSeq(G__32359__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32358);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__32360__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__32360 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32361__i = 0, G__32361__a = new Array(arguments.length -  2);
while (G__32361__i < G__32361__a.length) {G__32361__a[G__32361__i] = arguments[G__32361__i + 2]; ++G__32361__i;}
  more = new cljs.core.IndexedSeq(G__32361__a,0);
} 
return G__32360__delegate.call(this,x,y,more);};
G__32360.cljs$lang$maxFixedArity = 2;
G__32360.cljs$lang$applyTo = (function (arglist__32362){
var x = cljs.core.first(arglist__32362);
arglist__32362 = cljs.core.next(arglist__32362);
var y = cljs.core.first(arglist__32362);
var more = cljs.core.rest(arglist__32362);
return G__32360__delegate(x,y,more);
});
G__32360.cljs$core$IFn$_invoke$arity$variadic = G__32360__delegate;
return G__32360;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__32363 = null;
if (arguments.length > 2) {
var G__32364__i = 0, G__32364__a = new Array(arguments.length -  2);
while (G__32364__i < G__32364__a.length) {G__32364__a[G__32364__i] = arguments[G__32364__i + 2]; ++G__32364__i;}
G__32363 = new cljs.core.IndexedSeq(G__32364__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__32365__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__32365 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32366__i = 0, G__32366__a = new Array(arguments.length -  2);
while (G__32366__i < G__32366__a.length) {G__32366__a[G__32366__i] = arguments[G__32366__i + 2]; ++G__32366__i;}
  more = new cljs.core.IndexedSeq(G__32366__a,0);
} 
return G__32365__delegate.call(this,x,y,more);};
G__32365.cljs$lang$maxFixedArity = 2;
G__32365.cljs$lang$applyTo = (function (arglist__32367){
var x = cljs.core.first(arglist__32367);
arglist__32367 = cljs.core.next(arglist__32367);
var y = cljs.core.first(arglist__32367);
var more = cljs.core.rest(arglist__32367);
return G__32365__delegate(x,y,more);
});
G__32365.cljs$core$IFn$_invoke$arity$variadic = G__32365__delegate;
return G__32365;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__32368 = null;
if (arguments.length > 2) {
var G__32369__i = 0, G__32369__a = new Array(arguments.length -  2);
while (G__32369__i < G__32369__a.length) {G__32369__a[G__32369__i] = arguments[G__32369__i + 2]; ++G__32369__i;}
G__32368 = new cljs.core.IndexedSeq(G__32369__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__32372 = x;
var G__32373 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__32372,G__32373) : cljs.core.mod.call(null,G__32372,G__32373));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__32374__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__32374 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32375__i = 0, G__32375__a = new Array(arguments.length -  2);
while (G__32375__i < G__32375__a.length) {G__32375__a[G__32375__i] = arguments[G__32375__i + 2]; ++G__32375__i;}
  more = new cljs.core.IndexedSeq(G__32375__a,0);
} 
return G__32374__delegate.call(this,x,y,more);};
G__32374.cljs$lang$maxFixedArity = 2;
G__32374.cljs$lang$applyTo = (function (arglist__32376){
var x = cljs.core.first(arglist__32376);
arglist__32376 = cljs.core.next(arglist__32376);
var y = cljs.core.first(arglist__32376);
var more = cljs.core.rest(arglist__32376);
return G__32374__delegate(x,y,more);
});
G__32374.cljs$core$IFn$_invoke$arity$variadic = G__32374__delegate;
return G__32374;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__32377 = null;
if (arguments.length > 2) {
var G__32378__i = 0, G__32378__a = new Array(arguments.length -  2);
while (G__32378__i < G__32378__a.length) {G__32378__a[G__32378__i] = arguments[G__32378__i + 2]; ++G__32378__i;}
G__32377 = new cljs.core.IndexedSeq(G__32378__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32377);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__32379__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__32379 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32380__i = 0, G__32380__a = new Array(arguments.length -  2);
while (G__32380__i < G__32380__a.length) {G__32380__a[G__32380__i] = arguments[G__32380__i + 2]; ++G__32380__i;}
  more = new cljs.core.IndexedSeq(G__32380__a,0);
} 
return G__32379__delegate.call(this,x,y,more);};
G__32379.cljs$lang$maxFixedArity = 2;
G__32379.cljs$lang$applyTo = (function (arglist__32381){
var x = cljs.core.first(arglist__32381);
arglist__32381 = cljs.core.next(arglist__32381);
var y = cljs.core.first(arglist__32381);
var more = cljs.core.rest(arglist__32381);
return G__32379__delegate(x,y,more);
});
G__32379.cljs$core$IFn$_invoke$arity$variadic = G__32379__delegate;
return G__32379;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__32382 = null;
if (arguments.length > 2) {
var G__32383__i = 0, G__32383__a = new Array(arguments.length -  2);
while (G__32383__i < G__32383__a.length) {G__32383__a[G__32383__i] = arguments[G__32383__i + 2]; ++G__32383__i;}
G__32382 = new cljs.core.IndexedSeq(G__32383__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32382);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__32386 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32386) : Math.floor.call(null,G__32386));
} else {
var G__32387 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__32387) : Math.ceil.call(null,G__32387));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__32388__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__32388 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32389__i = 0, G__32389__a = new Array(arguments.length -  2);
while (G__32389__i < G__32389__a.length) {G__32389__a[G__32389__i] = arguments[G__32389__i + 2]; ++G__32389__i;}
  more = new cljs.core.IndexedSeq(G__32389__a,0);
} 
return G__32388__delegate.call(this,x,y,more);};
G__32388.cljs$lang$maxFixedArity = 2;
G__32388.cljs$lang$applyTo = (function (arglist__32390){
var x = cljs.core.first(arglist__32390);
arglist__32390 = cljs.core.next(arglist__32390);
var y = cljs.core.first(arglist__32390);
var more = cljs.core.rest(arglist__32390);
return G__32388__delegate(x,y,more);
});
G__32388.cljs$core$IFn$_invoke$arity$variadic = G__32388__delegate;
return G__32388;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__32391 = null;
if (arguments.length > 2) {
var G__32392__i = 0, G__32392__a = new Array(arguments.length -  2);
while (G__32392__i < G__32392__a.length) {G__32392__a[G__32392__i] = arguments[G__32392__i + 2]; ++G__32392__i;}
G__32391 = new cljs.core.IndexedSeq(G__32392__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32391);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__32393__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__32393 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32394__i = 0, G__32394__a = new Array(arguments.length -  2);
while (G__32394__i < G__32394__a.length) {G__32394__a[G__32394__i] = arguments[G__32394__i + 2]; ++G__32394__i;}
  more = new cljs.core.IndexedSeq(G__32394__a,0);
} 
return G__32393__delegate.call(this,x,y,more);};
G__32393.cljs$lang$maxFixedArity = 2;
G__32393.cljs$lang$applyTo = (function (arglist__32395){
var x = cljs.core.first(arglist__32395);
arglist__32395 = cljs.core.next(arglist__32395);
var y = cljs.core.first(arglist__32395);
var more = cljs.core.rest(arglist__32395);
return G__32393__delegate(x,y,more);
});
G__32393.cljs$core$IFn$_invoke$arity$variadic = G__32393__delegate;
return G__32393;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__32396 = null;
if (arguments.length > 2) {
var G__32397__i = 0, G__32397__a = new Array(arguments.length -  2);
while (G__32397__i < G__32397__a.length) {G__32397__a[G__32397__i] = arguments[G__32397__i + 2]; ++G__32397__i;}
G__32396 = new cljs.core.IndexedSeq(G__32397__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__32398__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__32398 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32399__i = 0, G__32399__a = new Array(arguments.length -  2);
while (G__32399__i < G__32399__a.length) {G__32399__a[G__32399__i] = arguments[G__32399__i + 2]; ++G__32399__i;}
  more = new cljs.core.IndexedSeq(G__32399__a,0);
} 
return G__32398__delegate.call(this,x,y,more);};
G__32398.cljs$lang$maxFixedArity = 2;
G__32398.cljs$lang$applyTo = (function (arglist__32400){
var x = cljs.core.first(arglist__32400);
arglist__32400 = cljs.core.next(arglist__32400);
var y = cljs.core.first(arglist__32400);
var more = cljs.core.rest(arglist__32400);
return G__32398__delegate(x,y,more);
});
G__32398.cljs$core$IFn$_invoke$arity$variadic = G__32398__delegate;
return G__32398;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__32401 = null;
if (arguments.length > 2) {
var G__32402__i = 0, G__32402__a = new Array(arguments.length -  2);
while (G__32402__i < G__32402__a.length) {G__32402__a[G__32402__i] = arguments[G__32402__i + 2]; ++G__32402__i;}
G__32401 = new cljs.core.IndexedSeq(G__32402__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__32403__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__32403 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32404__i = 0, G__32404__a = new Array(arguments.length -  2);
while (G__32404__i < G__32404__a.length) {G__32404__a[G__32404__i] = arguments[G__32404__i + 2]; ++G__32404__i;}
  more = new cljs.core.IndexedSeq(G__32404__a,0);
} 
return G__32403__delegate.call(this,x,y,more);};
G__32403.cljs$lang$maxFixedArity = 2;
G__32403.cljs$lang$applyTo = (function (arglist__32405){
var x = cljs.core.first(arglist__32405);
arglist__32405 = cljs.core.next(arglist__32405);
var y = cljs.core.first(arglist__32405);
var more = cljs.core.rest(arglist__32405);
return G__32403__delegate(x,y,more);
});
G__32403.cljs$core$IFn$_invoke$arity$variadic = G__32403__delegate;
return G__32403;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__32406 = null;
if (arguments.length > 2) {
var G__32407__i = 0, G__32407__a = new Array(arguments.length -  2);
while (G__32407__i < G__32407__a.length) {G__32407__a[G__32407__i] = arguments[G__32407__i + 2]; ++G__32407__i;}
G__32406 = new cljs.core.IndexedSeq(G__32407__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__32412__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__32413 = y;
var G__32414 = cljs.core.first(more);
var G__32415 = cljs.core.next(more);
x = G__32413;
y = G__32414;
more = G__32415;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32412 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32416__i = 0, G__32416__a = new Array(arguments.length -  2);
while (G__32416__i < G__32416__a.length) {G__32416__a[G__32416__i] = arguments[G__32416__i + 2]; ++G__32416__i;}
  more = new cljs.core.IndexedSeq(G__32416__a,0);
} 
return G__32412__delegate.call(this,x,y,more);};
G__32412.cljs$lang$maxFixedArity = 2;
G__32412.cljs$lang$applyTo = (function (arglist__32417){
var x = cljs.core.first(arglist__32417);
arglist__32417 = cljs.core.next(arglist__32417);
var y = cljs.core.first(arglist__32417);
var more = cljs.core.rest(arglist__32417);
return G__32412__delegate(x,y,more);
});
G__32412.cljs$core$IFn$_invoke$arity$variadic = G__32412__delegate;
return G__32412;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__32418 = null;
if (arguments.length > 2) {
var G__32419__i = 0, G__32419__a = new Array(arguments.length -  2);
while (G__32419__i < G__32419__a.length) {G__32419__a[G__32419__i] = arguments[G__32419__i + 2]; ++G__32419__i;}
G__32418 = new cljs.core.IndexedSeq(G__32419__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32418);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__32420 = (n__$1 - (1));
var G__32421 = cljs.core.next(xs);
n__$1 = G__32420;
xs = G__32421;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__32425 = x;
return goog.string.buildString(G__32425);
}
});
var cljs$core$str__2 = (function() { 
var G__32426__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__32427 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__32428 = cljs.core.next(more);
sb = G__32427;
more = G__32428;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__32426 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__32429__i = 0, G__32429__a = new Array(arguments.length -  1);
while (G__32429__i < G__32429__a.length) {G__32429__a[G__32429__i] = arguments[G__32429__i + 1]; ++G__32429__i;}
  ys = new cljs.core.IndexedSeq(G__32429__a,0);
} 
return G__32426__delegate.call(this,x,ys);};
G__32426.cljs$lang$maxFixedArity = 1;
G__32426.cljs$lang$applyTo = (function (arglist__32430){
var x = cljs.core.first(arglist__32430);
var ys = cljs.core.rest(arglist__32430);
return G__32426__delegate(x,ys);
});
G__32426.cljs$core$IFn$_invoke$arity$variadic = G__32426__delegate;
return G__32426;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__32431 = null;
if (arguments.length > 1) {
var G__32432__i = 0, G__32432__a = new Array(arguments.length -  1);
while (G__32432__i < G__32432__a.length) {G__32432__a[G__32432__i] = arguments[G__32432__i + 1]; ++G__32432__i;}
G__32431 = new cljs.core.IndexedSeq(G__32432__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__32433 = cljs.core.next(xs);
var G__32434 = cljs.core.next(ys);
xs = G__32433;
ys = G__32434;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__32435 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__32436 = cljs.core.next(s);
res = G__32435;
s = G__32436;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__32441 = ((h + (cljs.core.hash((function (){var G__32439 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__32439) : cljs.core.key.call(null,G__32439));
})()) ^ cljs.core.hash((function (){var G__32440 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__32440) : cljs.core.val.call(null,G__32440));
})()))) % (4503599627370496));
var G__32442 = cljs.core.next(s);
h = G__32441;
s = G__32442;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__32443 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__32444 = cljs.core.next(s__$1);
h = G__32443;
s__$1 = G__32444;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__32455_32465 = cljs.core.seq(fn_map);
var chunk__32456_32466 = null;
var count__32457_32467 = (0);
var i__32458_32468 = (0);
while(true){
if((i__32458_32468 < count__32457_32467)){
var vec__32459_32469 = chunk__32456_32466.cljs$core$IIndexed$_nth$arity$2(null,i__32458_32468);
var key_name_32470 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32459_32469,(0),null);
var f_32471 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32459_32469,(1),null);
var str_name_32472 = (function (){var G__32460 = key_name_32470;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32460) : cljs.core.name.call(null,G__32460));
})();
(obj[str_name_32472] = f_32471);

var G__32473 = seq__32455_32465;
var G__32474 = chunk__32456_32466;
var G__32475 = count__32457_32467;
var G__32476 = (i__32458_32468 + (1));
seq__32455_32465 = G__32473;
chunk__32456_32466 = G__32474;
count__32457_32467 = G__32475;
i__32458_32468 = G__32476;
continue;
} else {
var temp__4126__auto___32477 = cljs.core.seq(seq__32455_32465);
if(temp__4126__auto___32477){
var seq__32455_32478__$1 = temp__4126__auto___32477;
if(cljs.core.chunked_seq_QMARK_(seq__32455_32478__$1)){
var c__24962__auto___32479 = (function (){var G__32461 = seq__32455_32478__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__32461) : cljs.core.chunk_first.call(null,G__32461));
})();
var G__32480 = (function (){var G__32462 = seq__32455_32478__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__32462) : cljs.core.chunk_rest.call(null,G__32462));
})();
var G__32481 = c__24962__auto___32479;
var G__32482 = cljs.core.count(c__24962__auto___32479);
var G__32483 = (0);
seq__32455_32465 = G__32480;
chunk__32456_32466 = G__32481;
count__32457_32467 = G__32482;
i__32458_32468 = G__32483;
continue;
} else {
var vec__32463_32484 = cljs.core.first(seq__32455_32478__$1);
var key_name_32485 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32463_32484,(0),null);
var f_32486 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32463_32484,(1),null);
var str_name_32487 = (function (){var G__32464 = key_name_32485;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32464) : cljs.core.name.call(null,G__32464));
})();
(obj[str_name_32487] = f_32486);

var G__32488 = cljs.core.next(seq__32455_32478__$1);
var G__32489 = null;
var G__32490 = (0);
var G__32491 = (0);
seq__32455_32465 = G__32488;
chunk__32456_32466 = G__32489;
count__32457_32467 = G__32490;
i__32458_32468 = G__32491;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__32493 = coll;
if(G__32493){
var bit__24851__auto__ = (G__32493.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24851__auto__) || (G__32493.cljs$core$IReversible$)){
return true;
} else {
if((!G__32493.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__32493);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__32493);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__32494 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__32494;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__32495 = (i - (1));
var G__32496 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__32495;
r = G__32496;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__32497__i = 0, G__32497__a = new Array(arguments.length -  0);
while (G__32497__i < G__32497__a.length) {G__32497__a[G__32497__i] = arguments[G__32497__i + 0]; ++G__32497__i;}
  xs = new cljs.core.IndexedSeq(G__32497__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__32498){
var xs = cljs.core.seq(arglist__32498);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__24177__auto__ = (coll == null);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var G__32502 = coll;
if(G__32502){
var bit__24844__auto__ = (G__32502.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24844__auto__) || (G__32502.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__32504 = x;
if(G__32504){
var bit__24851__auto__ = (G__32504.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24851__auto__) || (G__32504.cljs$core$IList$)){
return true;
} else {
if((!G__32504.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__32504);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__32504);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24165__auto__ = cljs.core.not(a.ns);
if(and__24165__auto__){
return b.ns;
} else {
return and__24165__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__32511 = a.ns;
var G__32512 = b.ns;
return goog.array.defaultCompare(G__32511,G__32512);
})();
if(((0) === nsc)){
var G__32513 = a.name;
var G__32514 = b.name;
return goog.array.defaultCompare(G__32513,G__32514);
} else {
return nsc;
}
}
} else {
var G__32515 = a.name;
var G__32516 = b.name;
return goog.array.defaultCompare(G__32515,G__32516);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24593__auto__ = self__._hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__32518 = null;
var G__32518__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__32518__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__32518 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__32518__2.call(this,self__,coll);
case 3:
return G__32518__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32518.cljs$core$IFn$_invoke$arity$2 = G__32518__2;
G__32518.cljs$core$IFn$_invoke$arity$3 = G__32518__3;
return G__32518;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args32517){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32517)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__32520 = x;
if(G__32520){
var bit__24844__auto__ = (G__32520.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24844__auto__) || (G__32520.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__32522 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32522) : cljs.core.name.call(null,G__32522));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__32523 = ls.sval();
ls = G__32523;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__32525 = s;
if(G__32525){
var bit__24844__auto__ = (G__32525.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24844__auto__) || (G__32525.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__32526 = cljs.core.next(s__$1);
s__$1 = G__32526;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_32527 = (0);
var xs_32528 = cljs.core.seq(coll);
while(true){
if(xs_32528){
(ret[i_32527] = cljs.core.to_array(cljs.core.first(xs_32528)));

var G__32529 = (i_32527 + (1));
var G__32530 = cljs.core.next(xs_32528);
i_32527 = G__32529;
xs_32528 = G__32530;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32533 = (i + (1));
var G__32534 = cljs.core.next(s__$1);
i = G__32533;
s__$1 = G__32534;
continue;
} else {
return a;
}
break;
}
} else {
var n__25062__auto___32535 = size;
var i_32536 = (0);
while(true){
if((i_32536 < n__25062__auto___32535)){
(a[i_32536] = init_val_or_seq);

var G__32537 = (i_32536 + (1));
i_32536 = G__32537;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32540 = (i + (1));
var G__32541 = cljs.core.next(s__$1);
i = G__32540;
s__$1 = G__32541;
continue;
} else {
return a;
}
break;
}
} else {
var n__25062__auto___32542 = size;
var i_32543 = (0);
while(true){
if((i_32543 < n__25062__auto___32542)){
(a[i_32543] = init_val_or_seq);

var G__32544 = (i_32543 + (1));
i_32543 = G__32544;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32547 = (i + (1));
var G__32548 = cljs.core.next(s__$1);
i = G__32547;
s__$1 = G__32548;
continue;
} else {
return a;
}
break;
}
} else {
var n__25062__auto___32549 = size;
var i_32550 = (0);
while(true){
if((i_32550 < n__25062__auto___32549)){
(a[i_32550] = init_val_or_seq);

var G__32551 = (i_32550 + (1));
i_32550 = G__32551;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32554 = (i + (1));
var G__32555 = cljs.core.next(s__$1);
i = G__32554;
s__$1 = G__32555;
continue;
} else {
return a;
}
break;
}
} else {
var n__25062__auto___32556 = size;
var i_32557 = (0);
while(true){
if((i_32557 < n__25062__auto___32556)){
(a[i_32557] = init_val_or_seq);

var G__32558 = (i_32557 + (1));
i_32557 = G__32558;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__32559 = cljs.core.next(s__$1);
var G__32560 = (i - (1));
var G__32561 = (sum + (1));
s__$1 = G__32559;
i = G__32560;
sum = G__32561;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__32581__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__32581 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__32582__i = 0, G__32582__a = new Array(arguments.length -  2);
while (G__32582__i < G__32582__a.length) {G__32582__a[G__32582__i] = arguments[G__32582__i + 2]; ++G__32582__i;}
  zs = new cljs.core.IndexedSeq(G__32582__a,0);
} 
return G__32581__delegate.call(this,x,y,zs);};
G__32581.cljs$lang$maxFixedArity = 2;
G__32581.cljs$lang$applyTo = (function (arglist__32583){
var x = cljs.core.first(arglist__32583);
arglist__32583 = cljs.core.next(arglist__32583);
var y = cljs.core.first(arglist__32583);
var zs = cljs.core.rest(arglist__32583);
return G__32581__delegate(x,y,zs);
});
G__32581.cljs$core$IFn$_invoke$arity$variadic = G__32581__delegate;
return G__32581;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__32584 = null;
if (arguments.length > 2) {
var G__32585__i = 0, G__32585__a = new Array(arguments.length -  2);
while (G__32585__i < G__32585__a.length) {G__32585__a[G__32585__i] = arguments[G__32585__i + 2]; ++G__32585__i;}
G__32584 = new cljs.core.IndexedSeq(G__32585__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32584);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__32586__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__32586 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__32587__i = 0, G__32587__a = new Array(arguments.length -  4);
while (G__32587__i < G__32587__a.length) {G__32587__a[G__32587__i] = arguments[G__32587__i + 4]; ++G__32587__i;}
  more = new cljs.core.IndexedSeq(G__32587__a,0);
} 
return G__32586__delegate.call(this,a,b,c,d,more);};
G__32586.cljs$lang$maxFixedArity = 4;
G__32586.cljs$lang$applyTo = (function (arglist__32588){
var a = cljs.core.first(arglist__32588);
arglist__32588 = cljs.core.next(arglist__32588);
var b = cljs.core.first(arglist__32588);
arglist__32588 = cljs.core.next(arglist__32588);
var c = cljs.core.first(arglist__32588);
arglist__32588 = cljs.core.next(arglist__32588);
var d = cljs.core.first(arglist__32588);
var more = cljs.core.rest(arglist__32588);
return G__32586__delegate(a,b,c,d,more);
});
G__32586.cljs$core$IFn$_invoke$arity$variadic = G__32586__delegate;
return G__32586;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__32589 = null;
if (arguments.length > 4) {
var G__32590__i = 0, G__32590__a = new Array(arguments.length -  4);
while (G__32590__i < G__32590__a.length) {G__32590__a[G__32590__i] = arguments[G__32590__i + 4]; ++G__32590__i;}
G__32589 = new cljs.core.IndexedSeq(G__32590__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__32589);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__32591__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__32592 = ntcoll;
var G__32593 = cljs.core.first(vals);
var G__32594 = cljs.core.next(vals);
tcoll = G__32592;
val = G__32593;
vals = G__32594;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32591 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__32595__i = 0, G__32595__a = new Array(arguments.length -  2);
while (G__32595__i < G__32595__a.length) {G__32595__a[G__32595__i] = arguments[G__32595__i + 2]; ++G__32595__i;}
  vals = new cljs.core.IndexedSeq(G__32595__a,0);
} 
return G__32591__delegate.call(this,tcoll,val,vals);};
G__32591.cljs$lang$maxFixedArity = 2;
G__32591.cljs$lang$applyTo = (function (arglist__32596){
var tcoll = cljs.core.first(arglist__32596);
arglist__32596 = cljs.core.next(arglist__32596);
var val = cljs.core.first(arglist__32596);
var vals = cljs.core.rest(arglist__32596);
return G__32591__delegate(tcoll,val,vals);
});
G__32591.cljs$core$IFn$_invoke$arity$variadic = G__32591__delegate;
return G__32591;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__32597 = null;
if (arguments.length > 2) {
var G__32598__i = 0, G__32598__a = new Array(arguments.length -  2);
while (G__32598__i < G__32598__a.length) {G__32598__a[G__32598__i] = arguments[G__32598__i + 2]; ++G__32598__i;}
G__32597 = new cljs.core.IndexedSeq(G__32598__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__32597);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__32599__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__32600 = ntcoll;
var G__32601 = cljs.core.first(kvs);
var G__32602 = cljs.core.second(kvs);
var G__32603 = cljs.core.nnext(kvs);
tcoll = G__32600;
key = G__32601;
val = G__32602;
kvs = G__32603;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32599 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__32604__i = 0, G__32604__a = new Array(arguments.length -  3);
while (G__32604__i < G__32604__a.length) {G__32604__a[G__32604__i] = arguments[G__32604__i + 3]; ++G__32604__i;}
  kvs = new cljs.core.IndexedSeq(G__32604__a,0);
} 
return G__32599__delegate.call(this,tcoll,key,val,kvs);};
G__32599.cljs$lang$maxFixedArity = 3;
G__32599.cljs$lang$applyTo = (function (arglist__32605){
var tcoll = cljs.core.first(arglist__32605);
arglist__32605 = cljs.core.next(arglist__32605);
var key = cljs.core.first(arglist__32605);
arglist__32605 = cljs.core.next(arglist__32605);
var val = cljs.core.first(arglist__32605);
var kvs = cljs.core.rest(arglist__32605);
return G__32599__delegate(tcoll,key,val,kvs);
});
G__32599.cljs$core$IFn$_invoke$arity$variadic = G__32599__delegate;
return G__32599;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__32606 = null;
if (arguments.length > 3) {
var G__32607__i = 0, G__32607__a = new Array(arguments.length -  3);
while (G__32607__i < G__32607__a.length) {G__32607__a[G__32607__i] = arguments[G__32607__i + 3]; ++G__32607__i;}
G__32606 = new cljs.core.IndexedSeq(G__32607__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__32606);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__32608__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__32609 = ntcoll;
var G__32610 = cljs.core.first(ks);
var G__32611 = cljs.core.next(ks);
tcoll = G__32609;
key = G__32610;
ks = G__32611;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32608 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__32612__i = 0, G__32612__a = new Array(arguments.length -  2);
while (G__32612__i < G__32612__a.length) {G__32612__a[G__32612__i] = arguments[G__32612__i + 2]; ++G__32612__i;}
  ks = new cljs.core.IndexedSeq(G__32612__a,0);
} 
return G__32608__delegate.call(this,tcoll,key,ks);};
G__32608.cljs$lang$maxFixedArity = 2;
G__32608.cljs$lang$applyTo = (function (arglist__32613){
var tcoll = cljs.core.first(arglist__32613);
arglist__32613 = cljs.core.next(arglist__32613);
var key = cljs.core.first(arglist__32613);
var ks = cljs.core.rest(arglist__32613);
return G__32608__delegate(tcoll,key,ks);
});
G__32608.cljs$core$IFn$_invoke$arity$variadic = G__32608__delegate;
return G__32608;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__32614 = null;
if (arguments.length > 2) {
var G__32615__i = 0, G__32615__a = new Array(arguments.length -  2);
while (G__32615__i < G__32615__a.length) {G__32615__a[G__32615__i] = arguments[G__32615__i + 2]; ++G__32615__i;}
G__32614 = new cljs.core.IndexedSeq(G__32615__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__32614);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__32616__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__32617 = ntcoll;
var G__32618 = cljs.core.first(vals);
var G__32619 = cljs.core.next(vals);
tcoll = G__32617;
val = G__32618;
vals = G__32619;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32616 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__32620__i = 0, G__32620__a = new Array(arguments.length -  2);
while (G__32620__i < G__32620__a.length) {G__32620__a[G__32620__i] = arguments[G__32620__i + 2]; ++G__32620__i;}
  vals = new cljs.core.IndexedSeq(G__32620__a,0);
} 
return G__32616__delegate.call(this,tcoll,val,vals);};
G__32616.cljs$lang$maxFixedArity = 2;
G__32616.cljs$lang$applyTo = (function (arglist__32621){
var tcoll = cljs.core.first(arglist__32621);
arglist__32621 = cljs.core.next(arglist__32621);
var val = cljs.core.first(arglist__32621);
var vals = cljs.core.rest(arglist__32621);
return G__32616__delegate(tcoll,val,vals);
});
G__32616.cljs$core$IFn$_invoke$arity$variadic = G__32616__delegate;
return G__32616;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__32622 = null;
if (arguments.length > 2) {
var G__32623__i = 0, G__32623__a = new Array(arguments.length -  2);
while (G__32623__i < G__32623__a.length) {G__32623__a[G__32623__i] = arguments[G__32623__i + 2]; ++G__32623__i;}
G__32622 = new cljs.core.IndexedSeq(G__32623__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__32622);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25106 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25106);
} else {
var G__32834 = a25106;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32834) : f.call(null,G__32834));
}
} else {
var b25107 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25106,b25107);
} else {
var G__32835 = a25106;
var G__32836 = b25107;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32835,G__32836) : f.call(null,G__32835,G__32836));
}
} else {
var c25108 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25106,b25107,c25108);
} else {
var G__32837 = a25106;
var G__32838 = b25107;
var G__32839 = c25108;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32837,G__32838,G__32839) : f.call(null,G__32837,G__32838,G__32839));
}
} else {
var d25109 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25106,b25107,c25108,d25109);
} else {
var G__32840 = a25106;
var G__32841 = b25107;
var G__32842 = c25108;
var G__32843 = d25109;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32840,G__32841,G__32842,G__32843) : f.call(null,G__32840,G__32841,G__32842,G__32843));
}
} else {
var e25110 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25106,b25107,c25108,d25109,e25110);
} else {
var G__32844 = a25106;
var G__32845 = b25107;
var G__32846 = c25108;
var G__32847 = d25109;
var G__32848 = e25110;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32844,G__32845,G__32846,G__32847,G__32848) : f.call(null,G__32844,G__32845,G__32846,G__32847,G__32848));
}
} else {
var f25111 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25106,b25107,c25108,d25109,e25110,f25111);
} else {
var G__32849 = a25106;
var G__32850 = b25107;
var G__32851 = c25108;
var G__32852 = d25109;
var G__32853 = e25110;
var G__32854 = f25111;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__32849,G__32850,G__32851,G__32852,G__32853,G__32854) : f.call(null,G__32849,G__32850,G__32851,G__32852,G__32853,G__32854));
}
} else {
var g25112 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25106,b25107,c25108,d25109,e25110,f25111,g25112);
} else {
var G__32855 = a25106;
var G__32856 = b25107;
var G__32857 = c25108;
var G__32858 = d25109;
var G__32859 = e25110;
var G__32860 = f25111;
var G__32861 = g25112;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__32855,G__32856,G__32857,G__32858,G__32859,G__32860,G__32861) : f.call(null,G__32855,G__32856,G__32857,G__32858,G__32859,G__32860,G__32861));
}
} else {
var h25113 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113);
} else {
var G__32862 = a25106;
var G__32863 = b25107;
var G__32864 = c25108;
var G__32865 = d25109;
var G__32866 = e25110;
var G__32867 = f25111;
var G__32868 = g25112;
var G__32869 = h25113;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868,G__32869) : f.call(null,G__32862,G__32863,G__32864,G__32865,G__32866,G__32867,G__32868,G__32869));
}
} else {
var i25114 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114);
} else {
var G__32870 = a25106;
var G__32871 = b25107;
var G__32872 = c25108;
var G__32873 = d25109;
var G__32874 = e25110;
var G__32875 = f25111;
var G__32876 = g25112;
var G__32877 = h25113;
var G__32878 = i25114;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__32870,G__32871,G__32872,G__32873,G__32874,G__32875,G__32876,G__32877,G__32878) : f.call(null,G__32870,G__32871,G__32872,G__32873,G__32874,G__32875,G__32876,G__32877,G__32878));
}
} else {
var j25115 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115);
} else {
var G__32879 = a25106;
var G__32880 = b25107;
var G__32881 = c25108;
var G__32882 = d25109;
var G__32883 = e25110;
var G__32884 = f25111;
var G__32885 = g25112;
var G__32886 = h25113;
var G__32887 = i25114;
var G__32888 = j25115;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__32879,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888) : f.call(null,G__32879,G__32880,G__32881,G__32882,G__32883,G__32884,G__32885,G__32886,G__32887,G__32888));
}
} else {
var k25116 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116);
} else {
var G__32889 = a25106;
var G__32890 = b25107;
var G__32891 = c25108;
var G__32892 = d25109;
var G__32893 = e25110;
var G__32894 = f25111;
var G__32895 = g25112;
var G__32896 = h25113;
var G__32897 = i25114;
var G__32898 = j25115;
var G__32899 = k25116;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__32889,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899) : f.call(null,G__32889,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896,G__32897,G__32898,G__32899));
}
} else {
var l25117 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117);
} else {
var G__32900 = a25106;
var G__32901 = b25107;
var G__32902 = c25108;
var G__32903 = d25109;
var G__32904 = e25110;
var G__32905 = f25111;
var G__32906 = g25112;
var G__32907 = h25113;
var G__32908 = i25114;
var G__32909 = j25115;
var G__32910 = k25116;
var G__32911 = l25117;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906,G__32907,G__32908,G__32909,G__32910,G__32911) : f.call(null,G__32900,G__32901,G__32902,G__32903,G__32904,G__32905,G__32906,G__32907,G__32908,G__32909,G__32910,G__32911));
}
} else {
var m25118 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118);
} else {
var G__32912 = a25106;
var G__32913 = b25107;
var G__32914 = c25108;
var G__32915 = d25109;
var G__32916 = e25110;
var G__32917 = f25111;
var G__32918 = g25112;
var G__32919 = h25113;
var G__32920 = i25114;
var G__32921 = j25115;
var G__32922 = k25116;
var G__32923 = l25117;
var G__32924 = m25118;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919,G__32920,G__32921,G__32922,G__32923,G__32924) : f.call(null,G__32912,G__32913,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919,G__32920,G__32921,G__32922,G__32923,G__32924));
}
} else {
var n25119 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119);
} else {
var G__32925 = a25106;
var G__32926 = b25107;
var G__32927 = c25108;
var G__32928 = d25109;
var G__32929 = e25110;
var G__32930 = f25111;
var G__32931 = g25112;
var G__32932 = h25113;
var G__32933 = i25114;
var G__32934 = j25115;
var G__32935 = k25116;
var G__32936 = l25117;
var G__32937 = m25118;
var G__32938 = n25119;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__32925,G__32926,G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934,G__32935,G__32936,G__32937,G__32938) : f.call(null,G__32925,G__32926,G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934,G__32935,G__32936,G__32937,G__32938));
}
} else {
var o25120 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120);
} else {
var G__32939 = a25106;
var G__32940 = b25107;
var G__32941 = c25108;
var G__32942 = d25109;
var G__32943 = e25110;
var G__32944 = f25111;
var G__32945 = g25112;
var G__32946 = h25113;
var G__32947 = i25114;
var G__32948 = j25115;
var G__32949 = k25116;
var G__32950 = l25117;
var G__32951 = m25118;
var G__32952 = n25119;
var G__32953 = o25120;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__32939,G__32940,G__32941,G__32942,G__32943,G__32944,G__32945,G__32946,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952,G__32953) : f.call(null,G__32939,G__32940,G__32941,G__32942,G__32943,G__32944,G__32945,G__32946,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952,G__32953));
}
} else {
var p25121 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121);
} else {
var G__32954 = a25106;
var G__32955 = b25107;
var G__32956 = c25108;
var G__32957 = d25109;
var G__32958 = e25110;
var G__32959 = f25111;
var G__32960 = g25112;
var G__32961 = h25113;
var G__32962 = i25114;
var G__32963 = j25115;
var G__32964 = k25116;
var G__32965 = l25117;
var G__32966 = m25118;
var G__32967 = n25119;
var G__32968 = o25120;
var G__32969 = p25121;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__32954,G__32955,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961,G__32962,G__32963,G__32964,G__32965,G__32966,G__32967,G__32968,G__32969) : f.call(null,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959,G__32960,G__32961,G__32962,G__32963,G__32964,G__32965,G__32966,G__32967,G__32968,G__32969));
}
} else {
var q25122 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121,q25122);
} else {
var G__32970 = a25106;
var G__32971 = b25107;
var G__32972 = c25108;
var G__32973 = d25109;
var G__32974 = e25110;
var G__32975 = f25111;
var G__32976 = g25112;
var G__32977 = h25113;
var G__32978 = i25114;
var G__32979 = j25115;
var G__32980 = k25116;
var G__32981 = l25117;
var G__32982 = m25118;
var G__32983 = n25119;
var G__32984 = o25120;
var G__32985 = p25121;
var G__32986 = q25122;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__32970,G__32971,G__32972,G__32973,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983,G__32984,G__32985,G__32986) : f.call(null,G__32970,G__32971,G__32972,G__32973,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983,G__32984,G__32985,G__32986));
}
} else {
var r25123 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121,q25122,r25123);
} else {
var G__32987 = a25106;
var G__32988 = b25107;
var G__32989 = c25108;
var G__32990 = d25109;
var G__32991 = e25110;
var G__32992 = f25111;
var G__32993 = g25112;
var G__32994 = h25113;
var G__32995 = i25114;
var G__32996 = j25115;
var G__32997 = k25116;
var G__32998 = l25117;
var G__32999 = m25118;
var G__33000 = n25119;
var G__33001 = o25120;
var G__33002 = p25121;
var G__33003 = q25122;
var G__33004 = r25123;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__32987,G__32988,G__32989,G__32990,G__32991,G__32992,G__32993,G__32994,G__32995,G__32996,G__32997,G__32998,G__32999,G__33000,G__33001,G__33002,G__33003,G__33004) : f.call(null,G__32987,G__32988,G__32989,G__32990,G__32991,G__32992,G__32993,G__32994,G__32995,G__32996,G__32997,G__32998,G__32999,G__33000,G__33001,G__33002,G__33003,G__33004));
}
} else {
var s25124 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121,q25122,r25123,s25124);
} else {
var G__33005 = a25106;
var G__33006 = b25107;
var G__33007 = c25108;
var G__33008 = d25109;
var G__33009 = e25110;
var G__33010 = f25111;
var G__33011 = g25112;
var G__33012 = h25113;
var G__33013 = i25114;
var G__33014 = j25115;
var G__33015 = k25116;
var G__33016 = l25117;
var G__33017 = m25118;
var G__33018 = n25119;
var G__33019 = o25120;
var G__33020 = p25121;
var G__33021 = q25122;
var G__33022 = r25123;
var G__33023 = s25124;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__33005,G__33006,G__33007,G__33008,G__33009,G__33010,G__33011,G__33012,G__33013,G__33014,G__33015,G__33016,G__33017,G__33018,G__33019,G__33020,G__33021,G__33022,G__33023) : f.call(null,G__33005,G__33006,G__33007,G__33008,G__33009,G__33010,G__33011,G__33012,G__33013,G__33014,G__33015,G__33016,G__33017,G__33018,G__33019,G__33020,G__33021,G__33022,G__33023));
}
} else {
var t25125 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121,q25122,r25123,s25124,t25125);
} else {
var G__33024 = a25106;
var G__33025 = b25107;
var G__33026 = c25108;
var G__33027 = d25109;
var G__33028 = e25110;
var G__33029 = f25111;
var G__33030 = g25112;
var G__33031 = h25113;
var G__33032 = i25114;
var G__33033 = j25115;
var G__33034 = k25116;
var G__33035 = l25117;
var G__33036 = m25118;
var G__33037 = n25119;
var G__33038 = o25120;
var G__33039 = p25121;
var G__33040 = q25122;
var G__33041 = r25123;
var G__33042 = s25124;
var G__33043 = t25125;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__33024,G__33025,G__33026,G__33027,G__33028,G__33029,G__33030,G__33031,G__33032,G__33033,G__33034,G__33035,G__33036,G__33037,G__33038,G__33039,G__33040,G__33041,G__33042,G__33043) : f.call(null,G__33024,G__33025,G__33026,G__33027,G__33028,G__33029,G__33030,G__33031,G__33032,G__33033,G__33034,G__33035,G__33036,G__33037,G__33038,G__33039,G__33040,G__33041,G__33042,G__33043));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__33044__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__33044 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__33045__i = 0, G__33045__a = new Array(arguments.length -  5);
while (G__33045__i < G__33045__a.length) {G__33045__a[G__33045__i] = arguments[G__33045__i + 5]; ++G__33045__i;}
  args = new cljs.core.IndexedSeq(G__33045__a,0);
} 
return G__33044__delegate.call(this,f,a,b,c,d,args);};
G__33044.cljs$lang$maxFixedArity = 5;
G__33044.cljs$lang$applyTo = (function (arglist__33046){
var f = cljs.core.first(arglist__33046);
arglist__33046 = cljs.core.next(arglist__33046);
var a = cljs.core.first(arglist__33046);
arglist__33046 = cljs.core.next(arglist__33046);
var b = cljs.core.first(arglist__33046);
arglist__33046 = cljs.core.next(arglist__33046);
var c = cljs.core.first(arglist__33046);
arglist__33046 = cljs.core.next(arglist__33046);
var d = cljs.core.first(arglist__33046);
var args = cljs.core.rest(arglist__33046);
return G__33044__delegate(f,a,b,c,d,args);
});
G__33044.cljs$core$IFn$_invoke$arity$variadic = G__33044__delegate;
return G__33044;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__33047 = null;
if (arguments.length > 5) {
var G__33048__i = 0, G__33048__a = new Array(arguments.length -  5);
while (G__33048__i < G__33048__a.length) {G__33048__a[G__33048__i] = arguments[G__33048__i + 5]; ++G__33048__i;}
G__33047 = new cljs.core.IndexedSeq(G__33048__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__33047);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__33064 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33064) : f.call(null,G__33064));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__33065 = cljs.core.meta(obj);
var G__33066 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33065,G__33066) : f.call(null,G__33065,G__33066));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__33067 = cljs.core.meta(obj);
var G__33068 = a;
var G__33069 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33067,G__33068,G__33069) : f.call(null,G__33067,G__33068,G__33069));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__33070 = cljs.core.meta(obj);
var G__33071 = a;
var G__33072 = b;
var G__33073 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33070,G__33071,G__33072,G__33073) : f.call(null,G__33070,G__33071,G__33072,G__33073));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__33074 = cljs.core.meta(obj);
var G__33075 = a;
var G__33076 = b;
var G__33077 = c;
var G__33078 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33074,G__33075,G__33076,G__33077,G__33078) : f.call(null,G__33074,G__33075,G__33076,G__33077,G__33078));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__33079__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__33079 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__33080__i = 0, G__33080__a = new Array(arguments.length -  6);
while (G__33080__i < G__33080__a.length) {G__33080__a[G__33080__i] = arguments[G__33080__i + 6]; ++G__33080__i;}
  args = new cljs.core.IndexedSeq(G__33080__a,0);
} 
return G__33079__delegate.call(this,obj,f,a,b,c,d,args);};
G__33079.cljs$lang$maxFixedArity = 6;
G__33079.cljs$lang$applyTo = (function (arglist__33081){
var obj = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var f = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var a = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var b = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var c = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var d = cljs.core.first(arglist__33081);
var args = cljs.core.rest(arglist__33081);
return G__33079__delegate(obj,f,a,b,c,d,args);
});
G__33079.cljs$core$IFn$_invoke$arity$variadic = G__33079__delegate;
return G__33079;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__33082 = null;
if (arguments.length > 6) {
var G__33083__i = 0, G__33083__a = new Array(arguments.length -  6);
while (G__33083__i < G__33083__a.length) {G__33083__a[G__33083__i] = arguments[G__33083__i + 6]; ++G__33083__i;}
G__33082 = new cljs.core.IndexedSeq(G__33083__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__33082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__33084__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__33084 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33085__i = 0, G__33085__a = new Array(arguments.length -  2);
while (G__33085__i < G__33085__a.length) {G__33085__a[G__33085__i] = arguments[G__33085__i + 2]; ++G__33085__i;}
  more = new cljs.core.IndexedSeq(G__33085__a,0);
} 
return G__33084__delegate.call(this,x,y,more);};
G__33084.cljs$lang$maxFixedArity = 2;
G__33084.cljs$lang$applyTo = (function (arglist__33086){
var x = cljs.core.first(arglist__33086);
arglist__33086 = cljs.core.next(arglist__33086);
var y = cljs.core.first(arglist__33086);
var more = cljs.core.rest(arglist__33086);
return G__33084__delegate(x,y,more);
});
G__33084.cljs$core$IFn$_invoke$arity$variadic = G__33084__delegate;
return G__33084;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__33087 = null;
if (arguments.length > 2) {
var G__33088__i = 0, G__33088__a = new Array(arguments.length -  2);
while (G__33088__i < G__33088__a.length) {G__33088__a[G__33088__i] = arguments[G__33088__i + 2]; ++G__33088__i;}
G__33087 = new cljs.core.IndexedSeq(G__33088__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33087);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t33092 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t33092 = (function (nil_iter,meta33093){
this.nil_iter = nil_iter;
this.meta33093 = meta33093;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t33092.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t33092.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t33092.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t33092.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_33094){
var self__ = this;
var _33094__$1 = this;
return self__.meta33093;
});

cljs.core.t33092.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_33094,meta33093__$1){
var self__ = this;
var _33094__$1 = this;
return (new cljs.core.t33092(self__.nil_iter,meta33093__$1));
});

cljs.core.t33092.cljs$lang$type = true;

cljs.core.t33092.cljs$lang$ctorStr = "cljs.core/t33092";

cljs.core.t33092.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/t33092");
});

cljs.core.__GT_t33092 = (function cljs$core$nil_iter_$___GT_t33092(nil_iter__$1,meta33093){
return (new cljs.core.t33092(nil_iter__$1,meta33093));
});

}

return (new cljs.core.t33092(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24165__auto__ = !((lt.stepper == null));
if(and__24165__auto__){
return self__.iter.hasNext();
} else {
return and__24165__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__33095 = lt;
var G__33096 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__33095,G__33096) : self__.xform.call(null,G__33095,G__33096));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__33097 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__33097) : self__.xform.call(null,G__33097));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__33099 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33099) : xform.call(null,G__33099));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__33101 = cljs.core.next(iters__$1);
iters__$1 = G__33101;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25062__auto___33102 = self__.iters.length;
var i_33103 = (0);
while(true){
if((i_33103 < n__25062__auto___33102)){
(self__.nexts[i_33103] = (self__.iters[i_33103]).next());

var G__33104 = (i_33103 + (1));
i_33103 = G__33104;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24165__auto__ = !((lt.stepper == null));
if(and__24165__auto__){
return this$.hasNext();
} else {
return and__24165__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__33100 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__33100) : self__.xform.call(null,G__33100));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__33109 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33109) : xform.call(null,G__33109));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__33110_33114 = cljs.core.seq(colls);
var chunk__33111_33115 = null;
var count__33112_33116 = (0);
var i__33113_33117 = (0);
while(true){
if((i__33113_33117 < count__33112_33116)){
var coll_33118 = chunk__33111_33115.cljs$core$IIndexed$_nth$arity$2(null,i__33113_33117);
iters.push(cljs.core.iter(coll_33118));

var G__33119 = seq__33110_33114;
var G__33120 = chunk__33111_33115;
var G__33121 = count__33112_33116;
var G__33122 = (i__33113_33117 + (1));
seq__33110_33114 = G__33119;
chunk__33111_33115 = G__33120;
count__33112_33116 = G__33121;
i__33113_33117 = G__33122;
continue;
} else {
var temp__4126__auto___33123 = cljs.core.seq(seq__33110_33114);
if(temp__4126__auto___33123){
var seq__33110_33124__$1 = temp__4126__auto___33123;
if(cljs.core.chunked_seq_QMARK_(seq__33110_33124__$1)){
var c__24962__auto___33125 = cljs.core.chunk_first(seq__33110_33124__$1);
var G__33126 = cljs.core.chunk_rest(seq__33110_33124__$1);
var G__33127 = c__24962__auto___33125;
var G__33128 = cljs.core.count(c__24962__auto___33125);
var G__33129 = (0);
seq__33110_33114 = G__33126;
chunk__33111_33115 = G__33127;
count__33112_33116 = G__33128;
i__33113_33117 = G__33129;
continue;
} else {
var coll_33130 = cljs.core.first(seq__33110_33124__$1);
iters.push(cljs.core.iter(coll_33130));

var G__33131 = cljs.core.next(seq__33110_33124__$1);
var G__33132 = null;
var G__33133 = (0);
var G__33134 = (0);
seq__33110_33114 = G__33131;
chunk__33111_33115 = G__33132;
count__33112_33116 = G__33133;
i__33113_33117 = G__33134;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24177__auto__ = cljs.core.seq(coll);
if(or__24177__auto__){
return or__24177__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__33135__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__33135 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__33136__i = 0, G__33136__a = new Array(arguments.length -  2);
while (G__33136__i < G__33136__a.length) {G__33136__a[G__33136__i] = arguments[G__33136__i + 2]; ++G__33136__i;}
  colls = new cljs.core.IndexedSeq(G__33136__a,0);
} 
return G__33135__delegate.call(this,xform,coll,colls);};
G__33135.cljs$lang$maxFixedArity = 2;
G__33135.cljs$lang$applyTo = (function (arglist__33137){
var xform = cljs.core.first(arglist__33137);
arglist__33137 = cljs.core.next(arglist__33137);
var coll = cljs.core.first(arglist__33137);
var colls = cljs.core.rest(arglist__33137);
return G__33135__delegate(xform,coll,colls);
});
G__33135.cljs$core$IFn$_invoke$arity$variadic = G__33135__delegate;
return G__33135;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__33138 = null;
if (arguments.length > 2) {
var G__33139__i = 0, G__33139__a = new Array(arguments.length -  2);
while (G__33139__i < G__33139__a.length) {G__33139__a[G__33139__i] = arguments[G__33139__i + 2]; ++G__33139__i;}
G__33138 = new cljs.core.IndexedSeq(G__33139__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__33138);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__33141 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33141) : pred.call(null,G__33141));
})())){
var G__33142 = pred;
var G__33143 = cljs.core.next(coll);
pred = G__33142;
coll = G__33143;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24177__auto__ = (function (){var G__33147 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33147) : pred.call(null,G__33147));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__33148 = pred;
var G__33149 = cljs.core.next(coll);
pred = G__33148;
coll = G__33149;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__33156 = null;
var G__33156__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__33156__1 = (function (x){
return cljs.core.not((function (){var G__33153 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33153) : f.call(null,G__33153));
})());
});
var G__33156__2 = (function (x,y){
return cljs.core.not((function (){var G__33154 = x;
var G__33155 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33154,G__33155) : f.call(null,G__33154,G__33155));
})());
});
var G__33156__3 = (function() { 
var G__33157__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__33157 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__33158__i = 0, G__33158__a = new Array(arguments.length -  2);
while (G__33158__i < G__33158__a.length) {G__33158__a[G__33158__i] = arguments[G__33158__i + 2]; ++G__33158__i;}
  zs = new cljs.core.IndexedSeq(G__33158__a,0);
} 
return G__33157__delegate.call(this,x,y,zs);};
G__33157.cljs$lang$maxFixedArity = 2;
G__33157.cljs$lang$applyTo = (function (arglist__33159){
var x = cljs.core.first(arglist__33159);
arglist__33159 = cljs.core.next(arglist__33159);
var y = cljs.core.first(arglist__33159);
var zs = cljs.core.rest(arglist__33159);
return G__33157__delegate(x,y,zs);
});
G__33157.cljs$core$IFn$_invoke$arity$variadic = G__33157__delegate;
return G__33157;
})()
;
G__33156 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__33156__0.call(this);
case 1:
return G__33156__1.call(this,x);
case 2:
return G__33156__2.call(this,x,y);
default:
var G__33160 = null;
if (arguments.length > 2) {
var G__33161__i = 0, G__33161__a = new Array(arguments.length -  2);
while (G__33161__i < G__33161__a.length) {G__33161__a[G__33161__i] = arguments[G__33161__i + 2]; ++G__33161__i;}
G__33160 = new cljs.core.IndexedSeq(G__33161__a,0);
}
return G__33156__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33160);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33156.cljs$lang$maxFixedArity = 2;
G__33156.cljs$lang$applyTo = G__33156__3.cljs$lang$applyTo;
G__33156.cljs$core$IFn$_invoke$arity$0 = G__33156__0;
G__33156.cljs$core$IFn$_invoke$arity$1 = G__33156__1;
G__33156.cljs$core$IFn$_invoke$arity$2 = G__33156__2;
G__33156.cljs$core$IFn$_invoke$arity$variadic = G__33156__3.cljs$core$IFn$_invoke$arity$variadic;
return G__33156;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__33162__delegate = function (args){
return x;
};
var G__33162 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33163__i = 0, G__33163__a = new Array(arguments.length -  0);
while (G__33163__i < G__33163__a.length) {G__33163__a[G__33163__i] = arguments[G__33163__i + 0]; ++G__33163__i;}
  args = new cljs.core.IndexedSeq(G__33163__a,0);
} 
return G__33162__delegate.call(this,args);};
G__33162.cljs$lang$maxFixedArity = 0;
G__33162.cljs$lang$applyTo = (function (arglist__33164){
var args = cljs.core.seq(arglist__33164);
return G__33162__delegate(args);
});
G__33162.cljs$core$IFn$_invoke$arity$variadic = G__33162__delegate;
return G__33162;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__33219 = null;
var G__33219__0 = (function (){
var G__33192 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33192) : f.call(null,G__33192));
});
var G__33219__1 = (function (x){
var G__33193 = (function (){var G__33194 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33194) : g.call(null,G__33194));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33193) : f.call(null,G__33193));
});
var G__33219__2 = (function (x,y){
var G__33195 = (function (){var G__33196 = x;
var G__33197 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__33196,G__33197) : g.call(null,G__33196,G__33197));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33195) : f.call(null,G__33195));
});
var G__33219__3 = (function (x,y,z){
var G__33198 = (function (){var G__33199 = x;
var G__33200 = y;
var G__33201 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__33199,G__33200,G__33201) : g.call(null,G__33199,G__33200,G__33201));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33198) : f.call(null,G__33198));
});
var G__33219__4 = (function() { 
var G__33220__delegate = function (x,y,z,args){
var G__33202 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33202) : f.call(null,G__33202));
};
var G__33220 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33221__i = 0, G__33221__a = new Array(arguments.length -  3);
while (G__33221__i < G__33221__a.length) {G__33221__a[G__33221__i] = arguments[G__33221__i + 3]; ++G__33221__i;}
  args = new cljs.core.IndexedSeq(G__33221__a,0);
} 
return G__33220__delegate.call(this,x,y,z,args);};
G__33220.cljs$lang$maxFixedArity = 3;
G__33220.cljs$lang$applyTo = (function (arglist__33222){
var x = cljs.core.first(arglist__33222);
arglist__33222 = cljs.core.next(arglist__33222);
var y = cljs.core.first(arglist__33222);
arglist__33222 = cljs.core.next(arglist__33222);
var z = cljs.core.first(arglist__33222);
var args = cljs.core.rest(arglist__33222);
return G__33220__delegate(x,y,z,args);
});
G__33220.cljs$core$IFn$_invoke$arity$variadic = G__33220__delegate;
return G__33220;
})()
;
G__33219 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33219__0.call(this);
case 1:
return G__33219__1.call(this,x);
case 2:
return G__33219__2.call(this,x,y);
case 3:
return G__33219__3.call(this,x,y,z);
default:
var G__33223 = null;
if (arguments.length > 3) {
var G__33224__i = 0, G__33224__a = new Array(arguments.length -  3);
while (G__33224__i < G__33224__a.length) {G__33224__a[G__33224__i] = arguments[G__33224__i + 3]; ++G__33224__i;}
G__33223 = new cljs.core.IndexedSeq(G__33224__a,0);
}
return G__33219__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33223);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33219.cljs$lang$maxFixedArity = 3;
G__33219.cljs$lang$applyTo = G__33219__4.cljs$lang$applyTo;
G__33219.cljs$core$IFn$_invoke$arity$0 = G__33219__0;
G__33219.cljs$core$IFn$_invoke$arity$1 = G__33219__1;
G__33219.cljs$core$IFn$_invoke$arity$2 = G__33219__2;
G__33219.cljs$core$IFn$_invoke$arity$3 = G__33219__3;
G__33219.cljs$core$IFn$_invoke$arity$variadic = G__33219__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33219;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__33225 = null;
var G__33225__0 = (function (){
var G__33203 = (function (){var G__33204 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33204) : g.call(null,G__33204));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33203) : f.call(null,G__33203));
});
var G__33225__1 = (function (x){
var G__33205 = (function (){var G__33206 = (function (){var G__33207 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__33207) : h.call(null,G__33207));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33206) : g.call(null,G__33206));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33205) : f.call(null,G__33205));
});
var G__33225__2 = (function (x,y){
var G__33208 = (function (){var G__33209 = (function (){var G__33210 = x;
var G__33211 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__33210,G__33211) : h.call(null,G__33210,G__33211));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33209) : g.call(null,G__33209));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33208) : f.call(null,G__33208));
});
var G__33225__3 = (function (x,y,z){
var G__33212 = (function (){var G__33213 = (function (){var G__33214 = x;
var G__33215 = y;
var G__33216 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__33214,G__33215,G__33216) : h.call(null,G__33214,G__33215,G__33216));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33213) : g.call(null,G__33213));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33212) : f.call(null,G__33212));
});
var G__33225__4 = (function() { 
var G__33226__delegate = function (x,y,z,args){
var G__33217 = (function (){var G__33218 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33218) : g.call(null,G__33218));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33217) : f.call(null,G__33217));
};
var G__33226 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33227__i = 0, G__33227__a = new Array(arguments.length -  3);
while (G__33227__i < G__33227__a.length) {G__33227__a[G__33227__i] = arguments[G__33227__i + 3]; ++G__33227__i;}
  args = new cljs.core.IndexedSeq(G__33227__a,0);
} 
return G__33226__delegate.call(this,x,y,z,args);};
G__33226.cljs$lang$maxFixedArity = 3;
G__33226.cljs$lang$applyTo = (function (arglist__33228){
var x = cljs.core.first(arglist__33228);
arglist__33228 = cljs.core.next(arglist__33228);
var y = cljs.core.first(arglist__33228);
arglist__33228 = cljs.core.next(arglist__33228);
var z = cljs.core.first(arglist__33228);
var args = cljs.core.rest(arglist__33228);
return G__33226__delegate(x,y,z,args);
});
G__33226.cljs$core$IFn$_invoke$arity$variadic = G__33226__delegate;
return G__33226;
})()
;
G__33225 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33225__0.call(this);
case 1:
return G__33225__1.call(this,x);
case 2:
return G__33225__2.call(this,x,y);
case 3:
return G__33225__3.call(this,x,y,z);
default:
var G__33229 = null;
if (arguments.length > 3) {
var G__33230__i = 0, G__33230__a = new Array(arguments.length -  3);
while (G__33230__i < G__33230__a.length) {G__33230__a[G__33230__i] = arguments[G__33230__i + 3]; ++G__33230__i;}
G__33229 = new cljs.core.IndexedSeq(G__33230__a,0);
}
return G__33225__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33225.cljs$lang$maxFixedArity = 3;
G__33225.cljs$lang$applyTo = G__33225__4.cljs$lang$applyTo;
G__33225.cljs$core$IFn$_invoke$arity$0 = G__33225__0;
G__33225.cljs$core$IFn$_invoke$arity$1 = G__33225__1;
G__33225.cljs$core$IFn$_invoke$arity$2 = G__33225__2;
G__33225.cljs$core$IFn$_invoke$arity$3 = G__33225__3;
G__33225.cljs$core$IFn$_invoke$arity$variadic = G__33225__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33225;
})()
});
var cljs$core$comp__4 = (function() { 
var G__33231__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__33232__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__33233 = cljs.core.first(fs__$2).call(null,ret);
var G__33234 = cljs.core.next(fs__$2);
ret = G__33233;
fs__$2 = G__33234;
continue;
} else {
return ret;
}
break;
}
};
var G__33232 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33235__i = 0, G__33235__a = new Array(arguments.length -  0);
while (G__33235__i < G__33235__a.length) {G__33235__a[G__33235__i] = arguments[G__33235__i + 0]; ++G__33235__i;}
  args = new cljs.core.IndexedSeq(G__33235__a,0);
} 
return G__33232__delegate.call(this,args);};
G__33232.cljs$lang$maxFixedArity = 0;
G__33232.cljs$lang$applyTo = (function (arglist__33236){
var args = cljs.core.seq(arglist__33236);
return G__33232__delegate(args);
});
G__33232.cljs$core$IFn$_invoke$arity$variadic = G__33232__delegate;
return G__33232;
})()
;
;})(fs__$1))
};
var G__33231 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__33237__i = 0, G__33237__a = new Array(arguments.length -  3);
while (G__33237__i < G__33237__a.length) {G__33237__a[G__33237__i] = arguments[G__33237__i + 3]; ++G__33237__i;}
  fs = new cljs.core.IndexedSeq(G__33237__a,0);
} 
return G__33231__delegate.call(this,f1,f2,f3,fs);};
G__33231.cljs$lang$maxFixedArity = 3;
G__33231.cljs$lang$applyTo = (function (arglist__33238){
var f1 = cljs.core.first(arglist__33238);
arglist__33238 = cljs.core.next(arglist__33238);
var f2 = cljs.core.first(arglist__33238);
arglist__33238 = cljs.core.next(arglist__33238);
var f3 = cljs.core.first(arglist__33238);
var fs = cljs.core.rest(arglist__33238);
return G__33231__delegate(f1,f2,f3,fs);
});
G__33231.cljs$core$IFn$_invoke$arity$variadic = G__33231__delegate;
return G__33231;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__33239 = null;
if (arguments.length > 3) {
var G__33240__i = 0, G__33240__a = new Array(arguments.length -  3);
while (G__33240__i < G__33240__a.length) {G__33240__a[G__33240__i] = arguments[G__33240__i + 3]; ++G__33240__i;}
G__33239 = new cljs.core.IndexedSeq(G__33240__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__33239);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__33325 = null;
var G__33325__0 = (function (){
var G__33283 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33283) : f.call(null,G__33283));
});
var G__33325__1 = (function (x){
var G__33284 = arg1;
var G__33285 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33284,G__33285) : f.call(null,G__33284,G__33285));
});
var G__33325__2 = (function (x,y){
var G__33286 = arg1;
var G__33287 = x;
var G__33288 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33286,G__33287,G__33288) : f.call(null,G__33286,G__33287,G__33288));
});
var G__33325__3 = (function (x,y,z){
var G__33289 = arg1;
var G__33290 = x;
var G__33291 = y;
var G__33292 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33289,G__33290,G__33291,G__33292) : f.call(null,G__33289,G__33290,G__33291,G__33292));
});
var G__33325__4 = (function() { 
var G__33326__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__33326 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33327__i = 0, G__33327__a = new Array(arguments.length -  3);
while (G__33327__i < G__33327__a.length) {G__33327__a[G__33327__i] = arguments[G__33327__i + 3]; ++G__33327__i;}
  args = new cljs.core.IndexedSeq(G__33327__a,0);
} 
return G__33326__delegate.call(this,x,y,z,args);};
G__33326.cljs$lang$maxFixedArity = 3;
G__33326.cljs$lang$applyTo = (function (arglist__33328){
var x = cljs.core.first(arglist__33328);
arglist__33328 = cljs.core.next(arglist__33328);
var y = cljs.core.first(arglist__33328);
arglist__33328 = cljs.core.next(arglist__33328);
var z = cljs.core.first(arglist__33328);
var args = cljs.core.rest(arglist__33328);
return G__33326__delegate(x,y,z,args);
});
G__33326.cljs$core$IFn$_invoke$arity$variadic = G__33326__delegate;
return G__33326;
})()
;
G__33325 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33325__0.call(this);
case 1:
return G__33325__1.call(this,x);
case 2:
return G__33325__2.call(this,x,y);
case 3:
return G__33325__3.call(this,x,y,z);
default:
var G__33329 = null;
if (arguments.length > 3) {
var G__33330__i = 0, G__33330__a = new Array(arguments.length -  3);
while (G__33330__i < G__33330__a.length) {G__33330__a[G__33330__i] = arguments[G__33330__i + 3]; ++G__33330__i;}
G__33329 = new cljs.core.IndexedSeq(G__33330__a,0);
}
return G__33325__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33325.cljs$lang$maxFixedArity = 3;
G__33325.cljs$lang$applyTo = G__33325__4.cljs$lang$applyTo;
G__33325.cljs$core$IFn$_invoke$arity$0 = G__33325__0;
G__33325.cljs$core$IFn$_invoke$arity$1 = G__33325__1;
G__33325.cljs$core$IFn$_invoke$arity$2 = G__33325__2;
G__33325.cljs$core$IFn$_invoke$arity$3 = G__33325__3;
G__33325.cljs$core$IFn$_invoke$arity$variadic = G__33325__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33325;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__33331 = null;
var G__33331__0 = (function (){
var G__33293 = arg1;
var G__33294 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33293,G__33294) : f.call(null,G__33293,G__33294));
});
var G__33331__1 = (function (x){
var G__33295 = arg1;
var G__33296 = arg2;
var G__33297 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33295,G__33296,G__33297) : f.call(null,G__33295,G__33296,G__33297));
});
var G__33331__2 = (function (x,y){
var G__33298 = arg1;
var G__33299 = arg2;
var G__33300 = x;
var G__33301 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33298,G__33299,G__33300,G__33301) : f.call(null,G__33298,G__33299,G__33300,G__33301));
});
var G__33331__3 = (function (x,y,z){
var G__33302 = arg1;
var G__33303 = arg2;
var G__33304 = x;
var G__33305 = y;
var G__33306 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33302,G__33303,G__33304,G__33305,G__33306) : f.call(null,G__33302,G__33303,G__33304,G__33305,G__33306));
});
var G__33331__4 = (function() { 
var G__33332__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__33332 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33333__i = 0, G__33333__a = new Array(arguments.length -  3);
while (G__33333__i < G__33333__a.length) {G__33333__a[G__33333__i] = arguments[G__33333__i + 3]; ++G__33333__i;}
  args = new cljs.core.IndexedSeq(G__33333__a,0);
} 
return G__33332__delegate.call(this,x,y,z,args);};
G__33332.cljs$lang$maxFixedArity = 3;
G__33332.cljs$lang$applyTo = (function (arglist__33334){
var x = cljs.core.first(arglist__33334);
arglist__33334 = cljs.core.next(arglist__33334);
var y = cljs.core.first(arglist__33334);
arglist__33334 = cljs.core.next(arglist__33334);
var z = cljs.core.first(arglist__33334);
var args = cljs.core.rest(arglist__33334);
return G__33332__delegate(x,y,z,args);
});
G__33332.cljs$core$IFn$_invoke$arity$variadic = G__33332__delegate;
return G__33332;
})()
;
G__33331 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33331__0.call(this);
case 1:
return G__33331__1.call(this,x);
case 2:
return G__33331__2.call(this,x,y);
case 3:
return G__33331__3.call(this,x,y,z);
default:
var G__33335 = null;
if (arguments.length > 3) {
var G__33336__i = 0, G__33336__a = new Array(arguments.length -  3);
while (G__33336__i < G__33336__a.length) {G__33336__a[G__33336__i] = arguments[G__33336__i + 3]; ++G__33336__i;}
G__33335 = new cljs.core.IndexedSeq(G__33336__a,0);
}
return G__33331__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33331.cljs$lang$maxFixedArity = 3;
G__33331.cljs$lang$applyTo = G__33331__4.cljs$lang$applyTo;
G__33331.cljs$core$IFn$_invoke$arity$0 = G__33331__0;
G__33331.cljs$core$IFn$_invoke$arity$1 = G__33331__1;
G__33331.cljs$core$IFn$_invoke$arity$2 = G__33331__2;
G__33331.cljs$core$IFn$_invoke$arity$3 = G__33331__3;
G__33331.cljs$core$IFn$_invoke$arity$variadic = G__33331__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33331;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__33337 = null;
var G__33337__0 = (function (){
var G__33307 = arg1;
var G__33308 = arg2;
var G__33309 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33307,G__33308,G__33309) : f.call(null,G__33307,G__33308,G__33309));
});
var G__33337__1 = (function (x){
var G__33310 = arg1;
var G__33311 = arg2;
var G__33312 = arg3;
var G__33313 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33310,G__33311,G__33312,G__33313) : f.call(null,G__33310,G__33311,G__33312,G__33313));
});
var G__33337__2 = (function (x,y){
var G__33314 = arg1;
var G__33315 = arg2;
var G__33316 = arg3;
var G__33317 = x;
var G__33318 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33314,G__33315,G__33316,G__33317,G__33318) : f.call(null,G__33314,G__33315,G__33316,G__33317,G__33318));
});
var G__33337__3 = (function (x,y,z){
var G__33319 = arg1;
var G__33320 = arg2;
var G__33321 = arg3;
var G__33322 = x;
var G__33323 = y;
var G__33324 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__33319,G__33320,G__33321,G__33322,G__33323,G__33324) : f.call(null,G__33319,G__33320,G__33321,G__33322,G__33323,G__33324));
});
var G__33337__4 = (function() { 
var G__33338__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__33338 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33339__i = 0, G__33339__a = new Array(arguments.length -  3);
while (G__33339__i < G__33339__a.length) {G__33339__a[G__33339__i] = arguments[G__33339__i + 3]; ++G__33339__i;}
  args = new cljs.core.IndexedSeq(G__33339__a,0);
} 
return G__33338__delegate.call(this,x,y,z,args);};
G__33338.cljs$lang$maxFixedArity = 3;
G__33338.cljs$lang$applyTo = (function (arglist__33340){
var x = cljs.core.first(arglist__33340);
arglist__33340 = cljs.core.next(arglist__33340);
var y = cljs.core.first(arglist__33340);
arglist__33340 = cljs.core.next(arglist__33340);
var z = cljs.core.first(arglist__33340);
var args = cljs.core.rest(arglist__33340);
return G__33338__delegate(x,y,z,args);
});
G__33338.cljs$core$IFn$_invoke$arity$variadic = G__33338__delegate;
return G__33338;
})()
;
G__33337 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33337__0.call(this);
case 1:
return G__33337__1.call(this,x);
case 2:
return G__33337__2.call(this,x,y);
case 3:
return G__33337__3.call(this,x,y,z);
default:
var G__33341 = null;
if (arguments.length > 3) {
var G__33342__i = 0, G__33342__a = new Array(arguments.length -  3);
while (G__33342__i < G__33342__a.length) {G__33342__a[G__33342__i] = arguments[G__33342__i + 3]; ++G__33342__i;}
G__33341 = new cljs.core.IndexedSeq(G__33342__a,0);
}
return G__33337__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33341);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33337.cljs$lang$maxFixedArity = 3;
G__33337.cljs$lang$applyTo = G__33337__4.cljs$lang$applyTo;
G__33337.cljs$core$IFn$_invoke$arity$0 = G__33337__0;
G__33337.cljs$core$IFn$_invoke$arity$1 = G__33337__1;
G__33337.cljs$core$IFn$_invoke$arity$2 = G__33337__2;
G__33337.cljs$core$IFn$_invoke$arity$3 = G__33337__3;
G__33337.cljs$core$IFn$_invoke$arity$variadic = G__33337__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33337;
})()
});
var cljs$core$partial__5 = (function() { 
var G__33343__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__33344__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__33344 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33345__i = 0, G__33345__a = new Array(arguments.length -  0);
while (G__33345__i < G__33345__a.length) {G__33345__a[G__33345__i] = arguments[G__33345__i + 0]; ++G__33345__i;}
  args = new cljs.core.IndexedSeq(G__33345__a,0);
} 
return G__33344__delegate.call(this,args);};
G__33344.cljs$lang$maxFixedArity = 0;
G__33344.cljs$lang$applyTo = (function (arglist__33346){
var args = cljs.core.seq(arglist__33346);
return G__33344__delegate(args);
});
G__33344.cljs$core$IFn$_invoke$arity$variadic = G__33344__delegate;
return G__33344;
})()
;
};
var G__33343 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__33347__i = 0, G__33347__a = new Array(arguments.length -  4);
while (G__33347__i < G__33347__a.length) {G__33347__a[G__33347__i] = arguments[G__33347__i + 4]; ++G__33347__i;}
  more = new cljs.core.IndexedSeq(G__33347__a,0);
} 
return G__33343__delegate.call(this,f,arg1,arg2,arg3,more);};
G__33343.cljs$lang$maxFixedArity = 4;
G__33343.cljs$lang$applyTo = (function (arglist__33348){
var f = cljs.core.first(arglist__33348);
arglist__33348 = cljs.core.next(arglist__33348);
var arg1 = cljs.core.first(arglist__33348);
arglist__33348 = cljs.core.next(arglist__33348);
var arg2 = cljs.core.first(arglist__33348);
arglist__33348 = cljs.core.next(arglist__33348);
var arg3 = cljs.core.first(arglist__33348);
var more = cljs.core.rest(arglist__33348);
return G__33343__delegate(f,arg1,arg2,arg3,more);
});
G__33343.cljs$core$IFn$_invoke$arity$variadic = G__33343__delegate;
return G__33343;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__33349 = null;
if (arguments.length > 4) {
var G__33350__i = 0, G__33350__a = new Array(arguments.length -  4);
while (G__33350__i < G__33350__a.length) {G__33350__a[G__33350__i] = arguments[G__33350__i + 4]; ++G__33350__i;}
G__33349 = new cljs.core.IndexedSeq(G__33350__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__33349);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__33383 = null;
var G__33383__1 = (function (a){
var G__33367 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33367) : f.call(null,G__33367));
});
var G__33383__2 = (function (a,b){
var G__33368 = (((a == null))?x:a);
var G__33369 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33368,G__33369) : f.call(null,G__33368,G__33369));
});
var G__33383__3 = (function (a,b,c){
var G__33370 = (((a == null))?x:a);
var G__33371 = b;
var G__33372 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33370,G__33371,G__33372) : f.call(null,G__33370,G__33371,G__33372));
});
var G__33383__4 = (function() { 
var G__33384__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__33384 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33385__i = 0, G__33385__a = new Array(arguments.length -  3);
while (G__33385__i < G__33385__a.length) {G__33385__a[G__33385__i] = arguments[G__33385__i + 3]; ++G__33385__i;}
  ds = new cljs.core.IndexedSeq(G__33385__a,0);
} 
return G__33384__delegate.call(this,a,b,c,ds);};
G__33384.cljs$lang$maxFixedArity = 3;
G__33384.cljs$lang$applyTo = (function (arglist__33386){
var a = cljs.core.first(arglist__33386);
arglist__33386 = cljs.core.next(arglist__33386);
var b = cljs.core.first(arglist__33386);
arglist__33386 = cljs.core.next(arglist__33386);
var c = cljs.core.first(arglist__33386);
var ds = cljs.core.rest(arglist__33386);
return G__33384__delegate(a,b,c,ds);
});
G__33384.cljs$core$IFn$_invoke$arity$variadic = G__33384__delegate;
return G__33384;
})()
;
G__33383 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__33383__1.call(this,a);
case 2:
return G__33383__2.call(this,a,b);
case 3:
return G__33383__3.call(this,a,b,c);
default:
var G__33387 = null;
if (arguments.length > 3) {
var G__33388__i = 0, G__33388__a = new Array(arguments.length -  3);
while (G__33388__i < G__33388__a.length) {G__33388__a[G__33388__i] = arguments[G__33388__i + 3]; ++G__33388__i;}
G__33387 = new cljs.core.IndexedSeq(G__33388__a,0);
}
return G__33383__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33387);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33383.cljs$lang$maxFixedArity = 3;
G__33383.cljs$lang$applyTo = G__33383__4.cljs$lang$applyTo;
G__33383.cljs$core$IFn$_invoke$arity$1 = G__33383__1;
G__33383.cljs$core$IFn$_invoke$arity$2 = G__33383__2;
G__33383.cljs$core$IFn$_invoke$arity$3 = G__33383__3;
G__33383.cljs$core$IFn$_invoke$arity$variadic = G__33383__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33383;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__33389 = null;
var G__33389__2 = (function (a,b){
var G__33373 = (((a == null))?x:a);
var G__33374 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33373,G__33374) : f.call(null,G__33373,G__33374));
});
var G__33389__3 = (function (a,b,c){
var G__33375 = (((a == null))?x:a);
var G__33376 = (((b == null))?y:b);
var G__33377 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33375,G__33376,G__33377) : f.call(null,G__33375,G__33376,G__33377));
});
var G__33389__4 = (function() { 
var G__33390__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__33390 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33391__i = 0, G__33391__a = new Array(arguments.length -  3);
while (G__33391__i < G__33391__a.length) {G__33391__a[G__33391__i] = arguments[G__33391__i + 3]; ++G__33391__i;}
  ds = new cljs.core.IndexedSeq(G__33391__a,0);
} 
return G__33390__delegate.call(this,a,b,c,ds);};
G__33390.cljs$lang$maxFixedArity = 3;
G__33390.cljs$lang$applyTo = (function (arglist__33392){
var a = cljs.core.first(arglist__33392);
arglist__33392 = cljs.core.next(arglist__33392);
var b = cljs.core.first(arglist__33392);
arglist__33392 = cljs.core.next(arglist__33392);
var c = cljs.core.first(arglist__33392);
var ds = cljs.core.rest(arglist__33392);
return G__33390__delegate(a,b,c,ds);
});
G__33390.cljs$core$IFn$_invoke$arity$variadic = G__33390__delegate;
return G__33390;
})()
;
G__33389 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__33389__2.call(this,a,b);
case 3:
return G__33389__3.call(this,a,b,c);
default:
var G__33393 = null;
if (arguments.length > 3) {
var G__33394__i = 0, G__33394__a = new Array(arguments.length -  3);
while (G__33394__i < G__33394__a.length) {G__33394__a[G__33394__i] = arguments[G__33394__i + 3]; ++G__33394__i;}
G__33393 = new cljs.core.IndexedSeq(G__33394__a,0);
}
return G__33389__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33389.cljs$lang$maxFixedArity = 3;
G__33389.cljs$lang$applyTo = G__33389__4.cljs$lang$applyTo;
G__33389.cljs$core$IFn$_invoke$arity$2 = G__33389__2;
G__33389.cljs$core$IFn$_invoke$arity$3 = G__33389__3;
G__33389.cljs$core$IFn$_invoke$arity$variadic = G__33389__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33389;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__33395 = null;
var G__33395__2 = (function (a,b){
var G__33378 = (((a == null))?x:a);
var G__33379 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33378,G__33379) : f.call(null,G__33378,G__33379));
});
var G__33395__3 = (function (a,b,c){
var G__33380 = (((a == null))?x:a);
var G__33381 = (((b == null))?y:b);
var G__33382 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33380,G__33381,G__33382) : f.call(null,G__33380,G__33381,G__33382));
});
var G__33395__4 = (function() { 
var G__33396__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__33396 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33397__i = 0, G__33397__a = new Array(arguments.length -  3);
while (G__33397__i < G__33397__a.length) {G__33397__a[G__33397__i] = arguments[G__33397__i + 3]; ++G__33397__i;}
  ds = new cljs.core.IndexedSeq(G__33397__a,0);
} 
return G__33396__delegate.call(this,a,b,c,ds);};
G__33396.cljs$lang$maxFixedArity = 3;
G__33396.cljs$lang$applyTo = (function (arglist__33398){
var a = cljs.core.first(arglist__33398);
arglist__33398 = cljs.core.next(arglist__33398);
var b = cljs.core.first(arglist__33398);
arglist__33398 = cljs.core.next(arglist__33398);
var c = cljs.core.first(arglist__33398);
var ds = cljs.core.rest(arglist__33398);
return G__33396__delegate(a,b,c,ds);
});
G__33396.cljs$core$IFn$_invoke$arity$variadic = G__33396__delegate;
return G__33396;
})()
;
G__33395 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__33395__2.call(this,a,b);
case 3:
return G__33395__3.call(this,a,b,c);
default:
var G__33399 = null;
if (arguments.length > 3) {
var G__33400__i = 0, G__33400__a = new Array(arguments.length -  3);
while (G__33400__i < G__33400__a.length) {G__33400__a[G__33400__i] = arguments[G__33400__i + 3]; ++G__33400__i;}
G__33399 = new cljs.core.IndexedSeq(G__33400__a,0);
}
return G__33395__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33399);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33395.cljs$lang$maxFixedArity = 3;
G__33395.cljs$lang$applyTo = G__33395__4.cljs$lang$applyTo;
G__33395.cljs$core$IFn$_invoke$arity$2 = G__33395__2;
G__33395.cljs$core$IFn$_invoke$arity$3 = G__33395__3;
G__33395.cljs$core$IFn$_invoke$arity$variadic = G__33395__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33395;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__33431 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__33431) : cljs.core.volatile_BANG_.call(null,G__33431));
})();
return ((function (i){
return (function() {
var G__33461 = null;
var G__33461__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33461__1 = (function (result){
var G__33432 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33432) : rf.call(null,G__33432));
});
var G__33461__2 = (function (result,input){
var G__33433 = result;
var G__33434 = (function (){var G__33435 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__33436 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33435,G__33436) : f.call(null,G__33435,G__33436));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33433,G__33434) : rf.call(null,G__33433,G__33434));
});
G__33461 = function(result,input){
switch(arguments.length){
case 0:
return G__33461__0.call(this);
case 1:
return G__33461__1.call(this,result);
case 2:
return G__33461__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33461.cljs$core$IFn$_invoke$arity$0 = G__33461__0;
G__33461.cljs$core$IFn$_invoke$arity$1 = G__33461__1;
G__33461.cljs$core$IFn$_invoke$arity$2 = G__33461__2;
return G__33461;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___33462 = size;
var i_33463 = (0);
while(true){
if((i_33463 < n__25062__auto___33462)){
cljs.core.chunk_append(b,(function (){var G__33457 = (idx + i_33463);
var G__33458 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33463);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33457,G__33458) : f.call(null,G__33457,G__33458));
})());

var G__33464 = (i_33463 + (1));
i_33463 = G__33464;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__33459 = idx;
var G__33460 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33459,G__33460) : f.call(null,G__33459,G__33460));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__33483 = null;
var G__33483__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33483__1 = (function (result){
var G__33477 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33477) : rf.call(null,G__33477));
});
var G__33483__2 = (function (result,input){
var v = (function (){var G__33478 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33478) : f.call(null,G__33478));
})();
if((v == null)){
return result;
} else {
var G__33479 = result;
var G__33480 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33479,G__33480) : rf.call(null,G__33479,G__33480));
}
});
G__33483 = function(result,input){
switch(arguments.length){
case 0:
return G__33483__0.call(this);
case 1:
return G__33483__1.call(this,result);
case 2:
return G__33483__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33483.cljs$core$IFn$_invoke$arity$0 = G__33483__0;
G__33483.cljs$core$IFn$_invoke$arity$1 = G__33483__1;
G__33483.cljs$core$IFn$_invoke$arity$2 = G__33483__2;
return G__33483;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___33484 = size;
var i_33485 = (0);
while(true){
if((i_33485 < n__25062__auto___33484)){
var x_33486 = (function (){var G__33481 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33485);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33481) : f.call(null,G__33481));
})();
if((x_33486 == null)){
} else {
cljs.core.chunk_append(b,x_33486);
}

var G__33487 = (i_33485 + (1));
i_33485 = G__33487;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__33482 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33482) : f.call(null,G__33482));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__33488 = this$__$1;
return goog.getUid(G__33488);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__33489 = cljs.core.seq(self__.watches);
var chunk__33490 = null;
var count__33491 = (0);
var i__33492 = (0);
while(true){
if((i__33492 < count__33491)){
var vec__33493 = chunk__33490.cljs$core$IIndexed$_nth$arity$2(null,i__33492);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33493,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33493,(1),null);
var G__33494_33503 = key;
var G__33495_33504 = this$__$1;
var G__33496_33505 = oldval;
var G__33497_33506 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33494_33503,G__33495_33504,G__33496_33505,G__33497_33506) : f.call(null,G__33494_33503,G__33495_33504,G__33496_33505,G__33497_33506));

var G__33507 = seq__33489;
var G__33508 = chunk__33490;
var G__33509 = count__33491;
var G__33510 = (i__33492 + (1));
seq__33489 = G__33507;
chunk__33490 = G__33508;
count__33491 = G__33509;
i__33492 = G__33510;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33489);
if(temp__4126__auto__){
var seq__33489__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33489__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__33489__$1);
var G__33511 = cljs.core.chunk_rest(seq__33489__$1);
var G__33512 = c__24962__auto__;
var G__33513 = cljs.core.count(c__24962__auto__);
var G__33514 = (0);
seq__33489 = G__33511;
chunk__33490 = G__33512;
count__33491 = G__33513;
i__33492 = G__33514;
continue;
} else {
var vec__33498 = cljs.core.first(seq__33489__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33498,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33498,(1),null);
var G__33499_33515 = key;
var G__33500_33516 = this$__$1;
var G__33501_33517 = oldval;
var G__33502_33518 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33499_33515,G__33500_33516,G__33501_33517,G__33502_33518) : f.call(null,G__33499_33515,G__33500_33516,G__33501_33517,G__33502_33518));

var G__33519 = cljs.core.next(seq__33489__$1);
var G__33520 = null;
var G__33521 = (0);
var G__33522 = (0);
seq__33489 = G__33519;
chunk__33490 = G__33520;
count__33491 = G__33521;
i__33492 = G__33522;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__33526__delegate = function (x,p__33523){
var map__33525 = p__33523;
var map__33525__$1 = ((cljs.core.seq_QMARK_(map__33525))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33525):map__33525);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33525__$1,cljs.core.constant$keyword$validator);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33525__$1,cljs.core.constant$keyword$meta);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__33526 = function (x,var_args){
var p__33523 = null;
if (arguments.length > 1) {
var G__33527__i = 0, G__33527__a = new Array(arguments.length -  1);
while (G__33527__i < G__33527__a.length) {G__33527__a[G__33527__i] = arguments[G__33527__i + 1]; ++G__33527__i;}
  p__33523 = new cljs.core.IndexedSeq(G__33527__a,0);
} 
return G__33526__delegate.call(this,x,p__33523);};
G__33526.cljs$lang$maxFixedArity = 1;
G__33526.cljs$lang$applyTo = (function (arglist__33528){
var x = cljs.core.first(arglist__33528);
var p__33523 = cljs.core.rest(arglist__33528);
return G__33526__delegate(x,p__33523);
});
G__33526.cljs$core$IFn$_invoke$arity$variadic = G__33526__delegate;
return G__33526;
})()
;
cljs$core$atom = function(x,var_args){
var p__33523 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__33529 = null;
if (arguments.length > 1) {
var G__33530__i = 0, G__33530__a = new Array(arguments.length -  1);
while (G__33530__i < G__33530__a.length) {G__33530__a[G__33530__i] = arguments[G__33530__i + 1]; ++G__33530__i;}
G__33529 = new cljs.core.IndexedSeq(G__33530__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__33529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__33533 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__33533) : validate.call(null,G__33533));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__33534 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__33534) : cljs.core.pr_str.call(null,G__33534));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33541 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33541) : f.call(null,G__33541));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33542 = a.state;
var G__33543 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33542,G__33543) : f.call(null,G__33542,G__33543));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33544 = a.state;
var G__33545 = x;
var G__33546 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33544,G__33545,G__33546) : f.call(null,G__33544,G__33545,G__33546));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__33547__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__33547 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__33548__i = 0, G__33548__a = new Array(arguments.length -  4);
while (G__33548__i < G__33548__a.length) {G__33548__a[G__33548__i] = arguments[G__33548__i + 4]; ++G__33548__i;}
  more = new cljs.core.IndexedSeq(G__33548__a,0);
} 
return G__33547__delegate.call(this,a,f,x,y,more);};
G__33547.cljs$lang$maxFixedArity = 4;
G__33547.cljs$lang$applyTo = (function (arglist__33549){
var a = cljs.core.first(arglist__33549);
arglist__33549 = cljs.core.next(arglist__33549);
var f = cljs.core.first(arglist__33549);
arglist__33549 = cljs.core.next(arglist__33549);
var x = cljs.core.first(arglist__33549);
arglist__33549 = cljs.core.next(arglist__33549);
var y = cljs.core.first(arglist__33549);
var more = cljs.core.rest(arglist__33549);
return G__33547__delegate(a,f,x,y,more);
});
G__33547.cljs$core$IFn$_invoke$arity$variadic = G__33547__delegate;
return G__33547;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__33550 = null;
if (arguments.length > 4) {
var G__33551__i = 0, G__33551__a = new Array(arguments.length -  4);
while (G__33551__i < G__33551__a.length) {G__33551__a[G__33551__i] = arguments[G__33551__i + 4]; ++G__33551__i;}
G__33550 = new cljs.core.IndexedSeq(G__33551__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__33550);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__33618 = null;
var G__33618__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33618__1 = (function (result){
var G__33585 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33585) : rf.call(null,G__33585));
});
var G__33618__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__33586 = i;
var G__33587 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33586,G__33587) : f.call(null,G__33586,G__33587));
})();
if((v == null)){
return result;
} else {
var G__33588 = result;
var G__33589 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33588,G__33589) : rf.call(null,G__33588,G__33589));
}
});
G__33618 = function(result,input){
switch(arguments.length){
case 0:
return G__33618__0.call(this);
case 1:
return G__33618__1.call(this,result);
case 2:
return G__33618__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33618.cljs$core$IFn$_invoke$arity$0 = G__33618__0;
G__33618.cljs$core$IFn$_invoke$arity$1 = G__33618__1;
G__33618.cljs$core$IFn$_invoke$arity$2 = G__33618__2;
return G__33618;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___33619 = size;
var i_33620 = (0);
while(true){
if((i_33620 < n__25062__auto___33619)){
var x_33621 = (function (){var G__33614 = (idx + i_33620);
var G__33615 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33620);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33614,G__33615) : f.call(null,G__33614,G__33615));
})();
if((x_33621 == null)){
} else {
cljs.core.chunk_append(b,x_33621);
}

var G__33622 = (i_33620 + (1));
i_33620 = G__33622;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__33616 = idx;
var G__33617 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33616,G__33617) : f.call(null,G__33616,G__33617));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__33836 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33836) : p.call(null,G__33836));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33838 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33838) : p.call(null,G__33838));
})();
if(cljs.core.truth_(and__24165__auto__)){
var G__33839 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33839) : p.call(null,G__33839));
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33841 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33841) : p.call(null,G__33841));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33843 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33843) : p.call(null,G__33843));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var G__33844 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33844) : p.call(null,G__33844));
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__34013__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__34013 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34014__i = 0, G__34014__a = new Array(arguments.length -  3);
while (G__34014__i < G__34014__a.length) {G__34014__a[G__34014__i] = arguments[G__34014__i + 3]; ++G__34014__i;}
  args = new cljs.core.IndexedSeq(G__34014__a,0);
} 
return G__34013__delegate.call(this,x,y,z,args);};
G__34013.cljs$lang$maxFixedArity = 3;
G__34013.cljs$lang$applyTo = (function (arglist__34015){
var x = cljs.core.first(arglist__34015);
arglist__34015 = cljs.core.next(arglist__34015);
var y = cljs.core.first(arglist__34015);
arglist__34015 = cljs.core.next(arglist__34015);
var z = cljs.core.first(arglist__34015);
var args = cljs.core.rest(arglist__34015);
return G__34013__delegate(x,y,z,args);
});
G__34013.cljs$core$IFn$_invoke$arity$variadic = G__34013__delegate;
return G__34013;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__34016 = null;
if (arguments.length > 3) {
var G__34017__i = 0, G__34017__a = new Array(arguments.length -  3);
while (G__34017__i < G__34017__a.length) {G__34017__a[G__34017__i] = arguments[G__34017__i + 3]; ++G__34017__i;}
G__34016 = new cljs.core.IndexedSeq(G__34017__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34016);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33876 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33876) : p1.call(null,G__33876));
})();
if(cljs.core.truth_(and__24165__auto__)){
var G__33877 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33877) : p2.call(null,G__33877));
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33879 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33879) : p1.call(null,G__33879));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33881 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33881) : p1.call(null,G__33881));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var and__24165__auto____$2 = (function (){var G__33883 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33883) : p2.call(null,G__33883));
})();
if(cljs.core.truth_(and__24165__auto____$2)){
var G__33884 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33884) : p2.call(null,G__33884));
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33886 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33886) : p1.call(null,G__33886));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33888 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33888) : p1.call(null,G__33888));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var and__24165__auto____$2 = (function (){var G__33890 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33890) : p1.call(null,G__33890));
})();
if(cljs.core.truth_(and__24165__auto____$2)){
var and__24165__auto____$3 = (function (){var G__33892 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33892) : p2.call(null,G__33892));
})();
if(cljs.core.truth_(and__24165__auto____$3)){
var and__24165__auto____$4 = (function (){var G__33894 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33894) : p2.call(null,G__33894));
})();
if(cljs.core.truth_(and__24165__auto____$4)){
var G__33895 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33895) : p2.call(null,G__33895));
} else {
return and__24165__auto____$4;
}
} else {
return and__24165__auto____$3;
}
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__34018__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__33623_SHARP_){
var and__24165__auto__ = (function (){var G__33900 = p1__33623_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33900) : p1.call(null,G__33900));
})();
if(cljs.core.truth_(and__24165__auto__)){
var G__33901 = p1__33623_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33901) : p2.call(null,G__33901));
} else {
return and__24165__auto__;
}
}),args)));
};
var G__34018 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34019__i = 0, G__34019__a = new Array(arguments.length -  3);
while (G__34019__i < G__34019__a.length) {G__34019__a[G__34019__i] = arguments[G__34019__i + 3]; ++G__34019__i;}
  args = new cljs.core.IndexedSeq(G__34019__a,0);
} 
return G__34018__delegate.call(this,x,y,z,args);};
G__34018.cljs$lang$maxFixedArity = 3;
G__34018.cljs$lang$applyTo = (function (arglist__34020){
var x = cljs.core.first(arglist__34020);
arglist__34020 = cljs.core.next(arglist__34020);
var y = cljs.core.first(arglist__34020);
arglist__34020 = cljs.core.next(arglist__34020);
var z = cljs.core.first(arglist__34020);
var args = cljs.core.rest(arglist__34020);
return G__34018__delegate(x,y,z,args);
});
G__34018.cljs$core$IFn$_invoke$arity$variadic = G__34018__delegate;
return G__34018;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__34021 = null;
if (arguments.length > 3) {
var G__34022__i = 0, G__34022__a = new Array(arguments.length -  3);
while (G__34022__i < G__34022__a.length) {G__34022__a[G__34022__i] = arguments[G__34022__i + 3]; ++G__34022__i;}
G__34021 = new cljs.core.IndexedSeq(G__34022__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34021);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33947 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33947) : p1.call(null,G__33947));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33949 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33949) : p2.call(null,G__33949));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var G__33950 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33950) : p3.call(null,G__33950));
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33952 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33952) : p1.call(null,G__33952));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33954 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33954) : p2.call(null,G__33954));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var and__24165__auto____$2 = (function (){var G__33956 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33956) : p3.call(null,G__33956));
})();
if(cljs.core.truth_(and__24165__auto____$2)){
var and__24165__auto____$3 = (function (){var G__33958 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33958) : p1.call(null,G__33958));
})();
if(cljs.core.truth_(and__24165__auto____$3)){
var and__24165__auto____$4 = (function (){var G__33960 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33960) : p2.call(null,G__33960));
})();
if(cljs.core.truth_(and__24165__auto____$4)){
var G__33961 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33961) : p3.call(null,G__33961));
} else {
return and__24165__auto____$4;
}
} else {
return and__24165__auto____$3;
}
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33963 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33963) : p1.call(null,G__33963));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33965 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33965) : p2.call(null,G__33965));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var and__24165__auto____$2 = (function (){var G__33967 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33967) : p3.call(null,G__33967));
})();
if(cljs.core.truth_(and__24165__auto____$2)){
var and__24165__auto____$3 = (function (){var G__33969 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33969) : p1.call(null,G__33969));
})();
if(cljs.core.truth_(and__24165__auto____$3)){
var and__24165__auto____$4 = (function (){var G__33971 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33971) : p2.call(null,G__33971));
})();
if(cljs.core.truth_(and__24165__auto____$4)){
var and__24165__auto____$5 = (function (){var G__33973 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33973) : p3.call(null,G__33973));
})();
if(cljs.core.truth_(and__24165__auto____$5)){
var and__24165__auto____$6 = (function (){var G__33975 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33975) : p1.call(null,G__33975));
})();
if(cljs.core.truth_(and__24165__auto____$6)){
var and__24165__auto____$7 = (function (){var G__33977 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33977) : p2.call(null,G__33977));
})();
if(cljs.core.truth_(and__24165__auto____$7)){
var G__33978 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33978) : p3.call(null,G__33978));
} else {
return and__24165__auto____$7;
}
} else {
return and__24165__auto____$6;
}
} else {
return and__24165__auto____$5;
}
} else {
return and__24165__auto____$4;
}
} else {
return and__24165__auto____$3;
}
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__34023__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__33624_SHARP_){
var and__24165__auto__ = (function (){var G__33985 = p1__33624_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33985) : p1.call(null,G__33985));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33987 = p1__33624_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33987) : p2.call(null,G__33987));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var G__33988 = p1__33624_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33988) : p3.call(null,G__33988));
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
}),args)));
};
var G__34023 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34024__i = 0, G__34024__a = new Array(arguments.length -  3);
while (G__34024__i < G__34024__a.length) {G__34024__a[G__34024__i] = arguments[G__34024__i + 3]; ++G__34024__i;}
  args = new cljs.core.IndexedSeq(G__34024__a,0);
} 
return G__34023__delegate.call(this,x,y,z,args);};
G__34023.cljs$lang$maxFixedArity = 3;
G__34023.cljs$lang$applyTo = (function (arglist__34025){
var x = cljs.core.first(arglist__34025);
arglist__34025 = cljs.core.next(arglist__34025);
var y = cljs.core.first(arglist__34025);
arglist__34025 = cljs.core.next(arglist__34025);
var z = cljs.core.first(arglist__34025);
var args = cljs.core.rest(arglist__34025);
return G__34023__delegate(x,y,z,args);
});
G__34023.cljs$core$IFn$_invoke$arity$variadic = G__34023__delegate;
return G__34023;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__34026 = null;
if (arguments.length > 3) {
var G__34027__i = 0, G__34027__a = new Array(arguments.length -  3);
while (G__34027__i < G__34027__a.length) {G__34027__a[G__34027__i] = arguments[G__34027__i + 3]; ++G__34027__i;}
G__34026 = new cljs.core.IndexedSeq(G__34027__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34026);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__34028__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33625_SHARP_){
var G__34004 = x;
return (p1__33625_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33625_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34004) : p1__33625_SHARP_.call(null,G__34004));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33626_SHARP_){
var and__24165__auto__ = (function (){var G__34006 = x;
return (p1__33626_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33626_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34006) : p1__33626_SHARP_.call(null,G__34006));
})();
if(cljs.core.truth_(and__24165__auto__)){
var G__34007 = y;
return (p1__33626_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33626_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34007) : p1__33626_SHARP_.call(null,G__34007));
} else {
return and__24165__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33627_SHARP_){
var and__24165__auto__ = (function (){var G__34009 = x;
return (p1__33627_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33627_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34009) : p1__33627_SHARP_.call(null,G__34009));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__34011 = y;
return (p1__33627_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33627_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34011) : p1__33627_SHARP_.call(null,G__34011));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var G__34012 = z;
return (p1__33627_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33627_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34012) : p1__33627_SHARP_.call(null,G__34012));
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__34029__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33628_SHARP_){
return cljs.core.every_QMARK_(p1__33628_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__34029 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34030__i = 0, G__34030__a = new Array(arguments.length -  3);
while (G__34030__i < G__34030__a.length) {G__34030__a[G__34030__i] = arguments[G__34030__i + 3]; ++G__34030__i;}
  args = new cljs.core.IndexedSeq(G__34030__a,0);
} 
return G__34029__delegate.call(this,x,y,z,args);};
G__34029.cljs$lang$maxFixedArity = 3;
G__34029.cljs$lang$applyTo = (function (arglist__34031){
var x = cljs.core.first(arglist__34031);
arglist__34031 = cljs.core.next(arglist__34031);
var y = cljs.core.first(arglist__34031);
arglist__34031 = cljs.core.next(arglist__34031);
var z = cljs.core.first(arglist__34031);
var args = cljs.core.rest(arglist__34031);
return G__34029__delegate(x,y,z,args);
});
G__34029.cljs$core$IFn$_invoke$arity$variadic = G__34029__delegate;
return G__34029;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__34032 = null;
if (arguments.length > 3) {
var G__34033__i = 0, G__34033__a = new Array(arguments.length -  3);
while (G__34033__i < G__34033__a.length) {G__34033__a[G__34033__i] = arguments[G__34033__i + 3]; ++G__34033__i;}
G__34032 = new cljs.core.IndexedSeq(G__34033__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34032);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__34028 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__34034__i = 0, G__34034__a = new Array(arguments.length -  3);
while (G__34034__i < G__34034__a.length) {G__34034__a[G__34034__i] = arguments[G__34034__i + 3]; ++G__34034__i;}
  ps = new cljs.core.IndexedSeq(G__34034__a,0);
} 
return G__34028__delegate.call(this,p1,p2,p3,ps);};
G__34028.cljs$lang$maxFixedArity = 3;
G__34028.cljs$lang$applyTo = (function (arglist__34035){
var p1 = cljs.core.first(arglist__34035);
arglist__34035 = cljs.core.next(arglist__34035);
var p2 = cljs.core.first(arglist__34035);
arglist__34035 = cljs.core.next(arglist__34035);
var p3 = cljs.core.first(arglist__34035);
var ps = cljs.core.rest(arglist__34035);
return G__34028__delegate(p1,p2,p3,ps);
});
G__34028.cljs$core$IFn$_invoke$arity$variadic = G__34028__delegate;
return G__34028;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__34036 = null;
if (arguments.length > 3) {
var G__34037__i = 0, G__34037__a = new Array(arguments.length -  3);
while (G__34037__i < G__34037__a.length) {G__34037__a[G__34037__i] = arguments[G__34037__i + 3]; ++G__34037__i;}
G__34036 = new cljs.core.IndexedSeq(G__34037__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__34036);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__34243 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34243) : p.call(null,G__34243));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__24177__auto__ = (function (){var G__34245 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34245) : p.call(null,G__34245));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__34246 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34246) : p.call(null,G__34246));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__24177__auto__ = (function (){var G__34248 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34248) : p.call(null,G__34248));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34250 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34250) : p.call(null,G__34250));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var G__34251 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34251) : p.call(null,G__34251));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__34412__delegate = function (x,y,z,args){
var or__24177__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__34412 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34413__i = 0, G__34413__a = new Array(arguments.length -  3);
while (G__34413__i < G__34413__a.length) {G__34413__a[G__34413__i] = arguments[G__34413__i + 3]; ++G__34413__i;}
  args = new cljs.core.IndexedSeq(G__34413__a,0);
} 
return G__34412__delegate.call(this,x,y,z,args);};
G__34412.cljs$lang$maxFixedArity = 3;
G__34412.cljs$lang$applyTo = (function (arglist__34414){
var x = cljs.core.first(arglist__34414);
arglist__34414 = cljs.core.next(arglist__34414);
var y = cljs.core.first(arglist__34414);
arglist__34414 = cljs.core.next(arglist__34414);
var z = cljs.core.first(arglist__34414);
var args = cljs.core.rest(arglist__34414);
return G__34412__delegate(x,y,z,args);
});
G__34412.cljs$core$IFn$_invoke$arity$variadic = G__34412__delegate;
return G__34412;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__34415 = null;
if (arguments.length > 3) {
var G__34416__i = 0, G__34416__a = new Array(arguments.length -  3);
while (G__34416__i < G__34416__a.length) {G__34416__a[G__34416__i] = arguments[G__34416__i + 3]; ++G__34416__i;}
G__34415 = new cljs.core.IndexedSeq(G__34416__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34415);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__24177__auto__ = (function (){var G__34283 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34283) : p1.call(null,G__34283));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__34284 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34284) : p2.call(null,G__34284));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__24177__auto__ = (function (){var G__34286 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34286) : p1.call(null,G__34286));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34288 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34288) : p1.call(null,G__34288));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34290 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34290) : p2.call(null,G__34290));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var G__34291 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34291) : p2.call(null,G__34291));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__24177__auto__ = (function (){var G__34293 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34293) : p1.call(null,G__34293));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34295 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34295) : p1.call(null,G__34295));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34297 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34297) : p1.call(null,G__34297));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var or__24177__auto____$3 = (function (){var G__34299 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34299) : p2.call(null,G__34299));
})();
if(cljs.core.truth_(or__24177__auto____$3)){
return or__24177__auto____$3;
} else {
var or__24177__auto____$4 = (function (){var G__34301 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34301) : p2.call(null,G__34301));
})();
if(cljs.core.truth_(or__24177__auto____$4)){
return or__24177__auto____$4;
} else {
var G__34302 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34302) : p2.call(null,G__34302));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__34417__delegate = function (x,y,z,args){
var or__24177__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.some(((function (or__24177__auto__){
return (function (p1__34038_SHARP_){
var or__24177__auto____$1 = (function (){var G__34304 = p1__34038_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34304) : p1.call(null,G__34304));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var G__34305 = p1__34038_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34305) : p2.call(null,G__34305));
}
});})(or__24177__auto__))
,args);
}
};
var G__34417 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34418__i = 0, G__34418__a = new Array(arguments.length -  3);
while (G__34418__i < G__34418__a.length) {G__34418__a[G__34418__i] = arguments[G__34418__i + 3]; ++G__34418__i;}
  args = new cljs.core.IndexedSeq(G__34418__a,0);
} 
return G__34417__delegate.call(this,x,y,z,args);};
G__34417.cljs$lang$maxFixedArity = 3;
G__34417.cljs$lang$applyTo = (function (arglist__34419){
var x = cljs.core.first(arglist__34419);
arglist__34419 = cljs.core.next(arglist__34419);
var y = cljs.core.first(arglist__34419);
arglist__34419 = cljs.core.next(arglist__34419);
var z = cljs.core.first(arglist__34419);
var args = cljs.core.rest(arglist__34419);
return G__34417__delegate(x,y,z,args);
});
G__34417.cljs$core$IFn$_invoke$arity$variadic = G__34417__delegate;
return G__34417;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__34420 = null;
if (arguments.length > 3) {
var G__34421__i = 0, G__34421__a = new Array(arguments.length -  3);
while (G__34421__i < G__34421__a.length) {G__34421__a[G__34421__i] = arguments[G__34421__i + 3]; ++G__34421__i;}
G__34420 = new cljs.core.IndexedSeq(G__34421__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__24177__auto__ = (function (){var G__34351 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34351) : p1.call(null,G__34351));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34353 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34353) : p2.call(null,G__34353));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var G__34354 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34354) : p3.call(null,G__34354));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__24177__auto__ = (function (){var G__34356 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34356) : p1.call(null,G__34356));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34358 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34358) : p2.call(null,G__34358));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34360 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34360) : p3.call(null,G__34360));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var or__24177__auto____$3 = (function (){var G__34362 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34362) : p1.call(null,G__34362));
})();
if(cljs.core.truth_(or__24177__auto____$3)){
return or__24177__auto____$3;
} else {
var or__24177__auto____$4 = (function (){var G__34364 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34364) : p2.call(null,G__34364));
})();
if(cljs.core.truth_(or__24177__auto____$4)){
return or__24177__auto____$4;
} else {
var G__34365 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34365) : p3.call(null,G__34365));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__24177__auto__ = (function (){var G__34367 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34367) : p1.call(null,G__34367));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34369 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34369) : p2.call(null,G__34369));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34371 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34371) : p3.call(null,G__34371));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var or__24177__auto____$3 = (function (){var G__34373 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34373) : p1.call(null,G__34373));
})();
if(cljs.core.truth_(or__24177__auto____$3)){
return or__24177__auto____$3;
} else {
var or__24177__auto____$4 = (function (){var G__34375 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34375) : p2.call(null,G__34375));
})();
if(cljs.core.truth_(or__24177__auto____$4)){
return or__24177__auto____$4;
} else {
var or__24177__auto____$5 = (function (){var G__34377 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34377) : p3.call(null,G__34377));
})();
if(cljs.core.truth_(or__24177__auto____$5)){
return or__24177__auto____$5;
} else {
var or__24177__auto____$6 = (function (){var G__34379 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34379) : p1.call(null,G__34379));
})();
if(cljs.core.truth_(or__24177__auto____$6)){
return or__24177__auto____$6;
} else {
var or__24177__auto____$7 = (function (){var G__34381 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34381) : p2.call(null,G__34381));
})();
if(cljs.core.truth_(or__24177__auto____$7)){
return or__24177__auto____$7;
} else {
var G__34382 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34382) : p3.call(null,G__34382));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__34422__delegate = function (x,y,z,args){
var or__24177__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.some(((function (or__24177__auto__){
return (function (p1__34039_SHARP_){
var or__24177__auto____$1 = (function (){var G__34384 = p1__34039_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34384) : p1.call(null,G__34384));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34386 = p1__34039_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34386) : p2.call(null,G__34386));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var G__34387 = p1__34039_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34387) : p3.call(null,G__34387));
}
}
});})(or__24177__auto__))
,args);
}
};
var G__34422 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34423__i = 0, G__34423__a = new Array(arguments.length -  3);
while (G__34423__i < G__34423__a.length) {G__34423__a[G__34423__i] = arguments[G__34423__i + 3]; ++G__34423__i;}
  args = new cljs.core.IndexedSeq(G__34423__a,0);
} 
return G__34422__delegate.call(this,x,y,z,args);};
G__34422.cljs$lang$maxFixedArity = 3;
G__34422.cljs$lang$applyTo = (function (arglist__34424){
var x = cljs.core.first(arglist__34424);
arglist__34424 = cljs.core.next(arglist__34424);
var y = cljs.core.first(arglist__34424);
arglist__34424 = cljs.core.next(arglist__34424);
var z = cljs.core.first(arglist__34424);
var args = cljs.core.rest(arglist__34424);
return G__34422__delegate(x,y,z,args);
});
G__34422.cljs$core$IFn$_invoke$arity$variadic = G__34422__delegate;
return G__34422;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__34425 = null;
if (arguments.length > 3) {
var G__34426__i = 0, G__34426__a = new Array(arguments.length -  3);
while (G__34426__i < G__34426__a.length) {G__34426__a[G__34426__i] = arguments[G__34426__i + 3]; ++G__34426__i;}
G__34425 = new cljs.core.IndexedSeq(G__34426__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__34427__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__34040_SHARP_){
var G__34403 = x;
return (p1__34040_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34040_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34403) : p1__34040_SHARP_.call(null,G__34403));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__34041_SHARP_){
var or__24177__auto__ = (function (){var G__34405 = x;
return (p1__34041_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34041_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34405) : p1__34041_SHARP_.call(null,G__34405));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__34406 = y;
return (p1__34041_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34041_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34406) : p1__34041_SHARP_.call(null,G__34406));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__34042_SHARP_){
var or__24177__auto__ = (function (){var G__34408 = x;
return (p1__34042_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34042_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34408) : p1__34042_SHARP_.call(null,G__34408));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34410 = y;
return (p1__34042_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34042_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34410) : p1__34042_SHARP_.call(null,G__34410));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var G__34411 = z;
return (p1__34042_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34042_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34411) : p1__34042_SHARP_.call(null,G__34411));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__34428__delegate = function (x,y,z,args){
var or__24177__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.some(((function (or__24177__auto__,ps__$1){
return (function (p1__34043_SHARP_){
return cljs.core.some(p1__34043_SHARP_,args);
});})(or__24177__auto__,ps__$1))
,ps__$1);
}
};
var G__34428 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34429__i = 0, G__34429__a = new Array(arguments.length -  3);
while (G__34429__i < G__34429__a.length) {G__34429__a[G__34429__i] = arguments[G__34429__i + 3]; ++G__34429__i;}
  args = new cljs.core.IndexedSeq(G__34429__a,0);
} 
return G__34428__delegate.call(this,x,y,z,args);};
G__34428.cljs$lang$maxFixedArity = 3;
G__34428.cljs$lang$applyTo = (function (arglist__34430){
var x = cljs.core.first(arglist__34430);
arglist__34430 = cljs.core.next(arglist__34430);
var y = cljs.core.first(arglist__34430);
arglist__34430 = cljs.core.next(arglist__34430);
var z = cljs.core.first(arglist__34430);
var args = cljs.core.rest(arglist__34430);
return G__34428__delegate(x,y,z,args);
});
G__34428.cljs$core$IFn$_invoke$arity$variadic = G__34428__delegate;
return G__34428;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__34431 = null;
if (arguments.length > 3) {
var G__34432__i = 0, G__34432__a = new Array(arguments.length -  3);
while (G__34432__i < G__34432__a.length) {G__34432__a[G__34432__i] = arguments[G__34432__i + 3]; ++G__34432__i;}
G__34431 = new cljs.core.IndexedSeq(G__34432__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__34427 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__34433__i = 0, G__34433__a = new Array(arguments.length -  3);
while (G__34433__i < G__34433__a.length) {G__34433__a[G__34433__i] = arguments[G__34433__i + 3]; ++G__34433__i;}
  ps = new cljs.core.IndexedSeq(G__34433__a,0);
} 
return G__34427__delegate.call(this,p1,p2,p3,ps);};
G__34427.cljs$lang$maxFixedArity = 3;
G__34427.cljs$lang$applyTo = (function (arglist__34434){
var p1 = cljs.core.first(arglist__34434);
arglist__34434 = cljs.core.next(arglist__34434);
var p2 = cljs.core.first(arglist__34434);
arglist__34434 = cljs.core.next(arglist__34434);
var p3 = cljs.core.first(arglist__34434);
var ps = cljs.core.rest(arglist__34434);
return G__34427__delegate(p1,p2,p3,ps);
});
G__34427.cljs$core$IFn$_invoke$arity$variadic = G__34427__delegate;
return G__34427;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__34435 = null;
if (arguments.length > 3) {
var G__34436__i = 0, G__34436__a = new Array(arguments.length -  3);
while (G__34436__i < G__34436__a.length) {G__34436__a[G__34436__i] = arguments[G__34436__i + 3]; ++G__34436__i;}
G__34435 = new cljs.core.IndexedSeq(G__34436__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__34435);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__34491 = null;
var G__34491__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34491__1 = (function (result){
var G__34477 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34477) : rf.call(null,G__34477));
});
var G__34491__2 = (function (result,input){
var G__34478 = result;
var G__34479 = (function (){var G__34480 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34480) : f.call(null,G__34480));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34478,G__34479) : rf.call(null,G__34478,G__34479));
});
var G__34491__3 = (function() { 
var G__34492__delegate = function (result,input,inputs){
var G__34481 = result;
var G__34482 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34481,G__34482) : rf.call(null,G__34481,G__34482));
};
var G__34492 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__34493__i = 0, G__34493__a = new Array(arguments.length -  2);
while (G__34493__i < G__34493__a.length) {G__34493__a[G__34493__i] = arguments[G__34493__i + 2]; ++G__34493__i;}
  inputs = new cljs.core.IndexedSeq(G__34493__a,0);
} 
return G__34492__delegate.call(this,result,input,inputs);};
G__34492.cljs$lang$maxFixedArity = 2;
G__34492.cljs$lang$applyTo = (function (arglist__34494){
var result = cljs.core.first(arglist__34494);
arglist__34494 = cljs.core.next(arglist__34494);
var input = cljs.core.first(arglist__34494);
var inputs = cljs.core.rest(arglist__34494);
return G__34492__delegate(result,input,inputs);
});
G__34492.cljs$core$IFn$_invoke$arity$variadic = G__34492__delegate;
return G__34492;
})()
;
G__34491 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__34491__0.call(this);
case 1:
return G__34491__1.call(this,result);
case 2:
return G__34491__2.call(this,result,input);
default:
var G__34495 = null;
if (arguments.length > 2) {
var G__34496__i = 0, G__34496__a = new Array(arguments.length -  2);
while (G__34496__i < G__34496__a.length) {G__34496__a[G__34496__i] = arguments[G__34496__i + 2]; ++G__34496__i;}
G__34495 = new cljs.core.IndexedSeq(G__34496__a,0);
}
return G__34491__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__34495);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34491.cljs$lang$maxFixedArity = 2;
G__34491.cljs$lang$applyTo = G__34491__3.cljs$lang$applyTo;
G__34491.cljs$core$IFn$_invoke$arity$0 = G__34491__0;
G__34491.cljs$core$IFn$_invoke$arity$1 = G__34491__1;
G__34491.cljs$core$IFn$_invoke$arity$2 = G__34491__2;
G__34491.cljs$core$IFn$_invoke$arity$variadic = G__34491__3.cljs$core$IFn$_invoke$arity$variadic;
return G__34491;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___34497 = size;
var i_34498 = (0);
while(true){
if((i_34498 < n__25062__auto___34497)){
cljs.core.chunk_append(b,(function (){var G__34483 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34498);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34483) : f.call(null,G__34483));
})());

var G__34499 = (i_34498 + (1));
i_34498 = G__34499;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__34484 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34484) : f.call(null,G__34484));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__34485 = cljs.core.first(s1);
var G__34486 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34485,G__34486) : f.call(null,G__34485,G__34486));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__34487 = cljs.core.first(s1);
var G__34488 = cljs.core.first(s2);
var G__34489 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34487,G__34488,G__34489) : f.call(null,G__34487,G__34488,G__34489));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__34500__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__34437_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__34437_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__34500 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__34501__i = 0, G__34501__a = new Array(arguments.length -  4);
while (G__34501__i < G__34501__a.length) {G__34501__a[G__34501__i] = arguments[G__34501__i + 4]; ++G__34501__i;}
  colls = new cljs.core.IndexedSeq(G__34501__a,0);
} 
return G__34500__delegate.call(this,f,c1,c2,c3,colls);};
G__34500.cljs$lang$maxFixedArity = 4;
G__34500.cljs$lang$applyTo = (function (arglist__34502){
var f = cljs.core.first(arglist__34502);
arglist__34502 = cljs.core.next(arglist__34502);
var c1 = cljs.core.first(arglist__34502);
arglist__34502 = cljs.core.next(arglist__34502);
var c2 = cljs.core.first(arglist__34502);
arglist__34502 = cljs.core.next(arglist__34502);
var c3 = cljs.core.first(arglist__34502);
var colls = cljs.core.rest(arglist__34502);
return G__34500__delegate(f,c1,c2,c3,colls);
});
G__34500.cljs$core$IFn$_invoke$arity$variadic = G__34500__delegate;
return G__34500;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__34503 = null;
if (arguments.length > 4) {
var G__34504__i = 0, G__34504__a = new Array(arguments.length -  4);
while (G__34504__i < G__34504__a.length) {G__34504__a[G__34504__i] = arguments[G__34504__i + 4]; ++G__34504__i;}
G__34503 = new cljs.core.IndexedSeq(G__34504__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__34503);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__34513 = null;
var G__34513__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34513__1 = (function (result){
var G__34510 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34510) : rf.call(null,G__34510));
});
var G__34513__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__34511 = result;
var G__34512 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34511,G__34512) : rf.call(null,G__34511,G__34512));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__34513 = function(result,input){
switch(arguments.length){
case 0:
return G__34513__0.call(this);
case 1:
return G__34513__1.call(this,result);
case 2:
return G__34513__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34513.cljs$core$IFn$_invoke$arity$0 = G__34513__0;
G__34513.cljs$core$IFn$_invoke$arity$1 = G__34513__1;
G__34513.cljs$core$IFn$_invoke$arity$2 = G__34513__2;
return G__34513;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__34520 = null;
var G__34520__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34520__1 = (function (result){
var G__34517 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34517) : rf.call(null,G__34517));
});
var G__34520__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__34518 = result;
var G__34519 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34518,G__34519) : rf.call(null,G__34518,G__34519));
}
});
G__34520 = function(result,input){
switch(arguments.length){
case 0:
return G__34520__0.call(this);
case 1:
return G__34520__1.call(this,result);
case 2:
return G__34520__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34520.cljs$core$IFn$_invoke$arity$0 = G__34520__0;
G__34520.cljs$core$IFn$_invoke$arity$1 = G__34520__1;
G__34520.cljs$core$IFn$_invoke$arity$2 = G__34520__2;
return G__34520;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__34521 = (n__$1 - (1));
var G__34522 = cljs.core.rest(s);
n__$1 = G__34521;
coll__$1 = G__34522;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__34525 = cljs.core.next(s);
var G__34526 = cljs.core.next(lead);
s = G__34525;
lead = G__34526;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__34539 = null;
var G__34539__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34539__1 = (function (result){
var G__34533 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34533) : rf.call(null,G__34533));
});
var G__34539__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24165__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24165__auto__)){
var G__34534 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34534) : pred.call(null,G__34534));
} else {
return and__24165__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__34535 = result;
var G__34536 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34535,G__34536) : rf.call(null,G__34535,G__34536));
}
});
G__34539 = function(result,input){
switch(arguments.length){
case 0:
return G__34539__0.call(this);
case 1:
return G__34539__1.call(this,result);
case 2:
return G__34539__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34539.cljs$core$IFn$_invoke$arity$0 = G__34539__0;
G__34539.cljs$core$IFn$_invoke$arity$1 = G__34539__1;
G__34539.cljs$core$IFn$_invoke$arity$2 = G__34539__2;
return G__34539;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24165__auto__ = s;
if(and__24165__auto__){
var G__34538 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__34538) : pred__$1.call(null,G__34538));
} else {
return and__24165__auto__;
}
})())){
var G__34540 = pred__$1;
var G__34541 = cljs.core.rest(s);
pred__$1 = G__34540;
coll__$1 = G__34541;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__34550 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34550) : f.call(null,G__34550));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__34553__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__34553 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__34554__i = 0, G__34554__a = new Array(arguments.length -  2);
while (G__34554__i < G__34554__a.length) {G__34554__a[G__34554__i] = arguments[G__34554__i + 2]; ++G__34554__i;}
  colls = new cljs.core.IndexedSeq(G__34554__a,0);
} 
return G__34553__delegate.call(this,c1,c2,colls);};
G__34553.cljs$lang$maxFixedArity = 2;
G__34553.cljs$lang$applyTo = (function (arglist__34555){
var c1 = cljs.core.first(arglist__34555);
arglist__34555 = cljs.core.next(arglist__34555);
var c2 = cljs.core.first(arglist__34555);
var colls = cljs.core.rest(arglist__34555);
return G__34553__delegate(c1,c2,colls);
});
G__34553.cljs$core$IFn$_invoke$arity$variadic = G__34553__delegate;
return G__34553;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__34556 = null;
if (arguments.length > 2) {
var G__34557__i = 0, G__34557__a = new Array(arguments.length -  2);
while (G__34557__i < G__34557__a.length) {G__34557__a[G__34557__i] = arguments[G__34557__i + 2]; ++G__34557__i;}
G__34556 = new cljs.core.IndexedSeq(G__34557__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__34556);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__34572 = null;
var G__34572__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34572__1 = (function (result){
var G__34565 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34565) : rf.call(null,G__34565));
});
var G__34572__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__34566 = result;
var G__34567 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34566,G__34567) : rf.call(null,G__34566,G__34567));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__34568 = sepr;
var G__34569 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34568,G__34569) : rf.call(null,G__34568,G__34569));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__34570 = result;
var G__34571 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34570,G__34571) : rf.call(null,G__34570,G__34571));
}
});
G__34572 = function(result,input){
switch(arguments.length){
case 0:
return G__34572__0.call(this);
case 1:
return G__34572__1.call(this,result);
case 2:
return G__34572__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34572.cljs$core$IFn$_invoke$arity$0 = G__34572__0;
G__34572.cljs$core$IFn$_invoke$arity$1 = G__34572__1;
G__34572.cljs$core$IFn$_invoke$arity$2 = G__34572__2;
return G__34572;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__34581__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__34581 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__34582__i = 0, G__34582__a = new Array(arguments.length -  1);
while (G__34582__i < G__34582__a.length) {G__34582__a[G__34582__i] = arguments[G__34582__i + 1]; ++G__34582__i;}
  colls = new cljs.core.IndexedSeq(G__34582__a,0);
} 
return G__34581__delegate.call(this,f,colls);};
G__34581.cljs$lang$maxFixedArity = 1;
G__34581.cljs$lang$applyTo = (function (arglist__34583){
var f = cljs.core.first(arglist__34583);
var colls = cljs.core.rest(arglist__34583);
return G__34581__delegate(f,colls);
});
G__34581.cljs$core$IFn$_invoke$arity$variadic = G__34581__delegate;
return G__34581;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__34584 = null;
if (arguments.length > 1) {
var G__34585__i = 0, G__34585__a = new Array(arguments.length -  1);
while (G__34585__i < G__34585__a.length) {G__34585__a[G__34585__i] = arguments[G__34585__i + 1]; ++G__34585__i;}
G__34584 = new cljs.core.IndexedSeq(G__34585__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__34584);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__34604 = null;
var G__34604__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34604__1 = (function (result){
var G__34598 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34598) : rf.call(null,G__34598));
});
var G__34604__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__34599 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34599) : pred.call(null,G__34599));
})())){
var G__34600 = result;
var G__34601 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34600,G__34601) : rf.call(null,G__34600,G__34601));
} else {
return result;
}
});
G__34604 = function(result,input){
switch(arguments.length){
case 0:
return G__34604__0.call(this);
case 1:
return G__34604__1.call(this,result);
case 2:
return G__34604__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34604.cljs$core$IFn$_invoke$arity$0 = G__34604__0;
G__34604.cljs$core$IFn$_invoke$arity$1 = G__34604__1;
G__34604.cljs$core$IFn$_invoke$arity$2 = G__34604__2;
return G__34604;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___34605 = size;
var i_34606 = (0);
while(true){
if((i_34606 < n__25062__auto___34605)){
if(cljs.core.truth_((function (){var G__34602 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34606);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34602) : pred.call(null,G__34602));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34606));
} else {
}

var G__34607 = (i_34606 + (1));
i_34606 = G__34607;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__34603 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34603) : pred.call(null,G__34603));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__34614 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__34614) : branch_QMARK_.call(null,G__34614));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__34615 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__34615) : children.call(null,G__34615));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__34616_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__34616_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__34619 = to;
if(G__34619){
var bit__24844__auto__ = (G__34619.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24844__auto__) || (G__34619.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__34620 = to;
if(G__34620){
var bit__24844__auto__ = (G__34620.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24844__auto__) || (G__34620.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__34622 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34622) : f.call(null,G__34622));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__34623__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__34623 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__34624__i = 0, G__34624__a = new Array(arguments.length -  4);
while (G__34624__i < G__34624__a.length) {G__34624__a[G__34624__i] = arguments[G__34624__i + 4]; ++G__34624__i;}
  colls = new cljs.core.IndexedSeq(G__34624__a,0);
} 
return G__34623__delegate.call(this,f,c1,c2,c3,colls);};
G__34623.cljs$lang$maxFixedArity = 4;
G__34623.cljs$lang$applyTo = (function (arglist__34625){
var f = cljs.core.first(arglist__34625);
arglist__34625 = cljs.core.next(arglist__34625);
var c1 = cljs.core.first(arglist__34625);
arglist__34625 = cljs.core.next(arglist__34625);
var c2 = cljs.core.first(arglist__34625);
arglist__34625 = cljs.core.next(arglist__34625);
var c3 = cljs.core.first(arglist__34625);
var colls = cljs.core.rest(arglist__34625);
return G__34623__delegate(f,c1,c2,c3,colls);
});
G__34623.cljs$core$IFn$_invoke$arity$variadic = G__34623__delegate;
return G__34623;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__34626 = null;
if (arguments.length > 4) {
var G__34627__i = 0, G__34627__a = new Array(arguments.length -  4);
while (G__34627__i < G__34627__a.length) {G__34627__a[G__34627__i] = arguments[G__34627__i + 4]; ++G__34627__i;}
G__34626 = new cljs.core.IndexedSeq(G__34627__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__34626);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__34629 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34629) : pred.call(null,G__34629));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__34644 = m__$1;
if(G__34644){
var bit__24851__auto__ = (G__34644.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24851__auto__) || (G__34644.cljs$core$ILookup$)){
return true;
} else {
if((!G__34644.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__34644);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__34644);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__34645 = sentinel;
var G__34646 = m__$2;
var G__34647 = cljs.core.next(ks__$1);
sentinel = G__34645;
m__$1 = G__34646;
ks__$1 = G__34647;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__34648,v){
var vec__34653 = p__34648;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34653,(0),null);
var ks = cljs.core.nthnext(vec__34653,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__34654,f){
var vec__34692 = p__34654;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34692,(0),null);
var ks = cljs.core.nthnext(vec__34692,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34693 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34693) : f.call(null,G__34693));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__34655,f,a){
var vec__34694 = p__34655;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34694,(0),null);
var ks = cljs.core.nthnext(vec__34694,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34695 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34696 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34695,G__34696) : f.call(null,G__34695,G__34696));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__34656,f,a,b){
var vec__34697 = p__34656;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34697,(0),null);
var ks = cljs.core.nthnext(vec__34697,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34698 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34699 = a;
var G__34700 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34698,G__34699,G__34700) : f.call(null,G__34698,G__34699,G__34700));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__34657,f,a,b,c){
var vec__34701 = p__34657;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34701,(0),null);
var ks = cljs.core.nthnext(vec__34701,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34702 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34703 = a;
var G__34704 = b;
var G__34705 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34702,G__34703,G__34704,G__34705) : f.call(null,G__34702,G__34703,G__34704,G__34705));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__34707__delegate = function (m,p__34658,f,a,b,c,args){
var vec__34706 = p__34658;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34706,(0),null);
var ks = cljs.core.nthnext(vec__34706,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__34707 = function (m,p__34658,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__34708__i = 0, G__34708__a = new Array(arguments.length -  6);
while (G__34708__i < G__34708__a.length) {G__34708__a[G__34708__i] = arguments[G__34708__i + 6]; ++G__34708__i;}
  args = new cljs.core.IndexedSeq(G__34708__a,0);
} 
return G__34707__delegate.call(this,m,p__34658,f,a,b,c,args);};
G__34707.cljs$lang$maxFixedArity = 6;
G__34707.cljs$lang$applyTo = (function (arglist__34709){
var m = cljs.core.first(arglist__34709);
arglist__34709 = cljs.core.next(arglist__34709);
var p__34658 = cljs.core.first(arglist__34709);
arglist__34709 = cljs.core.next(arglist__34709);
var f = cljs.core.first(arglist__34709);
arglist__34709 = cljs.core.next(arglist__34709);
var a = cljs.core.first(arglist__34709);
arglist__34709 = cljs.core.next(arglist__34709);
var b = cljs.core.first(arglist__34709);
arglist__34709 = cljs.core.next(arglist__34709);
var c = cljs.core.first(arglist__34709);
var args = cljs.core.rest(arglist__34709);
return G__34707__delegate(m,p__34658,f,a,b,c,args);
});
G__34707.cljs$core$IFn$_invoke$arity$variadic = G__34707__delegate;
return G__34707;
})()
;
cljs$core$update_in = function(m,p__34658,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__34658,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__34658,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__34658,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__34658,f,a,b,c);
default:
var G__34710 = null;
if (arguments.length > 6) {
var G__34711__i = 0, G__34711__a = new Array(arguments.length -  6);
while (G__34711__i < G__34711__a.length) {G__34711__a[G__34711__i] = arguments[G__34711__i + 6]; ++G__34711__i;}
G__34710 = new cljs.core.IndexedSeq(G__34711__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__34658,f,a,b,c, G__34710);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34722 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34722) : f.call(null,G__34722));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34723 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34724 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34723,G__34724) : f.call(null,G__34723,G__34724));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34725 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34726 = x;
var G__34727 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34725,G__34726,G__34727) : f.call(null,G__34725,G__34726,G__34727));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34728 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34729 = x;
var G__34730 = y;
var G__34731 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34728,G__34729,G__34730,G__34731) : f.call(null,G__34728,G__34729,G__34730,G__34731));
})());
});
var cljs$core$update__7 = (function() { 
var G__34732__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__34732 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__34733__i = 0, G__34733__a = new Array(arguments.length -  6);
while (G__34733__i < G__34733__a.length) {G__34733__a[G__34733__i] = arguments[G__34733__i + 6]; ++G__34733__i;}
  more = new cljs.core.IndexedSeq(G__34733__a,0);
} 
return G__34732__delegate.call(this,m,k,f,x,y,z,more);};
G__34732.cljs$lang$maxFixedArity = 6;
G__34732.cljs$lang$applyTo = (function (arglist__34734){
var m = cljs.core.first(arglist__34734);
arglist__34734 = cljs.core.next(arglist__34734);
var k = cljs.core.first(arglist__34734);
arglist__34734 = cljs.core.next(arglist__34734);
var f = cljs.core.first(arglist__34734);
arglist__34734 = cljs.core.next(arglist__34734);
var x = cljs.core.first(arglist__34734);
arglist__34734 = cljs.core.next(arglist__34734);
var y = cljs.core.first(arglist__34734);
arglist__34734 = cljs.core.next(arglist__34734);
var z = cljs.core.first(arglist__34734);
var more = cljs.core.rest(arglist__34734);
return G__34732__delegate(m,k,f,x,y,z,more);
});
G__34732.cljs$core$IFn$_invoke$arity$variadic = G__34732__delegate;
return G__34732;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__34735 = null;
if (arguments.length > 6) {
var G__34736__i = 0, G__34736__a = new Array(arguments.length -  6);
while (G__34736__i < G__34736__a.length) {G__34736__a[G__34736__i] = arguments[G__34736__i + 6]; ++G__34736__i;}
G__34735 = new cljs.core.IndexedSeq(G__34736__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__34735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__34737 = (ll - (5));
var G__34738 = r;
ll = G__34737;
ret = G__34738;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__34743 = cljs.core.pv_aget(node,(0));
var G__34744 = (level - (5));
node = G__34743;
level = G__34744;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__34745 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__34746 = (level - (5));
node = G__34745;
level = G__34746;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__34756 = init__$2;
var G__34757 = (j + i);
var G__34758 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34756,G__34757,G__34758) : f.call(null,G__34756,G__34757,G__34758));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__34769 = (j + (1));
var G__34770 = init__$3;
j = G__34769;
init__$2 = G__34770;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34759 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34759) : cljs.core.deref.call(null,G__34759));
} else {
var G__34771 = (i + len);
var G__34772 = init__$2;
i = G__34771;
init__$1 = G__34772;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__34760 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__34760) : cljs.core.tv_editable_root.call(null,G__34760));
})(),(function (){var G__34761 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__34761) : cljs.core.tv_editable_tail.call(null,G__34761));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__34762 = init__$2;
var G__34763 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34762,G__34763) : f.call(null,G__34762,G__34763));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__34773 = (j + (1));
var G__34774 = init__$3;
j = G__34773;
init__$2 = G__34774;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34764 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34764) : cljs.core.deref.call(null,G__34764));
} else {
var G__34775 = (i + len);
var G__34776 = init__$2;
i = G__34775;
init__$1 = G__34776;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__34765 = coll__$1;
var G__34766 = cljs.core.first_array_for_longvec(coll__$1);
var G__34767 = (0);
var G__34768 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34765,G__34766,G__34767,G__34768) : cljs.core.chunked_seq.call(null,G__34765,G__34766,G__34767,G__34768));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25062__auto___34777 = len;
var i_34778 = (0);
while(true){
if((i_34778 < n__25062__auto___34777)){
(new_tail[i_34778] = (self__.tail[i_34778]));

var G__34779 = (i_34778 + (1));
i_34778 = G__34779;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__34780 = null;
var G__34780__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__34780__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__34780 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34780__2.call(this,self__,k);
case 3:
return G__34780__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34780.cljs$core$IFn$_invoke$arity$2 = G__34780__2;
G__34780.cljs$core$IFn$_invoke$arity$3 = G__34780__3;
return G__34780;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args34755){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34755)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__34781 = (i + (1));
var G__34782 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__34781;
out = G__34782;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34783__i = 0, G__34783__a = new Array(arguments.length -  0);
while (G__34783__i < G__34783__a.length) {G__34783__a[G__34783__i] = arguments[G__34783__i + 0]; ++G__34783__i;}
  args = new cljs.core.IndexedSeq(G__34783__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__34784){
var args = cljs.core.seq(arglist__34784);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__34785 = self__.vec;
var G__34786 = self__.node;
var G__34787 = self__.i;
var G__34788 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34785,G__34786,G__34787,G__34788) : cljs.core.chunked_seq.call(null,G__34785,G__34786,G__34787,G__34788));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__34789 = self__.vec;
var G__34790 = (self__.i + self__.off);
var G__34791 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34789,G__34790,G__34791) : cljs.core.subvec.call(null,G__34789,G__34790,G__34791));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__34792 = self__.vec;
var G__34793 = (self__.i + self__.off);
var G__34794 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34792,G__34793,G__34794) : cljs.core.subvec.call(null,G__34792,G__34793,G__34794));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__34795 = self__.vec;
var G__34796 = self__.node;
var G__34797 = self__.i;
var G__34798 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34795,G__34796,G__34797,G__34798) : cljs.core.chunked_seq.call(null,G__34795,G__34796,G__34797,G__34798));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__34799 = self__.vec;
var G__34800 = cljs.core.unchecked_array_for(self__.vec,end);
var G__34801 = end;
var G__34802 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34799,G__34800,G__34801,G__34802) : cljs.core.chunked_seq.call(null,G__34799,G__34800,G__34801,G__34802));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__34803 = self__.vec;
var G__34804 = self__.node;
var G__34805 = self__.i;
var G__34806 = self__.off;
var G__34807 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__34803,G__34804,G__34805,G__34806,G__34807) : cljs.core.chunked_seq.call(null,G__34803,G__34804,G__34805,G__34806,G__34807));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__34808 = self__.vec;
var G__34809 = cljs.core.unchecked_array_for(self__.vec,end);
var G__34810 = end;
var G__34811 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34808,G__34809,G__34810,G__34811) : cljs.core.chunked_seq.call(null,G__34808,G__34809,G__34810,G__34811));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__34813 = init__$1;
var G__34814 = j;
var G__34815 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34813,G__34814,G__34815) : f.call(null,G__34813,G__34814,G__34815));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34816 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34816) : cljs.core.deref.call(null,G__34816));
} else {
var G__34838 = (i + (1));
var G__34839 = (j + (1));
var G__34840 = init__$2;
i = G__34838;
j = G__34839;
init__$1 = G__34840;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__34817 = self__.meta;
var G__34818 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__34819 = self__.start;
var G__34820 = (function (){var x__24489__auto__ = self__.end;
var y__24490__auto__ = (v_pos + (1));
return ((x__24489__auto__ > y__24490__auto__) ? x__24489__auto__ : y__24490__auto__);
})();
var G__34821 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34817,G__34818,G__34819,G__34820,G__34821) : cljs.core.build_subvec.call(null,G__34817,G__34818,G__34819,G__34820,G__34821));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__34822 = self__.meta;
var G__34823 = self__.v;
var G__34824 = self__.start;
var G__34825 = (self__.end - (1));
var G__34826 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34822,G__34823,G__34824,G__34825,G__34826) : cljs.core.build_subvec.call(null,G__34822,G__34823,G__34824,G__34825,G__34826));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__34828 = meta__$1;
var G__34829 = self__.v;
var G__34830 = self__.start;
var G__34831 = self__.end;
var G__34832 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34828,G__34829,G__34830,G__34831,G__34832) : cljs.core.build_subvec.call(null,G__34828,G__34829,G__34830,G__34831,G__34832));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__34833 = self__.meta;
var G__34834 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__34835 = self__.start;
var G__34836 = (self__.end + (1));
var G__34837 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34833,G__34834,G__34835,G__34836,G__34837) : cljs.core.build_subvec.call(null,G__34833,G__34834,G__34835,G__34836,G__34837));
});

cljs.core.Subvec.prototype.call = (function() {
var G__34841 = null;
var G__34841__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__34841__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__34841 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34841__2.call(this,self__,k);
case 3:
return G__34841__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34841.cljs$core$IFn$_invoke$arity$2 = G__34841__2;
G__34841.cljs$core$IFn$_invoke$arity$3 = G__34841__3;
return G__34841;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args34812){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34812)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__34842 = meta;
var G__34843 = v.v;
var G__34844 = (v.start + start);
var G__34845 = (v.start + end);
var G__34846 = __hash;
meta = G__34842;
v = G__34843;
start = G__34844;
end = G__34845;
__hash = G__34846;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj34853 = {};
return obj34853;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__34861 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__34862 = (level - (5));
node = G__34861;
level = G__34862;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__34866 = null;
var G__34866__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34866__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34866 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34866__2.call(this,self__,k);
case 3:
return G__34866__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34866.cljs$core$IFn$_invoke$arity$2 = G__34866__2;
G__34866.cljs$core$IFn$_invoke$arity$3 = G__34866__3;
return G__34866;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args34863){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34863)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24177__auto__ = self__.front;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24177__auto__ = self__.rear;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__34867 = (i + incr);
i = G__34867;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__34868 = (i + (1));
var G__34869 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__34868;
out = G__34869;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj34873 = {};
return obj34873;
})();
var l = ks.length;
var i_34874 = (0);
while(true){
if((i_34874 < l)){
var k_34875 = (ks[i_34874]);
(new_obj[k_34875] = (obj[k_34875]));

var G__34876 = (i_34874 + (1));
i_34874 = G__34876;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24165__auto__ = (function (){var G__34880 = k;
return goog.isString(G__34880);
})();
if(cljs.core.truth_(and__24165__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24165__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__34881 = init__$1;
var G__34882 = k;
var G__34883 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34881,G__34882,G__34883) : f.call(null,G__34881,G__34882,G__34883));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34884 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34884) : cljs.core.deref.call(null,G__34884));
} else {
var G__34890 = cljs.core.rest(keys__$1);
var G__34891 = init__$2;
keys__$1 = G__34890;
init__$1 = G__34891;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24165__auto__ = (function (){var G__34886 = k;
return goog.isString(G__34886);
})();
if(cljs.core.truth_(and__24165__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24165__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__34887 = k;
return goog.isString(G__34887);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24165__auto__ = (function (){var G__34889 = k;
return goog.isString(G__34889);
})();
if(cljs.core.truth_(and__24165__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24165__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__34877_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__34877_SHARP_,(self__.strobj[p1__34877_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__34892 = null;
var G__34892__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34892__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34892 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34892__2.call(this,self__,k);
case 3:
return G__34892__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34892.cljs$core$IFn$_invoke$arity$2 = G__34892__2;
G__34892.cljs$core$IFn$_invoke$arity$3 = G__34892__3;
return G__34892;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args34878){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34878)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj34894 = {};
return obj34894;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__34895 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34895,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34895,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__34896 = (i + (2));
i = G__34896;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__34897 = (i + (2));
i = G__34897;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__34898 = (i + (2));
i = G__34898;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__34899 = (i + (2));
i = G__34899;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__34900 = (i + (2));
i = G__34900;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24177__auto__ = (function (){var G__34904 = k;
return goog.isString(G__34904);
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_34905 = (0);
while(true){
if((i_34905 < l)){
(narr[i_34905] = (arr[i_34905]));

var G__34906 = (i_34905 + (1));
i_34905 = G__34906;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34908 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__34908) : cljs.core.keys.call(null,G__34908));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34909 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__34909) : cljs.core.vals.call(null,G__34909));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34910 = cljs.core.seq(coll);
var chunk__34911 = null;
var count__34912 = (0);
var i__34913 = (0);
while(true){
if((i__34913 < count__34912)){
var vec__34914 = chunk__34911.cljs$core$IIndexed$_nth$arity$2(null,i__34913);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34914,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34914,(1),null);
var G__34915_34928 = v;
var G__34916_34929 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34915_34928,G__34916_34929) : f.call(null,G__34915_34928,G__34916_34929));

var G__34930 = seq__34910;
var G__34931 = chunk__34911;
var G__34932 = count__34912;
var G__34933 = (i__34913 + (1));
seq__34910 = G__34930;
chunk__34911 = G__34931;
count__34912 = G__34932;
i__34913 = G__34933;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34910);
if(temp__4126__auto__){
var seq__34910__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34910__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__34910__$1);
var G__34934 = cljs.core.chunk_rest(seq__34910__$1);
var G__34935 = c__24962__auto__;
var G__34936 = cljs.core.count(c__24962__auto__);
var G__34937 = (0);
seq__34910 = G__34934;
chunk__34911 = G__34935;
count__34912 = G__34936;
i__34913 = G__34937;
continue;
} else {
var vec__34917 = cljs.core.first(seq__34910__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34917,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34917,(1),null);
var G__34918_34938 = v;
var G__34919_34939 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34918_34938,G__34919_34939) : f.call(null,G__34918_34938,G__34919_34939));

var G__34940 = cljs.core.next(seq__34910__$1);
var G__34941 = null;
var G__34942 = (0);
var G__34943 = (0);
seq__34910 = G__34940;
chunk__34911 = G__34941;
count__34912 = G__34942;
i__34913 = G__34943;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__34920 = init__$1;
var G__34921 = (self__.arr[i]);
var G__34922 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34920,G__34921,G__34922) : f.call(null,G__34920,G__34921,G__34922));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34923 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34923) : cljs.core.deref.call(null,G__34923));
} else {
var G__34944 = (i + (2));
var G__34945 = init__$2;
i = G__34944;
init__$1 = G__34945;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__34924 = other;
if(G__34924){
var bit__24844__auto__ = (G__34924.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24844__auto__) || (G__34924.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__34946 = (i + (2));
i = G__34946;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj34926 = {};
return obj34926;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__34947 = (s + (2));
var G__34948 = d;
s = G__34947;
d = G__34948;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__34949 = (s + (2));
var G__34950 = (d + (2));
s = G__34949;
d = G__34950;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__34927 = cljs.core.aclone(self__.arr);
(G__34927[(idx + (1))] = v);

return G__34927;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34951 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34952 = cljs.core.next(es);
ret = G__34951;
es = G__34952;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__34953 = null;
var G__34953__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34953__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34953 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34953__2.call(this,self__,k);
case 3:
return G__34953__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34953.cljs$core$IFn$_invoke$arity$2 = G__34953__2;
G__34953.cljs$core$IFn$_invoke$arity$3 = G__34953__3;
return G__34953;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args34907){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34907)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__34954 = (i + (2));
var G__34955 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__34954;
ret = G__34955;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__34956_34964 = self__.arr;
G__34956_34964.pop();

G__34956_34964.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__34957 = self__.len;
var G__34958 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__34957,G__34958) : cljs.core.array__GT_transient_hash_map.call(null,G__34957,G__34958));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__34959 = o;
if(G__34959){
var bit__24851__auto__ = (G__34959.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24851__auto__) || (G__34959.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__34959.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34959);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34959);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__34960 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34960) : cljs.core.key.call(null,G__34960));
})(),(function (){var G__34961 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34961) : cljs.core.val.call(null,G__34961));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__34965 = cljs.core.next(es);
var G__34966 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__34962 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34962) : cljs.core.key.call(null,G__34962));
})(),(function (){var G__34963 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34963) : cljs.core.val.call(null,G__34963));
})());
es = G__34965;
tcoll__$2 = G__34966;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__34967 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__34968 = (i + (2));
out = G__34967;
i = G__34968;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__34971 = cljs.core.aclone(arr);
(G__34971[i] = a);

return G__34971;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__34972 = cljs.core.aclone(arr);
(G__34972[i] = a);

(G__34972[j] = b);

return G__34972;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__34977 = init__$1;
var G__34978 = k;
var G__34979 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34977,G__34978,G__34979) : f.call(null,G__34977,G__34978,G__34979));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34980 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34980) : cljs.core.deref.call(null,G__34980));
} else {
var G__34981 = (i + (2));
var G__34982 = init__$2;
i = G__34981;
init__$1 = G__34982;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__34983 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__34983) : cljs.core.create_inode_seq.call(null,G__34983));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_34997 = (0);
var j_34998 = (0);
while(true){
if((i_34997 < (32))){
if((((self__.bitmap >>> i_34997) & (1)) === (0))){
var G__34999 = (i_34997 + (1));
var G__35000 = j_34998;
i_34997 = G__34999;
j_34998 = G__35000;
continue;
} else {
(nodes[i_34997] = ((!(((self__.arr[j_34998]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_34998])),(self__.arr[j_34998]),(self__.arr[(j_34998 + (1))]),added_leaf_QMARK_):(self__.arr[(j_34998 + (1))])));

var G__35001 = (i_34997 + (1));
var G__35002 = (j_34998 + (2));
i_34997 = G__35001;
j_34998 = G__35002;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__34984 = edit__$1;
var G__34985 = (shift + (5));
var G__34986 = key_or_nil;
var G__34987 = val_or_node;
var G__34988 = hash;
var G__34989 = key;
var G__34990 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__34984,G__34985,G__34986,G__34987,G__34988,G__34989,G__34990) : cljs.core.create_node.call(null,G__34984,G__34985,G__34986,G__34987,G__34988,G__34989,G__34990));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_35003 = (0);
var j_35004 = (0);
while(true){
if((i_35003 < (32))){
if((((self__.bitmap >>> i_35003) & (1)) === (0))){
var G__35005 = (i_35003 + (1));
var G__35006 = j_35004;
i_35003 = G__35005;
j_35004 = G__35006;
continue;
} else {
(nodes[i_35003] = ((!(((self__.arr[j_35004]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_35004])),(self__.arr[j_35004]),(self__.arr[(j_35004 + (1))]),added_leaf_QMARK_):(self__.arr[(j_35004 + (1))])));

var G__35007 = (i_35003 + (1));
var G__35008 = (j_35004 + (2));
i_35003 = G__35007;
j_35004 = G__35008;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__34991 = (shift + (5));
var G__34992 = key_or_nil;
var G__34993 = val_or_node;
var G__34994 = hash;
var G__34995 = key;
var G__34996 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__34991,G__34992,G__34993,G__34994,G__34995,G__34996) : cljs.core.create_node.call(null,G__34991,G__34992,G__34993,G__34994,G__34995,G__34996));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__35009 = (i + (1));
var G__35010 = (j + (2));
var G__35011 = (bitmap | ((1) << i));
i = G__35009;
j = G__35010;
bitmap = G__35011;
continue;
} else {
var G__35012 = (i + (1));
var G__35013 = j;
var G__35014 = bitmap;
i = G__35012;
j = G__35013;
bitmap = G__35014;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35015 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__35015) : cljs.core.create_array_node_seq.call(null,G__35015));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35016 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35016) : cljs.core.deref.call(null,G__35016));
} else {
var G__35017 = (i + (1));
var G__35018 = init__$2;
i = G__35017;
init__$1 = G__35018;
continue;
}
} else {
var G__35019 = (i + (1));
var G__35020 = init__$1;
i = G__35019;
init__$1 = G__35020;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__35021 = (i + (2));
i = G__35021;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35022 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__35022) : cljs.core.create_inode_seq.call(null,G__35022));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__35023 = self__.nodes;
var G__35024 = (self__.i + (2));
var G__35025 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__35023,G__35024,G__35025) : cljs.core.create_inode_seq.call(null,G__35023,G__35024,G__35025));
} else {
var G__35026 = self__.nodes;
var G__35027 = self__.i;
var G__35028 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__35026,G__35027,G__35028) : cljs.core.create_inode_seq.call(null,G__35026,G__35027,G__35028));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__35032 = (j + (2));
j = G__35032;
continue;
}
} else {
var G__35033 = (j + (2));
j = G__35033;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__35034 = null;
var G__35035 = self__.nodes;
var G__35036 = self__.i;
var G__35037 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__35034,G__35035,G__35036,G__35037) : cljs.core.create_array_node_seq.call(null,G__35034,G__35035,G__35036,G__35037));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__35042 = (j + (1));
j = G__35042;
continue;
}
} else {
var G__35043 = (j + (1));
j = G__35043;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35045 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35045) : cljs.core.keys.call(null,G__35045));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35046 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35046) : cljs.core.vals.call(null,G__35046));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35047 = cljs.core.seq(coll);
var chunk__35048 = null;
var count__35049 = (0);
var i__35050 = (0);
while(true){
if((i__35050 < count__35049)){
var vec__35051 = chunk__35048.cljs$core$IIndexed$_nth$arity$2(null,i__35050);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35051,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35051,(1),null);
var G__35052_35063 = v;
var G__35053_35064 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35052_35063,G__35053_35064) : f.call(null,G__35052_35063,G__35053_35064));

var G__35065 = seq__35047;
var G__35066 = chunk__35048;
var G__35067 = count__35049;
var G__35068 = (i__35050 + (1));
seq__35047 = G__35065;
chunk__35048 = G__35066;
count__35049 = G__35067;
i__35050 = G__35068;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35047);
if(temp__4126__auto__){
var seq__35047__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35047__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35047__$1);
var G__35069 = cljs.core.chunk_rest(seq__35047__$1);
var G__35070 = c__24962__auto__;
var G__35071 = cljs.core.count(c__24962__auto__);
var G__35072 = (0);
seq__35047 = G__35069;
chunk__35048 = G__35070;
count__35049 = G__35071;
i__35050 = G__35072;
continue;
} else {
var vec__35054 = cljs.core.first(seq__35047__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35054,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35054,(1),null);
var G__35055_35073 = v;
var G__35056_35074 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35055_35073,G__35056_35074) : f.call(null,G__35055_35073,G__35056_35074));

var G__35075 = cljs.core.next(seq__35047__$1);
var G__35076 = null;
var G__35077 = (0);
var G__35078 = (0);
seq__35047 = G__35075;
chunk__35048 = G__35076;
count__35049 = G__35077;
i__35050 = G__35078;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__35057 = init;
var G__35058 = null;
var G__35059 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35057,G__35058,G__35059) : f.call(null,G__35057,G__35058,G__35059));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__35060 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35060) : cljs.core.deref.call(null,G__35060));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj35062 = {};
return obj35062;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__35079 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__35080 = cljs.core.next(es);
ret = G__35079;
es = G__35080;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__35081 = null;
var G__35081__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35081__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35081 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35081__2.call(this,self__,k);
case 3:
return G__35081__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35081.cljs$core$IFn$_invoke$arity$2 = G__35081__2;
G__35081.cljs$core$IFn$_invoke$arity$3 = G__35081__3;
return G__35081;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args35044){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35044)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__35082 = (i + (2));
var G__35083 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__35082;
ret = G__35083;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__35084 = (i + (1));
var G__35085 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__35084;
out = G__35085;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__35086 = o;
if(G__35086){
var bit__24851__auto__ = (G__35086.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24851__auto__) || (G__35086.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__35086.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35086);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35086);
}
})()){
return tcoll.assoc_BANG_((function (){var G__35087 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35087) : cljs.core.key.call(null,G__35087));
})(),(function (){var G__35088 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35088) : cljs.core.val.call(null,G__35088));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__35091 = cljs.core.next(es);
var G__35092 = tcoll__$1.assoc_BANG_((function (){var G__35089 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35089) : cljs.core.key.call(null,G__35089));
})(),(function (){var G__35090 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35090) : cljs.core.val.call(null,G__35090));
})());
es = G__35091;
tcoll__$1 = G__35092;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__35093 = ((ascending_QMARK_)?t.left:t.right);
var G__35094 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__35093;
stack__$1 = G__35094;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__35107 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35107) : cljs.core.deref.call(null,G__35107));
} else {
var init__$2 = (function (){var G__35108 = init__$1;
var G__35109 = node.key;
var G__35110 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35108,G__35109,G__35110) : f.call(null,G__35108,G__35109,G__35110));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35111 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35111) : cljs.core.deref.call(null,G__35111));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__35112 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35112) : cljs.core.deref.call(null,G__35112));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__35114 = null;
var G__35114__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35114__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35114 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35114__2.call(this,self__,k);
case 3:
return G__35114__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35114.cljs$core$IFn$_invoke$arity$2 = G__35114__2;
G__35114.cljs$core$IFn$_invoke$arity$3 = G__35114__3;
return G__35114;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args35113){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35113)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__35116 = null;
var G__35116__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35116__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35116 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35116__2.call(this,self__,k);
case 3:
return G__35116__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35116.cljs$core$IFn$_invoke$arity$2 = G__35116__2;
G__35116.cljs$core$IFn$_invoke$arity$3 = G__35116__3;
return G__35116;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args35115){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35115)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__35129 = k;
var G__35130 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35129,G__35130) : comp.call(null,G__35129,G__35130));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__35149 = k;
var G__35150 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35149,G__35150) : comp.call(null,G__35149,G__35150));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__35161 = k;
var G__35162 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35161,G__35162) : comp.call(null,G__35161,G__35162));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35164 = cljs.core.seq(coll);
var chunk__35165 = null;
var count__35166 = (0);
var i__35167 = (0);
while(true){
if((i__35167 < count__35166)){
var vec__35168 = chunk__35165.cljs$core$IIndexed$_nth$arity$2(null,i__35167);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35168,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35168,(1),null);
var G__35169_35181 = v;
var G__35170_35182 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35169_35181,G__35170_35182) : f.call(null,G__35169_35181,G__35170_35182));

var G__35183 = seq__35164;
var G__35184 = chunk__35165;
var G__35185 = count__35166;
var G__35186 = (i__35167 + (1));
seq__35164 = G__35183;
chunk__35165 = G__35184;
count__35166 = G__35185;
i__35167 = G__35186;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35164);
if(temp__4126__auto__){
var seq__35164__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35164__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35164__$1);
var G__35187 = cljs.core.chunk_rest(seq__35164__$1);
var G__35188 = c__24962__auto__;
var G__35189 = cljs.core.count(c__24962__auto__);
var G__35190 = (0);
seq__35164 = G__35187;
chunk__35165 = G__35188;
count__35166 = G__35189;
i__35167 = G__35190;
continue;
} else {
var vec__35171 = cljs.core.first(seq__35164__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35171,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35171,(1),null);
var G__35172_35191 = v;
var G__35173_35192 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35172_35191,G__35173_35192) : f.call(null,G__35172_35191,G__35173_35192));

var G__35193 = cljs.core.next(seq__35164__$1);
var G__35194 = null;
var G__35195 = (0);
var G__35196 = (0);
seq__35164 = G__35193;
chunk__35165 = G__35194;
count__35166 = G__35195;
i__35167 = G__35196;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35174 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35174) : cljs.core.keys.call(null,G__35174));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35175 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35175) : cljs.core.vals.call(null,G__35175));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__35176 = k;
var G__35177 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__35176,G__35177) : self__.comp.call(null,G__35176,G__35177));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__35197 = t.left;
t = G__35197;
continue;
} else {
var G__35198 = t.right;
t = G__35198;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__35199 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__35200 = cljs.core.next(es);
ret = G__35199;
es = G__35200;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__35201 = null;
var G__35201__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35201__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35201 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35201__2.call(this,self__,k);
case 3:
return G__35201__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35201.cljs$core$IFn$_invoke$arity$2 = G__35201__2;
G__35201.cljs$core$IFn$_invoke$arity$3 = G__35201__3;
return G__35201;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args35163){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35163)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__35178 = k;
var G__35179 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__35178,G__35179) : self__.comp.call(null,G__35178,G__35179));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__35202 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__35203 = t.left;
stack = G__35202;
t = G__35203;
continue;
} else {
var G__35204 = stack;
var G__35205 = t.right;
stack = G__35204;
t = G__35205;
continue;
}
} else {
if((c > (0))){
var G__35206 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__35207 = t.right;
stack = G__35206;
t = G__35207;
continue;
} else {
var G__35208 = stack;
var G__35209 = t.left;
stack = G__35208;
t = G__35209;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__35180 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35180) : cljs.core.key.call(null,G__35180));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__35210 = cljs.core.nnext(in$);
var G__35211 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__35210;
out = G__35211;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35212__i = 0, G__35212__a = new Array(arguments.length -  0);
while (G__35212__i < G__35212__a.length) {G__35212__a[G__35212__i] = arguments[G__35212__i + 0]; ++G__35212__i;}
  keyvals = new cljs.core.IndexedSeq(G__35212__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__35213){
var keyvals = cljs.core.seq(arglist__35213);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35214__i = 0, G__35214__a = new Array(arguments.length -  0);
while (G__35214__i < G__35214__a.length) {G__35214__a[G__35214__i] = arguments[G__35214__i + 0]; ++G__35214__i;}
  keyvals = new cljs.core.IndexedSeq(G__35214__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__35215){
var keyvals = cljs.core.seq(arglist__35215);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj35219 = {};
return obj35219;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__35220 = cljs.core.nnext(kvs);
kvs = G__35220;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35221__i = 0, G__35221__a = new Array(arguments.length -  0);
while (G__35221__i < G__35221__a.length) {G__35221__a[G__35221__i] = arguments[G__35221__i + 0]; ++G__35221__i;}
  keyvals = new cljs.core.IndexedSeq(G__35221__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__35222){
var keyvals = cljs.core.seq(arglist__35222);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__35223 = cljs.core.nnext(in$);
var G__35224 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__35223;
out = G__35224;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35225__i = 0, G__35225__a = new Array(arguments.length -  0);
while (G__35225__i < G__35225__a.length) {G__35225__a[G__35225__i] = arguments[G__35225__i + 0]; ++G__35225__i;}
  keyvals = new cljs.core.IndexedSeq(G__35225__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__35226){
var keyvals = cljs.core.seq(arglist__35226);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__35227 = cljs.core.nnext(in$);
var G__35228 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__35227;
out = G__35228;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__35229__i = 0, G__35229__a = new Array(arguments.length -  1);
while (G__35229__i < G__35229__a.length) {G__35229__a[G__35229__i] = arguments[G__35229__i + 1]; ++G__35229__i;}
  keyvals = new cljs.core.IndexedSeq(G__35229__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__35230){
var comparator = cljs.core.first(arglist__35230);
var keyvals = cljs.core.rest(arglist__35230);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35231 = self__.mseq;
if(G__35231){
var bit__24851__auto__ = (G__35231.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24851__auto__) || (G__35231.cljs$core$INext$)){
return true;
} else {
if((!G__35231.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35231);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35231);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35232 = self__.mseq;
if(G__35232){
var bit__24851__auto__ = (G__35232.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24851__auto__) || (G__35232.cljs$core$INext$)){
return true;
} else {
if((!G__35232.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35232);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35232);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35233 = self__.mseq;
if(G__35233){
var bit__24851__auto__ = (G__35233.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24851__auto__) || (G__35233.cljs$core$INext$)){
return true;
} else {
if((!G__35233.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35233);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35233);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35234 = self__.mseq;
if(G__35234){
var bit__24851__auto__ = (G__35234.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24851__auto__) || (G__35234.cljs$core$INext$)){
return true;
} else {
if((!G__35234.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35234);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35234);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__35235_SHARP_,p2__35236_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24177__auto__ = p1__35235_SHARP_;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__35236_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__35237__i = 0, G__35237__a = new Array(arguments.length -  0);
while (G__35237__i < G__35237__a.length) {G__35237__a[G__35237__i] = arguments[G__35237__i + 0]; ++G__35237__i;}
  maps = new cljs.core.IndexedSeq(G__35237__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__35238){
var maps = cljs.core.seq(arglist__35238);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35241 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35242 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35241,G__35242) : f.call(null,G__35241,G__35242));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24177__auto__ = m1;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__35243__i = 0, G__35243__a = new Array(arguments.length -  1);
while (G__35243__i < G__35243__a.length) {G__35243__a[G__35243__i] = arguments[G__35243__i + 1]; ++G__35243__i;}
  maps = new cljs.core.IndexedSeq(G__35243__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__35244){
var f = cljs.core.first(arglist__35244);
var maps = cljs.core.rest(arglist__35244);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$cljs$core_SLASH_not_DASH_found);
var G__35245 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$cljs$core_SLASH_not_DASH_found))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__35246 = cljs.core.next(keys);
ret = G__35245;
keys = G__35246;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35249 = cljs.core.seq(coll);
var chunk__35250 = null;
var count__35251 = (0);
var i__35252 = (0);
while(true){
if((i__35252 < count__35251)){
var vec__35253 = chunk__35250.cljs$core$IIndexed$_nth$arity$2(null,i__35252);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35253,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35253,(1),null);
var G__35254_35259 = v;
var G__35255_35260 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35254_35259,G__35255_35260) : f.call(null,G__35254_35259,G__35255_35260));

var G__35261 = seq__35249;
var G__35262 = chunk__35250;
var G__35263 = count__35251;
var G__35264 = (i__35252 + (1));
seq__35249 = G__35261;
chunk__35250 = G__35262;
count__35251 = G__35263;
i__35252 = G__35264;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35249);
if(temp__4126__auto__){
var seq__35249__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35249__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35249__$1);
var G__35265 = cljs.core.chunk_rest(seq__35249__$1);
var G__35266 = c__24962__auto__;
var G__35267 = cljs.core.count(c__24962__auto__);
var G__35268 = (0);
seq__35249 = G__35265;
chunk__35250 = G__35266;
count__35251 = G__35267;
i__35252 = G__35268;
continue;
} else {
var vec__35256 = cljs.core.first(seq__35249__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35256,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35256,(1),null);
var G__35257_35269 = v;
var G__35258_35270 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35257_35269,G__35258_35270) : f.call(null,G__35257_35269,G__35258_35270));

var G__35271 = cljs.core.next(seq__35249__$1);
var G__35272 = null;
var G__35273 = (0);
var G__35274 = (0);
seq__35249 = G__35271;
chunk__35250 = G__35272;
count__35251 = G__35273;
i__35252 = G__35274;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__35247_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__35247_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__35275 = null;
var G__35275__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35275__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35275 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35275__2.call(this,self__,k);
case 3:
return G__35275__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35275.cljs$core$IFn$_invoke$arity$2 = G__35275__2;
G__35275.cljs$core$IFn$_invoke$arity$3 = G__35275__3;
return G__35275;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args35248){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35248)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__35276 = (i + (1));
var G__35277 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__35276;
out = G__35277;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__35278 = (i + (1));
var G__35279 = cljs.core._conj_BANG_(out,(items[i]));
i = G__35278;
out = G__35279;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__35281 = null;
var G__35281__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__35281__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__35281 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35281__2.call(this,self__,k);
case 3:
return G__35281__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35281.cljs$core$IFn$_invoke$arity$2 = G__35281__2;
G__35281.cljs$core$IFn$_invoke$arity$3 = G__35281__3;
return G__35281;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args35280){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35280)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35284 = cljs.core.seq(coll);
var chunk__35285 = null;
var count__35286 = (0);
var i__35287 = (0);
while(true){
if((i__35287 < count__35286)){
var vec__35288 = chunk__35285.cljs$core$IIndexed$_nth$arity$2(null,i__35287);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35288,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35288,(1),null);
var G__35289_35294 = v;
var G__35290_35295 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35289_35294,G__35290_35295) : f.call(null,G__35289_35294,G__35290_35295));

var G__35296 = seq__35284;
var G__35297 = chunk__35285;
var G__35298 = count__35286;
var G__35299 = (i__35287 + (1));
seq__35284 = G__35296;
chunk__35285 = G__35297;
count__35286 = G__35298;
i__35287 = G__35299;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35284);
if(temp__4126__auto__){
var seq__35284__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35284__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35284__$1);
var G__35300 = cljs.core.chunk_rest(seq__35284__$1);
var G__35301 = c__24962__auto__;
var G__35302 = cljs.core.count(c__24962__auto__);
var G__35303 = (0);
seq__35284 = G__35300;
chunk__35285 = G__35301;
count__35286 = G__35302;
i__35287 = G__35303;
continue;
} else {
var vec__35291 = cljs.core.first(seq__35284__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35291,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35291,(1),null);
var G__35292_35304 = v;
var G__35293_35305 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35292_35304,G__35293_35305) : f.call(null,G__35292_35304,G__35293_35305));

var G__35306 = cljs.core.next(seq__35284__$1);
var G__35307 = null;
var G__35308 = (0);
var G__35309 = (0);
seq__35284 = G__35306;
chunk__35285 = G__35307;
count__35286 = G__35308;
i__35287 = G__35309;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__35282_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__35282_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__35310 = null;
var G__35310__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35310__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35310 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35310__2.call(this,self__,k);
case 3:
return G__35310__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35310.cljs$core$IFn$_invoke$arity$2 = G__35310__2;
G__35310.cljs$core$IFn$_invoke$arity$3 = G__35310__3;
return G__35310;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args35283){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35283)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25056__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25056__auto__.length)){
var G__35311 = (i + (1));
var G__35312 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__35311;
res = G__35312;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__35313 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__35314 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__35313;
out = G__35314;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__35315__delegate = function (keys){
return cljs.core.set(keys);
};
var G__35315 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__35316__i = 0, G__35316__a = new Array(arguments.length -  0);
while (G__35316__i < G__35316__a.length) {G__35316__a[G__35316__i] = arguments[G__35316__i + 0]; ++G__35316__i;}
  keys = new cljs.core.IndexedSeq(G__35316__a,0);
} 
return G__35315__delegate.call(this,keys);};
G__35315.cljs$lang$maxFixedArity = 0;
G__35315.cljs$lang$applyTo = (function (arglist__35317){
var keys = cljs.core.seq(arglist__35317);
return G__35315__delegate(keys);
});
G__35315.cljs$core$IFn$_invoke$arity$variadic = G__35315__delegate;
return G__35315;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__35318 = null;
if (arguments.length > 0) {
var G__35319__i = 0, G__35319__a = new Array(arguments.length -  0);
while (G__35319__i < G__35319__a.length) {G__35319__a[G__35319__i] = arguments[G__35319__i + 0]; ++G__35319__i;}
G__35318 = new cljs.core.IndexedSeq(G__35319__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__35318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__35320__i = 0, G__35320__a = new Array(arguments.length -  0);
while (G__35320__i < G__35320__a.length) {G__35320__a[G__35320__i] = arguments[G__35320__i + 0]; ++G__35320__i;}
  keys = new cljs.core.IndexedSeq(G__35320__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__35321){
var keys = cljs.core.seq(arglist__35321);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__35322__i = 0, G__35322__a = new Array(arguments.length -  1);
while (G__35322__i < G__35322__a.length) {G__35322__a[G__35322__i] = arguments[G__35322__i + 1]; ++G__35322__i;}
  keys = new cljs.core.IndexedSeq(G__35322__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__35323){
var comparator = cljs.core.first(arglist__35323);
var keys = cljs.core.rest(arglist__35323);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__35324_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__35324_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__35324_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__35325_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__35325_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__35325_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__35346 = null;
var G__35346__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35346__1 = (function (result){
var G__35336 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35336) : rf.call(null,G__35336));
});
var G__35346__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__35337 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35337) : cljs.core.deref.call(null,G__35337));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__35338 = result;
var G__35339 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35338,G__35339) : rf.call(null,G__35338,G__35339));
}
});
G__35346 = function(result,input){
switch(arguments.length){
case 0:
return G__35346__0.call(this);
case 1:
return G__35346__1.call(this,result);
case 2:
return G__35346__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35346.cljs$core$IFn$_invoke$arity$0 = G__35346__0;
G__35346.cljs$core$IFn$_invoke$arity$1 = G__35346__1;
G__35346.cljs$core$IFn$_invoke$arity$2 = G__35346__2;
return G__35346;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__35344,seen__$1){
while(true){
var vec__35345 = p__35344;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35345,(0),null);
var xs__$1 = vec__35345;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__35347 = cljs.core.rest(s);
var G__35348 = seen__$1;
p__35344 = G__35347;
seen__$1 = G__35348;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__35349 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__35350 = cljs.core.next(s__$1);
ret = G__35349;
s__$1 = G__35350;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__35352 = x;
if(G__35352){
var bit__24844__auto__ = (G__35352.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24844__auto__) || (G__35352.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__35353 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__35354 = cljs.core.next(ks);
var G__35355 = cljs.core.next(vs);
map = G__35353;
ks = G__35354;
vs = G__35355;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__35366 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35366) : k.call(null,G__35366));
})() > (function (){var G__35367 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35367) : k.call(null,G__35367));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__35368__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35356_SHARP_,p2__35357_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__35356_SHARP_,p2__35357_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__35368 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__35369__i = 0, G__35369__a = new Array(arguments.length -  3);
while (G__35369__i < G__35369__a.length) {G__35369__a[G__35369__i] = arguments[G__35369__i + 3]; ++G__35369__i;}
  more = new cljs.core.IndexedSeq(G__35369__a,0);
} 
return G__35368__delegate.call(this,k,x,y,more);};
G__35368.cljs$lang$maxFixedArity = 3;
G__35368.cljs$lang$applyTo = (function (arglist__35370){
var k = cljs.core.first(arglist__35370);
arglist__35370 = cljs.core.next(arglist__35370);
var x = cljs.core.first(arglist__35370);
arglist__35370 = cljs.core.next(arglist__35370);
var y = cljs.core.first(arglist__35370);
var more = cljs.core.rest(arglist__35370);
return G__35368__delegate(k,x,y,more);
});
G__35368.cljs$core$IFn$_invoke$arity$variadic = G__35368__delegate;
return G__35368;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__35371 = null;
if (arguments.length > 3) {
var G__35372__i = 0, G__35372__a = new Array(arguments.length -  3);
while (G__35372__i < G__35372__a.length) {G__35372__a[G__35372__i] = arguments[G__35372__i + 3]; ++G__35372__i;}
G__35371 = new cljs.core.IndexedSeq(G__35372__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__35371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__35383 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35383) : k.call(null,G__35383));
})() < (function (){var G__35384 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35384) : k.call(null,G__35384));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__35385__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35373_SHARP_,p2__35374_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__35373_SHARP_,p2__35374_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__35385 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__35386__i = 0, G__35386__a = new Array(arguments.length -  3);
while (G__35386__i < G__35386__a.length) {G__35386__a[G__35386__i] = arguments[G__35386__i + 3]; ++G__35386__i;}
  more = new cljs.core.IndexedSeq(G__35386__a,0);
} 
return G__35385__delegate.call(this,k,x,y,more);};
G__35385.cljs$lang$maxFixedArity = 3;
G__35385.cljs$lang$applyTo = (function (arglist__35387){
var k = cljs.core.first(arglist__35387);
arglist__35387 = cljs.core.next(arglist__35387);
var x = cljs.core.first(arglist__35387);
arglist__35387 = cljs.core.next(arglist__35387);
var y = cljs.core.first(arglist__35387);
var more = cljs.core.rest(arglist__35387);
return G__35385__delegate(k,x,y,more);
});
G__35385.cljs$core$IFn$_invoke$arity$variadic = G__35385__delegate;
return G__35385;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__35388 = null;
if (arguments.length > 3) {
var G__35389__i = 0, G__35389__a = new Array(arguments.length -  3);
while (G__35389__i < G__35389__a.length) {G__35389__a[G__35389__i] = arguments[G__35389__i + 3]; ++G__35389__i;}
G__35388 = new cljs.core.IndexedSeq(G__35389__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__35388);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__35406 = null;
var G__35406__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35406__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__35401 = result;
var G__35402 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35401,G__35402) : rf.call(null,G__35401,G__35402));
})());
})());
var G__35403 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35403) : rf.call(null,G__35403));
});
var G__35406__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__35404 = result;
var G__35405 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35404,G__35405) : rf.call(null,G__35404,G__35405));
} else {
return result;
}
});
G__35406 = function(result,input){
switch(arguments.length){
case 0:
return G__35406__0.call(this);
case 1:
return G__35406__1.call(this,result);
case 2:
return G__35406__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35406.cljs$core$IFn$_invoke$arity$0 = G__35406__0;
G__35406.cljs$core$IFn$_invoke$arity$1 = G__35406__1;
G__35406.cljs$core$IFn$_invoke$arity$2 = G__35406__2;
return G__35406;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__35419 = null;
var G__35419__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35419__1 = (function (result){
var G__35414 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35414) : rf.call(null,G__35414));
});
var G__35419__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__35415 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35415) : pred.call(null,G__35415));
})())){
var G__35416 = result;
var G__35417 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35416,G__35417) : rf.call(null,G__35416,G__35417));
} else {
return cljs.core.reduced(result);
}
});
G__35419 = function(result,input){
switch(arguments.length){
case 0:
return G__35419__0.call(this);
case 1:
return G__35419__1.call(this,result);
case 2:
return G__35419__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35419.cljs$core$IFn$_invoke$arity$0 = G__35419__0;
G__35419.cljs$core$IFn$_invoke$arity$1 = G__35419__1;
G__35419.cljs$core$IFn$_invoke$arity$2 = G__35419__2;
return G__35419;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__35418 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35418) : pred.call(null,G__35418));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__35424 = (function (){var G__35426 = cljs.core._entry_key(sc,e);
var G__35427 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35426,G__35427) : comp.call(null,G__35426,G__35427));
})();
var G__35425 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__35424,G__35425) : test.call(null,G__35424,G__35425));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35431 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35431,(0),null);
var s = vec__35431;
if(cljs.core.truth_((function (){var G__35432 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__35432) : include.call(null,G__35432));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35433 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35433,(0),null);
var s = vec__35433;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35437 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35437,(0),null);
var s = vec__35437;
if(cljs.core.truth_((function (){var G__35438 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__35438) : include.call(null,G__35438));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35439 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35439,(0),null);
var s = vec__35439;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__35440 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__35440) : Math.ceil.call(null,G__35440));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__35441 = ret;
var G__35442 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35441,G__35442) : f.call(null,G__35441,G__35442));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__35443 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35443) : cljs.core.deref.call(null,G__35443));
} else {
var G__35444 = (i + self__.step);
var G__35445 = ret__$1;
i = G__35444;
ret = G__35445;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__35463 = null;
var G__35463__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35463__1 = (function (result){
var G__35460 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35460) : rf.call(null,G__35460));
});
var G__35463__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__35461 = result;
var G__35462 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35461,G__35462) : rf.call(null,G__35461,G__35462));
} else {
return result;
}
});
G__35463 = function(result,input){
switch(arguments.length){
case 0:
return G__35463__0.call(this);
case 1:
return G__35463__1.call(this,result);
case 2:
return G__35463__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35463.cljs$core$IFn$_invoke$arity$0 = G__35463__0;
G__35463.cljs$core$IFn$_invoke$arity$1 = G__35463__1;
G__35463.cljs$core$IFn$_invoke$arity$2 = G__35463__2;
return G__35463;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$cljs$core_SLASH_none);
return ((function (a,pa){
return (function() {
var G__35485 = null;
var G__35485__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35485__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__35476 = result;
var G__35477 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35476,G__35477) : rf.call(null,G__35476,G__35477));
})());
})());
var G__35478 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35478) : rf.call(null,G__35478));
});
var G__35485__2 = (function (result,input){
var pval = (function (){var G__35479 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35479) : cljs.core.deref.call(null,G__35479));
})();
var val = (function (){var G__35480 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35480) : f.call(null,G__35480));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$cljs$core_SLASH_none)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__35481 = result;
var G__35482 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35481,G__35482) : rf.call(null,G__35481,G__35482));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__35485 = function(result,input){
switch(arguments.length){
case 0:
return G__35485__0.call(this);
case 1:
return G__35485__1.call(this,result);
case 2:
return G__35485__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35485.cljs$core$IFn$_invoke$arity$0 = G__35485__0;
G__35485.cljs$core$IFn$_invoke$arity$1 = G__35485__1;
G__35485.cljs$core$IFn$_invoke$arity$2 = G__35485__2;
return G__35485;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__35483 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35483) : f.call(null,G__35483));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__35464_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__35484 = p1__35464_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35484) : f.call(null,G__35484));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__35494 = init;
var G__35495 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35494,G__35495) : f.call(null,G__35494,G__35495));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__35590 = null;
var G__35590__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__35590__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35548 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35548) : f.call(null,G__35548));
})()],null));
});
var G__35590__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35549 = x;
var G__35550 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35549,G__35550) : f.call(null,G__35549,G__35550));
})()],null));
});
var G__35590__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35551 = x;
var G__35552 = y;
var G__35553 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35551,G__35552,G__35553) : f.call(null,G__35551,G__35552,G__35553));
})()],null));
});
var G__35590__4 = (function() { 
var G__35591__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__35591 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35592__i = 0, G__35592__a = new Array(arguments.length -  3);
while (G__35592__i < G__35592__a.length) {G__35592__a[G__35592__i] = arguments[G__35592__i + 3]; ++G__35592__i;}
  args = new cljs.core.IndexedSeq(G__35592__a,0);
} 
return G__35591__delegate.call(this,x,y,z,args);};
G__35591.cljs$lang$maxFixedArity = 3;
G__35591.cljs$lang$applyTo = (function (arglist__35593){
var x = cljs.core.first(arglist__35593);
arglist__35593 = cljs.core.next(arglist__35593);
var y = cljs.core.first(arglist__35593);
arglist__35593 = cljs.core.next(arglist__35593);
var z = cljs.core.first(arglist__35593);
var args = cljs.core.rest(arglist__35593);
return G__35591__delegate(x,y,z,args);
});
G__35591.cljs$core$IFn$_invoke$arity$variadic = G__35591__delegate;
return G__35591;
})()
;
G__35590 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35590__0.call(this);
case 1:
return G__35590__1.call(this,x);
case 2:
return G__35590__2.call(this,x,y);
case 3:
return G__35590__3.call(this,x,y,z);
default:
var G__35594 = null;
if (arguments.length > 3) {
var G__35595__i = 0, G__35595__a = new Array(arguments.length -  3);
while (G__35595__i < G__35595__a.length) {G__35595__a[G__35595__i] = arguments[G__35595__i + 3]; ++G__35595__i;}
G__35594 = new cljs.core.IndexedSeq(G__35595__a,0);
}
return G__35590__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35594);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35590.cljs$lang$maxFixedArity = 3;
G__35590.cljs$lang$applyTo = G__35590__4.cljs$lang$applyTo;
G__35590.cljs$core$IFn$_invoke$arity$0 = G__35590__0;
G__35590.cljs$core$IFn$_invoke$arity$1 = G__35590__1;
G__35590.cljs$core$IFn$_invoke$arity$2 = G__35590__2;
G__35590.cljs$core$IFn$_invoke$arity$3 = G__35590__3;
G__35590.cljs$core$IFn$_invoke$arity$variadic = G__35590__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35590;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__35596 = null;
var G__35596__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__35596__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35554 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35554) : f.call(null,G__35554));
})(),(function (){var G__35555 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__35555) : g.call(null,G__35555));
})()],null));
});
var G__35596__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35556 = x;
var G__35557 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35556,G__35557) : f.call(null,G__35556,G__35557));
})(),(function (){var G__35558 = x;
var G__35559 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__35558,G__35559) : g.call(null,G__35558,G__35559));
})()],null));
});
var G__35596__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35560 = x;
var G__35561 = y;
var G__35562 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35560,G__35561,G__35562) : f.call(null,G__35560,G__35561,G__35562));
})(),(function (){var G__35563 = x;
var G__35564 = y;
var G__35565 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__35563,G__35564,G__35565) : g.call(null,G__35563,G__35564,G__35565));
})()],null));
});
var G__35596__4 = (function() { 
var G__35597__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__35597 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35598__i = 0, G__35598__a = new Array(arguments.length -  3);
while (G__35598__i < G__35598__a.length) {G__35598__a[G__35598__i] = arguments[G__35598__i + 3]; ++G__35598__i;}
  args = new cljs.core.IndexedSeq(G__35598__a,0);
} 
return G__35597__delegate.call(this,x,y,z,args);};
G__35597.cljs$lang$maxFixedArity = 3;
G__35597.cljs$lang$applyTo = (function (arglist__35599){
var x = cljs.core.first(arglist__35599);
arglist__35599 = cljs.core.next(arglist__35599);
var y = cljs.core.first(arglist__35599);
arglist__35599 = cljs.core.next(arglist__35599);
var z = cljs.core.first(arglist__35599);
var args = cljs.core.rest(arglist__35599);
return G__35597__delegate(x,y,z,args);
});
G__35597.cljs$core$IFn$_invoke$arity$variadic = G__35597__delegate;
return G__35597;
})()
;
G__35596 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35596__0.call(this);
case 1:
return G__35596__1.call(this,x);
case 2:
return G__35596__2.call(this,x,y);
case 3:
return G__35596__3.call(this,x,y,z);
default:
var G__35600 = null;
if (arguments.length > 3) {
var G__35601__i = 0, G__35601__a = new Array(arguments.length -  3);
while (G__35601__i < G__35601__a.length) {G__35601__a[G__35601__i] = arguments[G__35601__i + 3]; ++G__35601__i;}
G__35600 = new cljs.core.IndexedSeq(G__35601__a,0);
}
return G__35596__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35600);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35596.cljs$lang$maxFixedArity = 3;
G__35596.cljs$lang$applyTo = G__35596__4.cljs$lang$applyTo;
G__35596.cljs$core$IFn$_invoke$arity$0 = G__35596__0;
G__35596.cljs$core$IFn$_invoke$arity$1 = G__35596__1;
G__35596.cljs$core$IFn$_invoke$arity$2 = G__35596__2;
G__35596.cljs$core$IFn$_invoke$arity$3 = G__35596__3;
G__35596.cljs$core$IFn$_invoke$arity$variadic = G__35596__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35596;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__35602 = null;
var G__35602__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__35602__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35566 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35566) : f.call(null,G__35566));
})(),(function (){var G__35567 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__35567) : g.call(null,G__35567));
})(),(function (){var G__35568 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__35568) : h.call(null,G__35568));
})()],null));
});
var G__35602__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35569 = x;
var G__35570 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35569,G__35570) : f.call(null,G__35569,G__35570));
})(),(function (){var G__35571 = x;
var G__35572 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__35571,G__35572) : g.call(null,G__35571,G__35572));
})(),(function (){var G__35573 = x;
var G__35574 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__35573,G__35574) : h.call(null,G__35573,G__35574));
})()],null));
});
var G__35602__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35575 = x;
var G__35576 = y;
var G__35577 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35575,G__35576,G__35577) : f.call(null,G__35575,G__35576,G__35577));
})(),(function (){var G__35578 = x;
var G__35579 = y;
var G__35580 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__35578,G__35579,G__35580) : g.call(null,G__35578,G__35579,G__35580));
})(),(function (){var G__35581 = x;
var G__35582 = y;
var G__35583 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__35581,G__35582,G__35583) : h.call(null,G__35581,G__35582,G__35583));
})()],null));
});
var G__35602__4 = (function() { 
var G__35603__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__35603 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35604__i = 0, G__35604__a = new Array(arguments.length -  3);
while (G__35604__i < G__35604__a.length) {G__35604__a[G__35604__i] = arguments[G__35604__i + 3]; ++G__35604__i;}
  args = new cljs.core.IndexedSeq(G__35604__a,0);
} 
return G__35603__delegate.call(this,x,y,z,args);};
G__35603.cljs$lang$maxFixedArity = 3;
G__35603.cljs$lang$applyTo = (function (arglist__35605){
var x = cljs.core.first(arglist__35605);
arglist__35605 = cljs.core.next(arglist__35605);
var y = cljs.core.first(arglist__35605);
arglist__35605 = cljs.core.next(arglist__35605);
var z = cljs.core.first(arglist__35605);
var args = cljs.core.rest(arglist__35605);
return G__35603__delegate(x,y,z,args);
});
G__35603.cljs$core$IFn$_invoke$arity$variadic = G__35603__delegate;
return G__35603;
})()
;
G__35602 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35602__0.call(this);
case 1:
return G__35602__1.call(this,x);
case 2:
return G__35602__2.call(this,x,y);
case 3:
return G__35602__3.call(this,x,y,z);
default:
var G__35606 = null;
if (arguments.length > 3) {
var G__35607__i = 0, G__35607__a = new Array(arguments.length -  3);
while (G__35607__i < G__35607__a.length) {G__35607__a[G__35607__i] = arguments[G__35607__i + 3]; ++G__35607__i;}
G__35606 = new cljs.core.IndexedSeq(G__35607__a,0);
}
return G__35602__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35606);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35602.cljs$lang$maxFixedArity = 3;
G__35602.cljs$lang$applyTo = G__35602__4.cljs$lang$applyTo;
G__35602.cljs$core$IFn$_invoke$arity$0 = G__35602__0;
G__35602.cljs$core$IFn$_invoke$arity$1 = G__35602__1;
G__35602.cljs$core$IFn$_invoke$arity$2 = G__35602__2;
G__35602.cljs$core$IFn$_invoke$arity$3 = G__35602__3;
G__35602.cljs$core$IFn$_invoke$arity$variadic = G__35602__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35602;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__35608__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__35609 = null;
var G__35609__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35496_SHARP_,p2__35497_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35496_SHARP_,(function (){return (p2__35497_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__35497_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__35497_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35609__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35498_SHARP_,p2__35499_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35498_SHARP_,(function (){var G__35584 = x;
return (p2__35499_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__35499_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35584) : p2__35499_SHARP_.call(null,G__35584));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35609__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35500_SHARP_,p2__35501_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35500_SHARP_,(function (){var G__35585 = x;
var G__35586 = y;
return (p2__35501_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__35501_SHARP_.cljs$core$IFn$_invoke$arity$2(G__35585,G__35586) : p2__35501_SHARP_.call(null,G__35585,G__35586));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35609__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35502_SHARP_,p2__35503_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35502_SHARP_,(function (){var G__35587 = x;
var G__35588 = y;
var G__35589 = z;
return (p2__35503_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__35503_SHARP_.cljs$core$IFn$_invoke$arity$3(G__35587,G__35588,G__35589) : p2__35503_SHARP_.call(null,G__35587,G__35588,G__35589));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35609__4 = (function() { 
var G__35610__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35504_SHARP_,p2__35505_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35504_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__35505_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__35610 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35611__i = 0, G__35611__a = new Array(arguments.length -  3);
while (G__35611__i < G__35611__a.length) {G__35611__a[G__35611__i] = arguments[G__35611__i + 3]; ++G__35611__i;}
  args = new cljs.core.IndexedSeq(G__35611__a,0);
} 
return G__35610__delegate.call(this,x,y,z,args);};
G__35610.cljs$lang$maxFixedArity = 3;
G__35610.cljs$lang$applyTo = (function (arglist__35612){
var x = cljs.core.first(arglist__35612);
arglist__35612 = cljs.core.next(arglist__35612);
var y = cljs.core.first(arglist__35612);
arglist__35612 = cljs.core.next(arglist__35612);
var z = cljs.core.first(arglist__35612);
var args = cljs.core.rest(arglist__35612);
return G__35610__delegate(x,y,z,args);
});
G__35610.cljs$core$IFn$_invoke$arity$variadic = G__35610__delegate;
return G__35610;
})()
;
G__35609 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35609__0.call(this);
case 1:
return G__35609__1.call(this,x);
case 2:
return G__35609__2.call(this,x,y);
case 3:
return G__35609__3.call(this,x,y,z);
default:
var G__35613 = null;
if (arguments.length > 3) {
var G__35614__i = 0, G__35614__a = new Array(arguments.length -  3);
while (G__35614__i < G__35614__a.length) {G__35614__a[G__35614__i] = arguments[G__35614__i + 3]; ++G__35614__i;}
G__35613 = new cljs.core.IndexedSeq(G__35614__a,0);
}
return G__35609__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35613);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35609.cljs$lang$maxFixedArity = 3;
G__35609.cljs$lang$applyTo = G__35609__4.cljs$lang$applyTo;
G__35609.cljs$core$IFn$_invoke$arity$0 = G__35609__0;
G__35609.cljs$core$IFn$_invoke$arity$1 = G__35609__1;
G__35609.cljs$core$IFn$_invoke$arity$2 = G__35609__2;
G__35609.cljs$core$IFn$_invoke$arity$3 = G__35609__3;
G__35609.cljs$core$IFn$_invoke$arity$variadic = G__35609__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35609;
})()
;})(fs__$1))
};
var G__35608 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__35615__i = 0, G__35615__a = new Array(arguments.length -  3);
while (G__35615__i < G__35615__a.length) {G__35615__a[G__35615__i] = arguments[G__35615__i + 3]; ++G__35615__i;}
  fs = new cljs.core.IndexedSeq(G__35615__a,0);
} 
return G__35608__delegate.call(this,f,g,h,fs);};
G__35608.cljs$lang$maxFixedArity = 3;
G__35608.cljs$lang$applyTo = (function (arglist__35616){
var f = cljs.core.first(arglist__35616);
arglist__35616 = cljs.core.next(arglist__35616);
var g = cljs.core.first(arglist__35616);
arglist__35616 = cljs.core.next(arglist__35616);
var h = cljs.core.first(arglist__35616);
var fs = cljs.core.rest(arglist__35616);
return G__35608__delegate(f,g,h,fs);
});
G__35608.cljs$core$IFn$_invoke$arity$variadic = G__35608__delegate;
return G__35608;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__35617 = null;
if (arguments.length > 3) {
var G__35618__i = 0, G__35618__a = new Array(arguments.length -  3);
while (G__35618__i < G__35618__a.length) {G__35618__a[G__35618__i] = arguments[G__35618__i + 3]; ++G__35618__i;}
G__35617 = new cljs.core.IndexedSeq(G__35618__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__35617);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__35619 = cljs.core.next(coll);
coll = G__35619;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__35620 = (n - (1));
var G__35621 = cljs.core.next(coll);
n = G__35620;
coll = G__35621;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__35625 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35625,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35625,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__24177__auto__ = flags;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_35633 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__24177__auto__ = cljs.core.constant$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__35634_35640 = cljs.core.first(coll);
var G__35635_35641 = writer;
var G__35636_35642 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35634_35640,G__35635_35641,G__35636_35642) : print_one.call(null,G__35634_35640,G__35635_35641,G__35636_35642));
} else {
}

var coll_35643__$1 = cljs.core.next(coll);
var n_35644 = (cljs.core.constant$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_35643__$1) && (((n_35644 == null)) || (!((n_35644 === (0)))))){
cljs.core._write(writer,sep);

var G__35637_35645 = cljs.core.first(coll_35643__$1);
var G__35638_35646 = writer;
var G__35639_35647 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35637_35645,G__35638_35646,G__35639_35647) : print_one.call(null,G__35637_35645,G__35638_35646,G__35639_35647));

var G__35648 = cljs.core.next(coll_35643__$1);
var G__35649 = (n_35644 - (1));
coll_35643__$1 = G__35648;
n_35644 = G__35649;
continue;
} else {
if((cljs.core.seq(coll_35643__$1)) && ((n_35644 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__24177__auto__ = cljs.core.constant$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_35633;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__35654 = cljs.core.seq(ss);
var chunk__35655 = null;
var count__35656 = (0);
var i__35657 = (0);
while(true){
if((i__35657 < count__35656)){
var s = chunk__35655.cljs$core$IIndexed$_nth$arity$2(null,i__35657);
cljs.core._write(writer,s);

var G__35658 = seq__35654;
var G__35659 = chunk__35655;
var G__35660 = count__35656;
var G__35661 = (i__35657 + (1));
seq__35654 = G__35658;
chunk__35655 = G__35659;
count__35656 = G__35660;
i__35657 = G__35661;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35654);
if(temp__4126__auto__){
var seq__35654__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35654__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35654__$1);
var G__35662 = cljs.core.chunk_rest(seq__35654__$1);
var G__35663 = c__24962__auto__;
var G__35664 = cljs.core.count(c__24962__auto__);
var G__35665 = (0);
seq__35654 = G__35662;
chunk__35655 = G__35663;
count__35656 = G__35664;
i__35657 = G__35665;
continue;
} else {
var s = cljs.core.first(seq__35654__$1);
cljs.core._write(writer,s);

var G__35666 = cljs.core.next(seq__35654__$1);
var G__35667 = null;
var G__35668 = (0);
var G__35669 = (0);
seq__35654 = G__35666;
chunk__35655 = G__35667;
count__35656 = G__35668;
i__35657 = G__35669;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__35670__i = 0, G__35670__a = new Array(arguments.length -  1);
while (G__35670__i < G__35670__a.length) {G__35670__a[G__35670__i] = arguments[G__35670__i + 1]; ++G__35670__i;}
  ss = new cljs.core.IndexedSeq(G__35670__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__35671){
var writer = cljs.core.first(arglist__35671);
var ss = cljs.core.rest(arglist__35671);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj35673 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj35673;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__35676 = "[\\\\\"\b\f\n\r\t]";
var G__35677 = "g";
return RegExp(G__35676,G__35677);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24165__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$meta);
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__35691 = obj;
if(G__35691){
var bit__24851__auto__ = (G__35691.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24851__auto__) || (G__35691.cljs$core$IMeta$)){
return true;
} else {
if((!G__35691.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35691);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35691);
}
})();
if(and__24165__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__35692_35702 = cljs.core.meta(obj);
var G__35693_35703 = writer;
var G__35694_35704 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__35692_35702,G__35693_35703,G__35694_35704) : cljs.core.pr_writer.call(null,G__35692_35702,G__35693_35703,G__35694_35704));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__35695 = obj;
if(G__35695){
var bit__24844__auto__ = (G__35695.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24844__auto__) || (G__35695.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__35696 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__35697 = cljs.core.pr_writer;
var G__35698 = writer;
var G__35699 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__35696,G__35697,G__35698,G__35699) : cljs.core.print_map.call(null,G__35696,G__35697,G__35698,G__35699));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__35700 = obj;
return goog.isString(G__35700);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$readably.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__35705 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__35705;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__35701 = obj;
if(G__35701){
var bit__24851__auto__ = (G__35701.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24851__auto__) || (G__35701.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__35701.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__35701);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__35701);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$alt_DASH_impl.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__35709 = obj;
var G__35710 = writer;
var G__35711 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$fallback_DASH_impl,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__35709,G__35710,G__35711) : alt_impl.call(null,G__35709,G__35710,G__35711));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__35716 = cljs.core.seq(cljs.core.next(objs));
var chunk__35717 = null;
var count__35718 = (0);
var i__35719 = (0);
while(true){
if((i__35719 < count__35718)){
var obj = chunk__35717.cljs$core$IIndexed$_nth$arity$2(null,i__35719);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__35720 = seq__35716;
var G__35721 = chunk__35717;
var G__35722 = count__35718;
var G__35723 = (i__35719 + (1));
seq__35716 = G__35720;
chunk__35717 = G__35721;
count__35718 = G__35722;
i__35719 = G__35723;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35716);
if(temp__4126__auto__){
var seq__35716__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35716__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35716__$1);
var G__35724 = cljs.core.chunk_rest(seq__35716__$1);
var G__35725 = c__24962__auto__;
var G__35726 = cljs.core.count(c__24962__auto__);
var G__35727 = (0);
seq__35716 = G__35724;
chunk__35717 = G__35725;
count__35718 = G__35726;
i__35719 = G__35727;
continue;
} else {
var obj = cljs.core.first(seq__35716__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__35728 = cljs.core.next(seq__35716__$1);
var G__35729 = null;
var G__35730 = (0);
var G__35731 = (0);
seq__35716 = G__35728;
chunk__35717 = G__35729;
count__35718 = G__35730;
i__35719 = G__35731;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$flush_DASH_on_DASH_newline))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35732__i = 0, G__35732__a = new Array(arguments.length -  0);
while (G__35732__i < G__35732__a.length) {G__35732__a[G__35732__i] = arguments[G__35732__i + 0]; ++G__35732__i;}
  objs = new cljs.core.IndexedSeq(G__35732__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__35733){
var objs = cljs.core.seq(arglist__35733);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35734__i = 0, G__35734__a = new Array(arguments.length -  0);
while (G__35734__i < G__35734__a.length) {G__35734__a[G__35734__i] = arguments[G__35734__i + 0]; ++G__35734__i;}
  objs = new cljs.core.IndexedSeq(G__35734__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__35735){
var objs = cljs.core.seq(arglist__35735);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35736__i = 0, G__35736__a = new Array(arguments.length -  0);
while (G__35736__i < G__35736__a.length) {G__35736__a[G__35736__i] = arguments[G__35736__i + 0]; ++G__35736__i;}
  objs = new cljs.core.IndexedSeq(G__35736__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__35737){
var objs = cljs.core.seq(arglist__35737);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35738__i = 0, G__35738__a = new Array(arguments.length -  0);
while (G__35738__i < G__35738__a.length) {G__35738__a[G__35738__i] = arguments[G__35738__i + 0]; ++G__35738__i;}
  objs = new cljs.core.IndexedSeq(G__35738__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__35739){
var objs = cljs.core.seq(arglist__35739);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35740__i = 0, G__35740__a = new Array(arguments.length -  0);
while (G__35740__i < G__35740__a.length) {G__35740__a[G__35740__i] = arguments[G__35740__i + 0]; ++G__35740__i;}
  objs = new cljs.core.IndexedSeq(G__35740__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__35741){
var objs = cljs.core.seq(arglist__35741);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35742__i = 0, G__35742__a = new Array(arguments.length -  0);
while (G__35742__i < G__35742__a.length) {G__35742__a[G__35742__i] = arguments[G__35742__i + 0]; ++G__35742__i;}
  objs = new cljs.core.IndexedSeq(G__35742__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__35743){
var objs = cljs.core.seq(arglist__35743);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35744__i = 0, G__35744__a = new Array(arguments.length -  0);
while (G__35744__i < G__35744__a.length) {G__35744__a[G__35744__i] = arguments[G__35744__i + 0]; ++G__35744__i;}
  objs = new cljs.core.IndexedSeq(G__35744__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__35745){
var objs = cljs.core.seq(arglist__35745);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35746__i = 0, G__35746__a = new Array(arguments.length -  0);
while (G__35746__i < G__35746__a.length) {G__35746__a[G__35746__i] = arguments[G__35746__i + 0]; ++G__35746__i;}
  objs = new cljs.core.IndexedSeq(G__35746__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__35747){
var objs = cljs.core.seq(arglist__35747);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__35754_35760 = cljs.core.key(e);
var G__35755_35761 = w;
var G__35756_35762 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35754_35760,G__35755_35761,G__35756_35762) : print_one.call(null,G__35754_35760,G__35755_35761,G__35756_35762));

cljs.core._write(w," ");

var G__35757 = cljs.core.val(e);
var G__35758 = w;
var G__35759 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35757,G__35758,G__35759) : print_one.call(null,G__35757,G__35758,G__35759));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__35763__i = 0, G__35763__a = new Array(arguments.length -  2);
while (G__35763__i < G__35763__a.length) {G__35763__a[G__35763__i] = arguments[G__35763__i + 2]; ++G__35763__i;}
  args = new cljs.core.IndexedSeq(G__35763__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__35764){
var iref = cljs.core.first(arglist__35764);
arglist__35764 = cljs.core.next(arglist__35764);
var f = cljs.core.first(arglist__35764);
var args = cljs.core.rest(arglist__35764);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__35767 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35767) : cljs.core.atom.call(null,G__35767));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__35769 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35769) : cljs.core.deref.call(null,G__35769));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__35770_SHARP_,p2__35771_SHARP_){
var ret = (function (){var G__35774 = p1__35770_SHARP_;
var G__35775 = p2__35771_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35774,G__35775) : rf.call(null,G__35774,G__35775));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__35778 = null;
var G__35778__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35778__1 = (function (result){
var G__35777 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35777) : rf.call(null,G__35777));
});
var G__35778__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__35778 = function(result,input){
switch(arguments.length){
case 0:
return G__35778__0.call(this);
case 1:
return G__35778__1.call(this,result);
case 2:
return G__35778__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35778.cljs$core$IFn$_invoke$arity$0 = G__35778__0;
G__35778.cljs$core$IFn$_invoke$arity$1 = G__35778__1;
G__35778.cljs$core$IFn$_invoke$arity$2 = G__35778__2;
return G__35778;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$cljs$core_SLASH_none);
return ((function (pa){
return (function() {
var G__35787 = null;
var G__35787__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35787__1 = (function (result){
var G__35783 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35783) : rf.call(null,G__35783));
});
var G__35787__2 = (function (result,input){
var prior = (function (){var G__35784 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35784) : cljs.core.deref.call(null,G__35784));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__35785 = result;
var G__35786 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35785,G__35786) : rf.call(null,G__35785,G__35786));
}
});
G__35787 = function(result,input){
switch(arguments.length){
case 0:
return G__35787__0.call(this);
case 1:
return G__35787__1.call(this,result);
case 2:
return G__35787__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35787.cljs$core$IFn$_invoke$arity$0 = G__35787__0;
G__35787.cljs$core$IFn$_invoke$arity$1 = G__35787__1;
G__35787.cljs$core$IFn$_invoke$arity$2 = G__35787__2;
return G__35787;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35789_SHARP_,p2__35788_SHARP_){
var G__35791 = p2__35788_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__35791) : proc.call(null,G__35791));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj35793 = {};
return obj35793;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._clj__GT_js[(function (){var G__35797 = x__24813__auto__;
return goog.typeOf(G__35797);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._key__GT_js[(function (){var G__35801 = x__24813__auto__;
return goog.typeOf(G__35801);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__35804 = k;
if(G__35804){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto__ = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return G__35804.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__35804.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35804);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35804);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__35805 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__35805) : cljs.core.clj__GT_js.call(null,G__35805));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__35821 = x;
if(G__35821){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto__ = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return G__35821.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__35821.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35821);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35821);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj35823 = {};
return obj35823;
})();
var seq__35824_35834 = cljs.core.seq(x);
var chunk__35825_35835 = null;
var count__35826_35836 = (0);
var i__35827_35837 = (0);
while(true){
if((i__35827_35837 < count__35826_35836)){
var vec__35828_35838 = chunk__35825_35835.cljs$core$IIndexed$_nth$arity$2(null,i__35827_35837);
var k_35839 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35828_35838,(0),null);
var v_35840 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35828_35838,(1),null);
(m[cljs.core.key__GT_js(k_35839)] = cljs$core$clj__GT_js(v_35840));

var G__35841 = seq__35824_35834;
var G__35842 = chunk__35825_35835;
var G__35843 = count__35826_35836;
var G__35844 = (i__35827_35837 + (1));
seq__35824_35834 = G__35841;
chunk__35825_35835 = G__35842;
count__35826_35836 = G__35843;
i__35827_35837 = G__35844;
continue;
} else {
var temp__4126__auto___35845 = cljs.core.seq(seq__35824_35834);
if(temp__4126__auto___35845){
var seq__35824_35846__$1 = temp__4126__auto___35845;
if(cljs.core.chunked_seq_QMARK_(seq__35824_35846__$1)){
var c__24962__auto___35847 = cljs.core.chunk_first(seq__35824_35846__$1);
var G__35848 = cljs.core.chunk_rest(seq__35824_35846__$1);
var G__35849 = c__24962__auto___35847;
var G__35850 = cljs.core.count(c__24962__auto___35847);
var G__35851 = (0);
seq__35824_35834 = G__35848;
chunk__35825_35835 = G__35849;
count__35826_35836 = G__35850;
i__35827_35837 = G__35851;
continue;
} else {
var vec__35829_35852 = cljs.core.first(seq__35824_35846__$1);
var k_35853 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35829_35852,(0),null);
var v_35854 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35829_35852,(1),null);
(m[cljs.core.key__GT_js(k_35853)] = cljs$core$clj__GT_js(v_35854));

var G__35855 = cljs.core.next(seq__35824_35846__$1);
var G__35856 = null;
var G__35857 = (0);
var G__35858 = (0);
seq__35824_35834 = G__35855;
chunk__35825_35835 = G__35856;
count__35826_35836 = G__35857;
i__35827_35837 = G__35858;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__35830_35859 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__35831_35860 = null;
var count__35832_35861 = (0);
var i__35833_35862 = (0);
while(true){
if((i__35833_35862 < count__35832_35861)){
var x_35863__$1 = chunk__35831_35860.cljs$core$IIndexed$_nth$arity$2(null,i__35833_35862);
arr.push(x_35863__$1);

var G__35864 = seq__35830_35859;
var G__35865 = chunk__35831_35860;
var G__35866 = count__35832_35861;
var G__35867 = (i__35833_35862 + (1));
seq__35830_35859 = G__35864;
chunk__35831_35860 = G__35865;
count__35832_35861 = G__35866;
i__35833_35862 = G__35867;
continue;
} else {
var temp__4126__auto___35868 = cljs.core.seq(seq__35830_35859);
if(temp__4126__auto___35868){
var seq__35830_35869__$1 = temp__4126__auto___35868;
if(cljs.core.chunked_seq_QMARK_(seq__35830_35869__$1)){
var c__24962__auto___35870 = cljs.core.chunk_first(seq__35830_35869__$1);
var G__35871 = cljs.core.chunk_rest(seq__35830_35869__$1);
var G__35872 = c__24962__auto___35870;
var G__35873 = cljs.core.count(c__24962__auto___35870);
var G__35874 = (0);
seq__35830_35859 = G__35871;
chunk__35831_35860 = G__35872;
count__35832_35861 = G__35873;
i__35833_35862 = G__35874;
continue;
} else {
var x_35875__$1 = cljs.core.first(seq__35830_35869__$1);
arr.push(x_35875__$1);

var G__35876 = cljs.core.next(seq__35830_35869__$1);
var G__35877 = null;
var G__35878 = (0);
var G__35879 = (0);
seq__35830_35859 = G__35876;
chunk__35831_35860 = G__35877;
count__35832_35861 = G__35878;
i__35833_35862 = G__35879;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj35881 = {};
return obj35881;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._js__GT_clj[(function (){var G__35885 = x__24813__auto__;
return goog.typeOf(G__35885);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$keywordize_DASH_keys,false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__35942__delegate = function (x,opts){
var map__35915 = opts;
var map__35915__$1 = ((cljs.core.seq_QMARK_(map__35915))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35915):map__35915);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35915__$1,cljs.core.constant$keyword$keywordize_DASH_keys);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__35915,map__35915__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__35931 = x__$1;
if(G__35931){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto__ = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return G__35931.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__35931.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__35931);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__35931);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__24931__auto__ = ((function (map__35915,map__35915__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__35932(s__35933){
return (new cljs.core.LazySeq(null,((function (map__35915,map__35915__$1,keywordize_keys,keyfn){
return (function (){
var s__35933__$1 = s__35933;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__35933__$1);
if(temp__4126__auto__){
var s__35933__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__35933__$2)){
var c__24929__auto__ = cljs.core.chunk_first(s__35933__$2);
var size__24930__auto__ = cljs.core.count(c__24929__auto__);
var b__35935 = cljs.core.chunk_buffer(size__24930__auto__);
if((function (){var i__35934 = (0);
while(true){
if((i__35934 < size__24930__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__24929__auto__,i__35934);
cljs.core.chunk_append(b__35935,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__35940 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35940) : keyfn.call(null,G__35940));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__35943 = (i__35934 + (1));
i__35934 = G__35943;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__35935),cljs$core$js__GT_clj_$_thisfn_$_iter__35932(cljs.core.chunk_rest(s__35933__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__35935),null);
}
} else {
var k = cljs.core.first(s__35933__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__35941 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35941) : keyfn.call(null,G__35941));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__35932(cljs.core.rest(s__35933__$2)));
}
} else {
return null;
}
break;
}
});})(map__35915,map__35915__$1,keywordize_keys,keyfn))
,null,null));
});})(map__35915,map__35915__$1,keywordize_keys,keyfn))
;
return iter__24931__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__35915,map__35915__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__35942 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__35944__i = 0, G__35944__a = new Array(arguments.length -  1);
while (G__35944__i < G__35944__a.length) {G__35944__a[G__35944__i] = arguments[G__35944__i + 1]; ++G__35944__i;}
  opts = new cljs.core.IndexedSeq(G__35944__a,0);
} 
return G__35942__delegate.call(this,x,opts);};
G__35942.cljs$lang$maxFixedArity = 1;
G__35942.cljs$lang$applyTo = (function (arglist__35945){
var x = cljs.core.first(arglist__35945);
var opts = cljs.core.rest(arglist__35945);
return G__35942__delegate(x,opts);
});
G__35942.cljs$core$IFn$_invoke$arity$variadic = G__35942__delegate;
return G__35942;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__35946 = null;
if (arguments.length > 1) {
var G__35947__i = 0, G__35947__a = new Array(arguments.length -  1);
while (G__35947__i < G__35947__a.length) {G__35947__a[G__35947__i] = arguments[G__35947__i + 1]; ++G__35947__i;}
G__35946 = new cljs.core.IndexedSeq(G__35947__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__35946);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__35950 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35950) : cljs.core.atom.call(null,G__35950));
})();
return ((function (mem){
return (function() { 
var G__35952__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__35951 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35951) : cljs.core.deref.call(null,G__35951));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__35952 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__35953__i = 0, G__35953__a = new Array(arguments.length -  0);
while (G__35953__i < G__35953__a.length) {G__35953__a[G__35953__i] = arguments[G__35953__i + 0]; ++G__35953__i;}
  args = new cljs.core.IndexedSeq(G__35953__a,0);
} 
return G__35952__delegate.call(this,args);};
G__35952.cljs$lang$maxFixedArity = 0;
G__35952.cljs$lang$applyTo = (function (arglist__35954){
var args = cljs.core.seq(arglist__35954);
return G__35952__delegate(args);
});
G__35952.cljs$core$IFn$_invoke$arity$variadic = G__35952__delegate;
return G__35952;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__35956 = ret;
f = G__35956;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__35957__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__35957 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__35958__i = 0, G__35958__a = new Array(arguments.length -  1);
while (G__35958__i < G__35958__a.length) {G__35958__a[G__35958__i] = arguments[G__35958__i + 1]; ++G__35958__i;}
  args = new cljs.core.IndexedSeq(G__35958__a,0);
} 
return G__35957__delegate.call(this,f,args);};
G__35957.cljs$lang$maxFixedArity = 1;
G__35957.cljs$lang$applyTo = (function (arglist__35959){
var f = cljs.core.first(arglist__35959);
var args = cljs.core.rest(arglist__35959);
return G__35957__delegate(f,args);
});
G__35957.cljs$core$IFn$_invoke$arity$variadic = G__35957__delegate;
return G__35957;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__35960 = null;
if (arguments.length > 1) {
var G__35961__i = 0, G__35961__a = new Array(arguments.length -  1);
while (G__35961__i < G__35961__a.length) {G__35961__a[G__35961__i] = arguments[G__35961__i + 1]; ++G__35961__i;}
G__35960 = new cljs.core.IndexedSeq(G__35961__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__35960);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__35964 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__35964) : Math.floor.call(null,G__35964));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__35966 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35966) : f.call(null,G__35966));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$parents,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$descendants,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$ancestors,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__35968 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35968) : cljs.core.atom.call(null,G__35968));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__35969__i = 0, G__35969__a = new Array(arguments.length -  1);
while (G__35969__i < G__35969__a.length) {G__35969__a[G__35969__i] = arguments[G__35969__i + 1]; ++G__35969__i;}
  args = new cljs.core.IndexedSeq(G__35969__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__35970){
var f = cljs.core.first(arglist__35970);
var args = cljs.core.rest(arglist__35970);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__36035 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36035) : cljs.core.deref.call(null,G__36035));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__24177__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
var and__24165__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24165__auto__){
var and__24165__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24165__auto____$1){
var and__24165__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24165__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__36060 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__36058 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__36058) : child.call(null,G__36058));
})(),(function (){var G__36059 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__36059) : parent.call(null,G__36059));
})());
var G__36061 = (i + (1));
ret = G__36060;
i = G__36061;
continue;
}
break;
}
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__36065 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36065) : cljs.core.deref.call(null,G__36065));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__36069 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36069) : cljs.core.deref.call(null,G__36069));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__36073 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36073) : cljs.core.deref.call(null,G__36073));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__36082 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__36082) : targets.call(null,G__36082));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__36083 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__36083) : sources.call(null,G__36083));
})()));
});})(tp,td,ta))
;
var or__24177__auto__ = ((cljs.core.contains_QMARK_((function (){var G__36087 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__36087) : tp.call(null,G__36087));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__36088 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__36088) : ta.call(null,G__36088));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__36089 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__36089) : ta.call(null,G__36089));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$parents,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$ancestors,tf(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$descendants,tf(cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__36096 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36096) : parentMap.call(null,G__36096));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__36097 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36097) : parentMap.call(null,G__36097));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__36090_SHARP_){
return cljs.core.cons(cljs.core.first(p1__36090_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__36090_SHARP_),cljs.core.second(p1__36090_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__36098 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36098) : parentMap.call(null,G__36098));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__36091_SHARP_,p2__36092_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__36091_SHARP_,p2__36092_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__36101 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36101) : cljs.core.deref.call(null,G__36101));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__36102 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36102) : cljs.core.deref.call(null,G__36102));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__36118 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36118) : cljs.core.deref.call(null,G__36118));
})().call(null,x);
var or__24177__auto__ = (cljs.core.truth_((function (){var and__24165__auto__ = xprefs;
if(cljs.core.truth_(and__24165__auto__)){
var G__36120 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__36120) : xprefs.call(null,G__36120));
} else {
return and__24165__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__36121 = cljs.core.rest(ps);
ps = G__36121;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__36122 = cljs.core.rest(ps);
ps = G__36122;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__24177__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__36136){
var vec__36137 = p__36136;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36137,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36137,(1),null);
var e = vec__36137;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__36138 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36138) : cljs.core.deref.call(null,G__36138));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24177__auto__ = (be == null);
if(or__24177__auto__){
return or__24177__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__36139 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36139) : cljs.core.deref.call(null,G__36139));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__36140 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36140) : cljs.core.deref.call(null,G__36140));
})(),(function (){var G__36141 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36141) : cljs.core.deref.call(null,G__36141));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj36143 = {};
return obj36143;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._reset[(function (){var G__36147 = x__24813__auto__;
return goog.typeOf(G__36147);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._reset["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._add_method[(function (){var G__36151 = x__24813__auto__;
return goog.typeOf(G__36151);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._add_method["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._remove_method[(function (){var G__36155 = x__24813__auto__;
return goog.typeOf(G__36155);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._prefer_method[(function (){var G__36159 = x__24813__auto__;
return goog.typeOf(G__36159);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._get_method[(function (){var G__36163 = x__24813__auto__;
return goog.typeOf(G__36163);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._get_method["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._methods[(function (){var G__36167 = x__24813__auto__;
return goog.typeOf(G__36167);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._methods["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._prefers[(function (){var G__36171 = x__24813__auto__;
return goog.typeOf(G__36171);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._prefers["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__36173 = this$__$1;
return goog.getUid(G__36173);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__36174 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36174) : cljs.core.deref.call(null,G__36174));
})(),(function (){var G__36175 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36175) : cljs.core.deref.call(null,G__36175));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__36176 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36176) : cljs.core.deref.call(null,G__36176));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__36177 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36177) : cljs.core.deref.call(null,G__36177));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__36178 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36178) : cljs.core.deref.call(null,G__36178));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__36179 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36179) : cljs.core.deref.call(null,G__36179));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__37020 = null;
var G__37020__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__37020__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36180 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__36180) : self__.dispatch_fn.call(null,G__36180));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36181 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__36181) : target_fn.call(null,G__36181));
});
var G__37020__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36182 = a;
var G__36183 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__36182,G__36183) : self__.dispatch_fn.call(null,G__36182,G__36183));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36184 = a;
var G__36185 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__36184,G__36185) : target_fn.call(null,G__36184,G__36185));
});
var G__37020__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36186 = a;
var G__36187 = b;
var G__36188 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__36186,G__36187,G__36188) : self__.dispatch_fn.call(null,G__36186,G__36187,G__36188));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36189 = a;
var G__36190 = b;
var G__36191 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__36189,G__36190,G__36191) : target_fn.call(null,G__36189,G__36190,G__36191));
});
var G__37020__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36192 = a;
var G__36193 = b;
var G__36194 = c;
var G__36195 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__36192,G__36193,G__36194,G__36195) : self__.dispatch_fn.call(null,G__36192,G__36193,G__36194,G__36195));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36196 = a;
var G__36197 = b;
var G__36198 = c;
var G__36199 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__36196,G__36197,G__36198,G__36199) : target_fn.call(null,G__36196,G__36197,G__36198,G__36199));
});
var G__37020__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36200 = a;
var G__36201 = b;
var G__36202 = c;
var G__36203 = d;
var G__36204 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__36200,G__36201,G__36202,G__36203,G__36204) : self__.dispatch_fn.call(null,G__36200,G__36201,G__36202,G__36203,G__36204));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36205 = a;
var G__36206 = b;
var G__36207 = c;
var G__36208 = d;
var G__36209 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__36205,G__36206,G__36207,G__36208,G__36209) : target_fn.call(null,G__36205,G__36206,G__36207,G__36208,G__36209));
});
var G__37020__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36210 = a;
var G__36211 = b;
var G__36212 = c;
var G__36213 = d;
var G__36214 = e;
var G__36215 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__36210,G__36211,G__36212,G__36213,G__36214,G__36215) : self__.dispatch_fn.call(null,G__36210,G__36211,G__36212,G__36213,G__36214,G__36215));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36216 = a;
var G__36217 = b;
var G__36218 = c;
var G__36219 = d;
var G__36220 = e;
var G__36221 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__36216,G__36217,G__36218,G__36219,G__36220,G__36221) : target_fn.call(null,G__36216,G__36217,G__36218,G__36219,G__36220,G__36221));
});
var G__37020__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36222 = a;
var G__36223 = b;
var G__36224 = c;
var G__36225 = d;
var G__36226 = e;
var G__36227 = f;
var G__36228 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__36222,G__36223,G__36224,G__36225,G__36226,G__36227,G__36228) : self__.dispatch_fn.call(null,G__36222,G__36223,G__36224,G__36225,G__36226,G__36227,G__36228));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36229 = a;
var G__36230 = b;
var G__36231 = c;
var G__36232 = d;
var G__36233 = e;
var G__36234 = f;
var G__36235 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__36229,G__36230,G__36231,G__36232,G__36233,G__36234,G__36235) : target_fn.call(null,G__36229,G__36230,G__36231,G__36232,G__36233,G__36234,G__36235));
});
var G__37020__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36236 = a;
var G__36237 = b;
var G__36238 = c;
var G__36239 = d;
var G__36240 = e;
var G__36241 = f;
var G__36242 = g;
var G__36243 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__36236,G__36237,G__36238,G__36239,G__36240,G__36241,G__36242,G__36243) : self__.dispatch_fn.call(null,G__36236,G__36237,G__36238,G__36239,G__36240,G__36241,G__36242,G__36243));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36244 = a;
var G__36245 = b;
var G__36246 = c;
var G__36247 = d;
var G__36248 = e;
var G__36249 = f;
var G__36250 = g;
var G__36251 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__36244,G__36245,G__36246,G__36247,G__36248,G__36249,G__36250,G__36251) : target_fn.call(null,G__36244,G__36245,G__36246,G__36247,G__36248,G__36249,G__36250,G__36251));
});
var G__37020__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36252 = a;
var G__36253 = b;
var G__36254 = c;
var G__36255 = d;
var G__36256 = e;
var G__36257 = f;
var G__36258 = g;
var G__36259 = h;
var G__36260 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__36252,G__36253,G__36254,G__36255,G__36256,G__36257,G__36258,G__36259,G__36260) : self__.dispatch_fn.call(null,G__36252,G__36253,G__36254,G__36255,G__36256,G__36257,G__36258,G__36259,G__36260));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36261 = a;
var G__36262 = b;
var G__36263 = c;
var G__36264 = d;
var G__36265 = e;
var G__36266 = f;
var G__36267 = g;
var G__36268 = h;
var G__36269 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__36261,G__36262,G__36263,G__36264,G__36265,G__36266,G__36267,G__36268,G__36269) : target_fn.call(null,G__36261,G__36262,G__36263,G__36264,G__36265,G__36266,G__36267,G__36268,G__36269));
});
var G__37020__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36270 = a;
var G__36271 = b;
var G__36272 = c;
var G__36273 = d;
var G__36274 = e;
var G__36275 = f;
var G__36276 = g;
var G__36277 = h;
var G__36278 = i;
var G__36279 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__36270,G__36271,G__36272,G__36273,G__36274,G__36275,G__36276,G__36277,G__36278,G__36279) : self__.dispatch_fn.call(null,G__36270,G__36271,G__36272,G__36273,G__36274,G__36275,G__36276,G__36277,G__36278,G__36279));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36280 = a;
var G__36281 = b;
var G__36282 = c;
var G__36283 = d;
var G__36284 = e;
var G__36285 = f;
var G__36286 = g;
var G__36287 = h;
var G__36288 = i;
var G__36289 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__36280,G__36281,G__36282,G__36283,G__36284,G__36285,G__36286,G__36287,G__36288,G__36289) : target_fn.call(null,G__36280,G__36281,G__36282,G__36283,G__36284,G__36285,G__36286,G__36287,G__36288,G__36289));
});
var G__37020__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36290 = a;
var G__36291 = b;
var G__36292 = c;
var G__36293 = d;
var G__36294 = e;
var G__36295 = f;
var G__36296 = g;
var G__36297 = h;
var G__36298 = i;
var G__36299 = j;
var G__36300 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__36290,G__36291,G__36292,G__36293,G__36294,G__36295,G__36296,G__36297,G__36298,G__36299,G__36300) : self__.dispatch_fn.call(null,G__36290,G__36291,G__36292,G__36293,G__36294,G__36295,G__36296,G__36297,G__36298,G__36299,G__36300));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36301 = a;
var G__36302 = b;
var G__36303 = c;
var G__36304 = d;
var G__36305 = e;
var G__36306 = f;
var G__36307 = g;
var G__36308 = h;
var G__36309 = i;
var G__36310 = j;
var G__36311 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__36301,G__36302,G__36303,G__36304,G__36305,G__36306,G__36307,G__36308,G__36309,G__36310,G__36311) : target_fn.call(null,G__36301,G__36302,G__36303,G__36304,G__36305,G__36306,G__36307,G__36308,G__36309,G__36310,G__36311));
});
var G__37020__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36312 = a;
var G__36313 = b;
var G__36314 = c;
var G__36315 = d;
var G__36316 = e;
var G__36317 = f;
var G__36318 = g;
var G__36319 = h;
var G__36320 = i;
var G__36321 = j;
var G__36322 = k;
var G__36323 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__36312,G__36313,G__36314,G__36315,G__36316,G__36317,G__36318,G__36319,G__36320,G__36321,G__36322,G__36323) : self__.dispatch_fn.call(null,G__36312,G__36313,G__36314,G__36315,G__36316,G__36317,G__36318,G__36319,G__36320,G__36321,G__36322,G__36323));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36324 = a;
var G__36325 = b;
var G__36326 = c;
var G__36327 = d;
var G__36328 = e;
var G__36329 = f;
var G__36330 = g;
var G__36331 = h;
var G__36332 = i;
var G__36333 = j;
var G__36334 = k;
var G__36335 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__36324,G__36325,G__36326,G__36327,G__36328,G__36329,G__36330,G__36331,G__36332,G__36333,G__36334,G__36335) : target_fn.call(null,G__36324,G__36325,G__36326,G__36327,G__36328,G__36329,G__36330,G__36331,G__36332,G__36333,G__36334,G__36335));
});
var G__37020__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36336 = a;
var G__36337 = b;
var G__36338 = c;
var G__36339 = d;
var G__36340 = e;
var G__36341 = f;
var G__36342 = g;
var G__36343 = h;
var G__36344 = i;
var G__36345 = j;
var G__36346 = k;
var G__36347 = l;
var G__36348 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__36336,G__36337,G__36338,G__36339,G__36340,G__36341,G__36342,G__36343,G__36344,G__36345,G__36346,G__36347,G__36348) : self__.dispatch_fn.call(null,G__36336,G__36337,G__36338,G__36339,G__36340,G__36341,G__36342,G__36343,G__36344,G__36345,G__36346,G__36347,G__36348));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36349 = a;
var G__36350 = b;
var G__36351 = c;
var G__36352 = d;
var G__36353 = e;
var G__36354 = f;
var G__36355 = g;
var G__36356 = h;
var G__36357 = i;
var G__36358 = j;
var G__36359 = k;
var G__36360 = l;
var G__36361 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__36349,G__36350,G__36351,G__36352,G__36353,G__36354,G__36355,G__36356,G__36357,G__36358,G__36359,G__36360,G__36361) : target_fn.call(null,G__36349,G__36350,G__36351,G__36352,G__36353,G__36354,G__36355,G__36356,G__36357,G__36358,G__36359,G__36360,G__36361));
});
var G__37020__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36362 = a;
var G__36363 = b;
var G__36364 = c;
var G__36365 = d;
var G__36366 = e;
var G__36367 = f;
var G__36368 = g;
var G__36369 = h;
var G__36370 = i;
var G__36371 = j;
var G__36372 = k;
var G__36373 = l;
var G__36374 = m;
var G__36375 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__36362,G__36363,G__36364,G__36365,G__36366,G__36367,G__36368,G__36369,G__36370,G__36371,G__36372,G__36373,G__36374,G__36375) : self__.dispatch_fn.call(null,G__36362,G__36363,G__36364,G__36365,G__36366,G__36367,G__36368,G__36369,G__36370,G__36371,G__36372,G__36373,G__36374,G__36375));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36376 = a;
var G__36377 = b;
var G__36378 = c;
var G__36379 = d;
var G__36380 = e;
var G__36381 = f;
var G__36382 = g;
var G__36383 = h;
var G__36384 = i;
var G__36385 = j;
var G__36386 = k;
var G__36387 = l;
var G__36388 = m;
var G__36389 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__36376,G__36377,G__36378,G__36379,G__36380,G__36381,G__36382,G__36383,G__36384,G__36385,G__36386,G__36387,G__36388,G__36389) : target_fn.call(null,G__36376,G__36377,G__36378,G__36379,G__36380,G__36381,G__36382,G__36383,G__36384,G__36385,G__36386,G__36387,G__36388,G__36389));
});
var G__37020__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36390 = a;
var G__36391 = b;
var G__36392 = c;
var G__36393 = d;
var G__36394 = e;
var G__36395 = f;
var G__36396 = g;
var G__36397 = h;
var G__36398 = i;
var G__36399 = j;
var G__36400 = k;
var G__36401 = l;
var G__36402 = m;
var G__36403 = n;
var G__36404 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__36390,G__36391,G__36392,G__36393,G__36394,G__36395,G__36396,G__36397,G__36398,G__36399,G__36400,G__36401,G__36402,G__36403,G__36404) : self__.dispatch_fn.call(null,G__36390,G__36391,G__36392,G__36393,G__36394,G__36395,G__36396,G__36397,G__36398,G__36399,G__36400,G__36401,G__36402,G__36403,G__36404));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36405 = a;
var G__36406 = b;
var G__36407 = c;
var G__36408 = d;
var G__36409 = e;
var G__36410 = f;
var G__36411 = g;
var G__36412 = h;
var G__36413 = i;
var G__36414 = j;
var G__36415 = k;
var G__36416 = l;
var G__36417 = m;
var G__36418 = n;
var G__36419 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__36405,G__36406,G__36407,G__36408,G__36409,G__36410,G__36411,G__36412,G__36413,G__36414,G__36415,G__36416,G__36417,G__36418,G__36419) : target_fn.call(null,G__36405,G__36406,G__36407,G__36408,G__36409,G__36410,G__36411,G__36412,G__36413,G__36414,G__36415,G__36416,G__36417,G__36418,G__36419));
});
var G__37020__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36420 = a;
var G__36421 = b;
var G__36422 = c;
var G__36423 = d;
var G__36424 = e;
var G__36425 = f;
var G__36426 = g;
var G__36427 = h;
var G__36428 = i;
var G__36429 = j;
var G__36430 = k;
var G__36431 = l;
var G__36432 = m;
var G__36433 = n;
var G__36434 = o;
var G__36435 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__36420,G__36421,G__36422,G__36423,G__36424,G__36425,G__36426,G__36427,G__36428,G__36429,G__36430,G__36431,G__36432,G__36433,G__36434,G__36435) : self__.dispatch_fn.call(null,G__36420,G__36421,G__36422,G__36423,G__36424,G__36425,G__36426,G__36427,G__36428,G__36429,G__36430,G__36431,G__36432,G__36433,G__36434,G__36435));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36436 = a;
var G__36437 = b;
var G__36438 = c;
var G__36439 = d;
var G__36440 = e;
var G__36441 = f;
var G__36442 = g;
var G__36443 = h;
var G__36444 = i;
var G__36445 = j;
var G__36446 = k;
var G__36447 = l;
var G__36448 = m;
var G__36449 = n;
var G__36450 = o;
var G__36451 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__36436,G__36437,G__36438,G__36439,G__36440,G__36441,G__36442,G__36443,G__36444,G__36445,G__36446,G__36447,G__36448,G__36449,G__36450,G__36451) : target_fn.call(null,G__36436,G__36437,G__36438,G__36439,G__36440,G__36441,G__36442,G__36443,G__36444,G__36445,G__36446,G__36447,G__36448,G__36449,G__36450,G__36451));
});
var G__37020__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36452 = a;
var G__36453 = b;
var G__36454 = c;
var G__36455 = d;
var G__36456 = e;
var G__36457 = f;
var G__36458 = g;
var G__36459 = h;
var G__36460 = i;
var G__36461 = j;
var G__36462 = k;
var G__36463 = l;
var G__36464 = m;
var G__36465 = n;
var G__36466 = o;
var G__36467 = p;
var G__36468 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__36452,G__36453,G__36454,G__36455,G__36456,G__36457,G__36458,G__36459,G__36460,G__36461,G__36462,G__36463,G__36464,G__36465,G__36466,G__36467,G__36468) : self__.dispatch_fn.call(null,G__36452,G__36453,G__36454,G__36455,G__36456,G__36457,G__36458,G__36459,G__36460,G__36461,G__36462,G__36463,G__36464,G__36465,G__36466,G__36467,G__36468));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36469 = a;
var G__36470 = b;
var G__36471 = c;
var G__36472 = d;
var G__36473 = e;
var G__36474 = f;
var G__36475 = g;
var G__36476 = h;
var G__36477 = i;
var G__36478 = j;
var G__36479 = k;
var G__36480 = l;
var G__36481 = m;
var G__36482 = n;
var G__36483 = o;
var G__36484 = p;
var G__36485 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__36469,G__36470,G__36471,G__36472,G__36473,G__36474,G__36475,G__36476,G__36477,G__36478,G__36479,G__36480,G__36481,G__36482,G__36483,G__36484,G__36485) : target_fn.call(null,G__36469,G__36470,G__36471,G__36472,G__36473,G__36474,G__36475,G__36476,G__36477,G__36478,G__36479,G__36480,G__36481,G__36482,G__36483,G__36484,G__36485));
});
var G__37020__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36486 = a;
var G__36487 = b;
var G__36488 = c;
var G__36489 = d;
var G__36490 = e;
var G__36491 = f;
var G__36492 = g;
var G__36493 = h;
var G__36494 = i;
var G__36495 = j;
var G__36496 = k;
var G__36497 = l;
var G__36498 = m;
var G__36499 = n;
var G__36500 = o;
var G__36501 = p;
var G__36502 = q;
var G__36503 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__36486,G__36487,G__36488,G__36489,G__36490,G__36491,G__36492,G__36493,G__36494,G__36495,G__36496,G__36497,G__36498,G__36499,G__36500,G__36501,G__36502,G__36503) : self__.dispatch_fn.call(null,G__36486,G__36487,G__36488,G__36489,G__36490,G__36491,G__36492,G__36493,G__36494,G__36495,G__36496,G__36497,G__36498,G__36499,G__36500,G__36501,G__36502,G__36503));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36504 = a;
var G__36505 = b;
var G__36506 = c;
var G__36507 = d;
var G__36508 = e;
var G__36509 = f;
var G__36510 = g;
var G__36511 = h;
var G__36512 = i;
var G__36513 = j;
var G__36514 = k;
var G__36515 = l;
var G__36516 = m;
var G__36517 = n;
var G__36518 = o;
var G__36519 = p;
var G__36520 = q;
var G__36521 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__36504,G__36505,G__36506,G__36507,G__36508,G__36509,G__36510,G__36511,G__36512,G__36513,G__36514,G__36515,G__36516,G__36517,G__36518,G__36519,G__36520,G__36521) : target_fn.call(null,G__36504,G__36505,G__36506,G__36507,G__36508,G__36509,G__36510,G__36511,G__36512,G__36513,G__36514,G__36515,G__36516,G__36517,G__36518,G__36519,G__36520,G__36521));
});
var G__37020__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36522 = a;
var G__36523 = b;
var G__36524 = c;
var G__36525 = d;
var G__36526 = e;
var G__36527 = f;
var G__36528 = g;
var G__36529 = h;
var G__36530 = i;
var G__36531 = j;
var G__36532 = k;
var G__36533 = l;
var G__36534 = m;
var G__36535 = n;
var G__36536 = o;
var G__36537 = p;
var G__36538 = q;
var G__36539 = r;
var G__36540 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__36522,G__36523,G__36524,G__36525,G__36526,G__36527,G__36528,G__36529,G__36530,G__36531,G__36532,G__36533,G__36534,G__36535,G__36536,G__36537,G__36538,G__36539,G__36540) : self__.dispatch_fn.call(null,G__36522,G__36523,G__36524,G__36525,G__36526,G__36527,G__36528,G__36529,G__36530,G__36531,G__36532,G__36533,G__36534,G__36535,G__36536,G__36537,G__36538,G__36539,G__36540));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36541 = a;
var G__36542 = b;
var G__36543 = c;
var G__36544 = d;
var G__36545 = e;
var G__36546 = f;
var G__36547 = g;
var G__36548 = h;
var G__36549 = i;
var G__36550 = j;
var G__36551 = k;
var G__36552 = l;
var G__36553 = m;
var G__36554 = n;
var G__36555 = o;
var G__36556 = p;
var G__36557 = q;
var G__36558 = r;
var G__36559 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__36541,G__36542,G__36543,G__36544,G__36545,G__36546,G__36547,G__36548,G__36549,G__36550,G__36551,G__36552,G__36553,G__36554,G__36555,G__36556,G__36557,G__36558,G__36559) : target_fn.call(null,G__36541,G__36542,G__36543,G__36544,G__36545,G__36546,G__36547,G__36548,G__36549,G__36550,G__36551,G__36552,G__36553,G__36554,G__36555,G__36556,G__36557,G__36558,G__36559));
});
var G__37020__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36560 = a;
var G__36561 = b;
var G__36562 = c;
var G__36563 = d;
var G__36564 = e;
var G__36565 = f;
var G__36566 = g;
var G__36567 = h;
var G__36568 = i;
var G__36569 = j;
var G__36570 = k;
var G__36571 = l;
var G__36572 = m;
var G__36573 = n;
var G__36574 = o;
var G__36575 = p;
var G__36576 = q;
var G__36577 = r;
var G__36578 = s;
var G__36579 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__36560,G__36561,G__36562,G__36563,G__36564,G__36565,G__36566,G__36567,G__36568,G__36569,G__36570,G__36571,G__36572,G__36573,G__36574,G__36575,G__36576,G__36577,G__36578,G__36579) : self__.dispatch_fn.call(null,G__36560,G__36561,G__36562,G__36563,G__36564,G__36565,G__36566,G__36567,G__36568,G__36569,G__36570,G__36571,G__36572,G__36573,G__36574,G__36575,G__36576,G__36577,G__36578,G__36579));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36580 = a;
var G__36581 = b;
var G__36582 = c;
var G__36583 = d;
var G__36584 = e;
var G__36585 = f;
var G__36586 = g;
var G__36587 = h;
var G__36588 = i;
var G__36589 = j;
var G__36590 = k;
var G__36591 = l;
var G__36592 = m;
var G__36593 = n;
var G__36594 = o;
var G__36595 = p;
var G__36596 = q;
var G__36597 = r;
var G__36598 = s;
var G__36599 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__36580,G__36581,G__36582,G__36583,G__36584,G__36585,G__36586,G__36587,G__36588,G__36589,G__36590,G__36591,G__36592,G__36593,G__36594,G__36595,G__36596,G__36597,G__36598,G__36599) : target_fn.call(null,G__36580,G__36581,G__36582,G__36583,G__36584,G__36585,G__36586,G__36587,G__36588,G__36589,G__36590,G__36591,G__36592,G__36593,G__36594,G__36595,G__36596,G__36597,G__36598,G__36599));
});
var G__37020__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__37020 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__37020__1.call(this,self__);
case 2:
return G__37020__2.call(this,self__,a);
case 3:
return G__37020__3.call(this,self__,a,b);
case 4:
return G__37020__4.call(this,self__,a,b,c);
case 5:
return G__37020__5.call(this,self__,a,b,c,d);
case 6:
return G__37020__6.call(this,self__,a,b,c,d,e);
case 7:
return G__37020__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__37020__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__37020__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__37020__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__37020__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__37020__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__37020__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__37020__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__37020__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__37020__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__37020__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__37020__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__37020__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__37020__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__37020__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__37020__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37020.cljs$core$IFn$_invoke$arity$1 = G__37020__1;
G__37020.cljs$core$IFn$_invoke$arity$2 = G__37020__2;
G__37020.cljs$core$IFn$_invoke$arity$3 = G__37020__3;
G__37020.cljs$core$IFn$_invoke$arity$4 = G__37020__4;
G__37020.cljs$core$IFn$_invoke$arity$5 = G__37020__5;
G__37020.cljs$core$IFn$_invoke$arity$6 = G__37020__6;
G__37020.cljs$core$IFn$_invoke$arity$7 = G__37020__7;
G__37020.cljs$core$IFn$_invoke$arity$8 = G__37020__8;
G__37020.cljs$core$IFn$_invoke$arity$9 = G__37020__9;
G__37020.cljs$core$IFn$_invoke$arity$10 = G__37020__10;
G__37020.cljs$core$IFn$_invoke$arity$11 = G__37020__11;
G__37020.cljs$core$IFn$_invoke$arity$12 = G__37020__12;
G__37020.cljs$core$IFn$_invoke$arity$13 = G__37020__13;
G__37020.cljs$core$IFn$_invoke$arity$14 = G__37020__14;
G__37020.cljs$core$IFn$_invoke$arity$15 = G__37020__15;
G__37020.cljs$core$IFn$_invoke$arity$16 = G__37020__16;
G__37020.cljs$core$IFn$_invoke$arity$17 = G__37020__17;
G__37020.cljs$core$IFn$_invoke$arity$18 = G__37020__18;
G__37020.cljs$core$IFn$_invoke$arity$19 = G__37020__19;
G__37020.cljs$core$IFn$_invoke$arity$20 = G__37020__20;
G__37020.cljs$core$IFn$_invoke$arity$21 = G__37020__21;
G__37020.cljs$core$IFn$_invoke$arity$22 = G__37020__22;
return G__37020;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args36172){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36172)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36600 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__36600) : self__.dispatch_fn.call(null,G__36600));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36601 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__36601) : target_fn.call(null,G__36601));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36602 = a;
var G__36603 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__36602,G__36603) : self__.dispatch_fn.call(null,G__36602,G__36603));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36604 = a;
var G__36605 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__36604,G__36605) : target_fn.call(null,G__36604,G__36605));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36606 = a;
var G__36607 = b;
var G__36608 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__36606,G__36607,G__36608) : self__.dispatch_fn.call(null,G__36606,G__36607,G__36608));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36609 = a;
var G__36610 = b;
var G__36611 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__36609,G__36610,G__36611) : target_fn.call(null,G__36609,G__36610,G__36611));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36612 = a;
var G__36613 = b;
var G__36614 = c;
var G__36615 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__36612,G__36613,G__36614,G__36615) : self__.dispatch_fn.call(null,G__36612,G__36613,G__36614,G__36615));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36616 = a;
var G__36617 = b;
var G__36618 = c;
var G__36619 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__36616,G__36617,G__36618,G__36619) : target_fn.call(null,G__36616,G__36617,G__36618,G__36619));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36620 = a;
var G__36621 = b;
var G__36622 = c;
var G__36623 = d;
var G__36624 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__36620,G__36621,G__36622,G__36623,G__36624) : self__.dispatch_fn.call(null,G__36620,G__36621,G__36622,G__36623,G__36624));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36625 = a;
var G__36626 = b;
var G__36627 = c;
var G__36628 = d;
var G__36629 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__36625,G__36626,G__36627,G__36628,G__36629) : target_fn.call(null,G__36625,G__36626,G__36627,G__36628,G__36629));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36630 = a;
var G__36631 = b;
var G__36632 = c;
var G__36633 = d;
var G__36634 = e;
var G__36635 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__36630,G__36631,G__36632,G__36633,G__36634,G__36635) : self__.dispatch_fn.call(null,G__36630,G__36631,G__36632,G__36633,G__36634,G__36635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36636 = a;
var G__36637 = b;
var G__36638 = c;
var G__36639 = d;
var G__36640 = e;
var G__36641 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__36636,G__36637,G__36638,G__36639,G__36640,G__36641) : target_fn.call(null,G__36636,G__36637,G__36638,G__36639,G__36640,G__36641));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36642 = a;
var G__36643 = b;
var G__36644 = c;
var G__36645 = d;
var G__36646 = e;
var G__36647 = f;
var G__36648 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__36642,G__36643,G__36644,G__36645,G__36646,G__36647,G__36648) : self__.dispatch_fn.call(null,G__36642,G__36643,G__36644,G__36645,G__36646,G__36647,G__36648));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36649 = a;
var G__36650 = b;
var G__36651 = c;
var G__36652 = d;
var G__36653 = e;
var G__36654 = f;
var G__36655 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__36649,G__36650,G__36651,G__36652,G__36653,G__36654,G__36655) : target_fn.call(null,G__36649,G__36650,G__36651,G__36652,G__36653,G__36654,G__36655));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36656 = a;
var G__36657 = b;
var G__36658 = c;
var G__36659 = d;
var G__36660 = e;
var G__36661 = f;
var G__36662 = g;
var G__36663 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__36656,G__36657,G__36658,G__36659,G__36660,G__36661,G__36662,G__36663) : self__.dispatch_fn.call(null,G__36656,G__36657,G__36658,G__36659,G__36660,G__36661,G__36662,G__36663));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36664 = a;
var G__36665 = b;
var G__36666 = c;
var G__36667 = d;
var G__36668 = e;
var G__36669 = f;
var G__36670 = g;
var G__36671 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__36664,G__36665,G__36666,G__36667,G__36668,G__36669,G__36670,G__36671) : target_fn.call(null,G__36664,G__36665,G__36666,G__36667,G__36668,G__36669,G__36670,G__36671));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36672 = a;
var G__36673 = b;
var G__36674 = c;
var G__36675 = d;
var G__36676 = e;
var G__36677 = f;
var G__36678 = g;
var G__36679 = h;
var G__36680 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__36672,G__36673,G__36674,G__36675,G__36676,G__36677,G__36678,G__36679,G__36680) : self__.dispatch_fn.call(null,G__36672,G__36673,G__36674,G__36675,G__36676,G__36677,G__36678,G__36679,G__36680));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36681 = a;
var G__36682 = b;
var G__36683 = c;
var G__36684 = d;
var G__36685 = e;
var G__36686 = f;
var G__36687 = g;
var G__36688 = h;
var G__36689 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__36681,G__36682,G__36683,G__36684,G__36685,G__36686,G__36687,G__36688,G__36689) : target_fn.call(null,G__36681,G__36682,G__36683,G__36684,G__36685,G__36686,G__36687,G__36688,G__36689));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36690 = a;
var G__36691 = b;
var G__36692 = c;
var G__36693 = d;
var G__36694 = e;
var G__36695 = f;
var G__36696 = g;
var G__36697 = h;
var G__36698 = i;
var G__36699 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__36690,G__36691,G__36692,G__36693,G__36694,G__36695,G__36696,G__36697,G__36698,G__36699) : self__.dispatch_fn.call(null,G__36690,G__36691,G__36692,G__36693,G__36694,G__36695,G__36696,G__36697,G__36698,G__36699));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36700 = a;
var G__36701 = b;
var G__36702 = c;
var G__36703 = d;
var G__36704 = e;
var G__36705 = f;
var G__36706 = g;
var G__36707 = h;
var G__36708 = i;
var G__36709 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__36700,G__36701,G__36702,G__36703,G__36704,G__36705,G__36706,G__36707,G__36708,G__36709) : target_fn.call(null,G__36700,G__36701,G__36702,G__36703,G__36704,G__36705,G__36706,G__36707,G__36708,G__36709));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36710 = a;
var G__36711 = b;
var G__36712 = c;
var G__36713 = d;
var G__36714 = e;
var G__36715 = f;
var G__36716 = g;
var G__36717 = h;
var G__36718 = i;
var G__36719 = j;
var G__36720 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__36710,G__36711,G__36712,G__36713,G__36714,G__36715,G__36716,G__36717,G__36718,G__36719,G__36720) : self__.dispatch_fn.call(null,G__36710,G__36711,G__36712,G__36713,G__36714,G__36715,G__36716,G__36717,G__36718,G__36719,G__36720));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36721 = a;
var G__36722 = b;
var G__36723 = c;
var G__36724 = d;
var G__36725 = e;
var G__36726 = f;
var G__36727 = g;
var G__36728 = h;
var G__36729 = i;
var G__36730 = j;
var G__36731 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__36721,G__36722,G__36723,G__36724,G__36725,G__36726,G__36727,G__36728,G__36729,G__36730,G__36731) : target_fn.call(null,G__36721,G__36722,G__36723,G__36724,G__36725,G__36726,G__36727,G__36728,G__36729,G__36730,G__36731));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36732 = a;
var G__36733 = b;
var G__36734 = c;
var G__36735 = d;
var G__36736 = e;
var G__36737 = f;
var G__36738 = g;
var G__36739 = h;
var G__36740 = i;
var G__36741 = j;
var G__36742 = k;
var G__36743 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__36732,G__36733,G__36734,G__36735,G__36736,G__36737,G__36738,G__36739,G__36740,G__36741,G__36742,G__36743) : self__.dispatch_fn.call(null,G__36732,G__36733,G__36734,G__36735,G__36736,G__36737,G__36738,G__36739,G__36740,G__36741,G__36742,G__36743));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36744 = a;
var G__36745 = b;
var G__36746 = c;
var G__36747 = d;
var G__36748 = e;
var G__36749 = f;
var G__36750 = g;
var G__36751 = h;
var G__36752 = i;
var G__36753 = j;
var G__36754 = k;
var G__36755 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__36744,G__36745,G__36746,G__36747,G__36748,G__36749,G__36750,G__36751,G__36752,G__36753,G__36754,G__36755) : target_fn.call(null,G__36744,G__36745,G__36746,G__36747,G__36748,G__36749,G__36750,G__36751,G__36752,G__36753,G__36754,G__36755));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36756 = a;
var G__36757 = b;
var G__36758 = c;
var G__36759 = d;
var G__36760 = e;
var G__36761 = f;
var G__36762 = g;
var G__36763 = h;
var G__36764 = i;
var G__36765 = j;
var G__36766 = k;
var G__36767 = l;
var G__36768 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__36756,G__36757,G__36758,G__36759,G__36760,G__36761,G__36762,G__36763,G__36764,G__36765,G__36766,G__36767,G__36768) : self__.dispatch_fn.call(null,G__36756,G__36757,G__36758,G__36759,G__36760,G__36761,G__36762,G__36763,G__36764,G__36765,G__36766,G__36767,G__36768));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36769 = a;
var G__36770 = b;
var G__36771 = c;
var G__36772 = d;
var G__36773 = e;
var G__36774 = f;
var G__36775 = g;
var G__36776 = h;
var G__36777 = i;
var G__36778 = j;
var G__36779 = k;
var G__36780 = l;
var G__36781 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__36769,G__36770,G__36771,G__36772,G__36773,G__36774,G__36775,G__36776,G__36777,G__36778,G__36779,G__36780,G__36781) : target_fn.call(null,G__36769,G__36770,G__36771,G__36772,G__36773,G__36774,G__36775,G__36776,G__36777,G__36778,G__36779,G__36780,G__36781));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36782 = a;
var G__36783 = b;
var G__36784 = c;
var G__36785 = d;
var G__36786 = e;
var G__36787 = f;
var G__36788 = g;
var G__36789 = h;
var G__36790 = i;
var G__36791 = j;
var G__36792 = k;
var G__36793 = l;
var G__36794 = m;
var G__36795 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__36782,G__36783,G__36784,G__36785,G__36786,G__36787,G__36788,G__36789,G__36790,G__36791,G__36792,G__36793,G__36794,G__36795) : self__.dispatch_fn.call(null,G__36782,G__36783,G__36784,G__36785,G__36786,G__36787,G__36788,G__36789,G__36790,G__36791,G__36792,G__36793,G__36794,G__36795));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36796 = a;
var G__36797 = b;
var G__36798 = c;
var G__36799 = d;
var G__36800 = e;
var G__36801 = f;
var G__36802 = g;
var G__36803 = h;
var G__36804 = i;
var G__36805 = j;
var G__36806 = k;
var G__36807 = l;
var G__36808 = m;
var G__36809 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__36796,G__36797,G__36798,G__36799,G__36800,G__36801,G__36802,G__36803,G__36804,G__36805,G__36806,G__36807,G__36808,G__36809) : target_fn.call(null,G__36796,G__36797,G__36798,G__36799,G__36800,G__36801,G__36802,G__36803,G__36804,G__36805,G__36806,G__36807,G__36808,G__36809));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36810 = a;
var G__36811 = b;
var G__36812 = c;
var G__36813 = d;
var G__36814 = e;
var G__36815 = f;
var G__36816 = g;
var G__36817 = h;
var G__36818 = i;
var G__36819 = j;
var G__36820 = k;
var G__36821 = l;
var G__36822 = m;
var G__36823 = n;
var G__36824 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__36810,G__36811,G__36812,G__36813,G__36814,G__36815,G__36816,G__36817,G__36818,G__36819,G__36820,G__36821,G__36822,G__36823,G__36824) : self__.dispatch_fn.call(null,G__36810,G__36811,G__36812,G__36813,G__36814,G__36815,G__36816,G__36817,G__36818,G__36819,G__36820,G__36821,G__36822,G__36823,G__36824));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36825 = a;
var G__36826 = b;
var G__36827 = c;
var G__36828 = d;
var G__36829 = e;
var G__36830 = f;
var G__36831 = g;
var G__36832 = h;
var G__36833 = i;
var G__36834 = j;
var G__36835 = k;
var G__36836 = l;
var G__36837 = m;
var G__36838 = n;
var G__36839 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__36825,G__36826,G__36827,G__36828,G__36829,G__36830,G__36831,G__36832,G__36833,G__36834,G__36835,G__36836,G__36837,G__36838,G__36839) : target_fn.call(null,G__36825,G__36826,G__36827,G__36828,G__36829,G__36830,G__36831,G__36832,G__36833,G__36834,G__36835,G__36836,G__36837,G__36838,G__36839));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36840 = a;
var G__36841 = b;
var G__36842 = c;
var G__36843 = d;
var G__36844 = e;
var G__36845 = f;
var G__36846 = g;
var G__36847 = h;
var G__36848 = i;
var G__36849 = j;
var G__36850 = k;
var G__36851 = l;
var G__36852 = m;
var G__36853 = n;
var G__36854 = o;
var G__36855 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__36840,G__36841,G__36842,G__36843,G__36844,G__36845,G__36846,G__36847,G__36848,G__36849,G__36850,G__36851,G__36852,G__36853,G__36854,G__36855) : self__.dispatch_fn.call(null,G__36840,G__36841,G__36842,G__36843,G__36844,G__36845,G__36846,G__36847,G__36848,G__36849,G__36850,G__36851,G__36852,G__36853,G__36854,G__36855));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36856 = a;
var G__36857 = b;
var G__36858 = c;
var G__36859 = d;
var G__36860 = e;
var G__36861 = f;
var G__36862 = g;
var G__36863 = h;
var G__36864 = i;
var G__36865 = j;
var G__36866 = k;
var G__36867 = l;
var G__36868 = m;
var G__36869 = n;
var G__36870 = o;
var G__36871 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__36856,G__36857,G__36858,G__36859,G__36860,G__36861,G__36862,G__36863,G__36864,G__36865,G__36866,G__36867,G__36868,G__36869,G__36870,G__36871) : target_fn.call(null,G__36856,G__36857,G__36858,G__36859,G__36860,G__36861,G__36862,G__36863,G__36864,G__36865,G__36866,G__36867,G__36868,G__36869,G__36870,G__36871));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36872 = a;
var G__36873 = b;
var G__36874 = c;
var G__36875 = d;
var G__36876 = e;
var G__36877 = f;
var G__36878 = g;
var G__36879 = h;
var G__36880 = i;
var G__36881 = j;
var G__36882 = k;
var G__36883 = l;
var G__36884 = m;
var G__36885 = n;
var G__36886 = o;
var G__36887 = p;
var G__36888 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__36872,G__36873,G__36874,G__36875,G__36876,G__36877,G__36878,G__36879,G__36880,G__36881,G__36882,G__36883,G__36884,G__36885,G__36886,G__36887,G__36888) : self__.dispatch_fn.call(null,G__36872,G__36873,G__36874,G__36875,G__36876,G__36877,G__36878,G__36879,G__36880,G__36881,G__36882,G__36883,G__36884,G__36885,G__36886,G__36887,G__36888));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36889 = a;
var G__36890 = b;
var G__36891 = c;
var G__36892 = d;
var G__36893 = e;
var G__36894 = f;
var G__36895 = g;
var G__36896 = h;
var G__36897 = i;
var G__36898 = j;
var G__36899 = k;
var G__36900 = l;
var G__36901 = m;
var G__36902 = n;
var G__36903 = o;
var G__36904 = p;
var G__36905 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__36889,G__36890,G__36891,G__36892,G__36893,G__36894,G__36895,G__36896,G__36897,G__36898,G__36899,G__36900,G__36901,G__36902,G__36903,G__36904,G__36905) : target_fn.call(null,G__36889,G__36890,G__36891,G__36892,G__36893,G__36894,G__36895,G__36896,G__36897,G__36898,G__36899,G__36900,G__36901,G__36902,G__36903,G__36904,G__36905));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36906 = a;
var G__36907 = b;
var G__36908 = c;
var G__36909 = d;
var G__36910 = e;
var G__36911 = f;
var G__36912 = g;
var G__36913 = h;
var G__36914 = i;
var G__36915 = j;
var G__36916 = k;
var G__36917 = l;
var G__36918 = m;
var G__36919 = n;
var G__36920 = o;
var G__36921 = p;
var G__36922 = q;
var G__36923 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__36906,G__36907,G__36908,G__36909,G__36910,G__36911,G__36912,G__36913,G__36914,G__36915,G__36916,G__36917,G__36918,G__36919,G__36920,G__36921,G__36922,G__36923) : self__.dispatch_fn.call(null,G__36906,G__36907,G__36908,G__36909,G__36910,G__36911,G__36912,G__36913,G__36914,G__36915,G__36916,G__36917,G__36918,G__36919,G__36920,G__36921,G__36922,G__36923));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36924 = a;
var G__36925 = b;
var G__36926 = c;
var G__36927 = d;
var G__36928 = e;
var G__36929 = f;
var G__36930 = g;
var G__36931 = h;
var G__36932 = i;
var G__36933 = j;
var G__36934 = k;
var G__36935 = l;
var G__36936 = m;
var G__36937 = n;
var G__36938 = o;
var G__36939 = p;
var G__36940 = q;
var G__36941 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__36924,G__36925,G__36926,G__36927,G__36928,G__36929,G__36930,G__36931,G__36932,G__36933,G__36934,G__36935,G__36936,G__36937,G__36938,G__36939,G__36940,G__36941) : target_fn.call(null,G__36924,G__36925,G__36926,G__36927,G__36928,G__36929,G__36930,G__36931,G__36932,G__36933,G__36934,G__36935,G__36936,G__36937,G__36938,G__36939,G__36940,G__36941));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36942 = a;
var G__36943 = b;
var G__36944 = c;
var G__36945 = d;
var G__36946 = e;
var G__36947 = f;
var G__36948 = g;
var G__36949 = h;
var G__36950 = i;
var G__36951 = j;
var G__36952 = k;
var G__36953 = l;
var G__36954 = m;
var G__36955 = n;
var G__36956 = o;
var G__36957 = p;
var G__36958 = q;
var G__36959 = r;
var G__36960 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__36942,G__36943,G__36944,G__36945,G__36946,G__36947,G__36948,G__36949,G__36950,G__36951,G__36952,G__36953,G__36954,G__36955,G__36956,G__36957,G__36958,G__36959,G__36960) : self__.dispatch_fn.call(null,G__36942,G__36943,G__36944,G__36945,G__36946,G__36947,G__36948,G__36949,G__36950,G__36951,G__36952,G__36953,G__36954,G__36955,G__36956,G__36957,G__36958,G__36959,G__36960));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36961 = a;
var G__36962 = b;
var G__36963 = c;
var G__36964 = d;
var G__36965 = e;
var G__36966 = f;
var G__36967 = g;
var G__36968 = h;
var G__36969 = i;
var G__36970 = j;
var G__36971 = k;
var G__36972 = l;
var G__36973 = m;
var G__36974 = n;
var G__36975 = o;
var G__36976 = p;
var G__36977 = q;
var G__36978 = r;
var G__36979 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__36961,G__36962,G__36963,G__36964,G__36965,G__36966,G__36967,G__36968,G__36969,G__36970,G__36971,G__36972,G__36973,G__36974,G__36975,G__36976,G__36977,G__36978,G__36979) : target_fn.call(null,G__36961,G__36962,G__36963,G__36964,G__36965,G__36966,G__36967,G__36968,G__36969,G__36970,G__36971,G__36972,G__36973,G__36974,G__36975,G__36976,G__36977,G__36978,G__36979));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36980 = a;
var G__36981 = b;
var G__36982 = c;
var G__36983 = d;
var G__36984 = e;
var G__36985 = f;
var G__36986 = g;
var G__36987 = h;
var G__36988 = i;
var G__36989 = j;
var G__36990 = k;
var G__36991 = l;
var G__36992 = m;
var G__36993 = n;
var G__36994 = o;
var G__36995 = p;
var G__36996 = q;
var G__36997 = r;
var G__36998 = s;
var G__36999 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__36980,G__36981,G__36982,G__36983,G__36984,G__36985,G__36986,G__36987,G__36988,G__36989,G__36990,G__36991,G__36992,G__36993,G__36994,G__36995,G__36996,G__36997,G__36998,G__36999) : self__.dispatch_fn.call(null,G__36980,G__36981,G__36982,G__36983,G__36984,G__36985,G__36986,G__36987,G__36988,G__36989,G__36990,G__36991,G__36992,G__36993,G__36994,G__36995,G__36996,G__36997,G__36998,G__36999));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37000 = a;
var G__37001 = b;
var G__37002 = c;
var G__37003 = d;
var G__37004 = e;
var G__37005 = f;
var G__37006 = g;
var G__37007 = h;
var G__37008 = i;
var G__37009 = j;
var G__37010 = k;
var G__37011 = l;
var G__37012 = m;
var G__37013 = n;
var G__37014 = o;
var G__37015 = p;
var G__37016 = q;
var G__37017 = r;
var G__37018 = s;
var G__37019 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__37000,G__37001,G__37002,G__37003,G__37004,G__37005,G__37006,G__37007,G__37008,G__37009,G__37010,G__37011,G__37012,G__37013,G__37014,G__37015,G__37016,G__37017,G__37018,G__37019) : target_fn.call(null,G__37000,G__37001,G__37002,G__37003,G__37004,G__37005,G__37006,G__37007,G__37008,G__37009,G__37010,G__37011,G__37012,G__37013,G__37014,G__37015,G__37016,G__37017,G__37018,G__37019));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 2048;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__37021 = self__.uuid;
var G__37022 = other.uuid;
return goog.array.defaultCompare(G__37021,G__37022);
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__37023 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__37023);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__37031 = x;
var G__37032 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__37031,G__37032) : pred.call(null,G__37031,G__37032));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__37033 = y;
var G__37034 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__37033,G__37034) : pred.call(null,G__37033,G__37034));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$ok;
} else {
return cljs.core.constant$keyword$no_DASH_test;
}
});
