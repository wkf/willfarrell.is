// Compiled by ClojureScript 0.0-3119 {:optimize-constants true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3119";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$flush_DASH_on_DASH_newline,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$readably,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$meta,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$dup,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$print_DASH_length,cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__30676__delegate = function (args){
return console.log.apply(console,(function (){var G__30675 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__30675) : cljs.core.into_array.call(null,G__30675));
})());
};
var G__30676 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30677__i = 0, G__30677__a = new Array(arguments.length -  0);
while (G__30677__i < G__30677__a.length) {G__30677__a[G__30677__i] = arguments[G__30677__i + 0]; ++G__30677__i;}
  args = new cljs.core.IndexedSeq(G__30677__a,0);
} 
return G__30676__delegate.call(this,args);};
G__30676.cljs$lang$maxFixedArity = 0;
G__30676.cljs$lang$applyTo = (function (arglist__30678){
var args = cljs.core.seq(arglist__30678);
return G__30676__delegate(args);
});
G__30676.cljs$core$IFn$_invoke$arity$variadic = G__30676__delegate;
return G__30676;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__30680 = x;
return goog.isString(G__30680);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__30682 = x__$1;
return goog.typeOf(G__30682);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24165__auto__ = ty;
if(cljs.core.truth_(and__24165__auto__)){
return ty.cljs$lang$type;
} else {
return and__24165__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__30684 = obj;
return goog.typeOf(G__30684);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__30686 = Symbol;
return goog.typeOf(G__30686);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25062__auto___30688 = len;
var i_30689 = (0);
while(true){
if((i_30689 < n__25062__auto___30688)){
(new_arr[i_30689] = (arr[i_30689]));

var G__30690 = (i_30689 + (1));
i_30689 = G__30690;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__30691 = (i + (1));
i = G__30691;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__30700__delegate = function (array,i,idxs){
var G__30697 = cljs$core$aget;
var G__30698 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__30699 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__30697,G__30698,G__30699) : cljs.core.apply.call(null,G__30697,G__30698,G__30699));
};
var G__30700 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__30701__i = 0, G__30701__a = new Array(arguments.length -  2);
while (G__30701__i < G__30701__a.length) {G__30701__a[G__30701__i] = arguments[G__30701__i + 2]; ++G__30701__i;}
  idxs = new cljs.core.IndexedSeq(G__30701__a,0);
} 
return G__30700__delegate.call(this,array,i,idxs);};
G__30700.cljs$lang$maxFixedArity = 2;
G__30700.cljs$lang$applyTo = (function (arglist__30702){
var array = cljs.core.first(arglist__30702);
arglist__30702 = cljs.core.next(arglist__30702);
var i = cljs.core.first(arglist__30702);
var idxs = cljs.core.rest(arglist__30702);
return G__30700__delegate(array,i,idxs);
});
G__30700.cljs$core$IFn$_invoke$arity$variadic = G__30700__delegate;
return G__30700;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__30703 = null;
if (arguments.length > 2) {
var G__30704__i = 0, G__30704__a = new Array(arguments.length -  2);
while (G__30704__i < G__30704__a.length) {G__30704__a[G__30704__i] = arguments[G__30704__i + 2]; ++G__30704__i;}
G__30703 = new cljs.core.IndexedSeq(G__30704__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__30703);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__30713__delegate = function (array,idx,idx2,idxv){
var G__30709 = cljs$core$aset;
var G__30710 = (array[idx]);
var G__30711 = idx2;
var G__30712 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__30709,G__30710,G__30711,G__30712) : cljs.core.apply.call(null,G__30709,G__30710,G__30711,G__30712));
};
var G__30713 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__30714__i = 0, G__30714__a = new Array(arguments.length -  3);
while (G__30714__i < G__30714__a.length) {G__30714__a[G__30714__i] = arguments[G__30714__i + 3]; ++G__30714__i;}
  idxv = new cljs.core.IndexedSeq(G__30714__a,0);
} 
return G__30713__delegate.call(this,array,idx,idx2,idxv);};
G__30713.cljs$lang$maxFixedArity = 3;
G__30713.cljs$lang$applyTo = (function (arglist__30715){
var array = cljs.core.first(arglist__30715);
arglist__30715 = cljs.core.next(arglist__30715);
var idx = cljs.core.first(arglist__30715);
arglist__30715 = cljs.core.next(arglist__30715);
var idx2 = cljs.core.first(arglist__30715);
var idxv = cljs.core.rest(arglist__30715);
return G__30713__delegate(array,idx,idx2,idxv);
});
G__30713.cljs$core$IFn$_invoke$arity$variadic = G__30713__delegate;
return G__30713;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__30716 = null;
if (arguments.length > 3) {
var G__30717__i = 0, G__30717__a = new Array(arguments.length -  3);
while (G__30717__i < G__30717__a.length) {G__30717__a[G__30717__i] = arguments[G__30717__i + 3]; ++G__30717__i;}
G__30716 = new cljs.core.IndexedSeq(G__30717__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__30716);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__30723 = (function (a,x){
a.push(x);

return a;
});
var G__30724 = [];
var G__30725 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__30723,G__30724,G__30725) : cljs.core.reduce.call(null,G__30723,G__30724,G__30725));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__30726__i = 0, G__30726__a = new Array(arguments.length -  2);
while (G__30726__i < G__30726__a.length) {G__30726__a[G__30726__i] = arguments[G__30726__i + 2]; ++G__30726__i;}
  args = new cljs.core.IndexedSeq(G__30726__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__30727){
var obj = cljs.core.first(arglist__30727);
arglist__30727 = cljs.core.next(arglist__30727);
var s = cljs.core.first(arglist__30727);
var args = cljs.core.rest(arglist__30727);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj30729 = {};
return obj30729;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj30731 = {};
return obj30731;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30777 = x__24813__auto__;
return goog.typeOf(G__30777);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30779 = x__24813__auto__;
return goog.typeOf(G__30779);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30781 = x__24813__auto__;
return goog.typeOf(G__30781);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30783 = x__24813__auto__;
return goog.typeOf(G__30783);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30785 = x__24813__auto__;
return goog.typeOf(G__30785);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30787 = x__24813__auto__;
return goog.typeOf(G__30787);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30789 = x__24813__auto__;
return goog.typeOf(G__30789);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30791 = x__24813__auto__;
return goog.typeOf(G__30791);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30793 = x__24813__auto__;
return goog.typeOf(G__30793);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30795 = x__24813__auto__;
return goog.typeOf(G__30795);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30797 = x__24813__auto__;
return goog.typeOf(G__30797);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30799 = x__24813__auto__;
return goog.typeOf(G__30799);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30801 = x__24813__auto__;
return goog.typeOf(G__30801);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30803 = x__24813__auto__;
return goog.typeOf(G__30803);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30805 = x__24813__auto__;
return goog.typeOf(G__30805);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30807 = x__24813__auto__;
return goog.typeOf(G__30807);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30809 = x__24813__auto__;
return goog.typeOf(G__30809);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30811 = x__24813__auto__;
return goog.typeOf(G__30811);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30813 = x__24813__auto__;
return goog.typeOf(G__30813);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30815 = x__24813__auto__;
return goog.typeOf(G__30815);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30817 = x__24813__auto__;
return goog.typeOf(G__30817);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._invoke[(function (){var G__30819 = x__24813__auto__;
return goog.typeOf(G__30819);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._invoke["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj30821 = {};
return obj30821;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__24165__auto__ = value;
if(and__24165__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24165__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24813__auto__ = (((value == null))?null:value);
return (function (){var or__24177__auto__ = (cljs.core._clone[(function (){var G__30825 = x__24813__auto__;
return goog.typeOf(G__30825);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._clone["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj30827 = {};
return obj30827;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._count[(function (){var G__30831 = x__24813__auto__;
return goog.typeOf(G__30831);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._count["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj30833 = {};
return obj30833;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._empty[(function (){var G__30837 = x__24813__auto__;
return goog.typeOf(G__30837);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._empty["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj30839 = {};
return obj30839;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._conj[(function (){var G__30843 = x__24813__auto__;
return goog.typeOf(G__30843);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._conj["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj30845 = {};
return obj30845;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._nth[(function (){var G__30851 = x__24813__auto__;
return goog.typeOf(G__30851);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._nth["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._nth[(function (){var G__30853 = x__24813__auto__;
return goog.typeOf(G__30853);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._nth["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj30855 = {};
return obj30855;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj30857 = {};
return obj30857;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._first[(function (){var G__30861 = x__24813__auto__;
return goog.typeOf(G__30861);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._first["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._rest[(function (){var G__30865 = x__24813__auto__;
return goog.typeOf(G__30865);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._rest["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj30867 = {};
return obj30867;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._next[(function (){var G__30871 = x__24813__auto__;
return goog.typeOf(G__30871);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._next["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj30873 = {};
return obj30873;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._lookup[(function (){var G__30879 = x__24813__auto__;
return goog.typeOf(G__30879);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._lookup["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._lookup[(function (){var G__30881 = x__24813__auto__;
return goog.typeOf(G__30881);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._lookup["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj30883 = {};
return obj30883;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__30887 = x__24813__auto__;
return goog.typeOf(G__30887);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._assoc[(function (){var G__30891 = x__24813__auto__;
return goog.typeOf(G__30891);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._assoc["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj30893 = {};
return obj30893;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._dissoc[(function (){var G__30897 = x__24813__auto__;
return goog.typeOf(G__30897);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj30899 = {};
return obj30899;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._key[(function (){var G__30903 = x__24813__auto__;
return goog.typeOf(G__30903);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._key["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._val[(function (){var G__30907 = x__24813__auto__;
return goog.typeOf(G__30907);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._val["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj30909 = {};
return obj30909;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._disjoin[(function (){var G__30913 = x__24813__auto__;
return goog.typeOf(G__30913);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj30915 = {};
return obj30915;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._peek[(function (){var G__30919 = x__24813__auto__;
return goog.typeOf(G__30919);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._peek["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._pop[(function (){var G__30923 = x__24813__auto__;
return goog.typeOf(G__30923);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._pop["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj30925 = {};
return obj30925;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._assoc_n[(function (){var G__30929 = x__24813__auto__;
return goog.typeOf(G__30929);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj30931 = {};
return obj30931;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._deref[(function (){var G__30935 = x__24813__auto__;
return goog.typeOf(G__30935);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._deref["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj30937 = {};
return obj30937;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._deref_with_timeout[(function (){var G__30941 = x__24813__auto__;
return goog.typeOf(G__30941);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj30943 = {};
return obj30943;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._meta[(function (){var G__30947 = x__24813__auto__;
return goog.typeOf(G__30947);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._meta["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj30949 = {};
return obj30949;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._with_meta[(function (){var G__30953 = x__24813__auto__;
return goog.typeOf(G__30953);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj30955 = {};
return obj30955;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._reduce[(function (){var G__30961 = x__24813__auto__;
return goog.typeOf(G__30961);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._reduce["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._reduce[(function (){var G__30963 = x__24813__auto__;
return goog.typeOf(G__30963);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._reduce["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj30965 = {};
return obj30965;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._kv_reduce[(function (){var G__30969 = x__24813__auto__;
return goog.typeOf(G__30969);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj30971 = {};
return obj30971;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._equiv[(function (){var G__30975 = x__24813__auto__;
return goog.typeOf(G__30975);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._equiv["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj30977 = {};
return obj30977;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._hash[(function (){var G__30981 = x__24813__auto__;
return goog.typeOf(G__30981);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._hash["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj30983 = {};
return obj30983;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._seq[(function (){var G__30987 = x__24813__auto__;
return goog.typeOf(G__30987);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._seq["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj30989 = {};
return obj30989;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj30991 = {};
return obj30991;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj30993 = {};
return obj30993;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj30995 = {};
return obj30995;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._rseq[(function (){var G__30999 = x__24813__auto__;
return goog.typeOf(G__30999);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._rseq["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj31001 = {};
return obj31001;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._sorted_seq[(function (){var G__31005 = x__24813__auto__;
return goog.typeOf(G__31005);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._sorted_seq_from[(function (){var G__31009 = x__24813__auto__;
return goog.typeOf(G__31009);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._entry_key[(function (){var G__31013 = x__24813__auto__;
return goog.typeOf(G__31013);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._comparator[(function (){var G__31017 = x__24813__auto__;
return goog.typeOf(G__31017);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._comparator["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj31019 = {};
return obj31019;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__24165__auto__ = writer;
if(and__24165__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24165__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24813__auto__ = (((writer == null))?null:writer);
return (function (){var or__24177__auto__ = (cljs.core._write[(function (){var G__31023 = x__24813__auto__;
return goog.typeOf(G__31023);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._write["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__24165__auto__ = writer;
if(and__24165__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24165__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24813__auto__ = (((writer == null))?null:writer);
return (function (){var or__24177__auto__ = (cljs.core._flush[(function (){var G__31027 = x__24813__auto__;
return goog.typeOf(G__31027);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._flush["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj31029 = {};
return obj31029;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._pr_writer[(function (){var G__31033 = x__24813__auto__;
return goog.typeOf(G__31033);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj31035 = {};
return obj31035;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__24165__auto__ = d;
if(and__24165__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24165__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24813__auto__ = (((d == null))?null:d);
return (function (){var or__24177__auto__ = (cljs.core._realized_QMARK_[(function (){var G__31039 = x__24813__auto__;
return goog.typeOf(G__31039);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj31041 = {};
return obj31041;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._notify_watches[(function (){var G__31045 = x__24813__auto__;
return goog.typeOf(G__31045);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._add_watch[(function (){var G__31049 = x__24813__auto__;
return goog.typeOf(G__31049);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__24165__auto__ = this$;
if(and__24165__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24165__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24813__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24177__auto__ = (cljs.core._remove_watch[(function (){var G__31053 = x__24813__auto__;
return goog.typeOf(G__31053);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj31055 = {};
return obj31055;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._as_transient[(function (){var G__31059 = x__24813__auto__;
return goog.typeOf(G__31059);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj31061 = {};
return obj31061;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._conj_BANG_[(function (){var G__31065 = x__24813__auto__;
return goog.typeOf(G__31065);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._persistent_BANG_[(function (){var G__31069 = x__24813__auto__;
return goog.typeOf(G__31069);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj31071 = {};
return obj31071;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._assoc_BANG_[(function (){var G__31075 = x__24813__auto__;
return goog.typeOf(G__31075);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj31077 = {};
return obj31077;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__31081 = x__24813__auto__;
return goog.typeOf(G__31081);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj31083 = {};
return obj31083;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__31087 = x__24813__auto__;
return goog.typeOf(G__31087);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._pop_BANG_[(function (){var G__31091 = x__24813__auto__;
return goog.typeOf(G__31091);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj31093 = {};
return obj31093;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__24165__auto__ = tcoll;
if(and__24165__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24813__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24177__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__31097 = x__24813__auto__;
return goog.typeOf(G__31097);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj31099 = {};
return obj31099;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._compare[(function (){var G__31103 = x__24813__auto__;
return goog.typeOf(G__31103);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._compare["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj31105 = {};
return obj31105;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._drop_first[(function (){var G__31109 = x__24813__auto__;
return goog.typeOf(G__31109);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj31111 = {};
return obj31111;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._chunked_first[(function (){var G__31115 = x__24813__auto__;
return goog.typeOf(G__31115);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._chunked_rest[(function (){var G__31119 = x__24813__auto__;
return goog.typeOf(G__31119);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj31121 = {};
return obj31121;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._chunked_next[(function (){var G__31125 = x__24813__auto__;
return goog.typeOf(G__31125);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj31127 = {};
return obj31127;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._name[(function (){var G__31131 = x__24813__auto__;
return goog.typeOf(G__31131);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._name["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._namespace[(function (){var G__31135 = x__24813__auto__;
return goog.typeOf(G__31135);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._namespace["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj31137 = {};
return obj31137;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj31139 = {};
return obj31139;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._reset_BANG_[(function (){var G__31143 = x__24813__auto__;
return goog.typeOf(G__31143);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj31145 = {};
return obj31145;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._swap_BANG_[(function (){var G__31155 = x__24813__auto__;
return goog.typeOf(G__31155);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._swap_BANG_[(function (){var G__31157 = x__24813__auto__;
return goog.typeOf(G__31157);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._swap_BANG_[(function (){var G__31159 = x__24813__auto__;
return goog.typeOf(G__31159);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._swap_BANG_[(function (){var G__31161 = x__24813__auto__;
return goog.typeOf(G__31161);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj31163 = {};
return obj31163;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__24165__auto__ = o;
if(and__24165__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24165__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24813__auto__ = (((o == null))?null:o);
return (function (){var or__24177__auto__ = (cljs.core._vreset_BANG_[(function (){var G__31167 = x__24813__auto__;
return goog.typeOf(G__31167);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj31169 = {};
return obj31169;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__24165__auto__ = coll;
if(and__24165__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24165__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24813__auto__ = (((coll == null))?null:coll);
return (function (){var or__24177__auto__ = (cljs.core._iterator[(function (){var G__31173 = x__24813__auto__;
return goog.typeOf(G__31173);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._iterator["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__31176 = (4294967295);
var G__31177 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__31176,G__31177) : Math.imul.call(null,G__31176,G__31177));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__31180 = a;
var G__31181 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__31180,G__31181) : Math.imul.call(null,G__31180,G__31181));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__31182 = (i + (2));
var G__31183 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__31182;
h1 = G__31183;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj31185 = {};
return obj31185;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__31186 = (i + (1));
var G__31187 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__31186;
hash = G__31187;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj31191 = {};
return obj31191;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__31194 = o;
if(G__31194){
var bit__24844__auto__ = (G__31194.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24844__auto__) || (G__31194.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__31195 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__31195) : Math.floor.call(null,G__31195));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24165__auto__ = cljs.core.not(a.ns);
if(and__24165__auto__){
return b.ns;
} else {
return and__24165__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__31202 = a.ns;
var G__31203 = b.ns;
return goog.array.defaultCompare(G__31202,G__31203);
})();
if(((0) === nsc)){
var G__31204 = a.name;
var G__31205 = b.name;
return goog.array.defaultCompare(G__31204,G__31205);
} else {
return nsc;
}
}
} else {
var G__31206 = a.name;
var G__31207 = b.name;
return goog.array.defaultCompare(G__31206,G__31207);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24593__auto__ = self__._hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__31209 = null;
var G__31209__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__31209__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__31209 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__31209__2.call(this,self__,coll);
case 3:
return G__31209__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31209.cljs$core$IFn$_invoke$arity$2 = G__31209__2;
G__31209.cljs$core$IFn$_invoke$arity$3 = G__31209__3;
return G__31209;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args31208){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31208)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__31257 = null;
var G__31257__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__31257__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__31257__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__31257__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__31257__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__31257__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__31257__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__31257__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__31257__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__31257__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__31257__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__31257__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__31257__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__31257__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__31257__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__31257__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__31257__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__31257__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__31257__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__31257__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__31257__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__31257__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31213 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__31214 = a;
var G__31215 = b;
var G__31216 = c;
var G__31217 = d;
var G__31218 = e;
var G__31219 = f;
var G__31220 = g;
var G__31221 = h;
var G__31222 = i;
var G__31223 = j;
var G__31224 = k;
var G__31225 = l;
var G__31226 = m;
var G__31227 = n;
var G__31228 = o;
var G__31229 = p;
var G__31230 = q;
var G__31231 = r;
var G__31232 = s;
var G__31233 = t;
var G__31234 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31213,G__31214,G__31215,G__31216,G__31217,G__31218,G__31219,G__31220,G__31221,G__31222,G__31223,G__31224,G__31225,G__31226,G__31227,G__31228,G__31229,G__31230,G__31231,G__31232,G__31233,G__31234) : cljs.core.apply.call(null,G__31213,G__31214,G__31215,G__31216,G__31217,G__31218,G__31219,G__31220,G__31221,G__31222,G__31223,G__31224,G__31225,G__31226,G__31227,G__31228,G__31229,G__31230,G__31231,G__31232,G__31233,G__31234));
});
G__31257 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__31257__1.call(this,self__);
case 2:
return G__31257__2.call(this,self__,a);
case 3:
return G__31257__3.call(this,self__,a,b);
case 4:
return G__31257__4.call(this,self__,a,b,c);
case 5:
return G__31257__5.call(this,self__,a,b,c,d);
case 6:
return G__31257__6.call(this,self__,a,b,c,d,e);
case 7:
return G__31257__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__31257__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__31257__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__31257__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__31257__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__31257__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__31257__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__31257__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__31257__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__31257__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__31257__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__31257__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__31257__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__31257__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__31257__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__31257__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31257.cljs$core$IFn$_invoke$arity$1 = G__31257__1;
G__31257.cljs$core$IFn$_invoke$arity$2 = G__31257__2;
G__31257.cljs$core$IFn$_invoke$arity$3 = G__31257__3;
G__31257.cljs$core$IFn$_invoke$arity$4 = G__31257__4;
G__31257.cljs$core$IFn$_invoke$arity$5 = G__31257__5;
G__31257.cljs$core$IFn$_invoke$arity$6 = G__31257__6;
G__31257.cljs$core$IFn$_invoke$arity$7 = G__31257__7;
G__31257.cljs$core$IFn$_invoke$arity$8 = G__31257__8;
G__31257.cljs$core$IFn$_invoke$arity$9 = G__31257__9;
G__31257.cljs$core$IFn$_invoke$arity$10 = G__31257__10;
G__31257.cljs$core$IFn$_invoke$arity$11 = G__31257__11;
G__31257.cljs$core$IFn$_invoke$arity$12 = G__31257__12;
G__31257.cljs$core$IFn$_invoke$arity$13 = G__31257__13;
G__31257.cljs$core$IFn$_invoke$arity$14 = G__31257__14;
G__31257.cljs$core$IFn$_invoke$arity$15 = G__31257__15;
G__31257.cljs$core$IFn$_invoke$arity$16 = G__31257__16;
G__31257.cljs$core$IFn$_invoke$arity$17 = G__31257__17;
G__31257.cljs$core$IFn$_invoke$arity$18 = G__31257__18;
G__31257.cljs$core$IFn$_invoke$arity$19 = G__31257__19;
G__31257.cljs$core$IFn$_invoke$arity$20 = G__31257__20;
G__31257.cljs$core$IFn$_invoke$arity$21 = G__31257__21;
G__31257.cljs$core$IFn$_invoke$arity$22 = G__31257__22;
return G__31257;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args31212){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31212)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__31235 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__31236 = a;
var G__31237 = b;
var G__31238 = c;
var G__31239 = d;
var G__31240 = e;
var G__31241 = f;
var G__31242 = g;
var G__31243 = h;
var G__31244 = i;
var G__31245 = j;
var G__31246 = k;
var G__31247 = l;
var G__31248 = m;
var G__31249 = n;
var G__31250 = o;
var G__31251 = p;
var G__31252 = q;
var G__31253 = r;
var G__31254 = s;
var G__31255 = t;
var G__31256 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31235,G__31236,G__31237,G__31238,G__31239,G__31240,G__31241,G__31242,G__31243,G__31244,G__31245,G__31246,G__31247,G__31248,G__31249,G__31250,G__31251,G__31252,G__31253,G__31254,G__31255,G__31256) : cljs.core.apply.call(null,G__31235,G__31236,G__31237,G__31238,G__31239,G__31240,G__31241,G__31242,G__31243,G__31244,G__31245,G__31246,G__31247,G__31248,G__31249,G__31250,G__31251,G__31252,G__31253,G__31254,G__31255,G__31256));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__31259 = x;
if(G__31259){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto__ = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return G__31259.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__31259.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__31259);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__31259);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__31261 = value;
if(G__31261){
var bit__24851__auto__ = (G__31261.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24851__auto__) || (G__31261.cljs$core$ICloneable$)){
return true;
} else {
if((!G__31261.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__31261);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__31261);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31263 = coll;
if(G__31263){
var bit__24844__auto__ = (G__31263.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24844__auto__) || (G__31263.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31265 = coll;
if(G__31265){
var bit__24844__auto__ = (G__31265.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24844__auto__) || (G__31265.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__31267 = coll;
if(G__31267){
var bit__24844__auto__ = (G__31267.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24844__auto__) || (G__31267.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31269 = coll;
if(G__31269){
var bit__24844__auto__ = (G__31269.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24844__auto__) || (G__31269.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__31274__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__31275 = y;
var G__31276 = cljs.core.first(more);
var G__31277 = cljs.core.next(more);
x = G__31275;
y = G__31276;
more = G__31277;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31274 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31278__i = 0, G__31278__a = new Array(arguments.length -  2);
while (G__31278__i < G__31278__a.length) {G__31278__a[G__31278__i] = arguments[G__31278__i + 2]; ++G__31278__i;}
  more = new cljs.core.IndexedSeq(G__31278__a,0);
} 
return G__31274__delegate.call(this,x,y,more);};
G__31274.cljs$lang$maxFixedArity = 2;
G__31274.cljs$lang$applyTo = (function (arglist__31279){
var x = cljs.core.first(arglist__31279);
arglist__31279 = cljs.core.next(arglist__31279);
var y = cljs.core.first(arglist__31279);
var more = cljs.core.rest(arglist__31279);
return G__31274__delegate(x,y,more);
});
G__31274.cljs$core$IFn$_invoke$arity$variadic = G__31274__delegate;
return G__31274;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__31280 = null;
if (arguments.length > 2) {
var G__31281__i = 0, G__31281__a = new Array(arguments.length -  2);
while (G__31281__i < G__31281__a.length) {G__31281__a[G__31281__i] = arguments[G__31281__i + 2]; ++G__31281__i;}
G__31280 = new cljs.core.IndexedSeq(G__31281__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__31282 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__31282) : cljs.core.es6_iterator_seq.call(null,G__31282));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__31283 = (n + (1));
var G__31284 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__31285 = cljs.core.next(coll__$1);
n = G__31283;
hash_code = G__31284;
coll__$1 = G__31285;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__31286 = (n + (1));
var G__31287 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__31288 = cljs.core.next(coll__$1);
n = G__31286;
hash_code = G__31287;
coll__$1 = G__31288;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__31289 = this$__$1.valueOf();
var G__31290 = other.valueOf();
return goog.array.defaultCompare(G__31289,G__31290);
});

Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__31291 = o;
return goog.getUid(G__31291);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__31293 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31293) : cljs.core.deref.call(null,G__31293));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__31300 = val;
var G__31301 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31300,G__31301) : f.call(null,G__31300,G__31301));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31306 = nval;
var G__31307 = (n + (1));
val = G__31306;
n = G__31307;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__31302 = val__$1;
var G__31303 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31302,G__31303) : f.call(null,G__31302,G__31303));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31308 = nval;
var G__31309 = (n + (1));
val__$1 = G__31308;
n = G__31309;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__31304 = val__$1;
var G__31305 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31304,G__31305) : f.call(null,G__31304,G__31305));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31310 = nval;
var G__31311 = (n + (1));
val__$1 = G__31310;
n = G__31311;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__31318 = val;
var G__31319 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31318,G__31319) : f.call(null,G__31318,G__31319));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31324 = nval;
var G__31325 = (n + (1));
val = G__31324;
n = G__31325;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__31320 = val__$1;
var G__31321 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31320,G__31321) : f.call(null,G__31320,G__31321));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31326 = nval;
var G__31327 = (n + (1));
val__$1 = G__31326;
n = G__31327;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__31322 = val__$1;
var G__31323 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31322,G__31323) : f.call(null,G__31322,G__31323));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31328 = nval;
var G__31329 = (n + (1));
val__$1 = G__31328;
n = G__31329;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__31331 = x;
if(G__31331){
var bit__24851__auto__ = (G__31331.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24851__auto__) || (G__31331.cljs$core$ICounted$)){
return true;
} else {
if((!G__31331.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__31331);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__31331);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__31333 = x;
if(G__31333){
var bit__24851__auto__ = (G__31333.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24851__auto__) || (G__31333.cljs$core$IIndexed$)){
return true;
} else {
if((!G__31333.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__31333);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__31333);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__31334 = coll__$1;
var G__31335 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__31334,G__31335) : cljs.core.equiv_sequential.call(null,G__31334,G__31335));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31336 = o;
var G__31337 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__31336,G__31337) : cljs.core.cons.call(null,G__31336,G__31337));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__31340 = coll__$1;
var G__31341 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__31340,G__31341) : cljs.core.equiv_sequential.call(null,G__31340,G__31341));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__31342 = cljs.core.List.EMPTY;
var G__31343 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__31342,G__31343) : cljs.core.with_meta.call(null,G__31342,G__31343));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__31344 = f;
var G__31345 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__31344,G__31345) : cljs.core.seq_reduce.call(null,G__31344,G__31345));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__31346 = f;
var G__31347 = start;
var G__31348 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__31346,G__31347,G__31348) : cljs.core.seq_reduce.call(null,G__31346,G__31347,G__31348));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31349 = o;
var G__31350 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__31349,G__31350) : cljs.core.cons.call(null,G__31349,G__31350));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__31351 = sn;
s = G__31351;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__31356__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__31357 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__31358 = cljs.core.first(xs);
var G__31359 = cljs.core.next(xs);
coll = G__31357;
x = G__31358;
xs = G__31359;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__31356 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__31360__i = 0, G__31360__a = new Array(arguments.length -  2);
while (G__31360__i < G__31360__a.length) {G__31360__a[G__31360__i] = arguments[G__31360__i + 2]; ++G__31360__i;}
  xs = new cljs.core.IndexedSeq(G__31360__a,0);
} 
return G__31356__delegate.call(this,coll,x,xs);};
G__31356.cljs$lang$maxFixedArity = 2;
G__31356.cljs$lang$applyTo = (function (arglist__31361){
var coll = cljs.core.first(arglist__31361);
arglist__31361 = cljs.core.next(arglist__31361);
var x = cljs.core.first(arglist__31361);
var xs = cljs.core.rest(arglist__31361);
return G__31356__delegate(coll,x,xs);
});
G__31356.cljs$core$IFn$_invoke$arity$variadic = G__31356__delegate;
return G__31356;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__31362 = null;
if (arguments.length > 2) {
var G__31363__i = 0, G__31363__a = new Array(arguments.length -  2);
while (G__31363__i < G__31363__a.length) {G__31363__a[G__31363__i] = arguments[G__31363__i + 2]; ++G__31363__i;}
G__31362 = new cljs.core.IndexedSeq(G__31363__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__31362);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__31364 = cljs.core.next(s);
var G__31365 = (acc + (1));
s = G__31364;
acc = G__31365;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__31367 = coll;
if(G__31367){
var bit__24844__auto__ = (G__31367.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24844__auto__) || (G__31367.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__31368 = cljs.core.next(coll);
var G__31369 = (n - (1));
coll = G__31368;
n = G__31369;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__31370 = cljs.core.next(coll);
var G__31371 = (n - (1));
var G__31372 = not_found;
coll = G__31370;
n = G__31371;
not_found = G__31372;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__31377 = coll;
if(G__31377){
var bit__24844__auto__ = (G__31377.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24844__auto__) || (G__31377.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__31378 = coll;
if(G__31378){
var bit__24851__auto__ = (G__31378.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24851__auto__) || (G__31378.cljs$core$ISeq$)){
return true;
} else {
if((!G__31378.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31378);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31378);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__31379 = coll;
if(G__31379){
var bit__24844__auto__ = (G__31379.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24844__auto__) || (G__31379.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__31380 = coll;
if(G__31380){
var bit__24851__auto__ = (G__31380.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24851__auto__) || (G__31380.cljs$core$ISeq$)){
return true;
} else {
if((!G__31380.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31380);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31380);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__31381 = (n__$1 - (1));
var G__31382 = cljs.core.rest(xs);
n__$1 = G__31381;
xs = G__31382;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__31385 = o;
if(G__31385){
var bit__24844__auto__ = (G__31385.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24844__auto__) || (G__31385.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__31386 = o;
if(G__31386){
var bit__24844__auto__ = (G__31386.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24844__auto__) || (G__31386.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__31390__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__31391 = ret;
var G__31392 = cljs.core.first(kvs);
var G__31393 = cljs.core.second(kvs);
var G__31394 = cljs.core.nnext(kvs);
coll = G__31391;
k = G__31392;
v = G__31393;
kvs = G__31394;
continue;
} else {
return ret;
}
break;
}
};
var G__31390 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__31395__i = 0, G__31395__a = new Array(arguments.length -  3);
while (G__31395__i < G__31395__a.length) {G__31395__a[G__31395__i] = arguments[G__31395__i + 3]; ++G__31395__i;}
  kvs = new cljs.core.IndexedSeq(G__31395__a,0);
} 
return G__31390__delegate.call(this,coll,k,v,kvs);};
G__31390.cljs$lang$maxFixedArity = 3;
G__31390.cljs$lang$applyTo = (function (arglist__31396){
var coll = cljs.core.first(arglist__31396);
arglist__31396 = cljs.core.next(arglist__31396);
var k = cljs.core.first(arglist__31396);
arglist__31396 = cljs.core.next(arglist__31396);
var v = cljs.core.first(arglist__31396);
var kvs = cljs.core.rest(arglist__31396);
return G__31390__delegate(coll,k,v,kvs);
});
G__31390.cljs$core$IFn$_invoke$arity$variadic = G__31390__delegate;
return G__31390;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__31397 = null;
if (arguments.length > 3) {
var G__31398__i = 0, G__31398__a = new Array(arguments.length -  3);
while (G__31398__i < G__31398__a.length) {G__31398__a[G__31398__i] = arguments[G__31398__i + 3]; ++G__31398__i;}
G__31397 = new cljs.core.IndexedSeq(G__31398__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__31397);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__31401__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__31402 = ret;
var G__31403 = cljs.core.first(ks);
var G__31404 = cljs.core.next(ks);
coll = G__31402;
k = G__31403;
ks = G__31404;
continue;
} else {
return ret;
}
}
break;
}
};
var G__31401 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__31405__i = 0, G__31405__a = new Array(arguments.length -  2);
while (G__31405__i < G__31405__a.length) {G__31405__a[G__31405__i] = arguments[G__31405__i + 2]; ++G__31405__i;}
  ks = new cljs.core.IndexedSeq(G__31405__a,0);
} 
return G__31401__delegate.call(this,coll,k,ks);};
G__31401.cljs$lang$maxFixedArity = 2;
G__31401.cljs$lang$applyTo = (function (arglist__31406){
var coll = cljs.core.first(arglist__31406);
arglist__31406 = cljs.core.next(arglist__31406);
var k = cljs.core.first(arglist__31406);
var ks = cljs.core.rest(arglist__31406);
return G__31401__delegate(coll,k,ks);
});
G__31401.cljs$core$IFn$_invoke$arity$variadic = G__31401__delegate;
return G__31401;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__31407 = null;
if (arguments.length > 2) {
var G__31408__i = 0, G__31408__a = new Array(arguments.length -  2);
while (G__31408__i < G__31408__a.length) {G__31408__a[G__31408__i] = arguments[G__31408__i + 2]; ++G__31408__i;}
G__31407 = new cljs.core.IndexedSeq(G__31408__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__31407);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__24177__auto__ = (function (){var G__31413 = f;
return goog.isFunction(G__31413);
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__31414 = f;
if(G__31414){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto____$1 = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
return G__31414.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__31414.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__31414);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__31414);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__31880 = null;
var G__31880__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__31880__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31416 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__31416) : self__.afn.call(null,G__31416));
});
var G__31880__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31417 = a;
var G__31418 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__31417,G__31418) : self__.afn.call(null,G__31417,G__31418));
});
var G__31880__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31419 = a;
var G__31420 = b;
var G__31421 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__31419,G__31420,G__31421) : self__.afn.call(null,G__31419,G__31420,G__31421));
});
var G__31880__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31422 = a;
var G__31423 = b;
var G__31424 = c;
var G__31425 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__31422,G__31423,G__31424,G__31425) : self__.afn.call(null,G__31422,G__31423,G__31424,G__31425));
});
var G__31880__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31426 = a;
var G__31427 = b;
var G__31428 = c;
var G__31429 = d;
var G__31430 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__31426,G__31427,G__31428,G__31429,G__31430) : self__.afn.call(null,G__31426,G__31427,G__31428,G__31429,G__31430));
});
var G__31880__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31431 = a;
var G__31432 = b;
var G__31433 = c;
var G__31434 = d;
var G__31435 = e;
var G__31436 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__31431,G__31432,G__31433,G__31434,G__31435,G__31436) : self__.afn.call(null,G__31431,G__31432,G__31433,G__31434,G__31435,G__31436));
});
var G__31880__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31437 = a;
var G__31438 = b;
var G__31439 = c;
var G__31440 = d;
var G__31441 = e;
var G__31442 = f;
var G__31443 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__31437,G__31438,G__31439,G__31440,G__31441,G__31442,G__31443) : self__.afn.call(null,G__31437,G__31438,G__31439,G__31440,G__31441,G__31442,G__31443));
});
var G__31880__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31444 = a;
var G__31445 = b;
var G__31446 = c;
var G__31447 = d;
var G__31448 = e;
var G__31449 = f;
var G__31450 = g;
var G__31451 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__31444,G__31445,G__31446,G__31447,G__31448,G__31449,G__31450,G__31451) : self__.afn.call(null,G__31444,G__31445,G__31446,G__31447,G__31448,G__31449,G__31450,G__31451));
});
var G__31880__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31452 = a;
var G__31453 = b;
var G__31454 = c;
var G__31455 = d;
var G__31456 = e;
var G__31457 = f;
var G__31458 = g;
var G__31459 = h;
var G__31460 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__31452,G__31453,G__31454,G__31455,G__31456,G__31457,G__31458,G__31459,G__31460) : self__.afn.call(null,G__31452,G__31453,G__31454,G__31455,G__31456,G__31457,G__31458,G__31459,G__31460));
});
var G__31880__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31461 = a;
var G__31462 = b;
var G__31463 = c;
var G__31464 = d;
var G__31465 = e;
var G__31466 = f;
var G__31467 = g;
var G__31468 = h;
var G__31469 = i;
var G__31470 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__31461,G__31462,G__31463,G__31464,G__31465,G__31466,G__31467,G__31468,G__31469,G__31470) : self__.afn.call(null,G__31461,G__31462,G__31463,G__31464,G__31465,G__31466,G__31467,G__31468,G__31469,G__31470));
});
var G__31880__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31471 = a;
var G__31472 = b;
var G__31473 = c;
var G__31474 = d;
var G__31475 = e;
var G__31476 = f;
var G__31477 = g;
var G__31478 = h;
var G__31479 = i;
var G__31480 = j;
var G__31481 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__31471,G__31472,G__31473,G__31474,G__31475,G__31476,G__31477,G__31478,G__31479,G__31480,G__31481) : self__.afn.call(null,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476,G__31477,G__31478,G__31479,G__31480,G__31481));
});
var G__31880__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31482 = a;
var G__31483 = b;
var G__31484 = c;
var G__31485 = d;
var G__31486 = e;
var G__31487 = f;
var G__31488 = g;
var G__31489 = h;
var G__31490 = i;
var G__31491 = j;
var G__31492 = k;
var G__31493 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__31482,G__31483,G__31484,G__31485,G__31486,G__31487,G__31488,G__31489,G__31490,G__31491,G__31492,G__31493) : self__.afn.call(null,G__31482,G__31483,G__31484,G__31485,G__31486,G__31487,G__31488,G__31489,G__31490,G__31491,G__31492,G__31493));
});
var G__31880__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31494 = a;
var G__31495 = b;
var G__31496 = c;
var G__31497 = d;
var G__31498 = e;
var G__31499 = f;
var G__31500 = g;
var G__31501 = h;
var G__31502 = i;
var G__31503 = j;
var G__31504 = k;
var G__31505 = l;
var G__31506 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__31494,G__31495,G__31496,G__31497,G__31498,G__31499,G__31500,G__31501,G__31502,G__31503,G__31504,G__31505,G__31506) : self__.afn.call(null,G__31494,G__31495,G__31496,G__31497,G__31498,G__31499,G__31500,G__31501,G__31502,G__31503,G__31504,G__31505,G__31506));
});
var G__31880__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31507 = a;
var G__31508 = b;
var G__31509 = c;
var G__31510 = d;
var G__31511 = e;
var G__31512 = f;
var G__31513 = g;
var G__31514 = h;
var G__31515 = i;
var G__31516 = j;
var G__31517 = k;
var G__31518 = l;
var G__31519 = m;
var G__31520 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__31507,G__31508,G__31509,G__31510,G__31511,G__31512,G__31513,G__31514,G__31515,G__31516,G__31517,G__31518,G__31519,G__31520) : self__.afn.call(null,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512,G__31513,G__31514,G__31515,G__31516,G__31517,G__31518,G__31519,G__31520));
});
var G__31880__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31521 = a;
var G__31522 = b;
var G__31523 = c;
var G__31524 = d;
var G__31525 = e;
var G__31526 = f;
var G__31527 = g;
var G__31528 = h;
var G__31529 = i;
var G__31530 = j;
var G__31531 = k;
var G__31532 = l;
var G__31533 = m;
var G__31534 = n;
var G__31535 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__31521,G__31522,G__31523,G__31524,G__31525,G__31526,G__31527,G__31528,G__31529,G__31530,G__31531,G__31532,G__31533,G__31534,G__31535) : self__.afn.call(null,G__31521,G__31522,G__31523,G__31524,G__31525,G__31526,G__31527,G__31528,G__31529,G__31530,G__31531,G__31532,G__31533,G__31534,G__31535));
});
var G__31880__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31536 = a;
var G__31537 = b;
var G__31538 = c;
var G__31539 = d;
var G__31540 = e;
var G__31541 = f;
var G__31542 = g;
var G__31543 = h;
var G__31544 = i;
var G__31545 = j;
var G__31546 = k;
var G__31547 = l;
var G__31548 = m;
var G__31549 = n;
var G__31550 = o;
var G__31551 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__31536,G__31537,G__31538,G__31539,G__31540,G__31541,G__31542,G__31543,G__31544,G__31545,G__31546,G__31547,G__31548,G__31549,G__31550,G__31551) : self__.afn.call(null,G__31536,G__31537,G__31538,G__31539,G__31540,G__31541,G__31542,G__31543,G__31544,G__31545,G__31546,G__31547,G__31548,G__31549,G__31550,G__31551));
});
var G__31880__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31552 = a;
var G__31553 = b;
var G__31554 = c;
var G__31555 = d;
var G__31556 = e;
var G__31557 = f;
var G__31558 = g;
var G__31559 = h;
var G__31560 = i;
var G__31561 = j;
var G__31562 = k;
var G__31563 = l;
var G__31564 = m;
var G__31565 = n;
var G__31566 = o;
var G__31567 = p;
var G__31568 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__31552,G__31553,G__31554,G__31555,G__31556,G__31557,G__31558,G__31559,G__31560,G__31561,G__31562,G__31563,G__31564,G__31565,G__31566,G__31567,G__31568) : self__.afn.call(null,G__31552,G__31553,G__31554,G__31555,G__31556,G__31557,G__31558,G__31559,G__31560,G__31561,G__31562,G__31563,G__31564,G__31565,G__31566,G__31567,G__31568));
});
var G__31880__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31569 = a;
var G__31570 = b;
var G__31571 = c;
var G__31572 = d;
var G__31573 = e;
var G__31574 = f;
var G__31575 = g;
var G__31576 = h;
var G__31577 = i;
var G__31578 = j;
var G__31579 = k;
var G__31580 = l;
var G__31581 = m;
var G__31582 = n;
var G__31583 = o;
var G__31584 = p;
var G__31585 = q;
var G__31586 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__31569,G__31570,G__31571,G__31572,G__31573,G__31574,G__31575,G__31576,G__31577,G__31578,G__31579,G__31580,G__31581,G__31582,G__31583,G__31584,G__31585,G__31586) : self__.afn.call(null,G__31569,G__31570,G__31571,G__31572,G__31573,G__31574,G__31575,G__31576,G__31577,G__31578,G__31579,G__31580,G__31581,G__31582,G__31583,G__31584,G__31585,G__31586));
});
var G__31880__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31587 = a;
var G__31588 = b;
var G__31589 = c;
var G__31590 = d;
var G__31591 = e;
var G__31592 = f;
var G__31593 = g;
var G__31594 = h;
var G__31595 = i;
var G__31596 = j;
var G__31597 = k;
var G__31598 = l;
var G__31599 = m;
var G__31600 = n;
var G__31601 = o;
var G__31602 = p;
var G__31603 = q;
var G__31604 = r;
var G__31605 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__31587,G__31588,G__31589,G__31590,G__31591,G__31592,G__31593,G__31594,G__31595,G__31596,G__31597,G__31598,G__31599,G__31600,G__31601,G__31602,G__31603,G__31604,G__31605) : self__.afn.call(null,G__31587,G__31588,G__31589,G__31590,G__31591,G__31592,G__31593,G__31594,G__31595,G__31596,G__31597,G__31598,G__31599,G__31600,G__31601,G__31602,G__31603,G__31604,G__31605));
});
var G__31880__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31606 = a;
var G__31607 = b;
var G__31608 = c;
var G__31609 = d;
var G__31610 = e;
var G__31611 = f;
var G__31612 = g;
var G__31613 = h;
var G__31614 = i;
var G__31615 = j;
var G__31616 = k;
var G__31617 = l;
var G__31618 = m;
var G__31619 = n;
var G__31620 = o;
var G__31621 = p;
var G__31622 = q;
var G__31623 = r;
var G__31624 = s;
var G__31625 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__31606,G__31607,G__31608,G__31609,G__31610,G__31611,G__31612,G__31613,G__31614,G__31615,G__31616,G__31617,G__31618,G__31619,G__31620,G__31621,G__31622,G__31623,G__31624,G__31625) : self__.afn.call(null,G__31606,G__31607,G__31608,G__31609,G__31610,G__31611,G__31612,G__31613,G__31614,G__31615,G__31616,G__31617,G__31618,G__31619,G__31620,G__31621,G__31622,G__31623,G__31624,G__31625));
});
var G__31880__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31626 = self__.afn;
var G__31627 = a;
var G__31628 = b;
var G__31629 = c;
var G__31630 = d;
var G__31631 = e;
var G__31632 = f;
var G__31633 = g;
var G__31634 = h;
var G__31635 = i;
var G__31636 = j;
var G__31637 = k;
var G__31638 = l;
var G__31639 = m;
var G__31640 = n;
var G__31641 = o;
var G__31642 = p;
var G__31643 = q;
var G__31644 = r;
var G__31645 = s;
var G__31646 = t;
var G__31647 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31626,G__31627,G__31628,G__31629,G__31630,G__31631,G__31632,G__31633,G__31634,G__31635,G__31636,G__31637,G__31638,G__31639,G__31640,G__31641,G__31642,G__31643,G__31644,G__31645,G__31646,G__31647) : cljs.core.apply.call(null,G__31626,G__31627,G__31628,G__31629,G__31630,G__31631,G__31632,G__31633,G__31634,G__31635,G__31636,G__31637,G__31638,G__31639,G__31640,G__31641,G__31642,G__31643,G__31644,G__31645,G__31646,G__31647));
});
G__31880 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__31880__1.call(this,self__);
case 2:
return G__31880__2.call(this,self__,a);
case 3:
return G__31880__3.call(this,self__,a,b);
case 4:
return G__31880__4.call(this,self__,a,b,c);
case 5:
return G__31880__5.call(this,self__,a,b,c,d);
case 6:
return G__31880__6.call(this,self__,a,b,c,d,e);
case 7:
return G__31880__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__31880__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__31880__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__31880__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__31880__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__31880__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__31880__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__31880__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__31880__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__31880__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__31880__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__31880__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__31880__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__31880__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__31880__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__31880__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31880.cljs$core$IFn$_invoke$arity$1 = G__31880__1;
G__31880.cljs$core$IFn$_invoke$arity$2 = G__31880__2;
G__31880.cljs$core$IFn$_invoke$arity$3 = G__31880__3;
G__31880.cljs$core$IFn$_invoke$arity$4 = G__31880__4;
G__31880.cljs$core$IFn$_invoke$arity$5 = G__31880__5;
G__31880.cljs$core$IFn$_invoke$arity$6 = G__31880__6;
G__31880.cljs$core$IFn$_invoke$arity$7 = G__31880__7;
G__31880.cljs$core$IFn$_invoke$arity$8 = G__31880__8;
G__31880.cljs$core$IFn$_invoke$arity$9 = G__31880__9;
G__31880.cljs$core$IFn$_invoke$arity$10 = G__31880__10;
G__31880.cljs$core$IFn$_invoke$arity$11 = G__31880__11;
G__31880.cljs$core$IFn$_invoke$arity$12 = G__31880__12;
G__31880.cljs$core$IFn$_invoke$arity$13 = G__31880__13;
G__31880.cljs$core$IFn$_invoke$arity$14 = G__31880__14;
G__31880.cljs$core$IFn$_invoke$arity$15 = G__31880__15;
G__31880.cljs$core$IFn$_invoke$arity$16 = G__31880__16;
G__31880.cljs$core$IFn$_invoke$arity$17 = G__31880__17;
G__31880.cljs$core$IFn$_invoke$arity$18 = G__31880__18;
G__31880.cljs$core$IFn$_invoke$arity$19 = G__31880__19;
G__31880.cljs$core$IFn$_invoke$arity$20 = G__31880__20;
G__31880.cljs$core$IFn$_invoke$arity$21 = G__31880__21;
G__31880.cljs$core$IFn$_invoke$arity$22 = G__31880__22;
return G__31880;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args31415){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31415)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__31648 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__31648) : self__.afn.call(null,G__31648));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__31649 = a;
var G__31650 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__31649,G__31650) : self__.afn.call(null,G__31649,G__31650));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__31651 = a;
var G__31652 = b;
var G__31653 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__31651,G__31652,G__31653) : self__.afn.call(null,G__31651,G__31652,G__31653));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__31654 = a;
var G__31655 = b;
var G__31656 = c;
var G__31657 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__31654,G__31655,G__31656,G__31657) : self__.afn.call(null,G__31654,G__31655,G__31656,G__31657));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__31658 = a;
var G__31659 = b;
var G__31660 = c;
var G__31661 = d;
var G__31662 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__31658,G__31659,G__31660,G__31661,G__31662) : self__.afn.call(null,G__31658,G__31659,G__31660,G__31661,G__31662));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__31663 = a;
var G__31664 = b;
var G__31665 = c;
var G__31666 = d;
var G__31667 = e;
var G__31668 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__31663,G__31664,G__31665,G__31666,G__31667,G__31668) : self__.afn.call(null,G__31663,G__31664,G__31665,G__31666,G__31667,G__31668));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__31669 = a;
var G__31670 = b;
var G__31671 = c;
var G__31672 = d;
var G__31673 = e;
var G__31674 = f;
var G__31675 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__31669,G__31670,G__31671,G__31672,G__31673,G__31674,G__31675) : self__.afn.call(null,G__31669,G__31670,G__31671,G__31672,G__31673,G__31674,G__31675));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__31676 = a;
var G__31677 = b;
var G__31678 = c;
var G__31679 = d;
var G__31680 = e;
var G__31681 = f;
var G__31682 = g;
var G__31683 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__31676,G__31677,G__31678,G__31679,G__31680,G__31681,G__31682,G__31683) : self__.afn.call(null,G__31676,G__31677,G__31678,G__31679,G__31680,G__31681,G__31682,G__31683));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__31684 = a;
var G__31685 = b;
var G__31686 = c;
var G__31687 = d;
var G__31688 = e;
var G__31689 = f;
var G__31690 = g;
var G__31691 = h;
var G__31692 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__31684,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690,G__31691,G__31692) : self__.afn.call(null,G__31684,G__31685,G__31686,G__31687,G__31688,G__31689,G__31690,G__31691,G__31692));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__31693 = a;
var G__31694 = b;
var G__31695 = c;
var G__31696 = d;
var G__31697 = e;
var G__31698 = f;
var G__31699 = g;
var G__31700 = h;
var G__31701 = i;
var G__31702 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__31693,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699,G__31700,G__31701,G__31702) : self__.afn.call(null,G__31693,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699,G__31700,G__31701,G__31702));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__31703 = a;
var G__31704 = b;
var G__31705 = c;
var G__31706 = d;
var G__31707 = e;
var G__31708 = f;
var G__31709 = g;
var G__31710 = h;
var G__31711 = i;
var G__31712 = j;
var G__31713 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__31703,G__31704,G__31705,G__31706,G__31707,G__31708,G__31709,G__31710,G__31711,G__31712,G__31713) : self__.afn.call(null,G__31703,G__31704,G__31705,G__31706,G__31707,G__31708,G__31709,G__31710,G__31711,G__31712,G__31713));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__31714 = a;
var G__31715 = b;
var G__31716 = c;
var G__31717 = d;
var G__31718 = e;
var G__31719 = f;
var G__31720 = g;
var G__31721 = h;
var G__31722 = i;
var G__31723 = j;
var G__31724 = k;
var G__31725 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__31714,G__31715,G__31716,G__31717,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725) : self__.afn.call(null,G__31714,G__31715,G__31716,G__31717,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__31726 = a;
var G__31727 = b;
var G__31728 = c;
var G__31729 = d;
var G__31730 = e;
var G__31731 = f;
var G__31732 = g;
var G__31733 = h;
var G__31734 = i;
var G__31735 = j;
var G__31736 = k;
var G__31737 = l;
var G__31738 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__31726,G__31727,G__31728,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737,G__31738) : self__.afn.call(null,G__31726,G__31727,G__31728,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737,G__31738));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__31739 = a;
var G__31740 = b;
var G__31741 = c;
var G__31742 = d;
var G__31743 = e;
var G__31744 = f;
var G__31745 = g;
var G__31746 = h;
var G__31747 = i;
var G__31748 = j;
var G__31749 = k;
var G__31750 = l;
var G__31751 = m;
var G__31752 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__31739,G__31740,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749,G__31750,G__31751,G__31752) : self__.afn.call(null,G__31739,G__31740,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749,G__31750,G__31751,G__31752));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__31753 = a;
var G__31754 = b;
var G__31755 = c;
var G__31756 = d;
var G__31757 = e;
var G__31758 = f;
var G__31759 = g;
var G__31760 = h;
var G__31761 = i;
var G__31762 = j;
var G__31763 = k;
var G__31764 = l;
var G__31765 = m;
var G__31766 = n;
var G__31767 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__31753,G__31754,G__31755,G__31756,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767) : self__.afn.call(null,G__31753,G__31754,G__31755,G__31756,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762,G__31763,G__31764,G__31765,G__31766,G__31767));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__31768 = a;
var G__31769 = b;
var G__31770 = c;
var G__31771 = d;
var G__31772 = e;
var G__31773 = f;
var G__31774 = g;
var G__31775 = h;
var G__31776 = i;
var G__31777 = j;
var G__31778 = k;
var G__31779 = l;
var G__31780 = m;
var G__31781 = n;
var G__31782 = o;
var G__31783 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__31768,G__31769,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783) : self__.afn.call(null,G__31768,G__31769,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775,G__31776,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__31784 = a;
var G__31785 = b;
var G__31786 = c;
var G__31787 = d;
var G__31788 = e;
var G__31789 = f;
var G__31790 = g;
var G__31791 = h;
var G__31792 = i;
var G__31793 = j;
var G__31794 = k;
var G__31795 = l;
var G__31796 = m;
var G__31797 = n;
var G__31798 = o;
var G__31799 = p;
var G__31800 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__31784,G__31785,G__31786,G__31787,G__31788,G__31789,G__31790,G__31791,G__31792,G__31793,G__31794,G__31795,G__31796,G__31797,G__31798,G__31799,G__31800) : self__.afn.call(null,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789,G__31790,G__31791,G__31792,G__31793,G__31794,G__31795,G__31796,G__31797,G__31798,G__31799,G__31800));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__31801 = a;
var G__31802 = b;
var G__31803 = c;
var G__31804 = d;
var G__31805 = e;
var G__31806 = f;
var G__31807 = g;
var G__31808 = h;
var G__31809 = i;
var G__31810 = j;
var G__31811 = k;
var G__31812 = l;
var G__31813 = m;
var G__31814 = n;
var G__31815 = o;
var G__31816 = p;
var G__31817 = q;
var G__31818 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807,G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815,G__31816,G__31817,G__31818) : self__.afn.call(null,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807,G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815,G__31816,G__31817,G__31818));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__31819 = a;
var G__31820 = b;
var G__31821 = c;
var G__31822 = d;
var G__31823 = e;
var G__31824 = f;
var G__31825 = g;
var G__31826 = h;
var G__31827 = i;
var G__31828 = j;
var G__31829 = k;
var G__31830 = l;
var G__31831 = m;
var G__31832 = n;
var G__31833 = o;
var G__31834 = p;
var G__31835 = q;
var G__31836 = r;
var G__31837 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__31819,G__31820,G__31821,G__31822,G__31823,G__31824,G__31825,G__31826,G__31827,G__31828,G__31829,G__31830,G__31831,G__31832,G__31833,G__31834,G__31835,G__31836,G__31837) : self__.afn.call(null,G__31819,G__31820,G__31821,G__31822,G__31823,G__31824,G__31825,G__31826,G__31827,G__31828,G__31829,G__31830,G__31831,G__31832,G__31833,G__31834,G__31835,G__31836,G__31837));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__31838 = a;
var G__31839 = b;
var G__31840 = c;
var G__31841 = d;
var G__31842 = e;
var G__31843 = f;
var G__31844 = g;
var G__31845 = h;
var G__31846 = i;
var G__31847 = j;
var G__31848 = k;
var G__31849 = l;
var G__31850 = m;
var G__31851 = n;
var G__31852 = o;
var G__31853 = p;
var G__31854 = q;
var G__31855 = r;
var G__31856 = s;
var G__31857 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__31838,G__31839,G__31840,G__31841,G__31842,G__31843,G__31844,G__31845,G__31846,G__31847,G__31848,G__31849,G__31850,G__31851,G__31852,G__31853,G__31854,G__31855,G__31856,G__31857) : self__.afn.call(null,G__31838,G__31839,G__31840,G__31841,G__31842,G__31843,G__31844,G__31845,G__31846,G__31847,G__31848,G__31849,G__31850,G__31851,G__31852,G__31853,G__31854,G__31855,G__31856,G__31857));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__31858 = self__.afn;
var G__31859 = a;
var G__31860 = b;
var G__31861 = c;
var G__31862 = d;
var G__31863 = e;
var G__31864 = f;
var G__31865 = g;
var G__31866 = h;
var G__31867 = i;
var G__31868 = j;
var G__31869 = k;
var G__31870 = l;
var G__31871 = m;
var G__31872 = n;
var G__31873 = o;
var G__31874 = p;
var G__31875 = q;
var G__31876 = r;
var G__31877 = s;
var G__31878 = t;
var G__31879 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31858,G__31859,G__31860,G__31861,G__31862,G__31863,G__31864,G__31865,G__31866,G__31867,G__31868,G__31869,G__31870,G__31871,G__31872,G__31873,G__31874,G__31875,G__31876,G__31877,G__31878,G__31879) : cljs.core.apply.call(null,G__31858,G__31859,G__31860,G__31861,G__31862,G__31863,G__31864,G__31865,G__31866,G__31867,G__31868,G__31869,G__31870,G__31871,G__31872,G__31873,G__31874,G__31875,G__31876,G__31877,G__31878,G__31879));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__31884 = o;
if(G__31884){
var bit__24851__auto__ = (G__31884.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24851__auto__) || (G__31884.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__31884.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__31884);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__31884);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__24165__auto__ = !((o == null));
if(and__24165__auto__){
var G__31888 = o;
if(G__31888){
var bit__24851__auto__ = (G__31888.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24851__auto__) || (G__31888.cljs$core$IMeta$)){
return true;
} else {
if((!G__31888.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__31888);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__31888);
}
} else {
return and__24165__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__31891__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__31892 = ret;
var G__31893 = cljs.core.first(ks);
var G__31894 = cljs.core.next(ks);
coll = G__31892;
k = G__31893;
ks = G__31894;
continue;
} else {
return ret;
}
}
break;
}
};
var G__31891 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__31895__i = 0, G__31895__a = new Array(arguments.length -  2);
while (G__31895__i < G__31895__a.length) {G__31895__a[G__31895__i] = arguments[G__31895__i + 2]; ++G__31895__i;}
  ks = new cljs.core.IndexedSeq(G__31895__a,0);
} 
return G__31891__delegate.call(this,coll,k,ks);};
G__31891.cljs$lang$maxFixedArity = 2;
G__31891.cljs$lang$applyTo = (function (arglist__31896){
var coll = cljs.core.first(arglist__31896);
arglist__31896 = cljs.core.next(arglist__31896);
var k = cljs.core.first(arglist__31896);
var ks = cljs.core.rest(arglist__31896);
return G__31891__delegate(coll,k,ks);
});
G__31891.cljs$core$IFn$_invoke$arity$variadic = G__31891__delegate;
return G__31891;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__31897 = null;
if (arguments.length > 2) {
var G__31898__i = 0, G__31898__a = new Array(arguments.length -  2);
while (G__31898__i < G__31898__a.length) {G__31898__a[G__31898__i] = arguments[G__31898__i + 2]; ++G__31898__i;}
G__31897 = new cljs.core.IndexedSeq(G__31898__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__31897);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__31900 = x;
if(G__31900){
var bit__24851__auto__ = (G__31900.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24851__auto__) || (G__31900.cljs$core$ICollection$)){
return true;
} else {
if((!G__31900.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__31900);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__31900);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__31902 = x;
if(G__31902){
var bit__24851__auto__ = (G__31902.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24851__auto__) || (G__31902.cljs$core$ISet$)){
return true;
} else {
if((!G__31902.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__31902);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__31902);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__31904 = x;
if(G__31904){
var bit__24851__auto__ = (G__31904.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24851__auto__) || (G__31904.cljs$core$IAssociative$)){
return true;
} else {
if((!G__31904.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__31904);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__31904);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__31906 = x;
if(G__31906){
var bit__24851__auto__ = (G__31906.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24851__auto__) || (G__31906.cljs$core$ISequential$)){
return true;
} else {
if((!G__31906.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__31906);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__31906);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__31908 = x;
if(G__31908){
var bit__24851__auto__ = (G__31908.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24851__auto__) || (G__31908.cljs$core$ISorted$)){
return true;
} else {
if((!G__31908.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__31908);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__31908);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__31910 = x;
if(G__31910){
var bit__24851__auto__ = (G__31910.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24851__auto__) || (G__31910.cljs$core$IReduce$)){
return true;
} else {
if((!G__31910.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__31910);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__31910);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__31912 = x;
if(G__31912){
var bit__24851__auto__ = (G__31912.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24851__auto__) || (G__31912.cljs$core$IMap$)){
return true;
} else {
if((!G__31912.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__31912);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__31912);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__31914 = x;
if(G__31914){
var bit__24851__auto__ = (G__31914.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24851__auto__) || (G__31914.cljs$core$IVector$)){
return true;
} else {
if((!G__31914.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__31914);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__31914);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__31916 = x;
if(G__31916){
var bit__24844__auto__ = (G__31916.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24844__auto__) || (G__31916.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj31922 = {};
return obj31922;
});
var cljs$core$js_obj__1 = (function() { 
var G__31925__delegate = function (keyvals){
var G__31923 = goog.object.create;
var G__31924 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__31923,G__31924) : cljs.core.apply.call(null,G__31923,G__31924));
};
var G__31925 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__31926__i = 0, G__31926__a = new Array(arguments.length -  0);
while (G__31926__i < G__31926__a.length) {G__31926__a[G__31926__i] = arguments[G__31926__i + 0]; ++G__31926__i;}
  keyvals = new cljs.core.IndexedSeq(G__31926__a,0);
} 
return G__31925__delegate.call(this,keyvals);};
G__31925.cljs$lang$maxFixedArity = 0;
G__31925.cljs$lang$applyTo = (function (arglist__31927){
var keyvals = cljs.core.seq(arglist__31927);
return G__31925__delegate(keyvals);
});
G__31925.cljs$core$IFn$_invoke$arity$variadic = G__31925__delegate;
return G__31925;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__31928 = null;
if (arguments.length > 0) {
var G__31929__i = 0, G__31929__a = new Array(arguments.length -  0);
while (G__31929__i < G__31929__a.length) {G__31929__a[G__31929__i] = arguments[G__31929__i + 0]; ++G__31929__i;}
G__31928 = new cljs.core.IndexedSeq(G__31929__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__31928);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__31932_31934 = obj;
var G__31933_31935 = ((function (G__31932_31934,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__31932_31934,keys))
;
goog.object.forEach(G__31932_31934,G__31933_31935);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__31936 = (i__$1 + (1));
var G__31937 = (j__$1 + (1));
var G__31938 = (len__$1 - (1));
i__$1 = G__31936;
j__$1 = G__31937;
len__$1 = G__31938;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__31939 = (i__$1 - (1));
var G__31940 = (j__$1 - (1));
var G__31941 = (len__$1 - (1));
i__$1 = G__31939;
j__$1 = G__31940;
len__$1 = G__31941;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj31943 = {};
return obj31943;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__31945 = s;
if(G__31945){
var bit__24851__auto__ = (G__31945.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24851__auto__) || (G__31945.cljs$core$ISeq$)){
return true;
} else {
if((!G__31945.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31945);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31945);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__31947 = s;
if(G__31947){
var bit__24851__auto__ = (G__31947.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24851__auto__) || (G__31947.cljs$core$ISeqable$)){
return true;
} else {
if((!G__31947.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__31947);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__31947);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__24177__auto__ = cljs.core.fn_QMARK_(f);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var G__31951 = f;
if(G__31951){
var bit__24851__auto__ = (G__31951.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24851__auto__) || (G__31951.cljs$core$IFn$)){
return true;
} else {
if((!G__31951.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__31951);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__31951);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__31964 = n;
return isNaN(G__31964);
})())) && (!((n === Infinity))) && (((function (){var G__31965 = n;
return parseFloat(G__31965);
})() === (function (){var G__31966 = n;
var G__31967 = (10);
return parseInt(G__31966,G__31967);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__31968__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__31969 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__31970 = etc;
s = G__31969;
xs = G__31970;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__31968 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31971__i = 0, G__31971__a = new Array(arguments.length -  2);
while (G__31971__i < G__31971__a.length) {G__31971__a[G__31971__i] = arguments[G__31971__i + 2]; ++G__31971__i;}
  more = new cljs.core.IndexedSeq(G__31971__a,0);
} 
return G__31968__delegate.call(this,x,y,more);};
G__31968.cljs$lang$maxFixedArity = 2;
G__31968.cljs$lang$applyTo = (function (arglist__31972){
var x = cljs.core.first(arglist__31972);
arglist__31972 = cljs.core.next(arglist__31972);
var y = cljs.core.first(arglist__31972);
var more = cljs.core.rest(arglist__31972);
return G__31968__delegate(x,y,more);
});
G__31968.cljs$core$IFn$_invoke$arity$variadic = G__31968__delegate;
return G__31968;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__31973 = null;
if (arguments.length > 2) {
var G__31974__i = 0, G__31974__a = new Array(arguments.length -  2);
while (G__31974__i < G__31974__a.length) {G__31974__a[G__31974__i] = arguments[G__31974__i + 2]; ++G__31974__i;}
G__31973 = new cljs.core.IndexedSeq(G__31974__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31973);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__31978 = x;
if(G__31978){
var bit__24844__auto__ = (G__31978.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24844__auto__) || (G__31978.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__31979 = x;
var G__31980 = y;
return goog.array.defaultCompare(G__31979,G__31980);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__31985 = xs;
var G__31986 = ys;
var G__31987 = len;
var G__31988 = (n + (1));
xs = G__31985;
ys = G__31986;
len = G__31987;
n = G__31988;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__31993 = x;
var G__31994 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31993,G__31994) : f.call(null,G__31993,G__31994));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__31995 = y;
var G__31996 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31995,G__31996) : f.call(null,G__31995,G__31996));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__32002 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__32002) : cljs.core.to_array.call(null,G__32002));
})();
var G__32003_32005 = a;
var G__32004_32006 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__32003_32005,G__32004_32006);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__32012 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32012) : keyfn.call(null,G__32012));
})(),(function (){var G__32013 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32013) : keyfn.call(null,G__32013));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__32019 = f;
var G__32020 = cljs.core.first(s);
var G__32021 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__32019,G__32020,G__32021) : cljs.core.reduce.call(null,G__32019,G__32020,G__32021));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__32022 = val__$1;
var G__32023 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32022,G__32023) : f.call(null,G__32022,G__32023));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32024 = nval;
var G__32025 = cljs.core.next(coll__$1);
val__$1 = G__32024;
coll__$1 = G__32025;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__32029 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__32029) : cljs.core.to_array.call(null,G__32029));
})();
var G__32030_32032 = a;
goog.array.shuffle(G__32030_32032);

var G__32031 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__32031) : cljs.core.vec.call(null,G__32031));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__32035 = coll;
if(G__32035){
var bit__24844__auto__ = (G__32035.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24844__auto__) || (G__32035.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__32036 = coll;
if(G__32036){
var bit__24844__auto__ = (G__32036.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24844__auto__) || (G__32036.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__32045 = null;
var G__32045__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__32045__1 = (function (x){
var G__32042 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__32042) : cf.call(null,G__32042));
});
var G__32045__2 = (function (x,y){
var G__32043 = x;
var G__32044 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32043,G__32044) : f.call(null,G__32043,G__32044));
});
G__32045 = function(x,y){
switch(arguments.length){
case 0:
return G__32045__0.call(this);
case 1:
return G__32045__1.call(this,x);
case 2:
return G__32045__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32045.cljs$core$IFn$_invoke$arity$0 = G__32045__0;
G__32045.cljs$core$IFn$_invoke$arity$1 = G__32045__1;
G__32045.cljs$core$IFn$_invoke$arity$2 = G__32045__2;
return G__32045;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__32052 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__32052) : xform.call(null,G__32052));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__32053 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__32053) : f__$1.call(null,G__32053));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__32054__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__32054 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32055__i = 0, G__32055__a = new Array(arguments.length -  2);
while (G__32055__i < G__32055__a.length) {G__32055__a[G__32055__i] = arguments[G__32055__i + 2]; ++G__32055__i;}
  more = new cljs.core.IndexedSeq(G__32055__a,0);
} 
return G__32054__delegate.call(this,x,y,more);};
G__32054.cljs$lang$maxFixedArity = 2;
G__32054.cljs$lang$applyTo = (function (arglist__32056){
var x = cljs.core.first(arglist__32056);
arglist__32056 = cljs.core.next(arglist__32056);
var y = cljs.core.first(arglist__32056);
var more = cljs.core.rest(arglist__32056);
return G__32054__delegate(x,y,more);
});
G__32054.cljs$core$IFn$_invoke$arity$variadic = G__32054__delegate;
return G__32054;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__32057 = null;
if (arguments.length > 2) {
var G__32058__i = 0, G__32058__a = new Array(arguments.length -  2);
while (G__32058__i < G__32058__a.length) {G__32058__a[G__32058__i] = arguments[G__32058__i + 2]; ++G__32058__i;}
G__32057 = new cljs.core.IndexedSeq(G__32058__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32057);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__32059__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__32059 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32060__i = 0, G__32060__a = new Array(arguments.length -  2);
while (G__32060__i < G__32060__a.length) {G__32060__a[G__32060__i] = arguments[G__32060__i + 2]; ++G__32060__i;}
  more = new cljs.core.IndexedSeq(G__32060__a,0);
} 
return G__32059__delegate.call(this,x,y,more);};
G__32059.cljs$lang$maxFixedArity = 2;
G__32059.cljs$lang$applyTo = (function (arglist__32061){
var x = cljs.core.first(arglist__32061);
arglist__32061 = cljs.core.next(arglist__32061);
var y = cljs.core.first(arglist__32061);
var more = cljs.core.rest(arglist__32061);
return G__32059__delegate(x,y,more);
});
G__32059.cljs$core$IFn$_invoke$arity$variadic = G__32059__delegate;
return G__32059;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__32062 = null;
if (arguments.length > 2) {
var G__32063__i = 0, G__32063__a = new Array(arguments.length -  2);
while (G__32063__i < G__32063__a.length) {G__32063__a[G__32063__i] = arguments[G__32063__i + 2]; ++G__32063__i;}
G__32062 = new cljs.core.IndexedSeq(G__32063__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32062);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__32064__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__32064 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32065__i = 0, G__32065__a = new Array(arguments.length -  2);
while (G__32065__i < G__32065__a.length) {G__32065__a[G__32065__i] = arguments[G__32065__i + 2]; ++G__32065__i;}
  more = new cljs.core.IndexedSeq(G__32065__a,0);
} 
return G__32064__delegate.call(this,x,y,more);};
G__32064.cljs$lang$maxFixedArity = 2;
G__32064.cljs$lang$applyTo = (function (arglist__32066){
var x = cljs.core.first(arglist__32066);
arglist__32066 = cljs.core.next(arglist__32066);
var y = cljs.core.first(arglist__32066);
var more = cljs.core.rest(arglist__32066);
return G__32064__delegate(x,y,more);
});
G__32064.cljs$core$IFn$_invoke$arity$variadic = G__32064__delegate;
return G__32064;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__32067 = null;
if (arguments.length > 2) {
var G__32068__i = 0, G__32068__a = new Array(arguments.length -  2);
while (G__32068__i < G__32068__a.length) {G__32068__a[G__32068__i] = arguments[G__32068__i + 2]; ++G__32068__i;}
G__32067 = new cljs.core.IndexedSeq(G__32068__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__32073__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__32073 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32074__i = 0, G__32074__a = new Array(arguments.length -  2);
while (G__32074__i < G__32074__a.length) {G__32074__a[G__32074__i] = arguments[G__32074__i + 2]; ++G__32074__i;}
  more = new cljs.core.IndexedSeq(G__32074__a,0);
} 
return G__32073__delegate.call(this,x,y,more);};
G__32073.cljs$lang$maxFixedArity = 2;
G__32073.cljs$lang$applyTo = (function (arglist__32075){
var x = cljs.core.first(arglist__32075);
arglist__32075 = cljs.core.next(arglist__32075);
var y = cljs.core.first(arglist__32075);
var more = cljs.core.rest(arglist__32075);
return G__32073__delegate(x,y,more);
});
G__32073.cljs$core$IFn$_invoke$arity$variadic = G__32073__delegate;
return G__32073;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__32076 = null;
if (arguments.length > 2) {
var G__32077__i = 0, G__32077__a = new Array(arguments.length -  2);
while (G__32077__i < G__32077__a.length) {G__32077__a[G__32077__i] = arguments[G__32077__i + 2]; ++G__32077__i;}
G__32076 = new cljs.core.IndexedSeq(G__32077__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32076);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__32078__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__32079 = y;
var G__32080 = cljs.core.first(more);
var G__32081 = cljs.core.next(more);
x = G__32079;
y = G__32080;
more = G__32081;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32078 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32082__i = 0, G__32082__a = new Array(arguments.length -  2);
while (G__32082__i < G__32082__a.length) {G__32082__a[G__32082__i] = arguments[G__32082__i + 2]; ++G__32082__i;}
  more = new cljs.core.IndexedSeq(G__32082__a,0);
} 
return G__32078__delegate.call(this,x,y,more);};
G__32078.cljs$lang$maxFixedArity = 2;
G__32078.cljs$lang$applyTo = (function (arglist__32083){
var x = cljs.core.first(arglist__32083);
arglist__32083 = cljs.core.next(arglist__32083);
var y = cljs.core.first(arglist__32083);
var more = cljs.core.rest(arglist__32083);
return G__32078__delegate(x,y,more);
});
G__32078.cljs$core$IFn$_invoke$arity$variadic = G__32078__delegate;
return G__32078;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__32084 = null;
if (arguments.length > 2) {
var G__32085__i = 0, G__32085__a = new Array(arguments.length -  2);
while (G__32085__i < G__32085__a.length) {G__32085__a[G__32085__i] = arguments[G__32085__i + 2]; ++G__32085__i;}
G__32084 = new cljs.core.IndexedSeq(G__32085__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32084);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__32086__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__32087 = y;
var G__32088 = cljs.core.first(more);
var G__32089 = cljs.core.next(more);
x = G__32087;
y = G__32088;
more = G__32089;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32086 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32090__i = 0, G__32090__a = new Array(arguments.length -  2);
while (G__32090__i < G__32090__a.length) {G__32090__a[G__32090__i] = arguments[G__32090__i + 2]; ++G__32090__i;}
  more = new cljs.core.IndexedSeq(G__32090__a,0);
} 
return G__32086__delegate.call(this,x,y,more);};
G__32086.cljs$lang$maxFixedArity = 2;
G__32086.cljs$lang$applyTo = (function (arglist__32091){
var x = cljs.core.first(arglist__32091);
arglist__32091 = cljs.core.next(arglist__32091);
var y = cljs.core.first(arglist__32091);
var more = cljs.core.rest(arglist__32091);
return G__32086__delegate(x,y,more);
});
G__32086.cljs$core$IFn$_invoke$arity$variadic = G__32086__delegate;
return G__32086;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__32092 = null;
if (arguments.length > 2) {
var G__32093__i = 0, G__32093__a = new Array(arguments.length -  2);
while (G__32093__i < G__32093__a.length) {G__32093__a[G__32093__i] = arguments[G__32093__i + 2]; ++G__32093__i;}
G__32092 = new cljs.core.IndexedSeq(G__32093__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32092);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__32094__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__32095 = y;
var G__32096 = cljs.core.first(more);
var G__32097 = cljs.core.next(more);
x = G__32095;
y = G__32096;
more = G__32097;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32094 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32098__i = 0, G__32098__a = new Array(arguments.length -  2);
while (G__32098__i < G__32098__a.length) {G__32098__a[G__32098__i] = arguments[G__32098__i + 2]; ++G__32098__i;}
  more = new cljs.core.IndexedSeq(G__32098__a,0);
} 
return G__32094__delegate.call(this,x,y,more);};
G__32094.cljs$lang$maxFixedArity = 2;
G__32094.cljs$lang$applyTo = (function (arglist__32099){
var x = cljs.core.first(arglist__32099);
arglist__32099 = cljs.core.next(arglist__32099);
var y = cljs.core.first(arglist__32099);
var more = cljs.core.rest(arglist__32099);
return G__32094__delegate(x,y,more);
});
G__32094.cljs$core$IFn$_invoke$arity$variadic = G__32094__delegate;
return G__32094;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__32100 = null;
if (arguments.length > 2) {
var G__32101__i = 0, G__32101__a = new Array(arguments.length -  2);
while (G__32101__i < G__32101__a.length) {G__32101__a[G__32101__i] = arguments[G__32101__i + 2]; ++G__32101__i;}
G__32100 = new cljs.core.IndexedSeq(G__32101__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32100);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__32102__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__32103 = y;
var G__32104 = cljs.core.first(more);
var G__32105 = cljs.core.next(more);
x = G__32103;
y = G__32104;
more = G__32105;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32102 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32106__i = 0, G__32106__a = new Array(arguments.length -  2);
while (G__32106__i < G__32106__a.length) {G__32106__a[G__32106__i] = arguments[G__32106__i + 2]; ++G__32106__i;}
  more = new cljs.core.IndexedSeq(G__32106__a,0);
} 
return G__32102__delegate.call(this,x,y,more);};
G__32102.cljs$lang$maxFixedArity = 2;
G__32102.cljs$lang$applyTo = (function (arglist__32107){
var x = cljs.core.first(arglist__32107);
arglist__32107 = cljs.core.next(arglist__32107);
var y = cljs.core.first(arglist__32107);
var more = cljs.core.rest(arglist__32107);
return G__32102__delegate(x,y,more);
});
G__32102.cljs$core$IFn$_invoke$arity$variadic = G__32102__delegate;
return G__32102;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__32108 = null;
if (arguments.length > 2) {
var G__32109__i = 0, G__32109__a = new Array(arguments.length -  2);
while (G__32109__i < G__32109__a.length) {G__32109__a[G__32109__i] = arguments[G__32109__i + 2]; ++G__32109__i;}
G__32108 = new cljs.core.IndexedSeq(G__32109__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32108);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__24489__auto__ = x;
var y__24490__auto__ = y;
return ((x__24489__auto__ > y__24490__auto__) ? x__24489__auto__ : y__24490__auto__);
});
var cljs$core$max__3 = (function() { 
var G__32110__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__24489__auto__ = x;
var y__24490__auto__ = y;
return ((x__24489__auto__ > y__24490__auto__) ? x__24489__auto__ : y__24490__auto__);
})(),more);
};
var G__32110 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32111__i = 0, G__32111__a = new Array(arguments.length -  2);
while (G__32111__i < G__32111__a.length) {G__32111__a[G__32111__i] = arguments[G__32111__i + 2]; ++G__32111__i;}
  more = new cljs.core.IndexedSeq(G__32111__a,0);
} 
return G__32110__delegate.call(this,x,y,more);};
G__32110.cljs$lang$maxFixedArity = 2;
G__32110.cljs$lang$applyTo = (function (arglist__32112){
var x = cljs.core.first(arglist__32112);
arglist__32112 = cljs.core.next(arglist__32112);
var y = cljs.core.first(arglist__32112);
var more = cljs.core.rest(arglist__32112);
return G__32110__delegate(x,y,more);
});
G__32110.cljs$core$IFn$_invoke$arity$variadic = G__32110__delegate;
return G__32110;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__32113 = null;
if (arguments.length > 2) {
var G__32114__i = 0, G__32114__a = new Array(arguments.length -  2);
while (G__32114__i < G__32114__a.length) {G__32114__a[G__32114__i] = arguments[G__32114__i + 2]; ++G__32114__i;}
G__32113 = new cljs.core.IndexedSeq(G__32114__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32113);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__24496__auto__ = x;
var y__24497__auto__ = y;
return ((x__24496__auto__ < y__24497__auto__) ? x__24496__auto__ : y__24497__auto__);
});
var cljs$core$min__3 = (function() { 
var G__32115__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__24496__auto__ = x;
var y__24497__auto__ = y;
return ((x__24496__auto__ < y__24497__auto__) ? x__24496__auto__ : y__24497__auto__);
})(),more);
};
var G__32115 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32116__i = 0, G__32116__a = new Array(arguments.length -  2);
while (G__32116__i < G__32116__a.length) {G__32116__a[G__32116__i] = arguments[G__32116__i + 2]; ++G__32116__i;}
  more = new cljs.core.IndexedSeq(G__32116__a,0);
} 
return G__32115__delegate.call(this,x,y,more);};
G__32115.cljs$lang$maxFixedArity = 2;
G__32115.cljs$lang$applyTo = (function (arglist__32117){
var x = cljs.core.first(arglist__32117);
arglist__32117 = cljs.core.next(arglist__32117);
var y = cljs.core.first(arglist__32117);
var more = cljs.core.rest(arglist__32117);
return G__32115__delegate(x,y,more);
});
G__32115.cljs$core$IFn$_invoke$arity$variadic = G__32115__delegate;
return G__32115;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__32118 = null;
if (arguments.length > 2) {
var G__32119__i = 0, G__32119__a = new Array(arguments.length -  2);
while (G__32119__i < G__32119__a.length) {G__32119__a[G__32119__i] = arguments[G__32119__i + 2]; ++G__32119__i;}
G__32118 = new cljs.core.IndexedSeq(G__32119__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32118);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__32120__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__32120 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32121__i = 0, G__32121__a = new Array(arguments.length -  2);
while (G__32121__i < G__32121__a.length) {G__32121__a[G__32121__i] = arguments[G__32121__i + 2]; ++G__32121__i;}
  more = new cljs.core.IndexedSeq(G__32121__a,0);
} 
return G__32120__delegate.call(this,x,y,more);};
G__32120.cljs$lang$maxFixedArity = 2;
G__32120.cljs$lang$applyTo = (function (arglist__32122){
var x = cljs.core.first(arglist__32122);
arglist__32122 = cljs.core.next(arglist__32122);
var y = cljs.core.first(arglist__32122);
var more = cljs.core.rest(arglist__32122);
return G__32120__delegate(x,y,more);
});
G__32120.cljs$core$IFn$_invoke$arity$variadic = G__32120__delegate;
return G__32120;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__32123 = null;
if (arguments.length > 2) {
var G__32124__i = 0, G__32124__a = new Array(arguments.length -  2);
while (G__32124__i < G__32124__a.length) {G__32124__a[G__32124__i] = arguments[G__32124__i + 2]; ++G__32124__i;}
G__32123 = new cljs.core.IndexedSeq(G__32124__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32123);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__32125__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__32125 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32126__i = 0, G__32126__a = new Array(arguments.length -  2);
while (G__32126__i < G__32126__a.length) {G__32126__a[G__32126__i] = arguments[G__32126__i + 2]; ++G__32126__i;}
  more = new cljs.core.IndexedSeq(G__32126__a,0);
} 
return G__32125__delegate.call(this,x,y,more);};
G__32125.cljs$lang$maxFixedArity = 2;
G__32125.cljs$lang$applyTo = (function (arglist__32127){
var x = cljs.core.first(arglist__32127);
arglist__32127 = cljs.core.next(arglist__32127);
var y = cljs.core.first(arglist__32127);
var more = cljs.core.rest(arglist__32127);
return G__32125__delegate(x,y,more);
});
G__32125.cljs$core$IFn$_invoke$arity$variadic = G__32125__delegate;
return G__32125;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__32128 = null;
if (arguments.length > 2) {
var G__32129__i = 0, G__32129__a = new Array(arguments.length -  2);
while (G__32129__i < G__32129__a.length) {G__32129__a[G__32129__i] = arguments[G__32129__i + 2]; ++G__32129__i;}
G__32128 = new cljs.core.IndexedSeq(G__32129__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__32134__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__32134 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32135__i = 0, G__32135__a = new Array(arguments.length -  2);
while (G__32135__i < G__32135__a.length) {G__32135__a[G__32135__i] = arguments[G__32135__i + 2]; ++G__32135__i;}
  more = new cljs.core.IndexedSeq(G__32135__a,0);
} 
return G__32134__delegate.call(this,x,y,more);};
G__32134.cljs$lang$maxFixedArity = 2;
G__32134.cljs$lang$applyTo = (function (arglist__32136){
var x = cljs.core.first(arglist__32136);
arglist__32136 = cljs.core.next(arglist__32136);
var y = cljs.core.first(arglist__32136);
var more = cljs.core.rest(arglist__32136);
return G__32134__delegate(x,y,more);
});
G__32134.cljs$core$IFn$_invoke$arity$variadic = G__32134__delegate;
return G__32134;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__32137 = null;
if (arguments.length > 2) {
var G__32138__i = 0, G__32138__a = new Array(arguments.length -  2);
while (G__32138__i < G__32138__a.length) {G__32138__a[G__32138__i] = arguments[G__32138__i + 2]; ++G__32138__i;}
G__32137 = new cljs.core.IndexedSeq(G__32138__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32137);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__32139__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__32139 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32140__i = 0, G__32140__a = new Array(arguments.length -  2);
while (G__32140__i < G__32140__a.length) {G__32140__a[G__32140__i] = arguments[G__32140__i + 2]; ++G__32140__i;}
  more = new cljs.core.IndexedSeq(G__32140__a,0);
} 
return G__32139__delegate.call(this,x,y,more);};
G__32139.cljs$lang$maxFixedArity = 2;
G__32139.cljs$lang$applyTo = (function (arglist__32141){
var x = cljs.core.first(arglist__32141);
arglist__32141 = cljs.core.next(arglist__32141);
var y = cljs.core.first(arglist__32141);
var more = cljs.core.rest(arglist__32141);
return G__32139__delegate(x,y,more);
});
G__32139.cljs$core$IFn$_invoke$arity$variadic = G__32139__delegate;
return G__32139;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__32142 = null;
if (arguments.length > 2) {
var G__32143__i = 0, G__32143__a = new Array(arguments.length -  2);
while (G__32143__i < G__32143__a.length) {G__32143__a[G__32143__i] = arguments[G__32143__i + 2]; ++G__32143__i;}
G__32142 = new cljs.core.IndexedSeq(G__32143__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32142);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__32144__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__32144 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32145__i = 0, G__32145__a = new Array(arguments.length -  2);
while (G__32145__i < G__32145__a.length) {G__32145__a[G__32145__i] = arguments[G__32145__i + 2]; ++G__32145__i;}
  more = new cljs.core.IndexedSeq(G__32145__a,0);
} 
return G__32144__delegate.call(this,x,y,more);};
G__32144.cljs$lang$maxFixedArity = 2;
G__32144.cljs$lang$applyTo = (function (arglist__32146){
var x = cljs.core.first(arglist__32146);
arglist__32146 = cljs.core.next(arglist__32146);
var y = cljs.core.first(arglist__32146);
var more = cljs.core.rest(arglist__32146);
return G__32144__delegate(x,y,more);
});
G__32144.cljs$core$IFn$_invoke$arity$variadic = G__32144__delegate;
return G__32144;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__32147 = null;
if (arguments.length > 2) {
var G__32148__i = 0, G__32148__a = new Array(arguments.length -  2);
while (G__32148__i < G__32148__a.length) {G__32148__a[G__32148__i] = arguments[G__32148__i + 2]; ++G__32148__i;}
G__32147 = new cljs.core.IndexedSeq(G__32148__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32147);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__32151 = x;
var G__32152 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__32151,G__32152) : cljs.core.mod.call(null,G__32151,G__32152));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__32153__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__32153 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32154__i = 0, G__32154__a = new Array(arguments.length -  2);
while (G__32154__i < G__32154__a.length) {G__32154__a[G__32154__i] = arguments[G__32154__i + 2]; ++G__32154__i;}
  more = new cljs.core.IndexedSeq(G__32154__a,0);
} 
return G__32153__delegate.call(this,x,y,more);};
G__32153.cljs$lang$maxFixedArity = 2;
G__32153.cljs$lang$applyTo = (function (arglist__32155){
var x = cljs.core.first(arglist__32155);
arglist__32155 = cljs.core.next(arglist__32155);
var y = cljs.core.first(arglist__32155);
var more = cljs.core.rest(arglist__32155);
return G__32153__delegate(x,y,more);
});
G__32153.cljs$core$IFn$_invoke$arity$variadic = G__32153__delegate;
return G__32153;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__32156 = null;
if (arguments.length > 2) {
var G__32157__i = 0, G__32157__a = new Array(arguments.length -  2);
while (G__32157__i < G__32157__a.length) {G__32157__a[G__32157__i] = arguments[G__32157__i + 2]; ++G__32157__i;}
G__32156 = new cljs.core.IndexedSeq(G__32157__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32156);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__32158__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__32158 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32159__i = 0, G__32159__a = new Array(arguments.length -  2);
while (G__32159__i < G__32159__a.length) {G__32159__a[G__32159__i] = arguments[G__32159__i + 2]; ++G__32159__i;}
  more = new cljs.core.IndexedSeq(G__32159__a,0);
} 
return G__32158__delegate.call(this,x,y,more);};
G__32158.cljs$lang$maxFixedArity = 2;
G__32158.cljs$lang$applyTo = (function (arglist__32160){
var x = cljs.core.first(arglist__32160);
arglist__32160 = cljs.core.next(arglist__32160);
var y = cljs.core.first(arglist__32160);
var more = cljs.core.rest(arglist__32160);
return G__32158__delegate(x,y,more);
});
G__32158.cljs$core$IFn$_invoke$arity$variadic = G__32158__delegate;
return G__32158;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__32161 = null;
if (arguments.length > 2) {
var G__32162__i = 0, G__32162__a = new Array(arguments.length -  2);
while (G__32162__i < G__32162__a.length) {G__32162__a[G__32162__i] = arguments[G__32162__i + 2]; ++G__32162__i;}
G__32161 = new cljs.core.IndexedSeq(G__32162__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32161);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__32165 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32165) : Math.floor.call(null,G__32165));
} else {
var G__32166 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__32166) : Math.ceil.call(null,G__32166));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__32167__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__32167 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32168__i = 0, G__32168__a = new Array(arguments.length -  2);
while (G__32168__i < G__32168__a.length) {G__32168__a[G__32168__i] = arguments[G__32168__i + 2]; ++G__32168__i;}
  more = new cljs.core.IndexedSeq(G__32168__a,0);
} 
return G__32167__delegate.call(this,x,y,more);};
G__32167.cljs$lang$maxFixedArity = 2;
G__32167.cljs$lang$applyTo = (function (arglist__32169){
var x = cljs.core.first(arglist__32169);
arglist__32169 = cljs.core.next(arglist__32169);
var y = cljs.core.first(arglist__32169);
var more = cljs.core.rest(arglist__32169);
return G__32167__delegate(x,y,more);
});
G__32167.cljs$core$IFn$_invoke$arity$variadic = G__32167__delegate;
return G__32167;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__32170 = null;
if (arguments.length > 2) {
var G__32171__i = 0, G__32171__a = new Array(arguments.length -  2);
while (G__32171__i < G__32171__a.length) {G__32171__a[G__32171__i] = arguments[G__32171__i + 2]; ++G__32171__i;}
G__32170 = new cljs.core.IndexedSeq(G__32171__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32170);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__32172__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__32172 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32173__i = 0, G__32173__a = new Array(arguments.length -  2);
while (G__32173__i < G__32173__a.length) {G__32173__a[G__32173__i] = arguments[G__32173__i + 2]; ++G__32173__i;}
  more = new cljs.core.IndexedSeq(G__32173__a,0);
} 
return G__32172__delegate.call(this,x,y,more);};
G__32172.cljs$lang$maxFixedArity = 2;
G__32172.cljs$lang$applyTo = (function (arglist__32174){
var x = cljs.core.first(arglist__32174);
arglist__32174 = cljs.core.next(arglist__32174);
var y = cljs.core.first(arglist__32174);
var more = cljs.core.rest(arglist__32174);
return G__32172__delegate(x,y,more);
});
G__32172.cljs$core$IFn$_invoke$arity$variadic = G__32172__delegate;
return G__32172;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__32175 = null;
if (arguments.length > 2) {
var G__32176__i = 0, G__32176__a = new Array(arguments.length -  2);
while (G__32176__i < G__32176__a.length) {G__32176__a[G__32176__i] = arguments[G__32176__i + 2]; ++G__32176__i;}
G__32175 = new cljs.core.IndexedSeq(G__32176__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32175);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__32177__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__32177 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32178__i = 0, G__32178__a = new Array(arguments.length -  2);
while (G__32178__i < G__32178__a.length) {G__32178__a[G__32178__i] = arguments[G__32178__i + 2]; ++G__32178__i;}
  more = new cljs.core.IndexedSeq(G__32178__a,0);
} 
return G__32177__delegate.call(this,x,y,more);};
G__32177.cljs$lang$maxFixedArity = 2;
G__32177.cljs$lang$applyTo = (function (arglist__32179){
var x = cljs.core.first(arglist__32179);
arglist__32179 = cljs.core.next(arglist__32179);
var y = cljs.core.first(arglist__32179);
var more = cljs.core.rest(arglist__32179);
return G__32177__delegate(x,y,more);
});
G__32177.cljs$core$IFn$_invoke$arity$variadic = G__32177__delegate;
return G__32177;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__32180 = null;
if (arguments.length > 2) {
var G__32181__i = 0, G__32181__a = new Array(arguments.length -  2);
while (G__32181__i < G__32181__a.length) {G__32181__a[G__32181__i] = arguments[G__32181__i + 2]; ++G__32181__i;}
G__32180 = new cljs.core.IndexedSeq(G__32181__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32180);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__32182__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__32182 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32183__i = 0, G__32183__a = new Array(arguments.length -  2);
while (G__32183__i < G__32183__a.length) {G__32183__a[G__32183__i] = arguments[G__32183__i + 2]; ++G__32183__i;}
  more = new cljs.core.IndexedSeq(G__32183__a,0);
} 
return G__32182__delegate.call(this,x,y,more);};
G__32182.cljs$lang$maxFixedArity = 2;
G__32182.cljs$lang$applyTo = (function (arglist__32184){
var x = cljs.core.first(arglist__32184);
arglist__32184 = cljs.core.next(arglist__32184);
var y = cljs.core.first(arglist__32184);
var more = cljs.core.rest(arglist__32184);
return G__32182__delegate(x,y,more);
});
G__32182.cljs$core$IFn$_invoke$arity$variadic = G__32182__delegate;
return G__32182;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__32185 = null;
if (arguments.length > 2) {
var G__32186__i = 0, G__32186__a = new Array(arguments.length -  2);
while (G__32186__i < G__32186__a.length) {G__32186__a[G__32186__i] = arguments[G__32186__i + 2]; ++G__32186__i;}
G__32185 = new cljs.core.IndexedSeq(G__32186__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32185);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__32191__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__32192 = y;
var G__32193 = cljs.core.first(more);
var G__32194 = cljs.core.next(more);
x = G__32192;
y = G__32193;
more = G__32194;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32191 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32195__i = 0, G__32195__a = new Array(arguments.length -  2);
while (G__32195__i < G__32195__a.length) {G__32195__a[G__32195__i] = arguments[G__32195__i + 2]; ++G__32195__i;}
  more = new cljs.core.IndexedSeq(G__32195__a,0);
} 
return G__32191__delegate.call(this,x,y,more);};
G__32191.cljs$lang$maxFixedArity = 2;
G__32191.cljs$lang$applyTo = (function (arglist__32196){
var x = cljs.core.first(arglist__32196);
arglist__32196 = cljs.core.next(arglist__32196);
var y = cljs.core.first(arglist__32196);
var more = cljs.core.rest(arglist__32196);
return G__32191__delegate(x,y,more);
});
G__32191.cljs$core$IFn$_invoke$arity$variadic = G__32191__delegate;
return G__32191;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__32197 = null;
if (arguments.length > 2) {
var G__32198__i = 0, G__32198__a = new Array(arguments.length -  2);
while (G__32198__i < G__32198__a.length) {G__32198__a[G__32198__i] = arguments[G__32198__i + 2]; ++G__32198__i;}
G__32197 = new cljs.core.IndexedSeq(G__32198__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32197);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__32199 = (n__$1 - (1));
var G__32200 = cljs.core.next(xs);
n__$1 = G__32199;
xs = G__32200;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__32204 = x;
return goog.string.buildString(G__32204);
}
});
var cljs$core$str__2 = (function() { 
var G__32205__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__32206 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__32207 = cljs.core.next(more);
sb = G__32206;
more = G__32207;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__32205 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__32208__i = 0, G__32208__a = new Array(arguments.length -  1);
while (G__32208__i < G__32208__a.length) {G__32208__a[G__32208__i] = arguments[G__32208__i + 1]; ++G__32208__i;}
  ys = new cljs.core.IndexedSeq(G__32208__a,0);
} 
return G__32205__delegate.call(this,x,ys);};
G__32205.cljs$lang$maxFixedArity = 1;
G__32205.cljs$lang$applyTo = (function (arglist__32209){
var x = cljs.core.first(arglist__32209);
var ys = cljs.core.rest(arglist__32209);
return G__32205__delegate(x,ys);
});
G__32205.cljs$core$IFn$_invoke$arity$variadic = G__32205__delegate;
return G__32205;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__32210 = null;
if (arguments.length > 1) {
var G__32211__i = 0, G__32211__a = new Array(arguments.length -  1);
while (G__32211__i < G__32211__a.length) {G__32211__a[G__32211__i] = arguments[G__32211__i + 1]; ++G__32211__i;}
G__32210 = new cljs.core.IndexedSeq(G__32211__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32210);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__32212 = cljs.core.next(xs);
var G__32213 = cljs.core.next(ys);
xs = G__32212;
ys = G__32213;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__32214 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__32215 = cljs.core.next(s);
res = G__32214;
s = G__32215;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__32220 = ((h + (cljs.core.hash((function (){var G__32218 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__32218) : cljs.core.key.call(null,G__32218));
})()) ^ cljs.core.hash((function (){var G__32219 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__32219) : cljs.core.val.call(null,G__32219));
})()))) % (4503599627370496));
var G__32221 = cljs.core.next(s);
h = G__32220;
s = G__32221;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__32222 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__32223 = cljs.core.next(s__$1);
h = G__32222;
s__$1 = G__32223;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__32234_32244 = cljs.core.seq(fn_map);
var chunk__32235_32245 = null;
var count__32236_32246 = (0);
var i__32237_32247 = (0);
while(true){
if((i__32237_32247 < count__32236_32246)){
var vec__32238_32248 = chunk__32235_32245.cljs$core$IIndexed$_nth$arity$2(null,i__32237_32247);
var key_name_32249 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32238_32248,(0),null);
var f_32250 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32238_32248,(1),null);
var str_name_32251 = (function (){var G__32239 = key_name_32249;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32239) : cljs.core.name.call(null,G__32239));
})();
(obj[str_name_32251] = f_32250);

var G__32252 = seq__32234_32244;
var G__32253 = chunk__32235_32245;
var G__32254 = count__32236_32246;
var G__32255 = (i__32237_32247 + (1));
seq__32234_32244 = G__32252;
chunk__32235_32245 = G__32253;
count__32236_32246 = G__32254;
i__32237_32247 = G__32255;
continue;
} else {
var temp__4126__auto___32256 = cljs.core.seq(seq__32234_32244);
if(temp__4126__auto___32256){
var seq__32234_32257__$1 = temp__4126__auto___32256;
if(cljs.core.chunked_seq_QMARK_(seq__32234_32257__$1)){
var c__24962__auto___32258 = (function (){var G__32240 = seq__32234_32257__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__32240) : cljs.core.chunk_first.call(null,G__32240));
})();
var G__32259 = (function (){var G__32241 = seq__32234_32257__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__32241) : cljs.core.chunk_rest.call(null,G__32241));
})();
var G__32260 = c__24962__auto___32258;
var G__32261 = cljs.core.count(c__24962__auto___32258);
var G__32262 = (0);
seq__32234_32244 = G__32259;
chunk__32235_32245 = G__32260;
count__32236_32246 = G__32261;
i__32237_32247 = G__32262;
continue;
} else {
var vec__32242_32263 = cljs.core.first(seq__32234_32257__$1);
var key_name_32264 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32242_32263,(0),null);
var f_32265 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32242_32263,(1),null);
var str_name_32266 = (function (){var G__32243 = key_name_32264;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32243) : cljs.core.name.call(null,G__32243));
})();
(obj[str_name_32266] = f_32265);

var G__32267 = cljs.core.next(seq__32234_32257__$1);
var G__32268 = null;
var G__32269 = (0);
var G__32270 = (0);
seq__32234_32244 = G__32267;
chunk__32235_32245 = G__32268;
count__32236_32246 = G__32269;
i__32237_32247 = G__32270;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__32272 = coll;
if(G__32272){
var bit__24851__auto__ = (G__32272.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24851__auto__) || (G__32272.cljs$core$IReversible$)){
return true;
} else {
if((!G__32272.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__32272);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__32272);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__32273 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__32273;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__32274 = (i - (1));
var G__32275 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__32274;
r = G__32275;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__32276__i = 0, G__32276__a = new Array(arguments.length -  0);
while (G__32276__i < G__32276__a.length) {G__32276__a[G__32276__i] = arguments[G__32276__i + 0]; ++G__32276__i;}
  xs = new cljs.core.IndexedSeq(G__32276__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__32277){
var xs = cljs.core.seq(arglist__32277);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__24177__auto__ = (coll == null);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var G__32281 = coll;
if(G__32281){
var bit__24844__auto__ = (G__32281.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24844__auto__) || (G__32281.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__32283 = x;
if(G__32283){
var bit__24851__auto__ = (G__32283.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24851__auto__) || (G__32283.cljs$core$IList$)){
return true;
} else {
if((!G__32283.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__32283);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__32283);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24165__auto__ = cljs.core.not(a.ns);
if(and__24165__auto__){
return b.ns;
} else {
return and__24165__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__32290 = a.ns;
var G__32291 = b.ns;
return goog.array.defaultCompare(G__32290,G__32291);
})();
if(((0) === nsc)){
var G__32292 = a.name;
var G__32293 = b.name;
return goog.array.defaultCompare(G__32292,G__32293);
} else {
return nsc;
}
}
} else {
var G__32294 = a.name;
var G__32295 = b.name;
return goog.array.defaultCompare(G__32294,G__32295);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24593__auto__ = self__._hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__32297 = null;
var G__32297__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__32297__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__32297 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__32297__2.call(this,self__,coll);
case 3:
return G__32297__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32297.cljs$core$IFn$_invoke$arity$2 = G__32297__2;
G__32297.cljs$core$IFn$_invoke$arity$3 = G__32297__3;
return G__32297;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args32296){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32296)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__32299 = x;
if(G__32299){
var bit__24844__auto__ = (G__32299.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24844__auto__) || (G__32299.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__32301 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32301) : cljs.core.name.call(null,G__32301));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__32302 = ls.sval();
ls = G__32302;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__32304 = s;
if(G__32304){
var bit__24844__auto__ = (G__32304.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24844__auto__) || (G__32304.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__32305 = cljs.core.next(s__$1);
s__$1 = G__32305;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_32306 = (0);
var xs_32307 = cljs.core.seq(coll);
while(true){
if(xs_32307){
(ret[i_32306] = cljs.core.to_array(cljs.core.first(xs_32307)));

var G__32308 = (i_32306 + (1));
var G__32309 = cljs.core.next(xs_32307);
i_32306 = G__32308;
xs_32307 = G__32309;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32312 = (i + (1));
var G__32313 = cljs.core.next(s__$1);
i = G__32312;
s__$1 = G__32313;
continue;
} else {
return a;
}
break;
}
} else {
var n__25062__auto___32314 = size;
var i_32315 = (0);
while(true){
if((i_32315 < n__25062__auto___32314)){
(a[i_32315] = init_val_or_seq);

var G__32316 = (i_32315 + (1));
i_32315 = G__32316;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32319 = (i + (1));
var G__32320 = cljs.core.next(s__$1);
i = G__32319;
s__$1 = G__32320;
continue;
} else {
return a;
}
break;
}
} else {
var n__25062__auto___32321 = size;
var i_32322 = (0);
while(true){
if((i_32322 < n__25062__auto___32321)){
(a[i_32322] = init_val_or_seq);

var G__32323 = (i_32322 + (1));
i_32322 = G__32323;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32326 = (i + (1));
var G__32327 = cljs.core.next(s__$1);
i = G__32326;
s__$1 = G__32327;
continue;
} else {
return a;
}
break;
}
} else {
var n__25062__auto___32328 = size;
var i_32329 = (0);
while(true){
if((i_32329 < n__25062__auto___32328)){
(a[i_32329] = init_val_or_seq);

var G__32330 = (i_32329 + (1));
i_32329 = G__32330;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32333 = (i + (1));
var G__32334 = cljs.core.next(s__$1);
i = G__32333;
s__$1 = G__32334;
continue;
} else {
return a;
}
break;
}
} else {
var n__25062__auto___32335 = size;
var i_32336 = (0);
while(true){
if((i_32336 < n__25062__auto___32335)){
(a[i_32336] = init_val_or_seq);

var G__32337 = (i_32336 + (1));
i_32336 = G__32337;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__32338 = cljs.core.next(s__$1);
var G__32339 = (i - (1));
var G__32340 = (sum + (1));
s__$1 = G__32338;
i = G__32339;
sum = G__32340;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__32360__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__32360 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__32361__i = 0, G__32361__a = new Array(arguments.length -  2);
while (G__32361__i < G__32361__a.length) {G__32361__a[G__32361__i] = arguments[G__32361__i + 2]; ++G__32361__i;}
  zs = new cljs.core.IndexedSeq(G__32361__a,0);
} 
return G__32360__delegate.call(this,x,y,zs);};
G__32360.cljs$lang$maxFixedArity = 2;
G__32360.cljs$lang$applyTo = (function (arglist__32362){
var x = cljs.core.first(arglist__32362);
arglist__32362 = cljs.core.next(arglist__32362);
var y = cljs.core.first(arglist__32362);
var zs = cljs.core.rest(arglist__32362);
return G__32360__delegate(x,y,zs);
});
G__32360.cljs$core$IFn$_invoke$arity$variadic = G__32360__delegate;
return G__32360;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__32363 = null;
if (arguments.length > 2) {
var G__32364__i = 0, G__32364__a = new Array(arguments.length -  2);
while (G__32364__i < G__32364__a.length) {G__32364__a[G__32364__i] = arguments[G__32364__i + 2]; ++G__32364__i;}
G__32363 = new cljs.core.IndexedSeq(G__32364__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__32365__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__32365 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__32366__i = 0, G__32366__a = new Array(arguments.length -  4);
while (G__32366__i < G__32366__a.length) {G__32366__a[G__32366__i] = arguments[G__32366__i + 4]; ++G__32366__i;}
  more = new cljs.core.IndexedSeq(G__32366__a,0);
} 
return G__32365__delegate.call(this,a,b,c,d,more);};
G__32365.cljs$lang$maxFixedArity = 4;
G__32365.cljs$lang$applyTo = (function (arglist__32367){
var a = cljs.core.first(arglist__32367);
arglist__32367 = cljs.core.next(arglist__32367);
var b = cljs.core.first(arglist__32367);
arglist__32367 = cljs.core.next(arglist__32367);
var c = cljs.core.first(arglist__32367);
arglist__32367 = cljs.core.next(arglist__32367);
var d = cljs.core.first(arglist__32367);
var more = cljs.core.rest(arglist__32367);
return G__32365__delegate(a,b,c,d,more);
});
G__32365.cljs$core$IFn$_invoke$arity$variadic = G__32365__delegate;
return G__32365;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__32368 = null;
if (arguments.length > 4) {
var G__32369__i = 0, G__32369__a = new Array(arguments.length -  4);
while (G__32369__i < G__32369__a.length) {G__32369__a[G__32369__i] = arguments[G__32369__i + 4]; ++G__32369__i;}
G__32368 = new cljs.core.IndexedSeq(G__32369__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__32368);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__32370__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__32371 = ntcoll;
var G__32372 = cljs.core.first(vals);
var G__32373 = cljs.core.next(vals);
tcoll = G__32371;
val = G__32372;
vals = G__32373;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32370 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__32374__i = 0, G__32374__a = new Array(arguments.length -  2);
while (G__32374__i < G__32374__a.length) {G__32374__a[G__32374__i] = arguments[G__32374__i + 2]; ++G__32374__i;}
  vals = new cljs.core.IndexedSeq(G__32374__a,0);
} 
return G__32370__delegate.call(this,tcoll,val,vals);};
G__32370.cljs$lang$maxFixedArity = 2;
G__32370.cljs$lang$applyTo = (function (arglist__32375){
var tcoll = cljs.core.first(arglist__32375);
arglist__32375 = cljs.core.next(arglist__32375);
var val = cljs.core.first(arglist__32375);
var vals = cljs.core.rest(arglist__32375);
return G__32370__delegate(tcoll,val,vals);
});
G__32370.cljs$core$IFn$_invoke$arity$variadic = G__32370__delegate;
return G__32370;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__32376 = null;
if (arguments.length > 2) {
var G__32377__i = 0, G__32377__a = new Array(arguments.length -  2);
while (G__32377__i < G__32377__a.length) {G__32377__a[G__32377__i] = arguments[G__32377__i + 2]; ++G__32377__i;}
G__32376 = new cljs.core.IndexedSeq(G__32377__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__32376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__32378__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__32379 = ntcoll;
var G__32380 = cljs.core.first(kvs);
var G__32381 = cljs.core.second(kvs);
var G__32382 = cljs.core.nnext(kvs);
tcoll = G__32379;
key = G__32380;
val = G__32381;
kvs = G__32382;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32378 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__32383__i = 0, G__32383__a = new Array(arguments.length -  3);
while (G__32383__i < G__32383__a.length) {G__32383__a[G__32383__i] = arguments[G__32383__i + 3]; ++G__32383__i;}
  kvs = new cljs.core.IndexedSeq(G__32383__a,0);
} 
return G__32378__delegate.call(this,tcoll,key,val,kvs);};
G__32378.cljs$lang$maxFixedArity = 3;
G__32378.cljs$lang$applyTo = (function (arglist__32384){
var tcoll = cljs.core.first(arglist__32384);
arglist__32384 = cljs.core.next(arglist__32384);
var key = cljs.core.first(arglist__32384);
arglist__32384 = cljs.core.next(arglist__32384);
var val = cljs.core.first(arglist__32384);
var kvs = cljs.core.rest(arglist__32384);
return G__32378__delegate(tcoll,key,val,kvs);
});
G__32378.cljs$core$IFn$_invoke$arity$variadic = G__32378__delegate;
return G__32378;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__32385 = null;
if (arguments.length > 3) {
var G__32386__i = 0, G__32386__a = new Array(arguments.length -  3);
while (G__32386__i < G__32386__a.length) {G__32386__a[G__32386__i] = arguments[G__32386__i + 3]; ++G__32386__i;}
G__32385 = new cljs.core.IndexedSeq(G__32386__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__32385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__32387__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__32388 = ntcoll;
var G__32389 = cljs.core.first(ks);
var G__32390 = cljs.core.next(ks);
tcoll = G__32388;
key = G__32389;
ks = G__32390;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32387 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__32391__i = 0, G__32391__a = new Array(arguments.length -  2);
while (G__32391__i < G__32391__a.length) {G__32391__a[G__32391__i] = arguments[G__32391__i + 2]; ++G__32391__i;}
  ks = new cljs.core.IndexedSeq(G__32391__a,0);
} 
return G__32387__delegate.call(this,tcoll,key,ks);};
G__32387.cljs$lang$maxFixedArity = 2;
G__32387.cljs$lang$applyTo = (function (arglist__32392){
var tcoll = cljs.core.first(arglist__32392);
arglist__32392 = cljs.core.next(arglist__32392);
var key = cljs.core.first(arglist__32392);
var ks = cljs.core.rest(arglist__32392);
return G__32387__delegate(tcoll,key,ks);
});
G__32387.cljs$core$IFn$_invoke$arity$variadic = G__32387__delegate;
return G__32387;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__32393 = null;
if (arguments.length > 2) {
var G__32394__i = 0, G__32394__a = new Array(arguments.length -  2);
while (G__32394__i < G__32394__a.length) {G__32394__a[G__32394__i] = arguments[G__32394__i + 2]; ++G__32394__i;}
G__32393 = new cljs.core.IndexedSeq(G__32394__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__32393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__32395__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__32396 = ntcoll;
var G__32397 = cljs.core.first(vals);
var G__32398 = cljs.core.next(vals);
tcoll = G__32396;
val = G__32397;
vals = G__32398;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32395 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__32399__i = 0, G__32399__a = new Array(arguments.length -  2);
while (G__32399__i < G__32399__a.length) {G__32399__a[G__32399__i] = arguments[G__32399__i + 2]; ++G__32399__i;}
  vals = new cljs.core.IndexedSeq(G__32399__a,0);
} 
return G__32395__delegate.call(this,tcoll,val,vals);};
G__32395.cljs$lang$maxFixedArity = 2;
G__32395.cljs$lang$applyTo = (function (arglist__32400){
var tcoll = cljs.core.first(arglist__32400);
arglist__32400 = cljs.core.next(arglist__32400);
var val = cljs.core.first(arglist__32400);
var vals = cljs.core.rest(arglist__32400);
return G__32395__delegate(tcoll,val,vals);
});
G__32395.cljs$core$IFn$_invoke$arity$variadic = G__32395__delegate;
return G__32395;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__32401 = null;
if (arguments.length > 2) {
var G__32402__i = 0, G__32402__a = new Array(arguments.length -  2);
while (G__32402__i < G__32402__a.length) {G__32402__a[G__32402__i] = arguments[G__32402__i + 2]; ++G__32402__i;}
G__32401 = new cljs.core.IndexedSeq(G__32402__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__32401);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25106 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25106);
} else {
var G__32613 = a25106;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32613) : f.call(null,G__32613));
}
} else {
var b25107 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25106,b25107);
} else {
var G__32614 = a25106;
var G__32615 = b25107;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32614,G__32615) : f.call(null,G__32614,G__32615));
}
} else {
var c25108 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25106,b25107,c25108);
} else {
var G__32616 = a25106;
var G__32617 = b25107;
var G__32618 = c25108;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32616,G__32617,G__32618) : f.call(null,G__32616,G__32617,G__32618));
}
} else {
var d25109 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25106,b25107,c25108,d25109);
} else {
var G__32619 = a25106;
var G__32620 = b25107;
var G__32621 = c25108;
var G__32622 = d25109;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32619,G__32620,G__32621,G__32622) : f.call(null,G__32619,G__32620,G__32621,G__32622));
}
} else {
var e25110 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25106,b25107,c25108,d25109,e25110);
} else {
var G__32623 = a25106;
var G__32624 = b25107;
var G__32625 = c25108;
var G__32626 = d25109;
var G__32627 = e25110;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32623,G__32624,G__32625,G__32626,G__32627) : f.call(null,G__32623,G__32624,G__32625,G__32626,G__32627));
}
} else {
var f25111 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25106,b25107,c25108,d25109,e25110,f25111);
} else {
var G__32628 = a25106;
var G__32629 = b25107;
var G__32630 = c25108;
var G__32631 = d25109;
var G__32632 = e25110;
var G__32633 = f25111;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__32628,G__32629,G__32630,G__32631,G__32632,G__32633) : f.call(null,G__32628,G__32629,G__32630,G__32631,G__32632,G__32633));
}
} else {
var g25112 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25106,b25107,c25108,d25109,e25110,f25111,g25112);
} else {
var G__32634 = a25106;
var G__32635 = b25107;
var G__32636 = c25108;
var G__32637 = d25109;
var G__32638 = e25110;
var G__32639 = f25111;
var G__32640 = g25112;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__32634,G__32635,G__32636,G__32637,G__32638,G__32639,G__32640) : f.call(null,G__32634,G__32635,G__32636,G__32637,G__32638,G__32639,G__32640));
}
} else {
var h25113 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113);
} else {
var G__32641 = a25106;
var G__32642 = b25107;
var G__32643 = c25108;
var G__32644 = d25109;
var G__32645 = e25110;
var G__32646 = f25111;
var G__32647 = g25112;
var G__32648 = h25113;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__32641,G__32642,G__32643,G__32644,G__32645,G__32646,G__32647,G__32648) : f.call(null,G__32641,G__32642,G__32643,G__32644,G__32645,G__32646,G__32647,G__32648));
}
} else {
var i25114 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114);
} else {
var G__32649 = a25106;
var G__32650 = b25107;
var G__32651 = c25108;
var G__32652 = d25109;
var G__32653 = e25110;
var G__32654 = f25111;
var G__32655 = g25112;
var G__32656 = h25113;
var G__32657 = i25114;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655,G__32656,G__32657) : f.call(null,G__32649,G__32650,G__32651,G__32652,G__32653,G__32654,G__32655,G__32656,G__32657));
}
} else {
var j25115 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115);
} else {
var G__32658 = a25106;
var G__32659 = b25107;
var G__32660 = c25108;
var G__32661 = d25109;
var G__32662 = e25110;
var G__32663 = f25111;
var G__32664 = g25112;
var G__32665 = h25113;
var G__32666 = i25114;
var G__32667 = j25115;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667) : f.call(null,G__32658,G__32659,G__32660,G__32661,G__32662,G__32663,G__32664,G__32665,G__32666,G__32667));
}
} else {
var k25116 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116);
} else {
var G__32668 = a25106;
var G__32669 = b25107;
var G__32670 = c25108;
var G__32671 = d25109;
var G__32672 = e25110;
var G__32673 = f25111;
var G__32674 = g25112;
var G__32675 = h25113;
var G__32676 = i25114;
var G__32677 = j25115;
var G__32678 = k25116;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675,G__32676,G__32677,G__32678) : f.call(null,G__32668,G__32669,G__32670,G__32671,G__32672,G__32673,G__32674,G__32675,G__32676,G__32677,G__32678));
}
} else {
var l25117 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117);
} else {
var G__32679 = a25106;
var G__32680 = b25107;
var G__32681 = c25108;
var G__32682 = d25109;
var G__32683 = e25110;
var G__32684 = f25111;
var G__32685 = g25112;
var G__32686 = h25113;
var G__32687 = i25114;
var G__32688 = j25115;
var G__32689 = k25116;
var G__32690 = l25117;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__32679,G__32680,G__32681,G__32682,G__32683,G__32684,G__32685,G__32686,G__32687,G__32688,G__32689,G__32690) : f.call(null,G__32679,G__32680,G__32681,G__32682,G__32683,G__32684,G__32685,G__32686,G__32687,G__32688,G__32689,G__32690));
}
} else {
var m25118 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118);
} else {
var G__32691 = a25106;
var G__32692 = b25107;
var G__32693 = c25108;
var G__32694 = d25109;
var G__32695 = e25110;
var G__32696 = f25111;
var G__32697 = g25112;
var G__32698 = h25113;
var G__32699 = i25114;
var G__32700 = j25115;
var G__32701 = k25116;
var G__32702 = l25117;
var G__32703 = m25118;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__32691,G__32692,G__32693,G__32694,G__32695,G__32696,G__32697,G__32698,G__32699,G__32700,G__32701,G__32702,G__32703) : f.call(null,G__32691,G__32692,G__32693,G__32694,G__32695,G__32696,G__32697,G__32698,G__32699,G__32700,G__32701,G__32702,G__32703));
}
} else {
var n25119 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119);
} else {
var G__32704 = a25106;
var G__32705 = b25107;
var G__32706 = c25108;
var G__32707 = d25109;
var G__32708 = e25110;
var G__32709 = f25111;
var G__32710 = g25112;
var G__32711 = h25113;
var G__32712 = i25114;
var G__32713 = j25115;
var G__32714 = k25116;
var G__32715 = l25117;
var G__32716 = m25118;
var G__32717 = n25119;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__32704,G__32705,G__32706,G__32707,G__32708,G__32709,G__32710,G__32711,G__32712,G__32713,G__32714,G__32715,G__32716,G__32717) : f.call(null,G__32704,G__32705,G__32706,G__32707,G__32708,G__32709,G__32710,G__32711,G__32712,G__32713,G__32714,G__32715,G__32716,G__32717));
}
} else {
var o25120 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120);
} else {
var G__32718 = a25106;
var G__32719 = b25107;
var G__32720 = c25108;
var G__32721 = d25109;
var G__32722 = e25110;
var G__32723 = f25111;
var G__32724 = g25112;
var G__32725 = h25113;
var G__32726 = i25114;
var G__32727 = j25115;
var G__32728 = k25116;
var G__32729 = l25117;
var G__32730 = m25118;
var G__32731 = n25119;
var G__32732 = o25120;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__32718,G__32719,G__32720,G__32721,G__32722,G__32723,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731,G__32732) : f.call(null,G__32718,G__32719,G__32720,G__32721,G__32722,G__32723,G__32724,G__32725,G__32726,G__32727,G__32728,G__32729,G__32730,G__32731,G__32732));
}
} else {
var p25121 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121);
} else {
var G__32733 = a25106;
var G__32734 = b25107;
var G__32735 = c25108;
var G__32736 = d25109;
var G__32737 = e25110;
var G__32738 = f25111;
var G__32739 = g25112;
var G__32740 = h25113;
var G__32741 = i25114;
var G__32742 = j25115;
var G__32743 = k25116;
var G__32744 = l25117;
var G__32745 = m25118;
var G__32746 = n25119;
var G__32747 = o25120;
var G__32748 = p25121;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__32733,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747,G__32748) : f.call(null,G__32733,G__32734,G__32735,G__32736,G__32737,G__32738,G__32739,G__32740,G__32741,G__32742,G__32743,G__32744,G__32745,G__32746,G__32747,G__32748));
}
} else {
var q25122 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121,q25122);
} else {
var G__32749 = a25106;
var G__32750 = b25107;
var G__32751 = c25108;
var G__32752 = d25109;
var G__32753 = e25110;
var G__32754 = f25111;
var G__32755 = g25112;
var G__32756 = h25113;
var G__32757 = i25114;
var G__32758 = j25115;
var G__32759 = k25116;
var G__32760 = l25117;
var G__32761 = m25118;
var G__32762 = n25119;
var G__32763 = o25120;
var G__32764 = p25121;
var G__32765 = q25122;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755,G__32756,G__32757,G__32758,G__32759,G__32760,G__32761,G__32762,G__32763,G__32764,G__32765) : f.call(null,G__32749,G__32750,G__32751,G__32752,G__32753,G__32754,G__32755,G__32756,G__32757,G__32758,G__32759,G__32760,G__32761,G__32762,G__32763,G__32764,G__32765));
}
} else {
var r25123 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121,q25122,r25123);
} else {
var G__32766 = a25106;
var G__32767 = b25107;
var G__32768 = c25108;
var G__32769 = d25109;
var G__32770 = e25110;
var G__32771 = f25111;
var G__32772 = g25112;
var G__32773 = h25113;
var G__32774 = i25114;
var G__32775 = j25115;
var G__32776 = k25116;
var G__32777 = l25117;
var G__32778 = m25118;
var G__32779 = n25119;
var G__32780 = o25120;
var G__32781 = p25121;
var G__32782 = q25122;
var G__32783 = r25123;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__32766,G__32767,G__32768,G__32769,G__32770,G__32771,G__32772,G__32773,G__32774,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783) : f.call(null,G__32766,G__32767,G__32768,G__32769,G__32770,G__32771,G__32772,G__32773,G__32774,G__32775,G__32776,G__32777,G__32778,G__32779,G__32780,G__32781,G__32782,G__32783));
}
} else {
var s25124 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121,q25122,r25123,s25124);
} else {
var G__32784 = a25106;
var G__32785 = b25107;
var G__32786 = c25108;
var G__32787 = d25109;
var G__32788 = e25110;
var G__32789 = f25111;
var G__32790 = g25112;
var G__32791 = h25113;
var G__32792 = i25114;
var G__32793 = j25115;
var G__32794 = k25116;
var G__32795 = l25117;
var G__32796 = m25118;
var G__32797 = n25119;
var G__32798 = o25120;
var G__32799 = p25121;
var G__32800 = q25122;
var G__32801 = r25123;
var G__32802 = s25124;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__32784,G__32785,G__32786,G__32787,G__32788,G__32789,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798,G__32799,G__32800,G__32801,G__32802) : f.call(null,G__32784,G__32785,G__32786,G__32787,G__32788,G__32789,G__32790,G__32791,G__32792,G__32793,G__32794,G__32795,G__32796,G__32797,G__32798,G__32799,G__32800,G__32801,G__32802));
}
} else {
var t25125 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25106,b25107,c25108,d25109,e25110,f25111,g25112,h25113,i25114,j25115,k25116,l25117,m25118,n25119,o25120,p25121,q25122,r25123,s25124,t25125);
} else {
var G__32803 = a25106;
var G__32804 = b25107;
var G__32805 = c25108;
var G__32806 = d25109;
var G__32807 = e25110;
var G__32808 = f25111;
var G__32809 = g25112;
var G__32810 = h25113;
var G__32811 = i25114;
var G__32812 = j25115;
var G__32813 = k25116;
var G__32814 = l25117;
var G__32815 = m25118;
var G__32816 = n25119;
var G__32817 = o25120;
var G__32818 = p25121;
var G__32819 = q25122;
var G__32820 = r25123;
var G__32821 = s25124;
var G__32822 = t25125;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__32803,G__32804,G__32805,G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821,G__32822) : f.call(null,G__32803,G__32804,G__32805,G__32806,G__32807,G__32808,G__32809,G__32810,G__32811,G__32812,G__32813,G__32814,G__32815,G__32816,G__32817,G__32818,G__32819,G__32820,G__32821,G__32822));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__32823__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__32823 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__32824__i = 0, G__32824__a = new Array(arguments.length -  5);
while (G__32824__i < G__32824__a.length) {G__32824__a[G__32824__i] = arguments[G__32824__i + 5]; ++G__32824__i;}
  args = new cljs.core.IndexedSeq(G__32824__a,0);
} 
return G__32823__delegate.call(this,f,a,b,c,d,args);};
G__32823.cljs$lang$maxFixedArity = 5;
G__32823.cljs$lang$applyTo = (function (arglist__32825){
var f = cljs.core.first(arglist__32825);
arglist__32825 = cljs.core.next(arglist__32825);
var a = cljs.core.first(arglist__32825);
arglist__32825 = cljs.core.next(arglist__32825);
var b = cljs.core.first(arglist__32825);
arglist__32825 = cljs.core.next(arglist__32825);
var c = cljs.core.first(arglist__32825);
arglist__32825 = cljs.core.next(arglist__32825);
var d = cljs.core.first(arglist__32825);
var args = cljs.core.rest(arglist__32825);
return G__32823__delegate(f,a,b,c,d,args);
});
G__32823.cljs$core$IFn$_invoke$arity$variadic = G__32823__delegate;
return G__32823;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__32826 = null;
if (arguments.length > 5) {
var G__32827__i = 0, G__32827__a = new Array(arguments.length -  5);
while (G__32827__i < G__32827__a.length) {G__32827__a[G__32827__i] = arguments[G__32827__i + 5]; ++G__32827__i;}
G__32826 = new cljs.core.IndexedSeq(G__32827__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__32826);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__32843 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32843) : f.call(null,G__32843));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__32844 = cljs.core.meta(obj);
var G__32845 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32844,G__32845) : f.call(null,G__32844,G__32845));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__32846 = cljs.core.meta(obj);
var G__32847 = a;
var G__32848 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32846,G__32847,G__32848) : f.call(null,G__32846,G__32847,G__32848));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__32849 = cljs.core.meta(obj);
var G__32850 = a;
var G__32851 = b;
var G__32852 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32849,G__32850,G__32851,G__32852) : f.call(null,G__32849,G__32850,G__32851,G__32852));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__32853 = cljs.core.meta(obj);
var G__32854 = a;
var G__32855 = b;
var G__32856 = c;
var G__32857 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32853,G__32854,G__32855,G__32856,G__32857) : f.call(null,G__32853,G__32854,G__32855,G__32856,G__32857));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__32858__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__32858 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__32859__i = 0, G__32859__a = new Array(arguments.length -  6);
while (G__32859__i < G__32859__a.length) {G__32859__a[G__32859__i] = arguments[G__32859__i + 6]; ++G__32859__i;}
  args = new cljs.core.IndexedSeq(G__32859__a,0);
} 
return G__32858__delegate.call(this,obj,f,a,b,c,d,args);};
G__32858.cljs$lang$maxFixedArity = 6;
G__32858.cljs$lang$applyTo = (function (arglist__32860){
var obj = cljs.core.first(arglist__32860);
arglist__32860 = cljs.core.next(arglist__32860);
var f = cljs.core.first(arglist__32860);
arglist__32860 = cljs.core.next(arglist__32860);
var a = cljs.core.first(arglist__32860);
arglist__32860 = cljs.core.next(arglist__32860);
var b = cljs.core.first(arglist__32860);
arglist__32860 = cljs.core.next(arglist__32860);
var c = cljs.core.first(arglist__32860);
arglist__32860 = cljs.core.next(arglist__32860);
var d = cljs.core.first(arglist__32860);
var args = cljs.core.rest(arglist__32860);
return G__32858__delegate(obj,f,a,b,c,d,args);
});
G__32858.cljs$core$IFn$_invoke$arity$variadic = G__32858__delegate;
return G__32858;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__32861 = null;
if (arguments.length > 6) {
var G__32862__i = 0, G__32862__a = new Array(arguments.length -  6);
while (G__32862__i < G__32862__a.length) {G__32862__a[G__32862__i] = arguments[G__32862__i + 6]; ++G__32862__i;}
G__32861 = new cljs.core.IndexedSeq(G__32862__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__32861);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__32863__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__32863 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32864__i = 0, G__32864__a = new Array(arguments.length -  2);
while (G__32864__i < G__32864__a.length) {G__32864__a[G__32864__i] = arguments[G__32864__i + 2]; ++G__32864__i;}
  more = new cljs.core.IndexedSeq(G__32864__a,0);
} 
return G__32863__delegate.call(this,x,y,more);};
G__32863.cljs$lang$maxFixedArity = 2;
G__32863.cljs$lang$applyTo = (function (arglist__32865){
var x = cljs.core.first(arglist__32865);
arglist__32865 = cljs.core.next(arglist__32865);
var y = cljs.core.first(arglist__32865);
var more = cljs.core.rest(arglist__32865);
return G__32863__delegate(x,y,more);
});
G__32863.cljs$core$IFn$_invoke$arity$variadic = G__32863__delegate;
return G__32863;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__32866 = null;
if (arguments.length > 2) {
var G__32867__i = 0, G__32867__a = new Array(arguments.length -  2);
while (G__32867__i < G__32867__a.length) {G__32867__a[G__32867__i] = arguments[G__32867__i + 2]; ++G__32867__i;}
G__32866 = new cljs.core.IndexedSeq(G__32867__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32866);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t32871 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t32871 = (function (nil_iter,meta32872){
this.nil_iter = nil_iter;
this.meta32872 = meta32872;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t32871.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t32871.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t32871.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t32871.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_32873){
var self__ = this;
var _32873__$1 = this;
return self__.meta32872;
});

cljs.core.t32871.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_32873,meta32872__$1){
var self__ = this;
var _32873__$1 = this;
return (new cljs.core.t32871(self__.nil_iter,meta32872__$1));
});

cljs.core.t32871.cljs$lang$type = true;

cljs.core.t32871.cljs$lang$ctorStr = "cljs.core/t32871";

cljs.core.t32871.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/t32871");
});

cljs.core.__GT_t32871 = (function cljs$core$nil_iter_$___GT_t32871(nil_iter__$1,meta32872){
return (new cljs.core.t32871(nil_iter__$1,meta32872));
});

}

return (new cljs.core.t32871(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24165__auto__ = !((lt.stepper == null));
if(and__24165__auto__){
return self__.iter.hasNext();
} else {
return and__24165__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__32874 = lt;
var G__32875 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__32874,G__32875) : self__.xform.call(null,G__32874,G__32875));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__32876 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__32876) : self__.xform.call(null,G__32876));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__32878 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__32878) : xform.call(null,G__32878));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__32880 = cljs.core.next(iters__$1);
iters__$1 = G__32880;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25062__auto___32881 = self__.iters.length;
var i_32882 = (0);
while(true){
if((i_32882 < n__25062__auto___32881)){
(self__.nexts[i_32882] = (self__.iters[i_32882]).next());

var G__32883 = (i_32882 + (1));
i_32882 = G__32883;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24165__auto__ = !((lt.stepper == null));
if(and__24165__auto__){
return this$.hasNext();
} else {
return and__24165__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__32879 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__32879) : self__.xform.call(null,G__32879));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__32888 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__32888) : xform.call(null,G__32888));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__32889_32893 = cljs.core.seq(colls);
var chunk__32890_32894 = null;
var count__32891_32895 = (0);
var i__32892_32896 = (0);
while(true){
if((i__32892_32896 < count__32891_32895)){
var coll_32897 = chunk__32890_32894.cljs$core$IIndexed$_nth$arity$2(null,i__32892_32896);
iters.push(cljs.core.iter(coll_32897));

var G__32898 = seq__32889_32893;
var G__32899 = chunk__32890_32894;
var G__32900 = count__32891_32895;
var G__32901 = (i__32892_32896 + (1));
seq__32889_32893 = G__32898;
chunk__32890_32894 = G__32899;
count__32891_32895 = G__32900;
i__32892_32896 = G__32901;
continue;
} else {
var temp__4126__auto___32902 = cljs.core.seq(seq__32889_32893);
if(temp__4126__auto___32902){
var seq__32889_32903__$1 = temp__4126__auto___32902;
if(cljs.core.chunked_seq_QMARK_(seq__32889_32903__$1)){
var c__24962__auto___32904 = cljs.core.chunk_first(seq__32889_32903__$1);
var G__32905 = cljs.core.chunk_rest(seq__32889_32903__$1);
var G__32906 = c__24962__auto___32904;
var G__32907 = cljs.core.count(c__24962__auto___32904);
var G__32908 = (0);
seq__32889_32893 = G__32905;
chunk__32890_32894 = G__32906;
count__32891_32895 = G__32907;
i__32892_32896 = G__32908;
continue;
} else {
var coll_32909 = cljs.core.first(seq__32889_32903__$1);
iters.push(cljs.core.iter(coll_32909));

var G__32910 = cljs.core.next(seq__32889_32903__$1);
var G__32911 = null;
var G__32912 = (0);
var G__32913 = (0);
seq__32889_32893 = G__32910;
chunk__32890_32894 = G__32911;
count__32891_32895 = G__32912;
i__32892_32896 = G__32913;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24177__auto__ = cljs.core.seq(coll);
if(or__24177__auto__){
return or__24177__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__32914__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__32914 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__32915__i = 0, G__32915__a = new Array(arguments.length -  2);
while (G__32915__i < G__32915__a.length) {G__32915__a[G__32915__i] = arguments[G__32915__i + 2]; ++G__32915__i;}
  colls = new cljs.core.IndexedSeq(G__32915__a,0);
} 
return G__32914__delegate.call(this,xform,coll,colls);};
G__32914.cljs$lang$maxFixedArity = 2;
G__32914.cljs$lang$applyTo = (function (arglist__32916){
var xform = cljs.core.first(arglist__32916);
arglist__32916 = cljs.core.next(arglist__32916);
var coll = cljs.core.first(arglist__32916);
var colls = cljs.core.rest(arglist__32916);
return G__32914__delegate(xform,coll,colls);
});
G__32914.cljs$core$IFn$_invoke$arity$variadic = G__32914__delegate;
return G__32914;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__32917 = null;
if (arguments.length > 2) {
var G__32918__i = 0, G__32918__a = new Array(arguments.length -  2);
while (G__32918__i < G__32918__a.length) {G__32918__a[G__32918__i] = arguments[G__32918__i + 2]; ++G__32918__i;}
G__32917 = new cljs.core.IndexedSeq(G__32918__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__32917);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__32920 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32920) : pred.call(null,G__32920));
})())){
var G__32921 = pred;
var G__32922 = cljs.core.next(coll);
pred = G__32921;
coll = G__32922;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24177__auto__ = (function (){var G__32926 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32926) : pred.call(null,G__32926));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__32927 = pred;
var G__32928 = cljs.core.next(coll);
pred = G__32927;
coll = G__32928;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__32935 = null;
var G__32935__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__32935__1 = (function (x){
return cljs.core.not((function (){var G__32932 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32932) : f.call(null,G__32932));
})());
});
var G__32935__2 = (function (x,y){
return cljs.core.not((function (){var G__32933 = x;
var G__32934 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32933,G__32934) : f.call(null,G__32933,G__32934));
})());
});
var G__32935__3 = (function() { 
var G__32936__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__32936 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__32937__i = 0, G__32937__a = new Array(arguments.length -  2);
while (G__32937__i < G__32937__a.length) {G__32937__a[G__32937__i] = arguments[G__32937__i + 2]; ++G__32937__i;}
  zs = new cljs.core.IndexedSeq(G__32937__a,0);
} 
return G__32936__delegate.call(this,x,y,zs);};
G__32936.cljs$lang$maxFixedArity = 2;
G__32936.cljs$lang$applyTo = (function (arglist__32938){
var x = cljs.core.first(arglist__32938);
arglist__32938 = cljs.core.next(arglist__32938);
var y = cljs.core.first(arglist__32938);
var zs = cljs.core.rest(arglist__32938);
return G__32936__delegate(x,y,zs);
});
G__32936.cljs$core$IFn$_invoke$arity$variadic = G__32936__delegate;
return G__32936;
})()
;
G__32935 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__32935__0.call(this);
case 1:
return G__32935__1.call(this,x);
case 2:
return G__32935__2.call(this,x,y);
default:
var G__32939 = null;
if (arguments.length > 2) {
var G__32940__i = 0, G__32940__a = new Array(arguments.length -  2);
while (G__32940__i < G__32940__a.length) {G__32940__a[G__32940__i] = arguments[G__32940__i + 2]; ++G__32940__i;}
G__32939 = new cljs.core.IndexedSeq(G__32940__a,0);
}
return G__32935__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32939);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32935.cljs$lang$maxFixedArity = 2;
G__32935.cljs$lang$applyTo = G__32935__3.cljs$lang$applyTo;
G__32935.cljs$core$IFn$_invoke$arity$0 = G__32935__0;
G__32935.cljs$core$IFn$_invoke$arity$1 = G__32935__1;
G__32935.cljs$core$IFn$_invoke$arity$2 = G__32935__2;
G__32935.cljs$core$IFn$_invoke$arity$variadic = G__32935__3.cljs$core$IFn$_invoke$arity$variadic;
return G__32935;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__32941__delegate = function (args){
return x;
};
var G__32941 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32942__i = 0, G__32942__a = new Array(arguments.length -  0);
while (G__32942__i < G__32942__a.length) {G__32942__a[G__32942__i] = arguments[G__32942__i + 0]; ++G__32942__i;}
  args = new cljs.core.IndexedSeq(G__32942__a,0);
} 
return G__32941__delegate.call(this,args);};
G__32941.cljs$lang$maxFixedArity = 0;
G__32941.cljs$lang$applyTo = (function (arglist__32943){
var args = cljs.core.seq(arglist__32943);
return G__32941__delegate(args);
});
G__32941.cljs$core$IFn$_invoke$arity$variadic = G__32941__delegate;
return G__32941;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__32998 = null;
var G__32998__0 = (function (){
var G__32971 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32971) : f.call(null,G__32971));
});
var G__32998__1 = (function (x){
var G__32972 = (function (){var G__32973 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32973) : g.call(null,G__32973));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32972) : f.call(null,G__32972));
});
var G__32998__2 = (function (x,y){
var G__32974 = (function (){var G__32975 = x;
var G__32976 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__32975,G__32976) : g.call(null,G__32975,G__32976));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32974) : f.call(null,G__32974));
});
var G__32998__3 = (function (x,y,z){
var G__32977 = (function (){var G__32978 = x;
var G__32979 = y;
var G__32980 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__32978,G__32979,G__32980) : g.call(null,G__32978,G__32979,G__32980));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32977) : f.call(null,G__32977));
});
var G__32998__4 = (function() { 
var G__32999__delegate = function (x,y,z,args){
var G__32981 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32981) : f.call(null,G__32981));
};
var G__32999 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33000__i = 0, G__33000__a = new Array(arguments.length -  3);
while (G__33000__i < G__33000__a.length) {G__33000__a[G__33000__i] = arguments[G__33000__i + 3]; ++G__33000__i;}
  args = new cljs.core.IndexedSeq(G__33000__a,0);
} 
return G__32999__delegate.call(this,x,y,z,args);};
G__32999.cljs$lang$maxFixedArity = 3;
G__32999.cljs$lang$applyTo = (function (arglist__33001){
var x = cljs.core.first(arglist__33001);
arglist__33001 = cljs.core.next(arglist__33001);
var y = cljs.core.first(arglist__33001);
arglist__33001 = cljs.core.next(arglist__33001);
var z = cljs.core.first(arglist__33001);
var args = cljs.core.rest(arglist__33001);
return G__32999__delegate(x,y,z,args);
});
G__32999.cljs$core$IFn$_invoke$arity$variadic = G__32999__delegate;
return G__32999;
})()
;
G__32998 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__32998__0.call(this);
case 1:
return G__32998__1.call(this,x);
case 2:
return G__32998__2.call(this,x,y);
case 3:
return G__32998__3.call(this,x,y,z);
default:
var G__33002 = null;
if (arguments.length > 3) {
var G__33003__i = 0, G__33003__a = new Array(arguments.length -  3);
while (G__33003__i < G__33003__a.length) {G__33003__a[G__33003__i] = arguments[G__33003__i + 3]; ++G__33003__i;}
G__33002 = new cljs.core.IndexedSeq(G__33003__a,0);
}
return G__32998__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33002);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32998.cljs$lang$maxFixedArity = 3;
G__32998.cljs$lang$applyTo = G__32998__4.cljs$lang$applyTo;
G__32998.cljs$core$IFn$_invoke$arity$0 = G__32998__0;
G__32998.cljs$core$IFn$_invoke$arity$1 = G__32998__1;
G__32998.cljs$core$IFn$_invoke$arity$2 = G__32998__2;
G__32998.cljs$core$IFn$_invoke$arity$3 = G__32998__3;
G__32998.cljs$core$IFn$_invoke$arity$variadic = G__32998__4.cljs$core$IFn$_invoke$arity$variadic;
return G__32998;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__33004 = null;
var G__33004__0 = (function (){
var G__32982 = (function (){var G__32983 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32983) : g.call(null,G__32983));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32982) : f.call(null,G__32982));
});
var G__33004__1 = (function (x){
var G__32984 = (function (){var G__32985 = (function (){var G__32986 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__32986) : h.call(null,G__32986));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32985) : g.call(null,G__32985));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32984) : f.call(null,G__32984));
});
var G__33004__2 = (function (x,y){
var G__32987 = (function (){var G__32988 = (function (){var G__32989 = x;
var G__32990 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__32989,G__32990) : h.call(null,G__32989,G__32990));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32988) : g.call(null,G__32988));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32987) : f.call(null,G__32987));
});
var G__33004__3 = (function (x,y,z){
var G__32991 = (function (){var G__32992 = (function (){var G__32993 = x;
var G__32994 = y;
var G__32995 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__32993,G__32994,G__32995) : h.call(null,G__32993,G__32994,G__32995));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32992) : g.call(null,G__32992));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32991) : f.call(null,G__32991));
});
var G__33004__4 = (function() { 
var G__33005__delegate = function (x,y,z,args){
var G__32996 = (function (){var G__32997 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__32997) : g.call(null,G__32997));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32996) : f.call(null,G__32996));
};
var G__33005 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33006__i = 0, G__33006__a = new Array(arguments.length -  3);
while (G__33006__i < G__33006__a.length) {G__33006__a[G__33006__i] = arguments[G__33006__i + 3]; ++G__33006__i;}
  args = new cljs.core.IndexedSeq(G__33006__a,0);
} 
return G__33005__delegate.call(this,x,y,z,args);};
G__33005.cljs$lang$maxFixedArity = 3;
G__33005.cljs$lang$applyTo = (function (arglist__33007){
var x = cljs.core.first(arglist__33007);
arglist__33007 = cljs.core.next(arglist__33007);
var y = cljs.core.first(arglist__33007);
arglist__33007 = cljs.core.next(arglist__33007);
var z = cljs.core.first(arglist__33007);
var args = cljs.core.rest(arglist__33007);
return G__33005__delegate(x,y,z,args);
});
G__33005.cljs$core$IFn$_invoke$arity$variadic = G__33005__delegate;
return G__33005;
})()
;
G__33004 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33004__0.call(this);
case 1:
return G__33004__1.call(this,x);
case 2:
return G__33004__2.call(this,x,y);
case 3:
return G__33004__3.call(this,x,y,z);
default:
var G__33008 = null;
if (arguments.length > 3) {
var G__33009__i = 0, G__33009__a = new Array(arguments.length -  3);
while (G__33009__i < G__33009__a.length) {G__33009__a[G__33009__i] = arguments[G__33009__i + 3]; ++G__33009__i;}
G__33008 = new cljs.core.IndexedSeq(G__33009__a,0);
}
return G__33004__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33008);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33004.cljs$lang$maxFixedArity = 3;
G__33004.cljs$lang$applyTo = G__33004__4.cljs$lang$applyTo;
G__33004.cljs$core$IFn$_invoke$arity$0 = G__33004__0;
G__33004.cljs$core$IFn$_invoke$arity$1 = G__33004__1;
G__33004.cljs$core$IFn$_invoke$arity$2 = G__33004__2;
G__33004.cljs$core$IFn$_invoke$arity$3 = G__33004__3;
G__33004.cljs$core$IFn$_invoke$arity$variadic = G__33004__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33004;
})()
});
var cljs$core$comp__4 = (function() { 
var G__33010__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__33011__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__33012 = cljs.core.first(fs__$2).call(null,ret);
var G__33013 = cljs.core.next(fs__$2);
ret = G__33012;
fs__$2 = G__33013;
continue;
} else {
return ret;
}
break;
}
};
var G__33011 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33014__i = 0, G__33014__a = new Array(arguments.length -  0);
while (G__33014__i < G__33014__a.length) {G__33014__a[G__33014__i] = arguments[G__33014__i + 0]; ++G__33014__i;}
  args = new cljs.core.IndexedSeq(G__33014__a,0);
} 
return G__33011__delegate.call(this,args);};
G__33011.cljs$lang$maxFixedArity = 0;
G__33011.cljs$lang$applyTo = (function (arglist__33015){
var args = cljs.core.seq(arglist__33015);
return G__33011__delegate(args);
});
G__33011.cljs$core$IFn$_invoke$arity$variadic = G__33011__delegate;
return G__33011;
})()
;
;})(fs__$1))
};
var G__33010 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__33016__i = 0, G__33016__a = new Array(arguments.length -  3);
while (G__33016__i < G__33016__a.length) {G__33016__a[G__33016__i] = arguments[G__33016__i + 3]; ++G__33016__i;}
  fs = new cljs.core.IndexedSeq(G__33016__a,0);
} 
return G__33010__delegate.call(this,f1,f2,f3,fs);};
G__33010.cljs$lang$maxFixedArity = 3;
G__33010.cljs$lang$applyTo = (function (arglist__33017){
var f1 = cljs.core.first(arglist__33017);
arglist__33017 = cljs.core.next(arglist__33017);
var f2 = cljs.core.first(arglist__33017);
arglist__33017 = cljs.core.next(arglist__33017);
var f3 = cljs.core.first(arglist__33017);
var fs = cljs.core.rest(arglist__33017);
return G__33010__delegate(f1,f2,f3,fs);
});
G__33010.cljs$core$IFn$_invoke$arity$variadic = G__33010__delegate;
return G__33010;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__33018 = null;
if (arguments.length > 3) {
var G__33019__i = 0, G__33019__a = new Array(arguments.length -  3);
while (G__33019__i < G__33019__a.length) {G__33019__a[G__33019__i] = arguments[G__33019__i + 3]; ++G__33019__i;}
G__33018 = new cljs.core.IndexedSeq(G__33019__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__33018);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__33104 = null;
var G__33104__0 = (function (){
var G__33062 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33062) : f.call(null,G__33062));
});
var G__33104__1 = (function (x){
var G__33063 = arg1;
var G__33064 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33063,G__33064) : f.call(null,G__33063,G__33064));
});
var G__33104__2 = (function (x,y){
var G__33065 = arg1;
var G__33066 = x;
var G__33067 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33065,G__33066,G__33067) : f.call(null,G__33065,G__33066,G__33067));
});
var G__33104__3 = (function (x,y,z){
var G__33068 = arg1;
var G__33069 = x;
var G__33070 = y;
var G__33071 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33068,G__33069,G__33070,G__33071) : f.call(null,G__33068,G__33069,G__33070,G__33071));
});
var G__33104__4 = (function() { 
var G__33105__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__33105 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33106__i = 0, G__33106__a = new Array(arguments.length -  3);
while (G__33106__i < G__33106__a.length) {G__33106__a[G__33106__i] = arguments[G__33106__i + 3]; ++G__33106__i;}
  args = new cljs.core.IndexedSeq(G__33106__a,0);
} 
return G__33105__delegate.call(this,x,y,z,args);};
G__33105.cljs$lang$maxFixedArity = 3;
G__33105.cljs$lang$applyTo = (function (arglist__33107){
var x = cljs.core.first(arglist__33107);
arglist__33107 = cljs.core.next(arglist__33107);
var y = cljs.core.first(arglist__33107);
arglist__33107 = cljs.core.next(arglist__33107);
var z = cljs.core.first(arglist__33107);
var args = cljs.core.rest(arglist__33107);
return G__33105__delegate(x,y,z,args);
});
G__33105.cljs$core$IFn$_invoke$arity$variadic = G__33105__delegate;
return G__33105;
})()
;
G__33104 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33104__0.call(this);
case 1:
return G__33104__1.call(this,x);
case 2:
return G__33104__2.call(this,x,y);
case 3:
return G__33104__3.call(this,x,y,z);
default:
var G__33108 = null;
if (arguments.length > 3) {
var G__33109__i = 0, G__33109__a = new Array(arguments.length -  3);
while (G__33109__i < G__33109__a.length) {G__33109__a[G__33109__i] = arguments[G__33109__i + 3]; ++G__33109__i;}
G__33108 = new cljs.core.IndexedSeq(G__33109__a,0);
}
return G__33104__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33108);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33104.cljs$lang$maxFixedArity = 3;
G__33104.cljs$lang$applyTo = G__33104__4.cljs$lang$applyTo;
G__33104.cljs$core$IFn$_invoke$arity$0 = G__33104__0;
G__33104.cljs$core$IFn$_invoke$arity$1 = G__33104__1;
G__33104.cljs$core$IFn$_invoke$arity$2 = G__33104__2;
G__33104.cljs$core$IFn$_invoke$arity$3 = G__33104__3;
G__33104.cljs$core$IFn$_invoke$arity$variadic = G__33104__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33104;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__33110 = null;
var G__33110__0 = (function (){
var G__33072 = arg1;
var G__33073 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33072,G__33073) : f.call(null,G__33072,G__33073));
});
var G__33110__1 = (function (x){
var G__33074 = arg1;
var G__33075 = arg2;
var G__33076 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33074,G__33075,G__33076) : f.call(null,G__33074,G__33075,G__33076));
});
var G__33110__2 = (function (x,y){
var G__33077 = arg1;
var G__33078 = arg2;
var G__33079 = x;
var G__33080 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33077,G__33078,G__33079,G__33080) : f.call(null,G__33077,G__33078,G__33079,G__33080));
});
var G__33110__3 = (function (x,y,z){
var G__33081 = arg1;
var G__33082 = arg2;
var G__33083 = x;
var G__33084 = y;
var G__33085 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33081,G__33082,G__33083,G__33084,G__33085) : f.call(null,G__33081,G__33082,G__33083,G__33084,G__33085));
});
var G__33110__4 = (function() { 
var G__33111__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__33111 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33112__i = 0, G__33112__a = new Array(arguments.length -  3);
while (G__33112__i < G__33112__a.length) {G__33112__a[G__33112__i] = arguments[G__33112__i + 3]; ++G__33112__i;}
  args = new cljs.core.IndexedSeq(G__33112__a,0);
} 
return G__33111__delegate.call(this,x,y,z,args);};
G__33111.cljs$lang$maxFixedArity = 3;
G__33111.cljs$lang$applyTo = (function (arglist__33113){
var x = cljs.core.first(arglist__33113);
arglist__33113 = cljs.core.next(arglist__33113);
var y = cljs.core.first(arglist__33113);
arglist__33113 = cljs.core.next(arglist__33113);
var z = cljs.core.first(arglist__33113);
var args = cljs.core.rest(arglist__33113);
return G__33111__delegate(x,y,z,args);
});
G__33111.cljs$core$IFn$_invoke$arity$variadic = G__33111__delegate;
return G__33111;
})()
;
G__33110 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33110__0.call(this);
case 1:
return G__33110__1.call(this,x);
case 2:
return G__33110__2.call(this,x,y);
case 3:
return G__33110__3.call(this,x,y,z);
default:
var G__33114 = null;
if (arguments.length > 3) {
var G__33115__i = 0, G__33115__a = new Array(arguments.length -  3);
while (G__33115__i < G__33115__a.length) {G__33115__a[G__33115__i] = arguments[G__33115__i + 3]; ++G__33115__i;}
G__33114 = new cljs.core.IndexedSeq(G__33115__a,0);
}
return G__33110__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33114);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33110.cljs$lang$maxFixedArity = 3;
G__33110.cljs$lang$applyTo = G__33110__4.cljs$lang$applyTo;
G__33110.cljs$core$IFn$_invoke$arity$0 = G__33110__0;
G__33110.cljs$core$IFn$_invoke$arity$1 = G__33110__1;
G__33110.cljs$core$IFn$_invoke$arity$2 = G__33110__2;
G__33110.cljs$core$IFn$_invoke$arity$3 = G__33110__3;
G__33110.cljs$core$IFn$_invoke$arity$variadic = G__33110__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33110;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__33116 = null;
var G__33116__0 = (function (){
var G__33086 = arg1;
var G__33087 = arg2;
var G__33088 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33086,G__33087,G__33088) : f.call(null,G__33086,G__33087,G__33088));
});
var G__33116__1 = (function (x){
var G__33089 = arg1;
var G__33090 = arg2;
var G__33091 = arg3;
var G__33092 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33089,G__33090,G__33091,G__33092) : f.call(null,G__33089,G__33090,G__33091,G__33092));
});
var G__33116__2 = (function (x,y){
var G__33093 = arg1;
var G__33094 = arg2;
var G__33095 = arg3;
var G__33096 = x;
var G__33097 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33093,G__33094,G__33095,G__33096,G__33097) : f.call(null,G__33093,G__33094,G__33095,G__33096,G__33097));
});
var G__33116__3 = (function (x,y,z){
var G__33098 = arg1;
var G__33099 = arg2;
var G__33100 = arg3;
var G__33101 = x;
var G__33102 = y;
var G__33103 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__33098,G__33099,G__33100,G__33101,G__33102,G__33103) : f.call(null,G__33098,G__33099,G__33100,G__33101,G__33102,G__33103));
});
var G__33116__4 = (function() { 
var G__33117__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__33117 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33118__i = 0, G__33118__a = new Array(arguments.length -  3);
while (G__33118__i < G__33118__a.length) {G__33118__a[G__33118__i] = arguments[G__33118__i + 3]; ++G__33118__i;}
  args = new cljs.core.IndexedSeq(G__33118__a,0);
} 
return G__33117__delegate.call(this,x,y,z,args);};
G__33117.cljs$lang$maxFixedArity = 3;
G__33117.cljs$lang$applyTo = (function (arglist__33119){
var x = cljs.core.first(arglist__33119);
arglist__33119 = cljs.core.next(arglist__33119);
var y = cljs.core.first(arglist__33119);
arglist__33119 = cljs.core.next(arglist__33119);
var z = cljs.core.first(arglist__33119);
var args = cljs.core.rest(arglist__33119);
return G__33117__delegate(x,y,z,args);
});
G__33117.cljs$core$IFn$_invoke$arity$variadic = G__33117__delegate;
return G__33117;
})()
;
G__33116 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33116__0.call(this);
case 1:
return G__33116__1.call(this,x);
case 2:
return G__33116__2.call(this,x,y);
case 3:
return G__33116__3.call(this,x,y,z);
default:
var G__33120 = null;
if (arguments.length > 3) {
var G__33121__i = 0, G__33121__a = new Array(arguments.length -  3);
while (G__33121__i < G__33121__a.length) {G__33121__a[G__33121__i] = arguments[G__33121__i + 3]; ++G__33121__i;}
G__33120 = new cljs.core.IndexedSeq(G__33121__a,0);
}
return G__33116__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33120);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33116.cljs$lang$maxFixedArity = 3;
G__33116.cljs$lang$applyTo = G__33116__4.cljs$lang$applyTo;
G__33116.cljs$core$IFn$_invoke$arity$0 = G__33116__0;
G__33116.cljs$core$IFn$_invoke$arity$1 = G__33116__1;
G__33116.cljs$core$IFn$_invoke$arity$2 = G__33116__2;
G__33116.cljs$core$IFn$_invoke$arity$3 = G__33116__3;
G__33116.cljs$core$IFn$_invoke$arity$variadic = G__33116__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33116;
})()
});
var cljs$core$partial__5 = (function() { 
var G__33122__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__33123__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__33123 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33124__i = 0, G__33124__a = new Array(arguments.length -  0);
while (G__33124__i < G__33124__a.length) {G__33124__a[G__33124__i] = arguments[G__33124__i + 0]; ++G__33124__i;}
  args = new cljs.core.IndexedSeq(G__33124__a,0);
} 
return G__33123__delegate.call(this,args);};
G__33123.cljs$lang$maxFixedArity = 0;
G__33123.cljs$lang$applyTo = (function (arglist__33125){
var args = cljs.core.seq(arglist__33125);
return G__33123__delegate(args);
});
G__33123.cljs$core$IFn$_invoke$arity$variadic = G__33123__delegate;
return G__33123;
})()
;
};
var G__33122 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__33126__i = 0, G__33126__a = new Array(arguments.length -  4);
while (G__33126__i < G__33126__a.length) {G__33126__a[G__33126__i] = arguments[G__33126__i + 4]; ++G__33126__i;}
  more = new cljs.core.IndexedSeq(G__33126__a,0);
} 
return G__33122__delegate.call(this,f,arg1,arg2,arg3,more);};
G__33122.cljs$lang$maxFixedArity = 4;
G__33122.cljs$lang$applyTo = (function (arglist__33127){
var f = cljs.core.first(arglist__33127);
arglist__33127 = cljs.core.next(arglist__33127);
var arg1 = cljs.core.first(arglist__33127);
arglist__33127 = cljs.core.next(arglist__33127);
var arg2 = cljs.core.first(arglist__33127);
arglist__33127 = cljs.core.next(arglist__33127);
var arg3 = cljs.core.first(arglist__33127);
var more = cljs.core.rest(arglist__33127);
return G__33122__delegate(f,arg1,arg2,arg3,more);
});
G__33122.cljs$core$IFn$_invoke$arity$variadic = G__33122__delegate;
return G__33122;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__33128 = null;
if (arguments.length > 4) {
var G__33129__i = 0, G__33129__a = new Array(arguments.length -  4);
while (G__33129__i < G__33129__a.length) {G__33129__a[G__33129__i] = arguments[G__33129__i + 4]; ++G__33129__i;}
G__33128 = new cljs.core.IndexedSeq(G__33129__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__33128);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__33162 = null;
var G__33162__1 = (function (a){
var G__33146 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33146) : f.call(null,G__33146));
});
var G__33162__2 = (function (a,b){
var G__33147 = (((a == null))?x:a);
var G__33148 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33147,G__33148) : f.call(null,G__33147,G__33148));
});
var G__33162__3 = (function (a,b,c){
var G__33149 = (((a == null))?x:a);
var G__33150 = b;
var G__33151 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33149,G__33150,G__33151) : f.call(null,G__33149,G__33150,G__33151));
});
var G__33162__4 = (function() { 
var G__33163__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__33163 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33164__i = 0, G__33164__a = new Array(arguments.length -  3);
while (G__33164__i < G__33164__a.length) {G__33164__a[G__33164__i] = arguments[G__33164__i + 3]; ++G__33164__i;}
  ds = new cljs.core.IndexedSeq(G__33164__a,0);
} 
return G__33163__delegate.call(this,a,b,c,ds);};
G__33163.cljs$lang$maxFixedArity = 3;
G__33163.cljs$lang$applyTo = (function (arglist__33165){
var a = cljs.core.first(arglist__33165);
arglist__33165 = cljs.core.next(arglist__33165);
var b = cljs.core.first(arglist__33165);
arglist__33165 = cljs.core.next(arglist__33165);
var c = cljs.core.first(arglist__33165);
var ds = cljs.core.rest(arglist__33165);
return G__33163__delegate(a,b,c,ds);
});
G__33163.cljs$core$IFn$_invoke$arity$variadic = G__33163__delegate;
return G__33163;
})()
;
G__33162 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__33162__1.call(this,a);
case 2:
return G__33162__2.call(this,a,b);
case 3:
return G__33162__3.call(this,a,b,c);
default:
var G__33166 = null;
if (arguments.length > 3) {
var G__33167__i = 0, G__33167__a = new Array(arguments.length -  3);
while (G__33167__i < G__33167__a.length) {G__33167__a[G__33167__i] = arguments[G__33167__i + 3]; ++G__33167__i;}
G__33166 = new cljs.core.IndexedSeq(G__33167__a,0);
}
return G__33162__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33166);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33162.cljs$lang$maxFixedArity = 3;
G__33162.cljs$lang$applyTo = G__33162__4.cljs$lang$applyTo;
G__33162.cljs$core$IFn$_invoke$arity$1 = G__33162__1;
G__33162.cljs$core$IFn$_invoke$arity$2 = G__33162__2;
G__33162.cljs$core$IFn$_invoke$arity$3 = G__33162__3;
G__33162.cljs$core$IFn$_invoke$arity$variadic = G__33162__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33162;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__33168 = null;
var G__33168__2 = (function (a,b){
var G__33152 = (((a == null))?x:a);
var G__33153 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33152,G__33153) : f.call(null,G__33152,G__33153));
});
var G__33168__3 = (function (a,b,c){
var G__33154 = (((a == null))?x:a);
var G__33155 = (((b == null))?y:b);
var G__33156 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33154,G__33155,G__33156) : f.call(null,G__33154,G__33155,G__33156));
});
var G__33168__4 = (function() { 
var G__33169__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__33169 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33170__i = 0, G__33170__a = new Array(arguments.length -  3);
while (G__33170__i < G__33170__a.length) {G__33170__a[G__33170__i] = arguments[G__33170__i + 3]; ++G__33170__i;}
  ds = new cljs.core.IndexedSeq(G__33170__a,0);
} 
return G__33169__delegate.call(this,a,b,c,ds);};
G__33169.cljs$lang$maxFixedArity = 3;
G__33169.cljs$lang$applyTo = (function (arglist__33171){
var a = cljs.core.first(arglist__33171);
arglist__33171 = cljs.core.next(arglist__33171);
var b = cljs.core.first(arglist__33171);
arglist__33171 = cljs.core.next(arglist__33171);
var c = cljs.core.first(arglist__33171);
var ds = cljs.core.rest(arglist__33171);
return G__33169__delegate(a,b,c,ds);
});
G__33169.cljs$core$IFn$_invoke$arity$variadic = G__33169__delegate;
return G__33169;
})()
;
G__33168 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__33168__2.call(this,a,b);
case 3:
return G__33168__3.call(this,a,b,c);
default:
var G__33172 = null;
if (arguments.length > 3) {
var G__33173__i = 0, G__33173__a = new Array(arguments.length -  3);
while (G__33173__i < G__33173__a.length) {G__33173__a[G__33173__i] = arguments[G__33173__i + 3]; ++G__33173__i;}
G__33172 = new cljs.core.IndexedSeq(G__33173__a,0);
}
return G__33168__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33172);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33168.cljs$lang$maxFixedArity = 3;
G__33168.cljs$lang$applyTo = G__33168__4.cljs$lang$applyTo;
G__33168.cljs$core$IFn$_invoke$arity$2 = G__33168__2;
G__33168.cljs$core$IFn$_invoke$arity$3 = G__33168__3;
G__33168.cljs$core$IFn$_invoke$arity$variadic = G__33168__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33168;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__33174 = null;
var G__33174__2 = (function (a,b){
var G__33157 = (((a == null))?x:a);
var G__33158 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33157,G__33158) : f.call(null,G__33157,G__33158));
});
var G__33174__3 = (function (a,b,c){
var G__33159 = (((a == null))?x:a);
var G__33160 = (((b == null))?y:b);
var G__33161 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33159,G__33160,G__33161) : f.call(null,G__33159,G__33160,G__33161));
});
var G__33174__4 = (function() { 
var G__33175__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__33175 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33176__i = 0, G__33176__a = new Array(arguments.length -  3);
while (G__33176__i < G__33176__a.length) {G__33176__a[G__33176__i] = arguments[G__33176__i + 3]; ++G__33176__i;}
  ds = new cljs.core.IndexedSeq(G__33176__a,0);
} 
return G__33175__delegate.call(this,a,b,c,ds);};
G__33175.cljs$lang$maxFixedArity = 3;
G__33175.cljs$lang$applyTo = (function (arglist__33177){
var a = cljs.core.first(arglist__33177);
arglist__33177 = cljs.core.next(arglist__33177);
var b = cljs.core.first(arglist__33177);
arglist__33177 = cljs.core.next(arglist__33177);
var c = cljs.core.first(arglist__33177);
var ds = cljs.core.rest(arglist__33177);
return G__33175__delegate(a,b,c,ds);
});
G__33175.cljs$core$IFn$_invoke$arity$variadic = G__33175__delegate;
return G__33175;
})()
;
G__33174 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__33174__2.call(this,a,b);
case 3:
return G__33174__3.call(this,a,b,c);
default:
var G__33178 = null;
if (arguments.length > 3) {
var G__33179__i = 0, G__33179__a = new Array(arguments.length -  3);
while (G__33179__i < G__33179__a.length) {G__33179__a[G__33179__i] = arguments[G__33179__i + 3]; ++G__33179__i;}
G__33178 = new cljs.core.IndexedSeq(G__33179__a,0);
}
return G__33174__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33174.cljs$lang$maxFixedArity = 3;
G__33174.cljs$lang$applyTo = G__33174__4.cljs$lang$applyTo;
G__33174.cljs$core$IFn$_invoke$arity$2 = G__33174__2;
G__33174.cljs$core$IFn$_invoke$arity$3 = G__33174__3;
G__33174.cljs$core$IFn$_invoke$arity$variadic = G__33174__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33174;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__33210 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__33210) : cljs.core.volatile_BANG_.call(null,G__33210));
})();
return ((function (i){
return (function() {
var G__33240 = null;
var G__33240__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33240__1 = (function (result){
var G__33211 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33211) : rf.call(null,G__33211));
});
var G__33240__2 = (function (result,input){
var G__33212 = result;
var G__33213 = (function (){var G__33214 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__33215 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33214,G__33215) : f.call(null,G__33214,G__33215));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33212,G__33213) : rf.call(null,G__33212,G__33213));
});
G__33240 = function(result,input){
switch(arguments.length){
case 0:
return G__33240__0.call(this);
case 1:
return G__33240__1.call(this,result);
case 2:
return G__33240__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33240.cljs$core$IFn$_invoke$arity$0 = G__33240__0;
G__33240.cljs$core$IFn$_invoke$arity$1 = G__33240__1;
G__33240.cljs$core$IFn$_invoke$arity$2 = G__33240__2;
return G__33240;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___33241 = size;
var i_33242 = (0);
while(true){
if((i_33242 < n__25062__auto___33241)){
cljs.core.chunk_append(b,(function (){var G__33236 = (idx + i_33242);
var G__33237 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33242);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33236,G__33237) : f.call(null,G__33236,G__33237));
})());

var G__33243 = (i_33242 + (1));
i_33242 = G__33243;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__33238 = idx;
var G__33239 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33238,G__33239) : f.call(null,G__33238,G__33239));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__33262 = null;
var G__33262__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33262__1 = (function (result){
var G__33256 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33256) : rf.call(null,G__33256));
});
var G__33262__2 = (function (result,input){
var v = (function (){var G__33257 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33257) : f.call(null,G__33257));
})();
if((v == null)){
return result;
} else {
var G__33258 = result;
var G__33259 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33258,G__33259) : rf.call(null,G__33258,G__33259));
}
});
G__33262 = function(result,input){
switch(arguments.length){
case 0:
return G__33262__0.call(this);
case 1:
return G__33262__1.call(this,result);
case 2:
return G__33262__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33262.cljs$core$IFn$_invoke$arity$0 = G__33262__0;
G__33262.cljs$core$IFn$_invoke$arity$1 = G__33262__1;
G__33262.cljs$core$IFn$_invoke$arity$2 = G__33262__2;
return G__33262;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___33263 = size;
var i_33264 = (0);
while(true){
if((i_33264 < n__25062__auto___33263)){
var x_33265 = (function (){var G__33260 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33264);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33260) : f.call(null,G__33260));
})();
if((x_33265 == null)){
} else {
cljs.core.chunk_append(b,x_33265);
}

var G__33266 = (i_33264 + (1));
i_33264 = G__33266;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__33261 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33261) : f.call(null,G__33261));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__33267 = this$__$1;
return goog.getUid(G__33267);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__33268 = cljs.core.seq(self__.watches);
var chunk__33269 = null;
var count__33270 = (0);
var i__33271 = (0);
while(true){
if((i__33271 < count__33270)){
var vec__33272 = chunk__33269.cljs$core$IIndexed$_nth$arity$2(null,i__33271);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33272,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33272,(1),null);
var G__33273_33282 = key;
var G__33274_33283 = this$__$1;
var G__33275_33284 = oldval;
var G__33276_33285 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33273_33282,G__33274_33283,G__33275_33284,G__33276_33285) : f.call(null,G__33273_33282,G__33274_33283,G__33275_33284,G__33276_33285));

var G__33286 = seq__33268;
var G__33287 = chunk__33269;
var G__33288 = count__33270;
var G__33289 = (i__33271 + (1));
seq__33268 = G__33286;
chunk__33269 = G__33287;
count__33270 = G__33288;
i__33271 = G__33289;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33268);
if(temp__4126__auto__){
var seq__33268__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33268__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__33268__$1);
var G__33290 = cljs.core.chunk_rest(seq__33268__$1);
var G__33291 = c__24962__auto__;
var G__33292 = cljs.core.count(c__24962__auto__);
var G__33293 = (0);
seq__33268 = G__33290;
chunk__33269 = G__33291;
count__33270 = G__33292;
i__33271 = G__33293;
continue;
} else {
var vec__33277 = cljs.core.first(seq__33268__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33277,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33277,(1),null);
var G__33278_33294 = key;
var G__33279_33295 = this$__$1;
var G__33280_33296 = oldval;
var G__33281_33297 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33278_33294,G__33279_33295,G__33280_33296,G__33281_33297) : f.call(null,G__33278_33294,G__33279_33295,G__33280_33296,G__33281_33297));

var G__33298 = cljs.core.next(seq__33268__$1);
var G__33299 = null;
var G__33300 = (0);
var G__33301 = (0);
seq__33268 = G__33298;
chunk__33269 = G__33299;
count__33270 = G__33300;
i__33271 = G__33301;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__33305__delegate = function (x,p__33302){
var map__33304 = p__33302;
var map__33304__$1 = ((cljs.core.seq_QMARK_(map__33304))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33304):map__33304);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33304__$1,cljs.core.constant$keyword$validator);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33304__$1,cljs.core.constant$keyword$meta);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__33305 = function (x,var_args){
var p__33302 = null;
if (arguments.length > 1) {
var G__33306__i = 0, G__33306__a = new Array(arguments.length -  1);
while (G__33306__i < G__33306__a.length) {G__33306__a[G__33306__i] = arguments[G__33306__i + 1]; ++G__33306__i;}
  p__33302 = new cljs.core.IndexedSeq(G__33306__a,0);
} 
return G__33305__delegate.call(this,x,p__33302);};
G__33305.cljs$lang$maxFixedArity = 1;
G__33305.cljs$lang$applyTo = (function (arglist__33307){
var x = cljs.core.first(arglist__33307);
var p__33302 = cljs.core.rest(arglist__33307);
return G__33305__delegate(x,p__33302);
});
G__33305.cljs$core$IFn$_invoke$arity$variadic = G__33305__delegate;
return G__33305;
})()
;
cljs$core$atom = function(x,var_args){
var p__33302 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__33308 = null;
if (arguments.length > 1) {
var G__33309__i = 0, G__33309__a = new Array(arguments.length -  1);
while (G__33309__i < G__33309__a.length) {G__33309__a[G__33309__i] = arguments[G__33309__i + 1]; ++G__33309__i;}
G__33308 = new cljs.core.IndexedSeq(G__33309__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__33308);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__33312 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__33312) : validate.call(null,G__33312));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__33313 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__33313) : cljs.core.pr_str.call(null,G__33313));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33320 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33320) : f.call(null,G__33320));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33321 = a.state;
var G__33322 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33321,G__33322) : f.call(null,G__33321,G__33322));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33323 = a.state;
var G__33324 = x;
var G__33325 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33323,G__33324,G__33325) : f.call(null,G__33323,G__33324,G__33325));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__33326__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__33326 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__33327__i = 0, G__33327__a = new Array(arguments.length -  4);
while (G__33327__i < G__33327__a.length) {G__33327__a[G__33327__i] = arguments[G__33327__i + 4]; ++G__33327__i;}
  more = new cljs.core.IndexedSeq(G__33327__a,0);
} 
return G__33326__delegate.call(this,a,f,x,y,more);};
G__33326.cljs$lang$maxFixedArity = 4;
G__33326.cljs$lang$applyTo = (function (arglist__33328){
var a = cljs.core.first(arglist__33328);
arglist__33328 = cljs.core.next(arglist__33328);
var f = cljs.core.first(arglist__33328);
arglist__33328 = cljs.core.next(arglist__33328);
var x = cljs.core.first(arglist__33328);
arglist__33328 = cljs.core.next(arglist__33328);
var y = cljs.core.first(arglist__33328);
var more = cljs.core.rest(arglist__33328);
return G__33326__delegate(a,f,x,y,more);
});
G__33326.cljs$core$IFn$_invoke$arity$variadic = G__33326__delegate;
return G__33326;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__33329 = null;
if (arguments.length > 4) {
var G__33330__i = 0, G__33330__a = new Array(arguments.length -  4);
while (G__33330__i < G__33330__a.length) {G__33330__a[G__33330__i] = arguments[G__33330__i + 4]; ++G__33330__i;}
G__33329 = new cljs.core.IndexedSeq(G__33330__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__33329);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__33397 = null;
var G__33397__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33397__1 = (function (result){
var G__33364 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33364) : rf.call(null,G__33364));
});
var G__33397__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__33365 = i;
var G__33366 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33365,G__33366) : f.call(null,G__33365,G__33366));
})();
if((v == null)){
return result;
} else {
var G__33367 = result;
var G__33368 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33367,G__33368) : rf.call(null,G__33367,G__33368));
}
});
G__33397 = function(result,input){
switch(arguments.length){
case 0:
return G__33397__0.call(this);
case 1:
return G__33397__1.call(this,result);
case 2:
return G__33397__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33397.cljs$core$IFn$_invoke$arity$0 = G__33397__0;
G__33397.cljs$core$IFn$_invoke$arity$1 = G__33397__1;
G__33397.cljs$core$IFn$_invoke$arity$2 = G__33397__2;
return G__33397;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___33398 = size;
var i_33399 = (0);
while(true){
if((i_33399 < n__25062__auto___33398)){
var x_33400 = (function (){var G__33393 = (idx + i_33399);
var G__33394 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33399);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33393,G__33394) : f.call(null,G__33393,G__33394));
})();
if((x_33400 == null)){
} else {
cljs.core.chunk_append(b,x_33400);
}

var G__33401 = (i_33399 + (1));
i_33399 = G__33401;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__33395 = idx;
var G__33396 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33395,G__33396) : f.call(null,G__33395,G__33396));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__33615 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33615) : p.call(null,G__33615));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33617 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33617) : p.call(null,G__33617));
})();
if(cljs.core.truth_(and__24165__auto__)){
var G__33618 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33618) : p.call(null,G__33618));
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33620 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33620) : p.call(null,G__33620));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33622 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33622) : p.call(null,G__33622));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var G__33623 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33623) : p.call(null,G__33623));
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__33792__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__33792 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33793__i = 0, G__33793__a = new Array(arguments.length -  3);
while (G__33793__i < G__33793__a.length) {G__33793__a[G__33793__i] = arguments[G__33793__i + 3]; ++G__33793__i;}
  args = new cljs.core.IndexedSeq(G__33793__a,0);
} 
return G__33792__delegate.call(this,x,y,z,args);};
G__33792.cljs$lang$maxFixedArity = 3;
G__33792.cljs$lang$applyTo = (function (arglist__33794){
var x = cljs.core.first(arglist__33794);
arglist__33794 = cljs.core.next(arglist__33794);
var y = cljs.core.first(arglist__33794);
arglist__33794 = cljs.core.next(arglist__33794);
var z = cljs.core.first(arglist__33794);
var args = cljs.core.rest(arglist__33794);
return G__33792__delegate(x,y,z,args);
});
G__33792.cljs$core$IFn$_invoke$arity$variadic = G__33792__delegate;
return G__33792;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__33795 = null;
if (arguments.length > 3) {
var G__33796__i = 0, G__33796__a = new Array(arguments.length -  3);
while (G__33796__i < G__33796__a.length) {G__33796__a[G__33796__i] = arguments[G__33796__i + 3]; ++G__33796__i;}
G__33795 = new cljs.core.IndexedSeq(G__33796__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33795);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33655 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33655) : p1.call(null,G__33655));
})();
if(cljs.core.truth_(and__24165__auto__)){
var G__33656 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33656) : p2.call(null,G__33656));
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33658 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33658) : p1.call(null,G__33658));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33660 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33660) : p1.call(null,G__33660));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var and__24165__auto____$2 = (function (){var G__33662 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33662) : p2.call(null,G__33662));
})();
if(cljs.core.truth_(and__24165__auto____$2)){
var G__33663 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33663) : p2.call(null,G__33663));
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33665 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33665) : p1.call(null,G__33665));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33667 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33667) : p1.call(null,G__33667));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var and__24165__auto____$2 = (function (){var G__33669 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33669) : p1.call(null,G__33669));
})();
if(cljs.core.truth_(and__24165__auto____$2)){
var and__24165__auto____$3 = (function (){var G__33671 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33671) : p2.call(null,G__33671));
})();
if(cljs.core.truth_(and__24165__auto____$3)){
var and__24165__auto____$4 = (function (){var G__33673 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33673) : p2.call(null,G__33673));
})();
if(cljs.core.truth_(and__24165__auto____$4)){
var G__33674 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33674) : p2.call(null,G__33674));
} else {
return and__24165__auto____$4;
}
} else {
return and__24165__auto____$3;
}
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__33797__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__33402_SHARP_){
var and__24165__auto__ = (function (){var G__33679 = p1__33402_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33679) : p1.call(null,G__33679));
})();
if(cljs.core.truth_(and__24165__auto__)){
var G__33680 = p1__33402_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33680) : p2.call(null,G__33680));
} else {
return and__24165__auto__;
}
}),args)));
};
var G__33797 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33798__i = 0, G__33798__a = new Array(arguments.length -  3);
while (G__33798__i < G__33798__a.length) {G__33798__a[G__33798__i] = arguments[G__33798__i + 3]; ++G__33798__i;}
  args = new cljs.core.IndexedSeq(G__33798__a,0);
} 
return G__33797__delegate.call(this,x,y,z,args);};
G__33797.cljs$lang$maxFixedArity = 3;
G__33797.cljs$lang$applyTo = (function (arglist__33799){
var x = cljs.core.first(arglist__33799);
arglist__33799 = cljs.core.next(arglist__33799);
var y = cljs.core.first(arglist__33799);
arglist__33799 = cljs.core.next(arglist__33799);
var z = cljs.core.first(arglist__33799);
var args = cljs.core.rest(arglist__33799);
return G__33797__delegate(x,y,z,args);
});
G__33797.cljs$core$IFn$_invoke$arity$variadic = G__33797__delegate;
return G__33797;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__33800 = null;
if (arguments.length > 3) {
var G__33801__i = 0, G__33801__a = new Array(arguments.length -  3);
while (G__33801__i < G__33801__a.length) {G__33801__a[G__33801__i] = arguments[G__33801__i + 3]; ++G__33801__i;}
G__33800 = new cljs.core.IndexedSeq(G__33801__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33800);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33726 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33726) : p1.call(null,G__33726));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33728 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33728) : p2.call(null,G__33728));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var G__33729 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33729) : p3.call(null,G__33729));
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33731 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33731) : p1.call(null,G__33731));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33733 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33733) : p2.call(null,G__33733));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var and__24165__auto____$2 = (function (){var G__33735 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33735) : p3.call(null,G__33735));
})();
if(cljs.core.truth_(and__24165__auto____$2)){
var and__24165__auto____$3 = (function (){var G__33737 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33737) : p1.call(null,G__33737));
})();
if(cljs.core.truth_(and__24165__auto____$3)){
var and__24165__auto____$4 = (function (){var G__33739 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33739) : p2.call(null,G__33739));
})();
if(cljs.core.truth_(and__24165__auto____$4)){
var G__33740 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33740) : p3.call(null,G__33740));
} else {
return and__24165__auto____$4;
}
} else {
return and__24165__auto____$3;
}
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24165__auto__ = (function (){var G__33742 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33742) : p1.call(null,G__33742));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33744 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33744) : p2.call(null,G__33744));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var and__24165__auto____$2 = (function (){var G__33746 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33746) : p3.call(null,G__33746));
})();
if(cljs.core.truth_(and__24165__auto____$2)){
var and__24165__auto____$3 = (function (){var G__33748 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33748) : p1.call(null,G__33748));
})();
if(cljs.core.truth_(and__24165__auto____$3)){
var and__24165__auto____$4 = (function (){var G__33750 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33750) : p2.call(null,G__33750));
})();
if(cljs.core.truth_(and__24165__auto____$4)){
var and__24165__auto____$5 = (function (){var G__33752 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33752) : p3.call(null,G__33752));
})();
if(cljs.core.truth_(and__24165__auto____$5)){
var and__24165__auto____$6 = (function (){var G__33754 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33754) : p1.call(null,G__33754));
})();
if(cljs.core.truth_(and__24165__auto____$6)){
var and__24165__auto____$7 = (function (){var G__33756 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33756) : p2.call(null,G__33756));
})();
if(cljs.core.truth_(and__24165__auto____$7)){
var G__33757 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33757) : p3.call(null,G__33757));
} else {
return and__24165__auto____$7;
}
} else {
return and__24165__auto____$6;
}
} else {
return and__24165__auto____$5;
}
} else {
return and__24165__auto____$4;
}
} else {
return and__24165__auto____$3;
}
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__33802__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__33403_SHARP_){
var and__24165__auto__ = (function (){var G__33764 = p1__33403_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33764) : p1.call(null,G__33764));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33766 = p1__33403_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33766) : p2.call(null,G__33766));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var G__33767 = p1__33403_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33767) : p3.call(null,G__33767));
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
}),args)));
};
var G__33802 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33803__i = 0, G__33803__a = new Array(arguments.length -  3);
while (G__33803__i < G__33803__a.length) {G__33803__a[G__33803__i] = arguments[G__33803__i + 3]; ++G__33803__i;}
  args = new cljs.core.IndexedSeq(G__33803__a,0);
} 
return G__33802__delegate.call(this,x,y,z,args);};
G__33802.cljs$lang$maxFixedArity = 3;
G__33802.cljs$lang$applyTo = (function (arglist__33804){
var x = cljs.core.first(arglist__33804);
arglist__33804 = cljs.core.next(arglist__33804);
var y = cljs.core.first(arglist__33804);
arglist__33804 = cljs.core.next(arglist__33804);
var z = cljs.core.first(arglist__33804);
var args = cljs.core.rest(arglist__33804);
return G__33802__delegate(x,y,z,args);
});
G__33802.cljs$core$IFn$_invoke$arity$variadic = G__33802__delegate;
return G__33802;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__33805 = null;
if (arguments.length > 3) {
var G__33806__i = 0, G__33806__a = new Array(arguments.length -  3);
while (G__33806__i < G__33806__a.length) {G__33806__a[G__33806__i] = arguments[G__33806__i + 3]; ++G__33806__i;}
G__33805 = new cljs.core.IndexedSeq(G__33806__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33805);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__33807__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33404_SHARP_){
var G__33783 = x;
return (p1__33404_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33404_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33783) : p1__33404_SHARP_.call(null,G__33783));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33405_SHARP_){
var and__24165__auto__ = (function (){var G__33785 = x;
return (p1__33405_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33405_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33785) : p1__33405_SHARP_.call(null,G__33785));
})();
if(cljs.core.truth_(and__24165__auto__)){
var G__33786 = y;
return (p1__33405_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33405_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33786) : p1__33405_SHARP_.call(null,G__33786));
} else {
return and__24165__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33406_SHARP_){
var and__24165__auto__ = (function (){var G__33788 = x;
return (p1__33406_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33406_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33788) : p1__33406_SHARP_.call(null,G__33788));
})();
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__33790 = y;
return (p1__33406_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33406_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33790) : p1__33406_SHARP_.call(null,G__33790));
})();
if(cljs.core.truth_(and__24165__auto____$1)){
var G__33791 = z;
return (p1__33406_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33406_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33791) : p1__33406_SHARP_.call(null,G__33791));
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__33808__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33407_SHARP_){
return cljs.core.every_QMARK_(p1__33407_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__33808 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33809__i = 0, G__33809__a = new Array(arguments.length -  3);
while (G__33809__i < G__33809__a.length) {G__33809__a[G__33809__i] = arguments[G__33809__i + 3]; ++G__33809__i;}
  args = new cljs.core.IndexedSeq(G__33809__a,0);
} 
return G__33808__delegate.call(this,x,y,z,args);};
G__33808.cljs$lang$maxFixedArity = 3;
G__33808.cljs$lang$applyTo = (function (arglist__33810){
var x = cljs.core.first(arglist__33810);
arglist__33810 = cljs.core.next(arglist__33810);
var y = cljs.core.first(arglist__33810);
arglist__33810 = cljs.core.next(arglist__33810);
var z = cljs.core.first(arglist__33810);
var args = cljs.core.rest(arglist__33810);
return G__33808__delegate(x,y,z,args);
});
G__33808.cljs$core$IFn$_invoke$arity$variadic = G__33808__delegate;
return G__33808;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__33811 = null;
if (arguments.length > 3) {
var G__33812__i = 0, G__33812__a = new Array(arguments.length -  3);
while (G__33812__i < G__33812__a.length) {G__33812__a[G__33812__i] = arguments[G__33812__i + 3]; ++G__33812__i;}
G__33811 = new cljs.core.IndexedSeq(G__33812__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33811);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__33807 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__33813__i = 0, G__33813__a = new Array(arguments.length -  3);
while (G__33813__i < G__33813__a.length) {G__33813__a[G__33813__i] = arguments[G__33813__i + 3]; ++G__33813__i;}
  ps = new cljs.core.IndexedSeq(G__33813__a,0);
} 
return G__33807__delegate.call(this,p1,p2,p3,ps);};
G__33807.cljs$lang$maxFixedArity = 3;
G__33807.cljs$lang$applyTo = (function (arglist__33814){
var p1 = cljs.core.first(arglist__33814);
arglist__33814 = cljs.core.next(arglist__33814);
var p2 = cljs.core.first(arglist__33814);
arglist__33814 = cljs.core.next(arglist__33814);
var p3 = cljs.core.first(arglist__33814);
var ps = cljs.core.rest(arglist__33814);
return G__33807__delegate(p1,p2,p3,ps);
});
G__33807.cljs$core$IFn$_invoke$arity$variadic = G__33807__delegate;
return G__33807;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__33815 = null;
if (arguments.length > 3) {
var G__33816__i = 0, G__33816__a = new Array(arguments.length -  3);
while (G__33816__i < G__33816__a.length) {G__33816__a[G__33816__i] = arguments[G__33816__i + 3]; ++G__33816__i;}
G__33815 = new cljs.core.IndexedSeq(G__33816__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__33815);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__34022 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34022) : p.call(null,G__34022));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__24177__auto__ = (function (){var G__34024 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34024) : p.call(null,G__34024));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__34025 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34025) : p.call(null,G__34025));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__24177__auto__ = (function (){var G__34027 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34027) : p.call(null,G__34027));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34029 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34029) : p.call(null,G__34029));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var G__34030 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34030) : p.call(null,G__34030));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__34191__delegate = function (x,y,z,args){
var or__24177__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__34191 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34192__i = 0, G__34192__a = new Array(arguments.length -  3);
while (G__34192__i < G__34192__a.length) {G__34192__a[G__34192__i] = arguments[G__34192__i + 3]; ++G__34192__i;}
  args = new cljs.core.IndexedSeq(G__34192__a,0);
} 
return G__34191__delegate.call(this,x,y,z,args);};
G__34191.cljs$lang$maxFixedArity = 3;
G__34191.cljs$lang$applyTo = (function (arglist__34193){
var x = cljs.core.first(arglist__34193);
arglist__34193 = cljs.core.next(arglist__34193);
var y = cljs.core.first(arglist__34193);
arglist__34193 = cljs.core.next(arglist__34193);
var z = cljs.core.first(arglist__34193);
var args = cljs.core.rest(arglist__34193);
return G__34191__delegate(x,y,z,args);
});
G__34191.cljs$core$IFn$_invoke$arity$variadic = G__34191__delegate;
return G__34191;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__34194 = null;
if (arguments.length > 3) {
var G__34195__i = 0, G__34195__a = new Array(arguments.length -  3);
while (G__34195__i < G__34195__a.length) {G__34195__a[G__34195__i] = arguments[G__34195__i + 3]; ++G__34195__i;}
G__34194 = new cljs.core.IndexedSeq(G__34195__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34194);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__24177__auto__ = (function (){var G__34062 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34062) : p1.call(null,G__34062));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__34063 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34063) : p2.call(null,G__34063));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__24177__auto__ = (function (){var G__34065 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34065) : p1.call(null,G__34065));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34067 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34067) : p1.call(null,G__34067));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34069 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34069) : p2.call(null,G__34069));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var G__34070 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34070) : p2.call(null,G__34070));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__24177__auto__ = (function (){var G__34072 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34072) : p1.call(null,G__34072));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34074 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34074) : p1.call(null,G__34074));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34076 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34076) : p1.call(null,G__34076));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var or__24177__auto____$3 = (function (){var G__34078 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34078) : p2.call(null,G__34078));
})();
if(cljs.core.truth_(or__24177__auto____$3)){
return or__24177__auto____$3;
} else {
var or__24177__auto____$4 = (function (){var G__34080 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34080) : p2.call(null,G__34080));
})();
if(cljs.core.truth_(or__24177__auto____$4)){
return or__24177__auto____$4;
} else {
var G__34081 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34081) : p2.call(null,G__34081));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__34196__delegate = function (x,y,z,args){
var or__24177__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.some(((function (or__24177__auto__){
return (function (p1__33817_SHARP_){
var or__24177__auto____$1 = (function (){var G__34083 = p1__33817_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34083) : p1.call(null,G__34083));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var G__34084 = p1__33817_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34084) : p2.call(null,G__34084));
}
});})(or__24177__auto__))
,args);
}
};
var G__34196 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34197__i = 0, G__34197__a = new Array(arguments.length -  3);
while (G__34197__i < G__34197__a.length) {G__34197__a[G__34197__i] = arguments[G__34197__i + 3]; ++G__34197__i;}
  args = new cljs.core.IndexedSeq(G__34197__a,0);
} 
return G__34196__delegate.call(this,x,y,z,args);};
G__34196.cljs$lang$maxFixedArity = 3;
G__34196.cljs$lang$applyTo = (function (arglist__34198){
var x = cljs.core.first(arglist__34198);
arglist__34198 = cljs.core.next(arglist__34198);
var y = cljs.core.first(arglist__34198);
arglist__34198 = cljs.core.next(arglist__34198);
var z = cljs.core.first(arglist__34198);
var args = cljs.core.rest(arglist__34198);
return G__34196__delegate(x,y,z,args);
});
G__34196.cljs$core$IFn$_invoke$arity$variadic = G__34196__delegate;
return G__34196;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__34199 = null;
if (arguments.length > 3) {
var G__34200__i = 0, G__34200__a = new Array(arguments.length -  3);
while (G__34200__i < G__34200__a.length) {G__34200__a[G__34200__i] = arguments[G__34200__i + 3]; ++G__34200__i;}
G__34199 = new cljs.core.IndexedSeq(G__34200__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34199);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__24177__auto__ = (function (){var G__34130 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34130) : p1.call(null,G__34130));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34132 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34132) : p2.call(null,G__34132));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var G__34133 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34133) : p3.call(null,G__34133));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__24177__auto__ = (function (){var G__34135 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34135) : p1.call(null,G__34135));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34137 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34137) : p2.call(null,G__34137));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34139 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34139) : p3.call(null,G__34139));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var or__24177__auto____$3 = (function (){var G__34141 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34141) : p1.call(null,G__34141));
})();
if(cljs.core.truth_(or__24177__auto____$3)){
return or__24177__auto____$3;
} else {
var or__24177__auto____$4 = (function (){var G__34143 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34143) : p2.call(null,G__34143));
})();
if(cljs.core.truth_(or__24177__auto____$4)){
return or__24177__auto____$4;
} else {
var G__34144 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34144) : p3.call(null,G__34144));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__24177__auto__ = (function (){var G__34146 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34146) : p1.call(null,G__34146));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34148 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34148) : p2.call(null,G__34148));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34150 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34150) : p3.call(null,G__34150));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var or__24177__auto____$3 = (function (){var G__34152 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34152) : p1.call(null,G__34152));
})();
if(cljs.core.truth_(or__24177__auto____$3)){
return or__24177__auto____$3;
} else {
var or__24177__auto____$4 = (function (){var G__34154 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34154) : p2.call(null,G__34154));
})();
if(cljs.core.truth_(or__24177__auto____$4)){
return or__24177__auto____$4;
} else {
var or__24177__auto____$5 = (function (){var G__34156 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34156) : p3.call(null,G__34156));
})();
if(cljs.core.truth_(or__24177__auto____$5)){
return or__24177__auto____$5;
} else {
var or__24177__auto____$6 = (function (){var G__34158 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34158) : p1.call(null,G__34158));
})();
if(cljs.core.truth_(or__24177__auto____$6)){
return or__24177__auto____$6;
} else {
var or__24177__auto____$7 = (function (){var G__34160 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34160) : p2.call(null,G__34160));
})();
if(cljs.core.truth_(or__24177__auto____$7)){
return or__24177__auto____$7;
} else {
var G__34161 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34161) : p3.call(null,G__34161));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__34201__delegate = function (x,y,z,args){
var or__24177__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.some(((function (or__24177__auto__){
return (function (p1__33818_SHARP_){
var or__24177__auto____$1 = (function (){var G__34163 = p1__33818_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34163) : p1.call(null,G__34163));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var G__34165 = p1__33818_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34165) : p2.call(null,G__34165));
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
var G__34166 = p1__33818_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34166) : p3.call(null,G__34166));
}
}
});})(or__24177__auto__))
,args);
}
};
var G__34201 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34202__i = 0, G__34202__a = new Array(arguments.length -  3);
while (G__34202__i < G__34202__a.length) {G__34202__a[G__34202__i] = arguments[G__34202__i + 3]; ++G__34202__i;}
  args = new cljs.core.IndexedSeq(G__34202__a,0);
} 
return G__34201__delegate.call(this,x,y,z,args);};
G__34201.cljs$lang$maxFixedArity = 3;
G__34201.cljs$lang$applyTo = (function (arglist__34203){
var x = cljs.core.first(arglist__34203);
arglist__34203 = cljs.core.next(arglist__34203);
var y = cljs.core.first(arglist__34203);
arglist__34203 = cljs.core.next(arglist__34203);
var z = cljs.core.first(arglist__34203);
var args = cljs.core.rest(arglist__34203);
return G__34201__delegate(x,y,z,args);
});
G__34201.cljs$core$IFn$_invoke$arity$variadic = G__34201__delegate;
return G__34201;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__34204 = null;
if (arguments.length > 3) {
var G__34205__i = 0, G__34205__a = new Array(arguments.length -  3);
while (G__34205__i < G__34205__a.length) {G__34205__a[G__34205__i] = arguments[G__34205__i + 3]; ++G__34205__i;}
G__34204 = new cljs.core.IndexedSeq(G__34205__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34204);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__34206__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__33819_SHARP_){
var G__34182 = x;
return (p1__33819_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33819_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34182) : p1__33819_SHARP_.call(null,G__34182));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__33820_SHARP_){
var or__24177__auto__ = (function (){var G__34184 = x;
return (p1__33820_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33820_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34184) : p1__33820_SHARP_.call(null,G__34184));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var G__34185 = y;
return (p1__33820_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33820_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34185) : p1__33820_SHARP_.call(null,G__34185));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__33821_SHARP_){
var or__24177__auto__ = (function (){var G__34187 = x;
return (p1__33821_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33821_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34187) : p1__33821_SHARP_.call(null,G__34187));
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var G__34189 = y;
return (p1__33821_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33821_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34189) : p1__33821_SHARP_.call(null,G__34189));
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var G__34190 = z;
return (p1__33821_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33821_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34190) : p1__33821_SHARP_.call(null,G__34190));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__34207__delegate = function (x,y,z,args){
var or__24177__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.some(((function (or__24177__auto__,ps__$1){
return (function (p1__33822_SHARP_){
return cljs.core.some(p1__33822_SHARP_,args);
});})(or__24177__auto__,ps__$1))
,ps__$1);
}
};
var G__34207 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34208__i = 0, G__34208__a = new Array(arguments.length -  3);
while (G__34208__i < G__34208__a.length) {G__34208__a[G__34208__i] = arguments[G__34208__i + 3]; ++G__34208__i;}
  args = new cljs.core.IndexedSeq(G__34208__a,0);
} 
return G__34207__delegate.call(this,x,y,z,args);};
G__34207.cljs$lang$maxFixedArity = 3;
G__34207.cljs$lang$applyTo = (function (arglist__34209){
var x = cljs.core.first(arglist__34209);
arglist__34209 = cljs.core.next(arglist__34209);
var y = cljs.core.first(arglist__34209);
arglist__34209 = cljs.core.next(arglist__34209);
var z = cljs.core.first(arglist__34209);
var args = cljs.core.rest(arglist__34209);
return G__34207__delegate(x,y,z,args);
});
G__34207.cljs$core$IFn$_invoke$arity$variadic = G__34207__delegate;
return G__34207;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__34210 = null;
if (arguments.length > 3) {
var G__34211__i = 0, G__34211__a = new Array(arguments.length -  3);
while (G__34211__i < G__34211__a.length) {G__34211__a[G__34211__i] = arguments[G__34211__i + 3]; ++G__34211__i;}
G__34210 = new cljs.core.IndexedSeq(G__34211__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34210);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__34206 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__34212__i = 0, G__34212__a = new Array(arguments.length -  3);
while (G__34212__i < G__34212__a.length) {G__34212__a[G__34212__i] = arguments[G__34212__i + 3]; ++G__34212__i;}
  ps = new cljs.core.IndexedSeq(G__34212__a,0);
} 
return G__34206__delegate.call(this,p1,p2,p3,ps);};
G__34206.cljs$lang$maxFixedArity = 3;
G__34206.cljs$lang$applyTo = (function (arglist__34213){
var p1 = cljs.core.first(arglist__34213);
arglist__34213 = cljs.core.next(arglist__34213);
var p2 = cljs.core.first(arglist__34213);
arglist__34213 = cljs.core.next(arglist__34213);
var p3 = cljs.core.first(arglist__34213);
var ps = cljs.core.rest(arglist__34213);
return G__34206__delegate(p1,p2,p3,ps);
});
G__34206.cljs$core$IFn$_invoke$arity$variadic = G__34206__delegate;
return G__34206;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__34214 = null;
if (arguments.length > 3) {
var G__34215__i = 0, G__34215__a = new Array(arguments.length -  3);
while (G__34215__i < G__34215__a.length) {G__34215__a[G__34215__i] = arguments[G__34215__i + 3]; ++G__34215__i;}
G__34214 = new cljs.core.IndexedSeq(G__34215__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__34214);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__34270 = null;
var G__34270__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34270__1 = (function (result){
var G__34256 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34256) : rf.call(null,G__34256));
});
var G__34270__2 = (function (result,input){
var G__34257 = result;
var G__34258 = (function (){var G__34259 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34259) : f.call(null,G__34259));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34257,G__34258) : rf.call(null,G__34257,G__34258));
});
var G__34270__3 = (function() { 
var G__34271__delegate = function (result,input,inputs){
var G__34260 = result;
var G__34261 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34260,G__34261) : rf.call(null,G__34260,G__34261));
};
var G__34271 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__34272__i = 0, G__34272__a = new Array(arguments.length -  2);
while (G__34272__i < G__34272__a.length) {G__34272__a[G__34272__i] = arguments[G__34272__i + 2]; ++G__34272__i;}
  inputs = new cljs.core.IndexedSeq(G__34272__a,0);
} 
return G__34271__delegate.call(this,result,input,inputs);};
G__34271.cljs$lang$maxFixedArity = 2;
G__34271.cljs$lang$applyTo = (function (arglist__34273){
var result = cljs.core.first(arglist__34273);
arglist__34273 = cljs.core.next(arglist__34273);
var input = cljs.core.first(arglist__34273);
var inputs = cljs.core.rest(arglist__34273);
return G__34271__delegate(result,input,inputs);
});
G__34271.cljs$core$IFn$_invoke$arity$variadic = G__34271__delegate;
return G__34271;
})()
;
G__34270 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__34270__0.call(this);
case 1:
return G__34270__1.call(this,result);
case 2:
return G__34270__2.call(this,result,input);
default:
var G__34274 = null;
if (arguments.length > 2) {
var G__34275__i = 0, G__34275__a = new Array(arguments.length -  2);
while (G__34275__i < G__34275__a.length) {G__34275__a[G__34275__i] = arguments[G__34275__i + 2]; ++G__34275__i;}
G__34274 = new cljs.core.IndexedSeq(G__34275__a,0);
}
return G__34270__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__34274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34270.cljs$lang$maxFixedArity = 2;
G__34270.cljs$lang$applyTo = G__34270__3.cljs$lang$applyTo;
G__34270.cljs$core$IFn$_invoke$arity$0 = G__34270__0;
G__34270.cljs$core$IFn$_invoke$arity$1 = G__34270__1;
G__34270.cljs$core$IFn$_invoke$arity$2 = G__34270__2;
G__34270.cljs$core$IFn$_invoke$arity$variadic = G__34270__3.cljs$core$IFn$_invoke$arity$variadic;
return G__34270;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___34276 = size;
var i_34277 = (0);
while(true){
if((i_34277 < n__25062__auto___34276)){
cljs.core.chunk_append(b,(function (){var G__34262 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34277);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34262) : f.call(null,G__34262));
})());

var G__34278 = (i_34277 + (1));
i_34277 = G__34278;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__34263 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34263) : f.call(null,G__34263));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__34264 = cljs.core.first(s1);
var G__34265 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34264,G__34265) : f.call(null,G__34264,G__34265));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__34266 = cljs.core.first(s1);
var G__34267 = cljs.core.first(s2);
var G__34268 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34266,G__34267,G__34268) : f.call(null,G__34266,G__34267,G__34268));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__34279__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__34216_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__34216_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__34279 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__34280__i = 0, G__34280__a = new Array(arguments.length -  4);
while (G__34280__i < G__34280__a.length) {G__34280__a[G__34280__i] = arguments[G__34280__i + 4]; ++G__34280__i;}
  colls = new cljs.core.IndexedSeq(G__34280__a,0);
} 
return G__34279__delegate.call(this,f,c1,c2,c3,colls);};
G__34279.cljs$lang$maxFixedArity = 4;
G__34279.cljs$lang$applyTo = (function (arglist__34281){
var f = cljs.core.first(arglist__34281);
arglist__34281 = cljs.core.next(arglist__34281);
var c1 = cljs.core.first(arglist__34281);
arglist__34281 = cljs.core.next(arglist__34281);
var c2 = cljs.core.first(arglist__34281);
arglist__34281 = cljs.core.next(arglist__34281);
var c3 = cljs.core.first(arglist__34281);
var colls = cljs.core.rest(arglist__34281);
return G__34279__delegate(f,c1,c2,c3,colls);
});
G__34279.cljs$core$IFn$_invoke$arity$variadic = G__34279__delegate;
return G__34279;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__34282 = null;
if (arguments.length > 4) {
var G__34283__i = 0, G__34283__a = new Array(arguments.length -  4);
while (G__34283__i < G__34283__a.length) {G__34283__a[G__34283__i] = arguments[G__34283__i + 4]; ++G__34283__i;}
G__34282 = new cljs.core.IndexedSeq(G__34283__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__34282);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__34292 = null;
var G__34292__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34292__1 = (function (result){
var G__34289 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34289) : rf.call(null,G__34289));
});
var G__34292__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__34290 = result;
var G__34291 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34290,G__34291) : rf.call(null,G__34290,G__34291));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__34292 = function(result,input){
switch(arguments.length){
case 0:
return G__34292__0.call(this);
case 1:
return G__34292__1.call(this,result);
case 2:
return G__34292__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34292.cljs$core$IFn$_invoke$arity$0 = G__34292__0;
G__34292.cljs$core$IFn$_invoke$arity$1 = G__34292__1;
G__34292.cljs$core$IFn$_invoke$arity$2 = G__34292__2;
return G__34292;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__34299 = null;
var G__34299__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34299__1 = (function (result){
var G__34296 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34296) : rf.call(null,G__34296));
});
var G__34299__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__34297 = result;
var G__34298 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34297,G__34298) : rf.call(null,G__34297,G__34298));
}
});
G__34299 = function(result,input){
switch(arguments.length){
case 0:
return G__34299__0.call(this);
case 1:
return G__34299__1.call(this,result);
case 2:
return G__34299__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34299.cljs$core$IFn$_invoke$arity$0 = G__34299__0;
G__34299.cljs$core$IFn$_invoke$arity$1 = G__34299__1;
G__34299.cljs$core$IFn$_invoke$arity$2 = G__34299__2;
return G__34299;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__34300 = (n__$1 - (1));
var G__34301 = cljs.core.rest(s);
n__$1 = G__34300;
coll__$1 = G__34301;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__34304 = cljs.core.next(s);
var G__34305 = cljs.core.next(lead);
s = G__34304;
lead = G__34305;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__34318 = null;
var G__34318__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34318__1 = (function (result){
var G__34312 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34312) : rf.call(null,G__34312));
});
var G__34318__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24165__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24165__auto__)){
var G__34313 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34313) : pred.call(null,G__34313));
} else {
return and__24165__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__34314 = result;
var G__34315 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34314,G__34315) : rf.call(null,G__34314,G__34315));
}
});
G__34318 = function(result,input){
switch(arguments.length){
case 0:
return G__34318__0.call(this);
case 1:
return G__34318__1.call(this,result);
case 2:
return G__34318__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34318.cljs$core$IFn$_invoke$arity$0 = G__34318__0;
G__34318.cljs$core$IFn$_invoke$arity$1 = G__34318__1;
G__34318.cljs$core$IFn$_invoke$arity$2 = G__34318__2;
return G__34318;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24165__auto__ = s;
if(and__24165__auto__){
var G__34317 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__34317) : pred__$1.call(null,G__34317));
} else {
return and__24165__auto__;
}
})())){
var G__34319 = pred__$1;
var G__34320 = cljs.core.rest(s);
pred__$1 = G__34319;
coll__$1 = G__34320;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__34329 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34329) : f.call(null,G__34329));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__34332__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__34332 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__34333__i = 0, G__34333__a = new Array(arguments.length -  2);
while (G__34333__i < G__34333__a.length) {G__34333__a[G__34333__i] = arguments[G__34333__i + 2]; ++G__34333__i;}
  colls = new cljs.core.IndexedSeq(G__34333__a,0);
} 
return G__34332__delegate.call(this,c1,c2,colls);};
G__34332.cljs$lang$maxFixedArity = 2;
G__34332.cljs$lang$applyTo = (function (arglist__34334){
var c1 = cljs.core.first(arglist__34334);
arglist__34334 = cljs.core.next(arglist__34334);
var c2 = cljs.core.first(arglist__34334);
var colls = cljs.core.rest(arglist__34334);
return G__34332__delegate(c1,c2,colls);
});
G__34332.cljs$core$IFn$_invoke$arity$variadic = G__34332__delegate;
return G__34332;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__34335 = null;
if (arguments.length > 2) {
var G__34336__i = 0, G__34336__a = new Array(arguments.length -  2);
while (G__34336__i < G__34336__a.length) {G__34336__a[G__34336__i] = arguments[G__34336__i + 2]; ++G__34336__i;}
G__34335 = new cljs.core.IndexedSeq(G__34336__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__34335);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__34351 = null;
var G__34351__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34351__1 = (function (result){
var G__34344 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34344) : rf.call(null,G__34344));
});
var G__34351__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__34345 = result;
var G__34346 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34345,G__34346) : rf.call(null,G__34345,G__34346));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__34347 = sepr;
var G__34348 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34347,G__34348) : rf.call(null,G__34347,G__34348));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__34349 = result;
var G__34350 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34349,G__34350) : rf.call(null,G__34349,G__34350));
}
});
G__34351 = function(result,input){
switch(arguments.length){
case 0:
return G__34351__0.call(this);
case 1:
return G__34351__1.call(this,result);
case 2:
return G__34351__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34351.cljs$core$IFn$_invoke$arity$0 = G__34351__0;
G__34351.cljs$core$IFn$_invoke$arity$1 = G__34351__1;
G__34351.cljs$core$IFn$_invoke$arity$2 = G__34351__2;
return G__34351;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__34360__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__34360 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__34361__i = 0, G__34361__a = new Array(arguments.length -  1);
while (G__34361__i < G__34361__a.length) {G__34361__a[G__34361__i] = arguments[G__34361__i + 1]; ++G__34361__i;}
  colls = new cljs.core.IndexedSeq(G__34361__a,0);
} 
return G__34360__delegate.call(this,f,colls);};
G__34360.cljs$lang$maxFixedArity = 1;
G__34360.cljs$lang$applyTo = (function (arglist__34362){
var f = cljs.core.first(arglist__34362);
var colls = cljs.core.rest(arglist__34362);
return G__34360__delegate(f,colls);
});
G__34360.cljs$core$IFn$_invoke$arity$variadic = G__34360__delegate;
return G__34360;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__34363 = null;
if (arguments.length > 1) {
var G__34364__i = 0, G__34364__a = new Array(arguments.length -  1);
while (G__34364__i < G__34364__a.length) {G__34364__a[G__34364__i] = arguments[G__34364__i + 1]; ++G__34364__i;}
G__34363 = new cljs.core.IndexedSeq(G__34364__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__34363);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__34383 = null;
var G__34383__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34383__1 = (function (result){
var G__34377 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34377) : rf.call(null,G__34377));
});
var G__34383__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__34378 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34378) : pred.call(null,G__34378));
})())){
var G__34379 = result;
var G__34380 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34379,G__34380) : rf.call(null,G__34379,G__34380));
} else {
return result;
}
});
G__34383 = function(result,input){
switch(arguments.length){
case 0:
return G__34383__0.call(this);
case 1:
return G__34383__1.call(this,result);
case 2:
return G__34383__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34383.cljs$core$IFn$_invoke$arity$0 = G__34383__0;
G__34383.cljs$core$IFn$_invoke$arity$1 = G__34383__1;
G__34383.cljs$core$IFn$_invoke$arity$2 = G__34383__2;
return G__34383;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25062__auto___34384 = size;
var i_34385 = (0);
while(true){
if((i_34385 < n__25062__auto___34384)){
if(cljs.core.truth_((function (){var G__34381 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34385);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34381) : pred.call(null,G__34381));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34385));
} else {
}

var G__34386 = (i_34385 + (1));
i_34385 = G__34386;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__34382 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34382) : pred.call(null,G__34382));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__34393 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__34393) : branch_QMARK_.call(null,G__34393));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__34394 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__34394) : children.call(null,G__34394));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__34395_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__34395_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__34398 = to;
if(G__34398){
var bit__24844__auto__ = (G__34398.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24844__auto__) || (G__34398.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__34399 = to;
if(G__34399){
var bit__24844__auto__ = (G__34399.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24844__auto__) || (G__34399.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__34401 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34401) : f.call(null,G__34401));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__34402__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__34402 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__34403__i = 0, G__34403__a = new Array(arguments.length -  4);
while (G__34403__i < G__34403__a.length) {G__34403__a[G__34403__i] = arguments[G__34403__i + 4]; ++G__34403__i;}
  colls = new cljs.core.IndexedSeq(G__34403__a,0);
} 
return G__34402__delegate.call(this,f,c1,c2,c3,colls);};
G__34402.cljs$lang$maxFixedArity = 4;
G__34402.cljs$lang$applyTo = (function (arglist__34404){
var f = cljs.core.first(arglist__34404);
arglist__34404 = cljs.core.next(arglist__34404);
var c1 = cljs.core.first(arglist__34404);
arglist__34404 = cljs.core.next(arglist__34404);
var c2 = cljs.core.first(arglist__34404);
arglist__34404 = cljs.core.next(arglist__34404);
var c3 = cljs.core.first(arglist__34404);
var colls = cljs.core.rest(arglist__34404);
return G__34402__delegate(f,c1,c2,c3,colls);
});
G__34402.cljs$core$IFn$_invoke$arity$variadic = G__34402__delegate;
return G__34402;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__34405 = null;
if (arguments.length > 4) {
var G__34406__i = 0, G__34406__a = new Array(arguments.length -  4);
while (G__34406__i < G__34406__a.length) {G__34406__a[G__34406__i] = arguments[G__34406__i + 4]; ++G__34406__i;}
G__34405 = new cljs.core.IndexedSeq(G__34406__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__34405);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__34408 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34408) : pred.call(null,G__34408));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__34423 = m__$1;
if(G__34423){
var bit__24851__auto__ = (G__34423.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24851__auto__) || (G__34423.cljs$core$ILookup$)){
return true;
} else {
if((!G__34423.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__34423);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__34423);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__34424 = sentinel;
var G__34425 = m__$2;
var G__34426 = cljs.core.next(ks__$1);
sentinel = G__34424;
m__$1 = G__34425;
ks__$1 = G__34426;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__34427,v){
var vec__34432 = p__34427;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34432,(0),null);
var ks = cljs.core.nthnext(vec__34432,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__34433,f){
var vec__34471 = p__34433;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34471,(0),null);
var ks = cljs.core.nthnext(vec__34471,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34472 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34472) : f.call(null,G__34472));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__34434,f,a){
var vec__34473 = p__34434;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34473,(0),null);
var ks = cljs.core.nthnext(vec__34473,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34474 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34475 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34474,G__34475) : f.call(null,G__34474,G__34475));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__34435,f,a,b){
var vec__34476 = p__34435;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34476,(0),null);
var ks = cljs.core.nthnext(vec__34476,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34477 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34478 = a;
var G__34479 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34477,G__34478,G__34479) : f.call(null,G__34477,G__34478,G__34479));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__34436,f,a,b,c){
var vec__34480 = p__34436;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34480,(0),null);
var ks = cljs.core.nthnext(vec__34480,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34481 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34482 = a;
var G__34483 = b;
var G__34484 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34481,G__34482,G__34483,G__34484) : f.call(null,G__34481,G__34482,G__34483,G__34484));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__34486__delegate = function (m,p__34437,f,a,b,c,args){
var vec__34485 = p__34437;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34485,(0),null);
var ks = cljs.core.nthnext(vec__34485,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__34486 = function (m,p__34437,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__34487__i = 0, G__34487__a = new Array(arguments.length -  6);
while (G__34487__i < G__34487__a.length) {G__34487__a[G__34487__i] = arguments[G__34487__i + 6]; ++G__34487__i;}
  args = new cljs.core.IndexedSeq(G__34487__a,0);
} 
return G__34486__delegate.call(this,m,p__34437,f,a,b,c,args);};
G__34486.cljs$lang$maxFixedArity = 6;
G__34486.cljs$lang$applyTo = (function (arglist__34488){
var m = cljs.core.first(arglist__34488);
arglist__34488 = cljs.core.next(arglist__34488);
var p__34437 = cljs.core.first(arglist__34488);
arglist__34488 = cljs.core.next(arglist__34488);
var f = cljs.core.first(arglist__34488);
arglist__34488 = cljs.core.next(arglist__34488);
var a = cljs.core.first(arglist__34488);
arglist__34488 = cljs.core.next(arglist__34488);
var b = cljs.core.first(arglist__34488);
arglist__34488 = cljs.core.next(arglist__34488);
var c = cljs.core.first(arglist__34488);
var args = cljs.core.rest(arglist__34488);
return G__34486__delegate(m,p__34437,f,a,b,c,args);
});
G__34486.cljs$core$IFn$_invoke$arity$variadic = G__34486__delegate;
return G__34486;
})()
;
cljs$core$update_in = function(m,p__34437,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__34437,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__34437,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__34437,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__34437,f,a,b,c);
default:
var G__34489 = null;
if (arguments.length > 6) {
var G__34490__i = 0, G__34490__a = new Array(arguments.length -  6);
while (G__34490__i < G__34490__a.length) {G__34490__a[G__34490__i] = arguments[G__34490__i + 6]; ++G__34490__i;}
G__34489 = new cljs.core.IndexedSeq(G__34490__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__34437,f,a,b,c, G__34489);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34501 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34501) : f.call(null,G__34501));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34502 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34503 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34502,G__34503) : f.call(null,G__34502,G__34503));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34504 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34505 = x;
var G__34506 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34504,G__34505,G__34506) : f.call(null,G__34504,G__34505,G__34506));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34507 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34508 = x;
var G__34509 = y;
var G__34510 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34507,G__34508,G__34509,G__34510) : f.call(null,G__34507,G__34508,G__34509,G__34510));
})());
});
var cljs$core$update__7 = (function() { 
var G__34511__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__34511 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__34512__i = 0, G__34512__a = new Array(arguments.length -  6);
while (G__34512__i < G__34512__a.length) {G__34512__a[G__34512__i] = arguments[G__34512__i + 6]; ++G__34512__i;}
  more = new cljs.core.IndexedSeq(G__34512__a,0);
} 
return G__34511__delegate.call(this,m,k,f,x,y,z,more);};
G__34511.cljs$lang$maxFixedArity = 6;
G__34511.cljs$lang$applyTo = (function (arglist__34513){
var m = cljs.core.first(arglist__34513);
arglist__34513 = cljs.core.next(arglist__34513);
var k = cljs.core.first(arglist__34513);
arglist__34513 = cljs.core.next(arglist__34513);
var f = cljs.core.first(arglist__34513);
arglist__34513 = cljs.core.next(arglist__34513);
var x = cljs.core.first(arglist__34513);
arglist__34513 = cljs.core.next(arglist__34513);
var y = cljs.core.first(arglist__34513);
arglist__34513 = cljs.core.next(arglist__34513);
var z = cljs.core.first(arglist__34513);
var more = cljs.core.rest(arglist__34513);
return G__34511__delegate(m,k,f,x,y,z,more);
});
G__34511.cljs$core$IFn$_invoke$arity$variadic = G__34511__delegate;
return G__34511;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__34514 = null;
if (arguments.length > 6) {
var G__34515__i = 0, G__34515__a = new Array(arguments.length -  6);
while (G__34515__i < G__34515__a.length) {G__34515__a[G__34515__i] = arguments[G__34515__i + 6]; ++G__34515__i;}
G__34514 = new cljs.core.IndexedSeq(G__34515__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__34514);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__34516 = (ll - (5));
var G__34517 = r;
ll = G__34516;
ret = G__34517;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__34522 = cljs.core.pv_aget(node,(0));
var G__34523 = (level - (5));
node = G__34522;
level = G__34523;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__34524 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__34525 = (level - (5));
node = G__34524;
level = G__34525;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__34535 = init__$2;
var G__34536 = (j + i);
var G__34537 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34535,G__34536,G__34537) : f.call(null,G__34535,G__34536,G__34537));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__34548 = (j + (1));
var G__34549 = init__$3;
j = G__34548;
init__$2 = G__34549;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34538 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34538) : cljs.core.deref.call(null,G__34538));
} else {
var G__34550 = (i + len);
var G__34551 = init__$2;
i = G__34550;
init__$1 = G__34551;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__34539 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__34539) : cljs.core.tv_editable_root.call(null,G__34539));
})(),(function (){var G__34540 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__34540) : cljs.core.tv_editable_tail.call(null,G__34540));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__34541 = init__$2;
var G__34542 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34541,G__34542) : f.call(null,G__34541,G__34542));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__34552 = (j + (1));
var G__34553 = init__$3;
j = G__34552;
init__$2 = G__34553;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34543 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34543) : cljs.core.deref.call(null,G__34543));
} else {
var G__34554 = (i + len);
var G__34555 = init__$2;
i = G__34554;
init__$1 = G__34555;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__34544 = coll__$1;
var G__34545 = cljs.core.first_array_for_longvec(coll__$1);
var G__34546 = (0);
var G__34547 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34544,G__34545,G__34546,G__34547) : cljs.core.chunked_seq.call(null,G__34544,G__34545,G__34546,G__34547));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25062__auto___34556 = len;
var i_34557 = (0);
while(true){
if((i_34557 < n__25062__auto___34556)){
(new_tail[i_34557] = (self__.tail[i_34557]));

var G__34558 = (i_34557 + (1));
i_34557 = G__34558;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__34559 = null;
var G__34559__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__34559__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__34559 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34559__2.call(this,self__,k);
case 3:
return G__34559__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34559.cljs$core$IFn$_invoke$arity$2 = G__34559__2;
G__34559.cljs$core$IFn$_invoke$arity$3 = G__34559__3;
return G__34559;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args34534){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34534)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__34560 = (i + (1));
var G__34561 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__34560;
out = G__34561;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34562__i = 0, G__34562__a = new Array(arguments.length -  0);
while (G__34562__i < G__34562__a.length) {G__34562__a[G__34562__i] = arguments[G__34562__i + 0]; ++G__34562__i;}
  args = new cljs.core.IndexedSeq(G__34562__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__34563){
var args = cljs.core.seq(arglist__34563);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__34564 = self__.vec;
var G__34565 = self__.node;
var G__34566 = self__.i;
var G__34567 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34564,G__34565,G__34566,G__34567) : cljs.core.chunked_seq.call(null,G__34564,G__34565,G__34566,G__34567));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__34568 = self__.vec;
var G__34569 = (self__.i + self__.off);
var G__34570 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34568,G__34569,G__34570) : cljs.core.subvec.call(null,G__34568,G__34569,G__34570));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__34571 = self__.vec;
var G__34572 = (self__.i + self__.off);
var G__34573 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34571,G__34572,G__34573) : cljs.core.subvec.call(null,G__34571,G__34572,G__34573));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__34574 = self__.vec;
var G__34575 = self__.node;
var G__34576 = self__.i;
var G__34577 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34574,G__34575,G__34576,G__34577) : cljs.core.chunked_seq.call(null,G__34574,G__34575,G__34576,G__34577));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__34578 = self__.vec;
var G__34579 = cljs.core.unchecked_array_for(self__.vec,end);
var G__34580 = end;
var G__34581 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34578,G__34579,G__34580,G__34581) : cljs.core.chunked_seq.call(null,G__34578,G__34579,G__34580,G__34581));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__34582 = self__.vec;
var G__34583 = self__.node;
var G__34584 = self__.i;
var G__34585 = self__.off;
var G__34586 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__34582,G__34583,G__34584,G__34585,G__34586) : cljs.core.chunked_seq.call(null,G__34582,G__34583,G__34584,G__34585,G__34586));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__34587 = self__.vec;
var G__34588 = cljs.core.unchecked_array_for(self__.vec,end);
var G__34589 = end;
var G__34590 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34587,G__34588,G__34589,G__34590) : cljs.core.chunked_seq.call(null,G__34587,G__34588,G__34589,G__34590));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__34592 = init__$1;
var G__34593 = j;
var G__34594 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34592,G__34593,G__34594) : f.call(null,G__34592,G__34593,G__34594));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34595 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34595) : cljs.core.deref.call(null,G__34595));
} else {
var G__34617 = (i + (1));
var G__34618 = (j + (1));
var G__34619 = init__$2;
i = G__34617;
j = G__34618;
init__$1 = G__34619;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__34596 = self__.meta;
var G__34597 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__34598 = self__.start;
var G__34599 = (function (){var x__24489__auto__ = self__.end;
var y__24490__auto__ = (v_pos + (1));
return ((x__24489__auto__ > y__24490__auto__) ? x__24489__auto__ : y__24490__auto__);
})();
var G__34600 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34596,G__34597,G__34598,G__34599,G__34600) : cljs.core.build_subvec.call(null,G__34596,G__34597,G__34598,G__34599,G__34600));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__34601 = self__.meta;
var G__34602 = self__.v;
var G__34603 = self__.start;
var G__34604 = (self__.end - (1));
var G__34605 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34601,G__34602,G__34603,G__34604,G__34605) : cljs.core.build_subvec.call(null,G__34601,G__34602,G__34603,G__34604,G__34605));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__34607 = meta__$1;
var G__34608 = self__.v;
var G__34609 = self__.start;
var G__34610 = self__.end;
var G__34611 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34607,G__34608,G__34609,G__34610,G__34611) : cljs.core.build_subvec.call(null,G__34607,G__34608,G__34609,G__34610,G__34611));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__34612 = self__.meta;
var G__34613 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__34614 = self__.start;
var G__34615 = (self__.end + (1));
var G__34616 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34612,G__34613,G__34614,G__34615,G__34616) : cljs.core.build_subvec.call(null,G__34612,G__34613,G__34614,G__34615,G__34616));
});

cljs.core.Subvec.prototype.call = (function() {
var G__34620 = null;
var G__34620__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__34620__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__34620 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34620__2.call(this,self__,k);
case 3:
return G__34620__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34620.cljs$core$IFn$_invoke$arity$2 = G__34620__2;
G__34620.cljs$core$IFn$_invoke$arity$3 = G__34620__3;
return G__34620;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args34591){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34591)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__34621 = meta;
var G__34622 = v.v;
var G__34623 = (v.start + start);
var G__34624 = (v.start + end);
var G__34625 = __hash;
meta = G__34621;
v = G__34622;
start = G__34623;
end = G__34624;
__hash = G__34625;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj34632 = {};
return obj34632;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__34640 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__34641 = (level - (5));
node = G__34640;
level = G__34641;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__34645 = null;
var G__34645__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34645__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34645 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34645__2.call(this,self__,k);
case 3:
return G__34645__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34645.cljs$core$IFn$_invoke$arity$2 = G__34645__2;
G__34645.cljs$core$IFn$_invoke$arity$3 = G__34645__3;
return G__34645;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args34642){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34642)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24177__auto__ = self__.front;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24177__auto__ = self__.rear;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__34646 = (i + incr);
i = G__34646;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__34647 = (i + (1));
var G__34648 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__34647;
out = G__34648;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj34652 = {};
return obj34652;
})();
var l = ks.length;
var i_34653 = (0);
while(true){
if((i_34653 < l)){
var k_34654 = (ks[i_34653]);
(new_obj[k_34654] = (obj[k_34654]));

var G__34655 = (i_34653 + (1));
i_34653 = G__34655;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24165__auto__ = (function (){var G__34659 = k;
return goog.isString(G__34659);
})();
if(cljs.core.truth_(and__24165__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24165__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__34660 = init__$1;
var G__34661 = k;
var G__34662 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34660,G__34661,G__34662) : f.call(null,G__34660,G__34661,G__34662));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34663 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34663) : cljs.core.deref.call(null,G__34663));
} else {
var G__34669 = cljs.core.rest(keys__$1);
var G__34670 = init__$2;
keys__$1 = G__34669;
init__$1 = G__34670;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24165__auto__ = (function (){var G__34665 = k;
return goog.isString(G__34665);
})();
if(cljs.core.truth_(and__24165__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24165__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__34666 = k;
return goog.isString(G__34666);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24165__auto__ = (function (){var G__34668 = k;
return goog.isString(G__34668);
})();
if(cljs.core.truth_(and__24165__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24165__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__34656_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__34656_SHARP_,(self__.strobj[p1__34656_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__34671 = null;
var G__34671__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34671__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34671 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34671__2.call(this,self__,k);
case 3:
return G__34671__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34671.cljs$core$IFn$_invoke$arity$2 = G__34671__2;
G__34671.cljs$core$IFn$_invoke$arity$3 = G__34671__3;
return G__34671;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args34657){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34657)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj34673 = {};
return obj34673;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__34674 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34674,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34674,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__34675 = (i + (2));
i = G__34675;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__34676 = (i + (2));
i = G__34676;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__34677 = (i + (2));
i = G__34677;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__34678 = (i + (2));
i = G__34678;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__34679 = (i + (2));
i = G__34679;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24177__auto__ = (function (){var G__34683 = k;
return goog.isString(G__34683);
})();
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_34684 = (0);
while(true){
if((i_34684 < l)){
(narr[i_34684] = (arr[i_34684]));

var G__34685 = (i_34684 + (1));
i_34684 = G__34685;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34687 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__34687) : cljs.core.keys.call(null,G__34687));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34688 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__34688) : cljs.core.vals.call(null,G__34688));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34689 = cljs.core.seq(coll);
var chunk__34690 = null;
var count__34691 = (0);
var i__34692 = (0);
while(true){
if((i__34692 < count__34691)){
var vec__34693 = chunk__34690.cljs$core$IIndexed$_nth$arity$2(null,i__34692);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34693,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34693,(1),null);
var G__34694_34707 = v;
var G__34695_34708 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34694_34707,G__34695_34708) : f.call(null,G__34694_34707,G__34695_34708));

var G__34709 = seq__34689;
var G__34710 = chunk__34690;
var G__34711 = count__34691;
var G__34712 = (i__34692 + (1));
seq__34689 = G__34709;
chunk__34690 = G__34710;
count__34691 = G__34711;
i__34692 = G__34712;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34689);
if(temp__4126__auto__){
var seq__34689__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34689__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__34689__$1);
var G__34713 = cljs.core.chunk_rest(seq__34689__$1);
var G__34714 = c__24962__auto__;
var G__34715 = cljs.core.count(c__24962__auto__);
var G__34716 = (0);
seq__34689 = G__34713;
chunk__34690 = G__34714;
count__34691 = G__34715;
i__34692 = G__34716;
continue;
} else {
var vec__34696 = cljs.core.first(seq__34689__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34696,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34696,(1),null);
var G__34697_34717 = v;
var G__34698_34718 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34697_34717,G__34698_34718) : f.call(null,G__34697_34717,G__34698_34718));

var G__34719 = cljs.core.next(seq__34689__$1);
var G__34720 = null;
var G__34721 = (0);
var G__34722 = (0);
seq__34689 = G__34719;
chunk__34690 = G__34720;
count__34691 = G__34721;
i__34692 = G__34722;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__34699 = init__$1;
var G__34700 = (self__.arr[i]);
var G__34701 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34699,G__34700,G__34701) : f.call(null,G__34699,G__34700,G__34701));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34702 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34702) : cljs.core.deref.call(null,G__34702));
} else {
var G__34723 = (i + (2));
var G__34724 = init__$2;
i = G__34723;
init__$1 = G__34724;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__34703 = other;
if(G__34703){
var bit__24844__auto__ = (G__34703.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24844__auto__) || (G__34703.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__34725 = (i + (2));
i = G__34725;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj34705 = {};
return obj34705;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__34726 = (s + (2));
var G__34727 = d;
s = G__34726;
d = G__34727;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__34728 = (s + (2));
var G__34729 = (d + (2));
s = G__34728;
d = G__34729;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__34706 = cljs.core.aclone(self__.arr);
(G__34706[(idx + (1))] = v);

return G__34706;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34730 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34731 = cljs.core.next(es);
ret = G__34730;
es = G__34731;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__34732 = null;
var G__34732__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34732__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34732 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34732__2.call(this,self__,k);
case 3:
return G__34732__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34732.cljs$core$IFn$_invoke$arity$2 = G__34732__2;
G__34732.cljs$core$IFn$_invoke$arity$3 = G__34732__3;
return G__34732;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args34686){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34686)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__34733 = (i + (2));
var G__34734 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__34733;
ret = G__34734;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__34735_34743 = self__.arr;
G__34735_34743.pop();

G__34735_34743.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__34736 = self__.len;
var G__34737 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__34736,G__34737) : cljs.core.array__GT_transient_hash_map.call(null,G__34736,G__34737));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__34738 = o;
if(G__34738){
var bit__24851__auto__ = (G__34738.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24851__auto__) || (G__34738.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__34738.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34738);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34738);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__34739 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34739) : cljs.core.key.call(null,G__34739));
})(),(function (){var G__34740 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34740) : cljs.core.val.call(null,G__34740));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__34744 = cljs.core.next(es);
var G__34745 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__34741 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34741) : cljs.core.key.call(null,G__34741));
})(),(function (){var G__34742 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34742) : cljs.core.val.call(null,G__34742));
})());
es = G__34744;
tcoll__$2 = G__34745;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__34746 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__34747 = (i + (2));
out = G__34746;
i = G__34747;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__34750 = cljs.core.aclone(arr);
(G__34750[i] = a);

return G__34750;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__34751 = cljs.core.aclone(arr);
(G__34751[i] = a);

(G__34751[j] = b);

return G__34751;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__34756 = init__$1;
var G__34757 = k;
var G__34758 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34756,G__34757,G__34758) : f.call(null,G__34756,G__34757,G__34758));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34759 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34759) : cljs.core.deref.call(null,G__34759));
} else {
var G__34760 = (i + (2));
var G__34761 = init__$2;
i = G__34760;
init__$1 = G__34761;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__34762 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__34762) : cljs.core.create_inode_seq.call(null,G__34762));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_34776 = (0);
var j_34777 = (0);
while(true){
if((i_34776 < (32))){
if((((self__.bitmap >>> i_34776) & (1)) === (0))){
var G__34778 = (i_34776 + (1));
var G__34779 = j_34777;
i_34776 = G__34778;
j_34777 = G__34779;
continue;
} else {
(nodes[i_34776] = ((!(((self__.arr[j_34777]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_34777])),(self__.arr[j_34777]),(self__.arr[(j_34777 + (1))]),added_leaf_QMARK_):(self__.arr[(j_34777 + (1))])));

var G__34780 = (i_34776 + (1));
var G__34781 = (j_34777 + (2));
i_34776 = G__34780;
j_34777 = G__34781;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__34763 = edit__$1;
var G__34764 = (shift + (5));
var G__34765 = key_or_nil;
var G__34766 = val_or_node;
var G__34767 = hash;
var G__34768 = key;
var G__34769 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__34763,G__34764,G__34765,G__34766,G__34767,G__34768,G__34769) : cljs.core.create_node.call(null,G__34763,G__34764,G__34765,G__34766,G__34767,G__34768,G__34769));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_34782 = (0);
var j_34783 = (0);
while(true){
if((i_34782 < (32))){
if((((self__.bitmap >>> i_34782) & (1)) === (0))){
var G__34784 = (i_34782 + (1));
var G__34785 = j_34783;
i_34782 = G__34784;
j_34783 = G__34785;
continue;
} else {
(nodes[i_34782] = ((!(((self__.arr[j_34783]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_34783])),(self__.arr[j_34783]),(self__.arr[(j_34783 + (1))]),added_leaf_QMARK_):(self__.arr[(j_34783 + (1))])));

var G__34786 = (i_34782 + (1));
var G__34787 = (j_34783 + (2));
i_34782 = G__34786;
j_34783 = G__34787;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__34770 = (shift + (5));
var G__34771 = key_or_nil;
var G__34772 = val_or_node;
var G__34773 = hash;
var G__34774 = key;
var G__34775 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__34770,G__34771,G__34772,G__34773,G__34774,G__34775) : cljs.core.create_node.call(null,G__34770,G__34771,G__34772,G__34773,G__34774,G__34775));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__34788 = (i + (1));
var G__34789 = (j + (2));
var G__34790 = (bitmap | ((1) << i));
i = G__34788;
j = G__34789;
bitmap = G__34790;
continue;
} else {
var G__34791 = (i + (1));
var G__34792 = j;
var G__34793 = bitmap;
i = G__34791;
j = G__34792;
bitmap = G__34793;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__34794 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__34794) : cljs.core.create_array_node_seq.call(null,G__34794));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34795 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34795) : cljs.core.deref.call(null,G__34795));
} else {
var G__34796 = (i + (1));
var G__34797 = init__$2;
i = G__34796;
init__$1 = G__34797;
continue;
}
} else {
var G__34798 = (i + (1));
var G__34799 = init__$1;
i = G__34798;
init__$1 = G__34799;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__34800 = (i + (2));
i = G__34800;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__34801 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__34801) : cljs.core.create_inode_seq.call(null,G__34801));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__34802 = self__.nodes;
var G__34803 = (self__.i + (2));
var G__34804 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__34802,G__34803,G__34804) : cljs.core.create_inode_seq.call(null,G__34802,G__34803,G__34804));
} else {
var G__34805 = self__.nodes;
var G__34806 = self__.i;
var G__34807 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__34805,G__34806,G__34807) : cljs.core.create_inode_seq.call(null,G__34805,G__34806,G__34807));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__34811 = (j + (2));
j = G__34811;
continue;
}
} else {
var G__34812 = (j + (2));
j = G__34812;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__34813 = null;
var G__34814 = self__.nodes;
var G__34815 = self__.i;
var G__34816 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__34813,G__34814,G__34815,G__34816) : cljs.core.create_array_node_seq.call(null,G__34813,G__34814,G__34815,G__34816));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__34821 = (j + (1));
j = G__34821;
continue;
}
} else {
var G__34822 = (j + (1));
j = G__34822;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34824 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__34824) : cljs.core.keys.call(null,G__34824));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34825 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__34825) : cljs.core.vals.call(null,G__34825));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34826 = cljs.core.seq(coll);
var chunk__34827 = null;
var count__34828 = (0);
var i__34829 = (0);
while(true){
if((i__34829 < count__34828)){
var vec__34830 = chunk__34827.cljs$core$IIndexed$_nth$arity$2(null,i__34829);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34830,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34830,(1),null);
var G__34831_34842 = v;
var G__34832_34843 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34831_34842,G__34832_34843) : f.call(null,G__34831_34842,G__34832_34843));

var G__34844 = seq__34826;
var G__34845 = chunk__34827;
var G__34846 = count__34828;
var G__34847 = (i__34829 + (1));
seq__34826 = G__34844;
chunk__34827 = G__34845;
count__34828 = G__34846;
i__34829 = G__34847;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34826);
if(temp__4126__auto__){
var seq__34826__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34826__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__34826__$1);
var G__34848 = cljs.core.chunk_rest(seq__34826__$1);
var G__34849 = c__24962__auto__;
var G__34850 = cljs.core.count(c__24962__auto__);
var G__34851 = (0);
seq__34826 = G__34848;
chunk__34827 = G__34849;
count__34828 = G__34850;
i__34829 = G__34851;
continue;
} else {
var vec__34833 = cljs.core.first(seq__34826__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34833,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34833,(1),null);
var G__34834_34852 = v;
var G__34835_34853 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34834_34852,G__34835_34853) : f.call(null,G__34834_34852,G__34835_34853));

var G__34854 = cljs.core.next(seq__34826__$1);
var G__34855 = null;
var G__34856 = (0);
var G__34857 = (0);
seq__34826 = G__34854;
chunk__34827 = G__34855;
count__34828 = G__34856;
i__34829 = G__34857;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__34836 = init;
var G__34837 = null;
var G__34838 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34836,G__34837,G__34838) : f.call(null,G__34836,G__34837,G__34838));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__34839 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34839) : cljs.core.deref.call(null,G__34839));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj34841 = {};
return obj34841;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34858 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34859 = cljs.core.next(es);
ret = G__34858;
es = G__34859;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__34860 = null;
var G__34860__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34860__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34860 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34860__2.call(this,self__,k);
case 3:
return G__34860__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34860.cljs$core$IFn$_invoke$arity$2 = G__34860__2;
G__34860.cljs$core$IFn$_invoke$arity$3 = G__34860__3;
return G__34860;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args34823){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34823)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__34861 = (i + (2));
var G__34862 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__34861;
ret = G__34862;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__34863 = (i + (1));
var G__34864 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__34863;
out = G__34864;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__34865 = o;
if(G__34865){
var bit__24851__auto__ = (G__34865.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24851__auto__) || (G__34865.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__34865.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34865);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34865);
}
})()){
return tcoll.assoc_BANG_((function (){var G__34866 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34866) : cljs.core.key.call(null,G__34866));
})(),(function (){var G__34867 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34867) : cljs.core.val.call(null,G__34867));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__34870 = cljs.core.next(es);
var G__34871 = tcoll__$1.assoc_BANG_((function (){var G__34868 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34868) : cljs.core.key.call(null,G__34868));
})(),(function (){var G__34869 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34869) : cljs.core.val.call(null,G__34869));
})());
es = G__34870;
tcoll__$1 = G__34871;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__34872 = ((ascending_QMARK_)?t.left:t.right);
var G__34873 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__34872;
stack__$1 = G__34873;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__34886 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34886) : cljs.core.deref.call(null,G__34886));
} else {
var init__$2 = (function (){var G__34887 = init__$1;
var G__34888 = node.key;
var G__34889 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34887,G__34888,G__34889) : f.call(null,G__34887,G__34888,G__34889));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34890 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34890) : cljs.core.deref.call(null,G__34890));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__34891 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34891) : cljs.core.deref.call(null,G__34891));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__34893 = null;
var G__34893__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34893__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34893 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34893__2.call(this,self__,k);
case 3:
return G__34893__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34893.cljs$core$IFn$_invoke$arity$2 = G__34893__2;
G__34893.cljs$core$IFn$_invoke$arity$3 = G__34893__3;
return G__34893;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args34892){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34892)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__34895 = null;
var G__34895__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34895__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34895 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34895__2.call(this,self__,k);
case 3:
return G__34895__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34895.cljs$core$IFn$_invoke$arity$2 = G__34895__2;
G__34895.cljs$core$IFn$_invoke$arity$3 = G__34895__3;
return G__34895;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args34894){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34894)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__34908 = k;
var G__34909 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34908,G__34909) : comp.call(null,G__34908,G__34909));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__34928 = k;
var G__34929 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34928,G__34929) : comp.call(null,G__34928,G__34929));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__34940 = k;
var G__34941 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__34940,G__34941) : comp.call(null,G__34940,G__34941));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34943 = cljs.core.seq(coll);
var chunk__34944 = null;
var count__34945 = (0);
var i__34946 = (0);
while(true){
if((i__34946 < count__34945)){
var vec__34947 = chunk__34944.cljs$core$IIndexed$_nth$arity$2(null,i__34946);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34947,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34947,(1),null);
var G__34948_34960 = v;
var G__34949_34961 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34948_34960,G__34949_34961) : f.call(null,G__34948_34960,G__34949_34961));

var G__34962 = seq__34943;
var G__34963 = chunk__34944;
var G__34964 = count__34945;
var G__34965 = (i__34946 + (1));
seq__34943 = G__34962;
chunk__34944 = G__34963;
count__34945 = G__34964;
i__34946 = G__34965;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34943);
if(temp__4126__auto__){
var seq__34943__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34943__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__34943__$1);
var G__34966 = cljs.core.chunk_rest(seq__34943__$1);
var G__34967 = c__24962__auto__;
var G__34968 = cljs.core.count(c__24962__auto__);
var G__34969 = (0);
seq__34943 = G__34966;
chunk__34944 = G__34967;
count__34945 = G__34968;
i__34946 = G__34969;
continue;
} else {
var vec__34950 = cljs.core.first(seq__34943__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34950,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34950,(1),null);
var G__34951_34970 = v;
var G__34952_34971 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34951_34970,G__34952_34971) : f.call(null,G__34951_34970,G__34952_34971));

var G__34972 = cljs.core.next(seq__34943__$1);
var G__34973 = null;
var G__34974 = (0);
var G__34975 = (0);
seq__34943 = G__34972;
chunk__34944 = G__34973;
count__34945 = G__34974;
i__34946 = G__34975;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34953 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__34953) : cljs.core.keys.call(null,G__34953));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34954 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__34954) : cljs.core.vals.call(null,G__34954));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__34955 = k;
var G__34956 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__34955,G__34956) : self__.comp.call(null,G__34955,G__34956));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__34976 = t.left;
t = G__34976;
continue;
} else {
var G__34977 = t.right;
t = G__34977;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34978 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34979 = cljs.core.next(es);
ret = G__34978;
es = G__34979;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__34980 = null;
var G__34980__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34980__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34980 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34980__2.call(this,self__,k);
case 3:
return G__34980__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34980.cljs$core$IFn$_invoke$arity$2 = G__34980__2;
G__34980.cljs$core$IFn$_invoke$arity$3 = G__34980__3;
return G__34980;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args34942){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34942)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__34957 = k;
var G__34958 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__34957,G__34958) : self__.comp.call(null,G__34957,G__34958));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__34981 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__34982 = t.left;
stack = G__34981;
t = G__34982;
continue;
} else {
var G__34983 = stack;
var G__34984 = t.right;
stack = G__34983;
t = G__34984;
continue;
}
} else {
if((c > (0))){
var G__34985 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__34986 = t.right;
stack = G__34985;
t = G__34986;
continue;
} else {
var G__34987 = stack;
var G__34988 = t.left;
stack = G__34987;
t = G__34988;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__34959 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34959) : cljs.core.key.call(null,G__34959));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__34989 = cljs.core.nnext(in$);
var G__34990 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__34989;
out = G__34990;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34991__i = 0, G__34991__a = new Array(arguments.length -  0);
while (G__34991__i < G__34991__a.length) {G__34991__a[G__34991__i] = arguments[G__34991__i + 0]; ++G__34991__i;}
  keyvals = new cljs.core.IndexedSeq(G__34991__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__34992){
var keyvals = cljs.core.seq(arglist__34992);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__34993__i = 0, G__34993__a = new Array(arguments.length -  0);
while (G__34993__i < G__34993__a.length) {G__34993__a[G__34993__i] = arguments[G__34993__i + 0]; ++G__34993__i;}
  keyvals = new cljs.core.IndexedSeq(G__34993__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__34994){
var keyvals = cljs.core.seq(arglist__34994);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj34998 = {};
return obj34998;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__34999 = cljs.core.nnext(kvs);
kvs = G__34999;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35000__i = 0, G__35000__a = new Array(arguments.length -  0);
while (G__35000__i < G__35000__a.length) {G__35000__a[G__35000__i] = arguments[G__35000__i + 0]; ++G__35000__i;}
  keyvals = new cljs.core.IndexedSeq(G__35000__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__35001){
var keyvals = cljs.core.seq(arglist__35001);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__35002 = cljs.core.nnext(in$);
var G__35003 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__35002;
out = G__35003;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35004__i = 0, G__35004__a = new Array(arguments.length -  0);
while (G__35004__i < G__35004__a.length) {G__35004__a[G__35004__i] = arguments[G__35004__i + 0]; ++G__35004__i;}
  keyvals = new cljs.core.IndexedSeq(G__35004__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__35005){
var keyvals = cljs.core.seq(arglist__35005);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__35006 = cljs.core.nnext(in$);
var G__35007 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__35006;
out = G__35007;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__35008__i = 0, G__35008__a = new Array(arguments.length -  1);
while (G__35008__i < G__35008__a.length) {G__35008__a[G__35008__i] = arguments[G__35008__i + 1]; ++G__35008__i;}
  keyvals = new cljs.core.IndexedSeq(G__35008__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__35009){
var comparator = cljs.core.first(arglist__35009);
var keyvals = cljs.core.rest(arglist__35009);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35010 = self__.mseq;
if(G__35010){
var bit__24851__auto__ = (G__35010.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24851__auto__) || (G__35010.cljs$core$INext$)){
return true;
} else {
if((!G__35010.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35010);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35010);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35011 = self__.mseq;
if(G__35011){
var bit__24851__auto__ = (G__35011.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24851__auto__) || (G__35011.cljs$core$INext$)){
return true;
} else {
if((!G__35011.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35011);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35011);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35012 = self__.mseq;
if(G__35012){
var bit__24851__auto__ = (G__35012.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24851__auto__) || (G__35012.cljs$core$INext$)){
return true;
} else {
if((!G__35012.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35012);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35012);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35013 = self__.mseq;
if(G__35013){
var bit__24851__auto__ = (G__35013.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24851__auto__) || (G__35013.cljs$core$INext$)){
return true;
} else {
if((!G__35013.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35013);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35013);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__35014_SHARP_,p2__35015_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24177__auto__ = p1__35014_SHARP_;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__35015_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__35016__i = 0, G__35016__a = new Array(arguments.length -  0);
while (G__35016__i < G__35016__a.length) {G__35016__a[G__35016__i] = arguments[G__35016__i + 0]; ++G__35016__i;}
  maps = new cljs.core.IndexedSeq(G__35016__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__35017){
var maps = cljs.core.seq(arglist__35017);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35020 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35021 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35020,G__35021) : f.call(null,G__35020,G__35021));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24177__auto__ = m1;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__35022__i = 0, G__35022__a = new Array(arguments.length -  1);
while (G__35022__i < G__35022__a.length) {G__35022__a[G__35022__i] = arguments[G__35022__i + 1]; ++G__35022__i;}
  maps = new cljs.core.IndexedSeq(G__35022__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__35023){
var f = cljs.core.first(arglist__35023);
var maps = cljs.core.rest(arglist__35023);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$cljs$core_SLASH_not_DASH_found);
var G__35024 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$cljs$core_SLASH_not_DASH_found))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__35025 = cljs.core.next(keys);
ret = G__35024;
keys = G__35025;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35028 = cljs.core.seq(coll);
var chunk__35029 = null;
var count__35030 = (0);
var i__35031 = (0);
while(true){
if((i__35031 < count__35030)){
var vec__35032 = chunk__35029.cljs$core$IIndexed$_nth$arity$2(null,i__35031);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35032,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35032,(1),null);
var G__35033_35038 = v;
var G__35034_35039 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35033_35038,G__35034_35039) : f.call(null,G__35033_35038,G__35034_35039));

var G__35040 = seq__35028;
var G__35041 = chunk__35029;
var G__35042 = count__35030;
var G__35043 = (i__35031 + (1));
seq__35028 = G__35040;
chunk__35029 = G__35041;
count__35030 = G__35042;
i__35031 = G__35043;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35028);
if(temp__4126__auto__){
var seq__35028__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35028__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35028__$1);
var G__35044 = cljs.core.chunk_rest(seq__35028__$1);
var G__35045 = c__24962__auto__;
var G__35046 = cljs.core.count(c__24962__auto__);
var G__35047 = (0);
seq__35028 = G__35044;
chunk__35029 = G__35045;
count__35030 = G__35046;
i__35031 = G__35047;
continue;
} else {
var vec__35035 = cljs.core.first(seq__35028__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35035,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35035,(1),null);
var G__35036_35048 = v;
var G__35037_35049 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35036_35048,G__35037_35049) : f.call(null,G__35036_35048,G__35037_35049));

var G__35050 = cljs.core.next(seq__35028__$1);
var G__35051 = null;
var G__35052 = (0);
var G__35053 = (0);
seq__35028 = G__35050;
chunk__35029 = G__35051;
count__35030 = G__35052;
i__35031 = G__35053;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__35026_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__35026_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__35054 = null;
var G__35054__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35054__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35054 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35054__2.call(this,self__,k);
case 3:
return G__35054__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35054.cljs$core$IFn$_invoke$arity$2 = G__35054__2;
G__35054.cljs$core$IFn$_invoke$arity$3 = G__35054__3;
return G__35054;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args35027){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35027)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__35055 = (i + (1));
var G__35056 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__35055;
out = G__35056;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__35057 = (i + (1));
var G__35058 = cljs.core._conj_BANG_(out,(items[i]));
i = G__35057;
out = G__35058;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__35060 = null;
var G__35060__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__35060__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__35060 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35060__2.call(this,self__,k);
case 3:
return G__35060__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35060.cljs$core$IFn$_invoke$arity$2 = G__35060__2;
G__35060.cljs$core$IFn$_invoke$arity$3 = G__35060__3;
return G__35060;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args35059){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35059)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35063 = cljs.core.seq(coll);
var chunk__35064 = null;
var count__35065 = (0);
var i__35066 = (0);
while(true){
if((i__35066 < count__35065)){
var vec__35067 = chunk__35064.cljs$core$IIndexed$_nth$arity$2(null,i__35066);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35067,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35067,(1),null);
var G__35068_35073 = v;
var G__35069_35074 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35068_35073,G__35069_35074) : f.call(null,G__35068_35073,G__35069_35074));

var G__35075 = seq__35063;
var G__35076 = chunk__35064;
var G__35077 = count__35065;
var G__35078 = (i__35066 + (1));
seq__35063 = G__35075;
chunk__35064 = G__35076;
count__35065 = G__35077;
i__35066 = G__35078;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35063);
if(temp__4126__auto__){
var seq__35063__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35063__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35063__$1);
var G__35079 = cljs.core.chunk_rest(seq__35063__$1);
var G__35080 = c__24962__auto__;
var G__35081 = cljs.core.count(c__24962__auto__);
var G__35082 = (0);
seq__35063 = G__35079;
chunk__35064 = G__35080;
count__35065 = G__35081;
i__35066 = G__35082;
continue;
} else {
var vec__35070 = cljs.core.first(seq__35063__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35070,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35070,(1),null);
var G__35071_35083 = v;
var G__35072_35084 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35071_35083,G__35072_35084) : f.call(null,G__35071_35083,G__35072_35084));

var G__35085 = cljs.core.next(seq__35063__$1);
var G__35086 = null;
var G__35087 = (0);
var G__35088 = (0);
seq__35063 = G__35085;
chunk__35064 = G__35086;
count__35065 = G__35087;
i__35066 = G__35088;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__35061_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__35061_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__35089 = null;
var G__35089__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35089__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35089 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35089__2.call(this,self__,k);
case 3:
return G__35089__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35089.cljs$core$IFn$_invoke$arity$2 = G__35089__2;
G__35089.cljs$core$IFn$_invoke$arity$3 = G__35089__3;
return G__35089;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args35062){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35062)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25056__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25056__auto__.length)){
var G__35090 = (i + (1));
var G__35091 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__35090;
res = G__35091;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__35092 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__35093 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__35092;
out = G__35093;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__35094__delegate = function (keys){
return cljs.core.set(keys);
};
var G__35094 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__35095__i = 0, G__35095__a = new Array(arguments.length -  0);
while (G__35095__i < G__35095__a.length) {G__35095__a[G__35095__i] = arguments[G__35095__i + 0]; ++G__35095__i;}
  keys = new cljs.core.IndexedSeq(G__35095__a,0);
} 
return G__35094__delegate.call(this,keys);};
G__35094.cljs$lang$maxFixedArity = 0;
G__35094.cljs$lang$applyTo = (function (arglist__35096){
var keys = cljs.core.seq(arglist__35096);
return G__35094__delegate(keys);
});
G__35094.cljs$core$IFn$_invoke$arity$variadic = G__35094__delegate;
return G__35094;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__35097 = null;
if (arguments.length > 0) {
var G__35098__i = 0, G__35098__a = new Array(arguments.length -  0);
while (G__35098__i < G__35098__a.length) {G__35098__a[G__35098__i] = arguments[G__35098__i + 0]; ++G__35098__i;}
G__35097 = new cljs.core.IndexedSeq(G__35098__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__35097);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__35099__i = 0, G__35099__a = new Array(arguments.length -  0);
while (G__35099__i < G__35099__a.length) {G__35099__a[G__35099__i] = arguments[G__35099__i + 0]; ++G__35099__i;}
  keys = new cljs.core.IndexedSeq(G__35099__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__35100){
var keys = cljs.core.seq(arglist__35100);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__35101__i = 0, G__35101__a = new Array(arguments.length -  1);
while (G__35101__i < G__35101__a.length) {G__35101__a[G__35101__i] = arguments[G__35101__i + 1]; ++G__35101__i;}
  keys = new cljs.core.IndexedSeq(G__35101__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__35102){
var comparator = cljs.core.first(arglist__35102);
var keys = cljs.core.rest(arglist__35102);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__35103_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__35103_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__35103_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__35104_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__35104_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__35104_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__35125 = null;
var G__35125__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35125__1 = (function (result){
var G__35115 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35115) : rf.call(null,G__35115));
});
var G__35125__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__35116 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35116) : cljs.core.deref.call(null,G__35116));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__35117 = result;
var G__35118 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35117,G__35118) : rf.call(null,G__35117,G__35118));
}
});
G__35125 = function(result,input){
switch(arguments.length){
case 0:
return G__35125__0.call(this);
case 1:
return G__35125__1.call(this,result);
case 2:
return G__35125__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35125.cljs$core$IFn$_invoke$arity$0 = G__35125__0;
G__35125.cljs$core$IFn$_invoke$arity$1 = G__35125__1;
G__35125.cljs$core$IFn$_invoke$arity$2 = G__35125__2;
return G__35125;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__35123,seen__$1){
while(true){
var vec__35124 = p__35123;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35124,(0),null);
var xs__$1 = vec__35124;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__35126 = cljs.core.rest(s);
var G__35127 = seen__$1;
p__35123 = G__35126;
seen__$1 = G__35127;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__35128 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__35129 = cljs.core.next(s__$1);
ret = G__35128;
s__$1 = G__35129;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__35131 = x;
if(G__35131){
var bit__24844__auto__ = (G__35131.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24844__auto__) || (G__35131.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__35132 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__35133 = cljs.core.next(ks);
var G__35134 = cljs.core.next(vs);
map = G__35132;
ks = G__35133;
vs = G__35134;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__35145 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35145) : k.call(null,G__35145));
})() > (function (){var G__35146 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35146) : k.call(null,G__35146));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__35147__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35135_SHARP_,p2__35136_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__35135_SHARP_,p2__35136_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__35147 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__35148__i = 0, G__35148__a = new Array(arguments.length -  3);
while (G__35148__i < G__35148__a.length) {G__35148__a[G__35148__i] = arguments[G__35148__i + 3]; ++G__35148__i;}
  more = new cljs.core.IndexedSeq(G__35148__a,0);
} 
return G__35147__delegate.call(this,k,x,y,more);};
G__35147.cljs$lang$maxFixedArity = 3;
G__35147.cljs$lang$applyTo = (function (arglist__35149){
var k = cljs.core.first(arglist__35149);
arglist__35149 = cljs.core.next(arglist__35149);
var x = cljs.core.first(arglist__35149);
arglist__35149 = cljs.core.next(arglist__35149);
var y = cljs.core.first(arglist__35149);
var more = cljs.core.rest(arglist__35149);
return G__35147__delegate(k,x,y,more);
});
G__35147.cljs$core$IFn$_invoke$arity$variadic = G__35147__delegate;
return G__35147;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__35150 = null;
if (arguments.length > 3) {
var G__35151__i = 0, G__35151__a = new Array(arguments.length -  3);
while (G__35151__i < G__35151__a.length) {G__35151__a[G__35151__i] = arguments[G__35151__i + 3]; ++G__35151__i;}
G__35150 = new cljs.core.IndexedSeq(G__35151__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__35150);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__35162 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35162) : k.call(null,G__35162));
})() < (function (){var G__35163 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35163) : k.call(null,G__35163));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__35164__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35152_SHARP_,p2__35153_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__35152_SHARP_,p2__35153_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__35164 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__35165__i = 0, G__35165__a = new Array(arguments.length -  3);
while (G__35165__i < G__35165__a.length) {G__35165__a[G__35165__i] = arguments[G__35165__i + 3]; ++G__35165__i;}
  more = new cljs.core.IndexedSeq(G__35165__a,0);
} 
return G__35164__delegate.call(this,k,x,y,more);};
G__35164.cljs$lang$maxFixedArity = 3;
G__35164.cljs$lang$applyTo = (function (arglist__35166){
var k = cljs.core.first(arglist__35166);
arglist__35166 = cljs.core.next(arglist__35166);
var x = cljs.core.first(arglist__35166);
arglist__35166 = cljs.core.next(arglist__35166);
var y = cljs.core.first(arglist__35166);
var more = cljs.core.rest(arglist__35166);
return G__35164__delegate(k,x,y,more);
});
G__35164.cljs$core$IFn$_invoke$arity$variadic = G__35164__delegate;
return G__35164;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__35167 = null;
if (arguments.length > 3) {
var G__35168__i = 0, G__35168__a = new Array(arguments.length -  3);
while (G__35168__i < G__35168__a.length) {G__35168__a[G__35168__i] = arguments[G__35168__i + 3]; ++G__35168__i;}
G__35167 = new cljs.core.IndexedSeq(G__35168__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__35167);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__35185 = null;
var G__35185__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35185__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__35180 = result;
var G__35181 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35180,G__35181) : rf.call(null,G__35180,G__35181));
})());
})());
var G__35182 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35182) : rf.call(null,G__35182));
});
var G__35185__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__35183 = result;
var G__35184 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35183,G__35184) : rf.call(null,G__35183,G__35184));
} else {
return result;
}
});
G__35185 = function(result,input){
switch(arguments.length){
case 0:
return G__35185__0.call(this);
case 1:
return G__35185__1.call(this,result);
case 2:
return G__35185__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35185.cljs$core$IFn$_invoke$arity$0 = G__35185__0;
G__35185.cljs$core$IFn$_invoke$arity$1 = G__35185__1;
G__35185.cljs$core$IFn$_invoke$arity$2 = G__35185__2;
return G__35185;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__35198 = null;
var G__35198__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35198__1 = (function (result){
var G__35193 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35193) : rf.call(null,G__35193));
});
var G__35198__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__35194 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35194) : pred.call(null,G__35194));
})())){
var G__35195 = result;
var G__35196 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35195,G__35196) : rf.call(null,G__35195,G__35196));
} else {
return cljs.core.reduced(result);
}
});
G__35198 = function(result,input){
switch(arguments.length){
case 0:
return G__35198__0.call(this);
case 1:
return G__35198__1.call(this,result);
case 2:
return G__35198__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35198.cljs$core$IFn$_invoke$arity$0 = G__35198__0;
G__35198.cljs$core$IFn$_invoke$arity$1 = G__35198__1;
G__35198.cljs$core$IFn$_invoke$arity$2 = G__35198__2;
return G__35198;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__35197 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35197) : pred.call(null,G__35197));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__35203 = (function (){var G__35205 = cljs.core._entry_key(sc,e);
var G__35206 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35205,G__35206) : comp.call(null,G__35205,G__35206));
})();
var G__35204 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__35203,G__35204) : test.call(null,G__35203,G__35204));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35210 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35210,(0),null);
var s = vec__35210;
if(cljs.core.truth_((function (){var G__35211 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__35211) : include.call(null,G__35211));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35212 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35212,(0),null);
var s = vec__35212;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35216 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35216,(0),null);
var s = vec__35216;
if(cljs.core.truth_((function (){var G__35217 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__35217) : include.call(null,G__35217));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35218 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35218,(0),null);
var s = vec__35218;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__35219 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__35219) : Math.ceil.call(null,G__35219));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24593__auto__ = self__.__hash;
if(!((h__24593__auto__ == null))){
return h__24593__auto__;
} else {
var h__24593__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24593__auto____$1;

return h__24593__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__35220 = ret;
var G__35221 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35220,G__35221) : f.call(null,G__35220,G__35221));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__35222 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35222) : cljs.core.deref.call(null,G__35222));
} else {
var G__35223 = (i + self__.step);
var G__35224 = ret__$1;
i = G__35223;
ret = G__35224;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__35242 = null;
var G__35242__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35242__1 = (function (result){
var G__35239 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35239) : rf.call(null,G__35239));
});
var G__35242__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__35240 = result;
var G__35241 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35240,G__35241) : rf.call(null,G__35240,G__35241));
} else {
return result;
}
});
G__35242 = function(result,input){
switch(arguments.length){
case 0:
return G__35242__0.call(this);
case 1:
return G__35242__1.call(this,result);
case 2:
return G__35242__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35242.cljs$core$IFn$_invoke$arity$0 = G__35242__0;
G__35242.cljs$core$IFn$_invoke$arity$1 = G__35242__1;
G__35242.cljs$core$IFn$_invoke$arity$2 = G__35242__2;
return G__35242;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$cljs$core_SLASH_none);
return ((function (a,pa){
return (function() {
var G__35264 = null;
var G__35264__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35264__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__35255 = result;
var G__35256 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35255,G__35256) : rf.call(null,G__35255,G__35256));
})());
})());
var G__35257 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35257) : rf.call(null,G__35257));
});
var G__35264__2 = (function (result,input){
var pval = (function (){var G__35258 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35258) : cljs.core.deref.call(null,G__35258));
})();
var val = (function (){var G__35259 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35259) : f.call(null,G__35259));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$cljs$core_SLASH_none)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__35260 = result;
var G__35261 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35260,G__35261) : rf.call(null,G__35260,G__35261));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__35264 = function(result,input){
switch(arguments.length){
case 0:
return G__35264__0.call(this);
case 1:
return G__35264__1.call(this,result);
case 2:
return G__35264__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35264.cljs$core$IFn$_invoke$arity$0 = G__35264__0;
G__35264.cljs$core$IFn$_invoke$arity$1 = G__35264__1;
G__35264.cljs$core$IFn$_invoke$arity$2 = G__35264__2;
return G__35264;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__35262 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35262) : f.call(null,G__35262));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__35243_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__35263 = p1__35243_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35263) : f.call(null,G__35263));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__35273 = init;
var G__35274 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35273,G__35274) : f.call(null,G__35273,G__35274));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__35369 = null;
var G__35369__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__35369__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35327 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35327) : f.call(null,G__35327));
})()],null));
});
var G__35369__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35328 = x;
var G__35329 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35328,G__35329) : f.call(null,G__35328,G__35329));
})()],null));
});
var G__35369__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35330 = x;
var G__35331 = y;
var G__35332 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35330,G__35331,G__35332) : f.call(null,G__35330,G__35331,G__35332));
})()],null));
});
var G__35369__4 = (function() { 
var G__35370__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__35370 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35371__i = 0, G__35371__a = new Array(arguments.length -  3);
while (G__35371__i < G__35371__a.length) {G__35371__a[G__35371__i] = arguments[G__35371__i + 3]; ++G__35371__i;}
  args = new cljs.core.IndexedSeq(G__35371__a,0);
} 
return G__35370__delegate.call(this,x,y,z,args);};
G__35370.cljs$lang$maxFixedArity = 3;
G__35370.cljs$lang$applyTo = (function (arglist__35372){
var x = cljs.core.first(arglist__35372);
arglist__35372 = cljs.core.next(arglist__35372);
var y = cljs.core.first(arglist__35372);
arglist__35372 = cljs.core.next(arglist__35372);
var z = cljs.core.first(arglist__35372);
var args = cljs.core.rest(arglist__35372);
return G__35370__delegate(x,y,z,args);
});
G__35370.cljs$core$IFn$_invoke$arity$variadic = G__35370__delegate;
return G__35370;
})()
;
G__35369 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35369__0.call(this);
case 1:
return G__35369__1.call(this,x);
case 2:
return G__35369__2.call(this,x,y);
case 3:
return G__35369__3.call(this,x,y,z);
default:
var G__35373 = null;
if (arguments.length > 3) {
var G__35374__i = 0, G__35374__a = new Array(arguments.length -  3);
while (G__35374__i < G__35374__a.length) {G__35374__a[G__35374__i] = arguments[G__35374__i + 3]; ++G__35374__i;}
G__35373 = new cljs.core.IndexedSeq(G__35374__a,0);
}
return G__35369__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35373);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35369.cljs$lang$maxFixedArity = 3;
G__35369.cljs$lang$applyTo = G__35369__4.cljs$lang$applyTo;
G__35369.cljs$core$IFn$_invoke$arity$0 = G__35369__0;
G__35369.cljs$core$IFn$_invoke$arity$1 = G__35369__1;
G__35369.cljs$core$IFn$_invoke$arity$2 = G__35369__2;
G__35369.cljs$core$IFn$_invoke$arity$3 = G__35369__3;
G__35369.cljs$core$IFn$_invoke$arity$variadic = G__35369__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35369;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__35375 = null;
var G__35375__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__35375__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35333 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35333) : f.call(null,G__35333));
})(),(function (){var G__35334 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__35334) : g.call(null,G__35334));
})()],null));
});
var G__35375__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35335 = x;
var G__35336 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35335,G__35336) : f.call(null,G__35335,G__35336));
})(),(function (){var G__35337 = x;
var G__35338 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__35337,G__35338) : g.call(null,G__35337,G__35338));
})()],null));
});
var G__35375__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35339 = x;
var G__35340 = y;
var G__35341 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35339,G__35340,G__35341) : f.call(null,G__35339,G__35340,G__35341));
})(),(function (){var G__35342 = x;
var G__35343 = y;
var G__35344 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__35342,G__35343,G__35344) : g.call(null,G__35342,G__35343,G__35344));
})()],null));
});
var G__35375__4 = (function() { 
var G__35376__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__35376 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35377__i = 0, G__35377__a = new Array(arguments.length -  3);
while (G__35377__i < G__35377__a.length) {G__35377__a[G__35377__i] = arguments[G__35377__i + 3]; ++G__35377__i;}
  args = new cljs.core.IndexedSeq(G__35377__a,0);
} 
return G__35376__delegate.call(this,x,y,z,args);};
G__35376.cljs$lang$maxFixedArity = 3;
G__35376.cljs$lang$applyTo = (function (arglist__35378){
var x = cljs.core.first(arglist__35378);
arglist__35378 = cljs.core.next(arglist__35378);
var y = cljs.core.first(arglist__35378);
arglist__35378 = cljs.core.next(arglist__35378);
var z = cljs.core.first(arglist__35378);
var args = cljs.core.rest(arglist__35378);
return G__35376__delegate(x,y,z,args);
});
G__35376.cljs$core$IFn$_invoke$arity$variadic = G__35376__delegate;
return G__35376;
})()
;
G__35375 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35375__0.call(this);
case 1:
return G__35375__1.call(this,x);
case 2:
return G__35375__2.call(this,x,y);
case 3:
return G__35375__3.call(this,x,y,z);
default:
var G__35379 = null;
if (arguments.length > 3) {
var G__35380__i = 0, G__35380__a = new Array(arguments.length -  3);
while (G__35380__i < G__35380__a.length) {G__35380__a[G__35380__i] = arguments[G__35380__i + 3]; ++G__35380__i;}
G__35379 = new cljs.core.IndexedSeq(G__35380__a,0);
}
return G__35375__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35375.cljs$lang$maxFixedArity = 3;
G__35375.cljs$lang$applyTo = G__35375__4.cljs$lang$applyTo;
G__35375.cljs$core$IFn$_invoke$arity$0 = G__35375__0;
G__35375.cljs$core$IFn$_invoke$arity$1 = G__35375__1;
G__35375.cljs$core$IFn$_invoke$arity$2 = G__35375__2;
G__35375.cljs$core$IFn$_invoke$arity$3 = G__35375__3;
G__35375.cljs$core$IFn$_invoke$arity$variadic = G__35375__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35375;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__35381 = null;
var G__35381__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__35381__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35345 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35345) : f.call(null,G__35345));
})(),(function (){var G__35346 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__35346) : g.call(null,G__35346));
})(),(function (){var G__35347 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__35347) : h.call(null,G__35347));
})()],null));
});
var G__35381__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35348 = x;
var G__35349 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35348,G__35349) : f.call(null,G__35348,G__35349));
})(),(function (){var G__35350 = x;
var G__35351 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__35350,G__35351) : g.call(null,G__35350,G__35351));
})(),(function (){var G__35352 = x;
var G__35353 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__35352,G__35353) : h.call(null,G__35352,G__35353));
})()],null));
});
var G__35381__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35354 = x;
var G__35355 = y;
var G__35356 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35354,G__35355,G__35356) : f.call(null,G__35354,G__35355,G__35356));
})(),(function (){var G__35357 = x;
var G__35358 = y;
var G__35359 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__35357,G__35358,G__35359) : g.call(null,G__35357,G__35358,G__35359));
})(),(function (){var G__35360 = x;
var G__35361 = y;
var G__35362 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__35360,G__35361,G__35362) : h.call(null,G__35360,G__35361,G__35362));
})()],null));
});
var G__35381__4 = (function() { 
var G__35382__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__35382 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35383__i = 0, G__35383__a = new Array(arguments.length -  3);
while (G__35383__i < G__35383__a.length) {G__35383__a[G__35383__i] = arguments[G__35383__i + 3]; ++G__35383__i;}
  args = new cljs.core.IndexedSeq(G__35383__a,0);
} 
return G__35382__delegate.call(this,x,y,z,args);};
G__35382.cljs$lang$maxFixedArity = 3;
G__35382.cljs$lang$applyTo = (function (arglist__35384){
var x = cljs.core.first(arglist__35384);
arglist__35384 = cljs.core.next(arglist__35384);
var y = cljs.core.first(arglist__35384);
arglist__35384 = cljs.core.next(arglist__35384);
var z = cljs.core.first(arglist__35384);
var args = cljs.core.rest(arglist__35384);
return G__35382__delegate(x,y,z,args);
});
G__35382.cljs$core$IFn$_invoke$arity$variadic = G__35382__delegate;
return G__35382;
})()
;
G__35381 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35381__0.call(this);
case 1:
return G__35381__1.call(this,x);
case 2:
return G__35381__2.call(this,x,y);
case 3:
return G__35381__3.call(this,x,y,z);
default:
var G__35385 = null;
if (arguments.length > 3) {
var G__35386__i = 0, G__35386__a = new Array(arguments.length -  3);
while (G__35386__i < G__35386__a.length) {G__35386__a[G__35386__i] = arguments[G__35386__i + 3]; ++G__35386__i;}
G__35385 = new cljs.core.IndexedSeq(G__35386__a,0);
}
return G__35381__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35385);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35381.cljs$lang$maxFixedArity = 3;
G__35381.cljs$lang$applyTo = G__35381__4.cljs$lang$applyTo;
G__35381.cljs$core$IFn$_invoke$arity$0 = G__35381__0;
G__35381.cljs$core$IFn$_invoke$arity$1 = G__35381__1;
G__35381.cljs$core$IFn$_invoke$arity$2 = G__35381__2;
G__35381.cljs$core$IFn$_invoke$arity$3 = G__35381__3;
G__35381.cljs$core$IFn$_invoke$arity$variadic = G__35381__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35381;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__35387__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__35388 = null;
var G__35388__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35275_SHARP_,p2__35276_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35275_SHARP_,(function (){return (p2__35276_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__35276_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__35276_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35388__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35277_SHARP_,p2__35278_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35277_SHARP_,(function (){var G__35363 = x;
return (p2__35278_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__35278_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35363) : p2__35278_SHARP_.call(null,G__35363));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35388__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35279_SHARP_,p2__35280_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35279_SHARP_,(function (){var G__35364 = x;
var G__35365 = y;
return (p2__35280_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__35280_SHARP_.cljs$core$IFn$_invoke$arity$2(G__35364,G__35365) : p2__35280_SHARP_.call(null,G__35364,G__35365));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35388__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35281_SHARP_,p2__35282_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35281_SHARP_,(function (){var G__35366 = x;
var G__35367 = y;
var G__35368 = z;
return (p2__35282_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__35282_SHARP_.cljs$core$IFn$_invoke$arity$3(G__35366,G__35367,G__35368) : p2__35282_SHARP_.call(null,G__35366,G__35367,G__35368));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35388__4 = (function() { 
var G__35389__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35283_SHARP_,p2__35284_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35283_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__35284_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__35389 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35390__i = 0, G__35390__a = new Array(arguments.length -  3);
while (G__35390__i < G__35390__a.length) {G__35390__a[G__35390__i] = arguments[G__35390__i + 3]; ++G__35390__i;}
  args = new cljs.core.IndexedSeq(G__35390__a,0);
} 
return G__35389__delegate.call(this,x,y,z,args);};
G__35389.cljs$lang$maxFixedArity = 3;
G__35389.cljs$lang$applyTo = (function (arglist__35391){
var x = cljs.core.first(arglist__35391);
arglist__35391 = cljs.core.next(arglist__35391);
var y = cljs.core.first(arglist__35391);
arglist__35391 = cljs.core.next(arglist__35391);
var z = cljs.core.first(arglist__35391);
var args = cljs.core.rest(arglist__35391);
return G__35389__delegate(x,y,z,args);
});
G__35389.cljs$core$IFn$_invoke$arity$variadic = G__35389__delegate;
return G__35389;
})()
;
G__35388 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35388__0.call(this);
case 1:
return G__35388__1.call(this,x);
case 2:
return G__35388__2.call(this,x,y);
case 3:
return G__35388__3.call(this,x,y,z);
default:
var G__35392 = null;
if (arguments.length > 3) {
var G__35393__i = 0, G__35393__a = new Array(arguments.length -  3);
while (G__35393__i < G__35393__a.length) {G__35393__a[G__35393__i] = arguments[G__35393__i + 3]; ++G__35393__i;}
G__35392 = new cljs.core.IndexedSeq(G__35393__a,0);
}
return G__35388__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35392);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35388.cljs$lang$maxFixedArity = 3;
G__35388.cljs$lang$applyTo = G__35388__4.cljs$lang$applyTo;
G__35388.cljs$core$IFn$_invoke$arity$0 = G__35388__0;
G__35388.cljs$core$IFn$_invoke$arity$1 = G__35388__1;
G__35388.cljs$core$IFn$_invoke$arity$2 = G__35388__2;
G__35388.cljs$core$IFn$_invoke$arity$3 = G__35388__3;
G__35388.cljs$core$IFn$_invoke$arity$variadic = G__35388__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35388;
})()
;})(fs__$1))
};
var G__35387 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__35394__i = 0, G__35394__a = new Array(arguments.length -  3);
while (G__35394__i < G__35394__a.length) {G__35394__a[G__35394__i] = arguments[G__35394__i + 3]; ++G__35394__i;}
  fs = new cljs.core.IndexedSeq(G__35394__a,0);
} 
return G__35387__delegate.call(this,f,g,h,fs);};
G__35387.cljs$lang$maxFixedArity = 3;
G__35387.cljs$lang$applyTo = (function (arglist__35395){
var f = cljs.core.first(arglist__35395);
arglist__35395 = cljs.core.next(arglist__35395);
var g = cljs.core.first(arglist__35395);
arglist__35395 = cljs.core.next(arglist__35395);
var h = cljs.core.first(arglist__35395);
var fs = cljs.core.rest(arglist__35395);
return G__35387__delegate(f,g,h,fs);
});
G__35387.cljs$core$IFn$_invoke$arity$variadic = G__35387__delegate;
return G__35387;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__35396 = null;
if (arguments.length > 3) {
var G__35397__i = 0, G__35397__a = new Array(arguments.length -  3);
while (G__35397__i < G__35397__a.length) {G__35397__a[G__35397__i] = arguments[G__35397__i + 3]; ++G__35397__i;}
G__35396 = new cljs.core.IndexedSeq(G__35397__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__35396);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__35398 = cljs.core.next(coll);
coll = G__35398;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__35399 = (n - (1));
var G__35400 = cljs.core.next(coll);
n = G__35399;
coll = G__35400;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__35404 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35404,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35404,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__24177__auto__ = flags;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_35412 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__24177__auto__ = cljs.core.constant$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__35413_35419 = cljs.core.first(coll);
var G__35414_35420 = writer;
var G__35415_35421 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35413_35419,G__35414_35420,G__35415_35421) : print_one.call(null,G__35413_35419,G__35414_35420,G__35415_35421));
} else {
}

var coll_35422__$1 = cljs.core.next(coll);
var n_35423 = (cljs.core.constant$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_35422__$1) && (((n_35423 == null)) || (!((n_35423 === (0)))))){
cljs.core._write(writer,sep);

var G__35416_35424 = cljs.core.first(coll_35422__$1);
var G__35417_35425 = writer;
var G__35418_35426 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35416_35424,G__35417_35425,G__35418_35426) : print_one.call(null,G__35416_35424,G__35417_35425,G__35418_35426));

var G__35427 = cljs.core.next(coll_35422__$1);
var G__35428 = (n_35423 - (1));
coll_35422__$1 = G__35427;
n_35423 = G__35428;
continue;
} else {
if((cljs.core.seq(coll_35422__$1)) && ((n_35423 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__24177__auto__ = cljs.core.constant$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_35412;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__35433 = cljs.core.seq(ss);
var chunk__35434 = null;
var count__35435 = (0);
var i__35436 = (0);
while(true){
if((i__35436 < count__35435)){
var s = chunk__35434.cljs$core$IIndexed$_nth$arity$2(null,i__35436);
cljs.core._write(writer,s);

var G__35437 = seq__35433;
var G__35438 = chunk__35434;
var G__35439 = count__35435;
var G__35440 = (i__35436 + (1));
seq__35433 = G__35437;
chunk__35434 = G__35438;
count__35435 = G__35439;
i__35436 = G__35440;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35433);
if(temp__4126__auto__){
var seq__35433__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35433__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35433__$1);
var G__35441 = cljs.core.chunk_rest(seq__35433__$1);
var G__35442 = c__24962__auto__;
var G__35443 = cljs.core.count(c__24962__auto__);
var G__35444 = (0);
seq__35433 = G__35441;
chunk__35434 = G__35442;
count__35435 = G__35443;
i__35436 = G__35444;
continue;
} else {
var s = cljs.core.first(seq__35433__$1);
cljs.core._write(writer,s);

var G__35445 = cljs.core.next(seq__35433__$1);
var G__35446 = null;
var G__35447 = (0);
var G__35448 = (0);
seq__35433 = G__35445;
chunk__35434 = G__35446;
count__35435 = G__35447;
i__35436 = G__35448;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__35449__i = 0, G__35449__a = new Array(arguments.length -  1);
while (G__35449__i < G__35449__a.length) {G__35449__a[G__35449__i] = arguments[G__35449__i + 1]; ++G__35449__i;}
  ss = new cljs.core.IndexedSeq(G__35449__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__35450){
var writer = cljs.core.first(arglist__35450);
var ss = cljs.core.rest(arglist__35450);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj35452 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj35452;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__35455 = "[\\\\\"\b\f\n\r\t]";
var G__35456 = "g";
return RegExp(G__35455,G__35456);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24165__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$meta);
if(cljs.core.truth_(and__24165__auto__)){
var and__24165__auto____$1 = (function (){var G__35470 = obj;
if(G__35470){
var bit__24851__auto__ = (G__35470.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24851__auto__) || (G__35470.cljs$core$IMeta$)){
return true;
} else {
if((!G__35470.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35470);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35470);
}
})();
if(and__24165__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__35471_35481 = cljs.core.meta(obj);
var G__35472_35482 = writer;
var G__35473_35483 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__35471_35481,G__35472_35482,G__35473_35483) : cljs.core.pr_writer.call(null,G__35471_35481,G__35472_35482,G__35473_35483));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__35474 = obj;
if(G__35474){
var bit__24844__auto__ = (G__35474.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24844__auto__) || (G__35474.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__35475 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__35476 = cljs.core.pr_writer;
var G__35477 = writer;
var G__35478 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__35475,G__35476,G__35477,G__35478) : cljs.core.print_map.call(null,G__35475,G__35476,G__35477,G__35478));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__35479 = obj;
return goog.isString(G__35479);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$readably.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__35484 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__35484;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__35480 = obj;
if(G__35480){
var bit__24851__auto__ = (G__35480.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24851__auto__) || (G__35480.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__35480.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__35480);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__35480);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$alt_DASH_impl.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__35488 = obj;
var G__35489 = writer;
var G__35490 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$fallback_DASH_impl,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__35488,G__35489,G__35490) : alt_impl.call(null,G__35488,G__35489,G__35490));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__35495 = cljs.core.seq(cljs.core.next(objs));
var chunk__35496 = null;
var count__35497 = (0);
var i__35498 = (0);
while(true){
if((i__35498 < count__35497)){
var obj = chunk__35496.cljs$core$IIndexed$_nth$arity$2(null,i__35498);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__35499 = seq__35495;
var G__35500 = chunk__35496;
var G__35501 = count__35497;
var G__35502 = (i__35498 + (1));
seq__35495 = G__35499;
chunk__35496 = G__35500;
count__35497 = G__35501;
i__35498 = G__35502;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35495);
if(temp__4126__auto__){
var seq__35495__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35495__$1)){
var c__24962__auto__ = cljs.core.chunk_first(seq__35495__$1);
var G__35503 = cljs.core.chunk_rest(seq__35495__$1);
var G__35504 = c__24962__auto__;
var G__35505 = cljs.core.count(c__24962__auto__);
var G__35506 = (0);
seq__35495 = G__35503;
chunk__35496 = G__35504;
count__35497 = G__35505;
i__35498 = G__35506;
continue;
} else {
var obj = cljs.core.first(seq__35495__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__35507 = cljs.core.next(seq__35495__$1);
var G__35508 = null;
var G__35509 = (0);
var G__35510 = (0);
seq__35495 = G__35507;
chunk__35496 = G__35508;
count__35497 = G__35509;
i__35498 = G__35510;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$flush_DASH_on_DASH_newline))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35511__i = 0, G__35511__a = new Array(arguments.length -  0);
while (G__35511__i < G__35511__a.length) {G__35511__a[G__35511__i] = arguments[G__35511__i + 0]; ++G__35511__i;}
  objs = new cljs.core.IndexedSeq(G__35511__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__35512){
var objs = cljs.core.seq(arglist__35512);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35513__i = 0, G__35513__a = new Array(arguments.length -  0);
while (G__35513__i < G__35513__a.length) {G__35513__a[G__35513__i] = arguments[G__35513__i + 0]; ++G__35513__i;}
  objs = new cljs.core.IndexedSeq(G__35513__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__35514){
var objs = cljs.core.seq(arglist__35514);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35515__i = 0, G__35515__a = new Array(arguments.length -  0);
while (G__35515__i < G__35515__a.length) {G__35515__a[G__35515__i] = arguments[G__35515__i + 0]; ++G__35515__i;}
  objs = new cljs.core.IndexedSeq(G__35515__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__35516){
var objs = cljs.core.seq(arglist__35516);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35517__i = 0, G__35517__a = new Array(arguments.length -  0);
while (G__35517__i < G__35517__a.length) {G__35517__a[G__35517__i] = arguments[G__35517__i + 0]; ++G__35517__i;}
  objs = new cljs.core.IndexedSeq(G__35517__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__35518){
var objs = cljs.core.seq(arglist__35518);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35519__i = 0, G__35519__a = new Array(arguments.length -  0);
while (G__35519__i < G__35519__a.length) {G__35519__a[G__35519__i] = arguments[G__35519__i + 0]; ++G__35519__i;}
  objs = new cljs.core.IndexedSeq(G__35519__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__35520){
var objs = cljs.core.seq(arglist__35520);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35521__i = 0, G__35521__a = new Array(arguments.length -  0);
while (G__35521__i < G__35521__a.length) {G__35521__a[G__35521__i] = arguments[G__35521__i + 0]; ++G__35521__i;}
  objs = new cljs.core.IndexedSeq(G__35521__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__35522){
var objs = cljs.core.seq(arglist__35522);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35523__i = 0, G__35523__a = new Array(arguments.length -  0);
while (G__35523__i < G__35523__a.length) {G__35523__a[G__35523__i] = arguments[G__35523__i + 0]; ++G__35523__i;}
  objs = new cljs.core.IndexedSeq(G__35523__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__35524){
var objs = cljs.core.seq(arglist__35524);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35525__i = 0, G__35525__a = new Array(arguments.length -  0);
while (G__35525__i < G__35525__a.length) {G__35525__a[G__35525__i] = arguments[G__35525__i + 0]; ++G__35525__i;}
  objs = new cljs.core.IndexedSeq(G__35525__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__35526){
var objs = cljs.core.seq(arglist__35526);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__35533_35539 = cljs.core.key(e);
var G__35534_35540 = w;
var G__35535_35541 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35533_35539,G__35534_35540,G__35535_35541) : print_one.call(null,G__35533_35539,G__35534_35540,G__35535_35541));

cljs.core._write(w," ");

var G__35536 = cljs.core.val(e);
var G__35537 = w;
var G__35538 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35536,G__35537,G__35538) : print_one.call(null,G__35536,G__35537,G__35538));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__35542__i = 0, G__35542__a = new Array(arguments.length -  2);
while (G__35542__i < G__35542__a.length) {G__35542__a[G__35542__i] = arguments[G__35542__i + 2]; ++G__35542__i;}
  args = new cljs.core.IndexedSeq(G__35542__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__35543){
var iref = cljs.core.first(arglist__35543);
arglist__35543 = cljs.core.next(arglist__35543);
var f = cljs.core.first(arglist__35543);
var args = cljs.core.rest(arglist__35543);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__35546 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35546) : cljs.core.atom.call(null,G__35546));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__35548 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35548) : cljs.core.deref.call(null,G__35548));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__35549_SHARP_,p2__35550_SHARP_){
var ret = (function (){var G__35553 = p1__35549_SHARP_;
var G__35554 = p2__35550_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35553,G__35554) : rf.call(null,G__35553,G__35554));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__35557 = null;
var G__35557__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35557__1 = (function (result){
var G__35556 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35556) : rf.call(null,G__35556));
});
var G__35557__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__35557 = function(result,input){
switch(arguments.length){
case 0:
return G__35557__0.call(this);
case 1:
return G__35557__1.call(this,result);
case 2:
return G__35557__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35557.cljs$core$IFn$_invoke$arity$0 = G__35557__0;
G__35557.cljs$core$IFn$_invoke$arity$1 = G__35557__1;
G__35557.cljs$core$IFn$_invoke$arity$2 = G__35557__2;
return G__35557;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$cljs$core_SLASH_none);
return ((function (pa){
return (function() {
var G__35566 = null;
var G__35566__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35566__1 = (function (result){
var G__35562 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35562) : rf.call(null,G__35562));
});
var G__35566__2 = (function (result,input){
var prior = (function (){var G__35563 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35563) : cljs.core.deref.call(null,G__35563));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__35564 = result;
var G__35565 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35564,G__35565) : rf.call(null,G__35564,G__35565));
}
});
G__35566 = function(result,input){
switch(arguments.length){
case 0:
return G__35566__0.call(this);
case 1:
return G__35566__1.call(this,result);
case 2:
return G__35566__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35566.cljs$core$IFn$_invoke$arity$0 = G__35566__0;
G__35566.cljs$core$IFn$_invoke$arity$1 = G__35566__1;
G__35566.cljs$core$IFn$_invoke$arity$2 = G__35566__2;
return G__35566;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25153__auto__ = this;
return cljs.core.es6_iterator(this__25153__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35568_SHARP_,p2__35567_SHARP_){
var G__35570 = p2__35567_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__35570) : proc.call(null,G__35570));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj35572 = {};
return obj35572;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._clj__GT_js[(function (){var G__35576 = x__24813__auto__;
return goog.typeOf(G__35576);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._key__GT_js[(function (){var G__35580 = x__24813__auto__;
return goog.typeOf(G__35580);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__35583 = k;
if(G__35583){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto__ = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return G__35583.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__35583.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35583);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35583);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__35584 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__35584) : cljs.core.clj__GT_js.call(null,G__35584));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__35600 = x;
if(G__35600){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto__ = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return G__35600.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__35600.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35600);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35600);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj35602 = {};
return obj35602;
})();
var seq__35603_35613 = cljs.core.seq(x);
var chunk__35604_35614 = null;
var count__35605_35615 = (0);
var i__35606_35616 = (0);
while(true){
if((i__35606_35616 < count__35605_35615)){
var vec__35607_35617 = chunk__35604_35614.cljs$core$IIndexed$_nth$arity$2(null,i__35606_35616);
var k_35618 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35607_35617,(0),null);
var v_35619 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35607_35617,(1),null);
(m[cljs.core.key__GT_js(k_35618)] = cljs$core$clj__GT_js(v_35619));

var G__35620 = seq__35603_35613;
var G__35621 = chunk__35604_35614;
var G__35622 = count__35605_35615;
var G__35623 = (i__35606_35616 + (1));
seq__35603_35613 = G__35620;
chunk__35604_35614 = G__35621;
count__35605_35615 = G__35622;
i__35606_35616 = G__35623;
continue;
} else {
var temp__4126__auto___35624 = cljs.core.seq(seq__35603_35613);
if(temp__4126__auto___35624){
var seq__35603_35625__$1 = temp__4126__auto___35624;
if(cljs.core.chunked_seq_QMARK_(seq__35603_35625__$1)){
var c__24962__auto___35626 = cljs.core.chunk_first(seq__35603_35625__$1);
var G__35627 = cljs.core.chunk_rest(seq__35603_35625__$1);
var G__35628 = c__24962__auto___35626;
var G__35629 = cljs.core.count(c__24962__auto___35626);
var G__35630 = (0);
seq__35603_35613 = G__35627;
chunk__35604_35614 = G__35628;
count__35605_35615 = G__35629;
i__35606_35616 = G__35630;
continue;
} else {
var vec__35608_35631 = cljs.core.first(seq__35603_35625__$1);
var k_35632 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35608_35631,(0),null);
var v_35633 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35608_35631,(1),null);
(m[cljs.core.key__GT_js(k_35632)] = cljs$core$clj__GT_js(v_35633));

var G__35634 = cljs.core.next(seq__35603_35625__$1);
var G__35635 = null;
var G__35636 = (0);
var G__35637 = (0);
seq__35603_35613 = G__35634;
chunk__35604_35614 = G__35635;
count__35605_35615 = G__35636;
i__35606_35616 = G__35637;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__35609_35638 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__35610_35639 = null;
var count__35611_35640 = (0);
var i__35612_35641 = (0);
while(true){
if((i__35612_35641 < count__35611_35640)){
var x_35642__$1 = chunk__35610_35639.cljs$core$IIndexed$_nth$arity$2(null,i__35612_35641);
arr.push(x_35642__$1);

var G__35643 = seq__35609_35638;
var G__35644 = chunk__35610_35639;
var G__35645 = count__35611_35640;
var G__35646 = (i__35612_35641 + (1));
seq__35609_35638 = G__35643;
chunk__35610_35639 = G__35644;
count__35611_35640 = G__35645;
i__35612_35641 = G__35646;
continue;
} else {
var temp__4126__auto___35647 = cljs.core.seq(seq__35609_35638);
if(temp__4126__auto___35647){
var seq__35609_35648__$1 = temp__4126__auto___35647;
if(cljs.core.chunked_seq_QMARK_(seq__35609_35648__$1)){
var c__24962__auto___35649 = cljs.core.chunk_first(seq__35609_35648__$1);
var G__35650 = cljs.core.chunk_rest(seq__35609_35648__$1);
var G__35651 = c__24962__auto___35649;
var G__35652 = cljs.core.count(c__24962__auto___35649);
var G__35653 = (0);
seq__35609_35638 = G__35650;
chunk__35610_35639 = G__35651;
count__35611_35640 = G__35652;
i__35612_35641 = G__35653;
continue;
} else {
var x_35654__$1 = cljs.core.first(seq__35609_35648__$1);
arr.push(x_35654__$1);

var G__35655 = cljs.core.next(seq__35609_35648__$1);
var G__35656 = null;
var G__35657 = (0);
var G__35658 = (0);
seq__35609_35638 = G__35655;
chunk__35610_35639 = G__35656;
count__35611_35640 = G__35657;
i__35612_35641 = G__35658;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj35660 = {};
return obj35660;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__24165__auto__ = x;
if(and__24165__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24165__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24813__auto__ = (((x == null))?null:x);
return (function (){var or__24177__auto__ = (cljs.core._js__GT_clj[(function (){var G__35664 = x__24813__auto__;
return goog.typeOf(G__35664);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$keywordize_DASH_keys,false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__35721__delegate = function (x,opts){
var map__35694 = opts;
var map__35694__$1 = ((cljs.core.seq_QMARK_(map__35694))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35694):map__35694);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35694__$1,cljs.core.constant$keyword$keywordize_DASH_keys);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__35694,map__35694__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__35710 = x__$1;
if(G__35710){
var bit__24851__auto__ = null;
if(cljs.core.truth_((function (){var or__24177__auto__ = bit__24851__auto__;
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return G__35710.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__35710.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__35710);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__35710);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__24931__auto__ = ((function (map__35694,map__35694__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__35711(s__35712){
return (new cljs.core.LazySeq(null,((function (map__35694,map__35694__$1,keywordize_keys,keyfn){
return (function (){
var s__35712__$1 = s__35712;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__35712__$1);
if(temp__4126__auto__){
var s__35712__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__35712__$2)){
var c__24929__auto__ = cljs.core.chunk_first(s__35712__$2);
var size__24930__auto__ = cljs.core.count(c__24929__auto__);
var b__35714 = cljs.core.chunk_buffer(size__24930__auto__);
if((function (){var i__35713 = (0);
while(true){
if((i__35713 < size__24930__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__24929__auto__,i__35713);
cljs.core.chunk_append(b__35714,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__35719 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35719) : keyfn.call(null,G__35719));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__35722 = (i__35713 + (1));
i__35713 = G__35722;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__35714),cljs$core$js__GT_clj_$_thisfn_$_iter__35711(cljs.core.chunk_rest(s__35712__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__35714),null);
}
} else {
var k = cljs.core.first(s__35712__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__35720 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35720) : keyfn.call(null,G__35720));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__35711(cljs.core.rest(s__35712__$2)));
}
} else {
return null;
}
break;
}
});})(map__35694,map__35694__$1,keywordize_keys,keyfn))
,null,null));
});})(map__35694,map__35694__$1,keywordize_keys,keyfn))
;
return iter__24931__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__35694,map__35694__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__35721 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__35723__i = 0, G__35723__a = new Array(arguments.length -  1);
while (G__35723__i < G__35723__a.length) {G__35723__a[G__35723__i] = arguments[G__35723__i + 1]; ++G__35723__i;}
  opts = new cljs.core.IndexedSeq(G__35723__a,0);
} 
return G__35721__delegate.call(this,x,opts);};
G__35721.cljs$lang$maxFixedArity = 1;
G__35721.cljs$lang$applyTo = (function (arglist__35724){
var x = cljs.core.first(arglist__35724);
var opts = cljs.core.rest(arglist__35724);
return G__35721__delegate(x,opts);
});
G__35721.cljs$core$IFn$_invoke$arity$variadic = G__35721__delegate;
return G__35721;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__35725 = null;
if (arguments.length > 1) {
var G__35726__i = 0, G__35726__a = new Array(arguments.length -  1);
while (G__35726__i < G__35726__a.length) {G__35726__a[G__35726__i] = arguments[G__35726__i + 1]; ++G__35726__i;}
G__35725 = new cljs.core.IndexedSeq(G__35726__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__35725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__35729 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35729) : cljs.core.atom.call(null,G__35729));
})();
return ((function (mem){
return (function() { 
var G__35731__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__35730 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35730) : cljs.core.deref.call(null,G__35730));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__35731 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__35732__i = 0, G__35732__a = new Array(arguments.length -  0);
while (G__35732__i < G__35732__a.length) {G__35732__a[G__35732__i] = arguments[G__35732__i + 0]; ++G__35732__i;}
  args = new cljs.core.IndexedSeq(G__35732__a,0);
} 
return G__35731__delegate.call(this,args);};
G__35731.cljs$lang$maxFixedArity = 0;
G__35731.cljs$lang$applyTo = (function (arglist__35733){
var args = cljs.core.seq(arglist__35733);
return G__35731__delegate(args);
});
G__35731.cljs$core$IFn$_invoke$arity$variadic = G__35731__delegate;
return G__35731;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__35735 = ret;
f = G__35735;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__35736__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__35736 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__35737__i = 0, G__35737__a = new Array(arguments.length -  1);
while (G__35737__i < G__35737__a.length) {G__35737__a[G__35737__i] = arguments[G__35737__i + 1]; ++G__35737__i;}
  args = new cljs.core.IndexedSeq(G__35737__a,0);
} 
return G__35736__delegate.call(this,f,args);};
G__35736.cljs$lang$maxFixedArity = 1;
G__35736.cljs$lang$applyTo = (function (arglist__35738){
var f = cljs.core.first(arglist__35738);
var args = cljs.core.rest(arglist__35738);
return G__35736__delegate(f,args);
});
G__35736.cljs$core$IFn$_invoke$arity$variadic = G__35736__delegate;
return G__35736;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__35739 = null;
if (arguments.length > 1) {
var G__35740__i = 0, G__35740__a = new Array(arguments.length -  1);
while (G__35740__i < G__35740__a.length) {G__35740__a[G__35740__i] = arguments[G__35740__i + 1]; ++G__35740__i;}
G__35739 = new cljs.core.IndexedSeq(G__35740__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__35739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__35743 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__35743) : Math.floor.call(null,G__35743));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__35745 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35745) : f.call(null,G__35745));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$parents,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$descendants,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$ancestors,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__35747 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35747) : cljs.core.atom.call(null,G__35747));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__35748__i = 0, G__35748__a = new Array(arguments.length -  1);
while (G__35748__i < G__35748__a.length) {G__35748__a[G__35748__i] = arguments[G__35748__i + 1]; ++G__35748__i;}
  args = new cljs.core.IndexedSeq(G__35748__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__35749){
var f = cljs.core.first(arglist__35749);
var args = cljs.core.rest(arglist__35749);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__35814 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35814) : cljs.core.deref.call(null,G__35814));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__24177__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
var and__24165__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24165__auto__){
var and__24165__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24165__auto____$1){
var and__24165__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24165__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__35839 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__35837 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__35837) : child.call(null,G__35837));
})(),(function (){var G__35838 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__35838) : parent.call(null,G__35838));
})());
var G__35840 = (i + (1));
ret = G__35839;
i = G__35840;
continue;
}
break;
}
} else {
return and__24165__auto____$2;
}
} else {
return and__24165__auto____$1;
}
} else {
return and__24165__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__35844 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35844) : cljs.core.deref.call(null,G__35844));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__35848 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35848) : cljs.core.deref.call(null,G__35848));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__35852 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35852) : cljs.core.deref.call(null,G__35852));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__35861 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__35861) : targets.call(null,G__35861));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__35862 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__35862) : sources.call(null,G__35862));
})()));
});})(tp,td,ta))
;
var or__24177__auto__ = ((cljs.core.contains_QMARK_((function (){var G__35866 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__35866) : tp.call(null,G__35866));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__35867 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__35867) : ta.call(null,G__35867));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__35868 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__35868) : ta.call(null,G__35868));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$parents,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$ancestors,tf(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$descendants,tf(cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__35875 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__35875) : parentMap.call(null,G__35875));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__35876 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__35876) : parentMap.call(null,G__35876));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__35869_SHARP_){
return cljs.core.cons(cljs.core.first(p1__35869_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__35869_SHARP_),cljs.core.second(p1__35869_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__35877 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__35877) : parentMap.call(null,G__35877));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__35870_SHARP_,p2__35871_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__35870_SHARP_,p2__35871_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__35880 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35880) : cljs.core.deref.call(null,G__35880));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__35881 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35881) : cljs.core.deref.call(null,G__35881));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__35897 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35897) : cljs.core.deref.call(null,G__35897));
})().call(null,x);
var or__24177__auto__ = (cljs.core.truth_((function (){var and__24165__auto__ = xprefs;
if(cljs.core.truth_(and__24165__auto__)){
var G__35899 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__35899) : xprefs.call(null,G__35899));
} else {
return and__24165__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__35900 = cljs.core.rest(ps);
ps = G__35900;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24177__auto____$1)){
return or__24177__auto____$1;
} else {
var or__24177__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__35901 = cljs.core.rest(ps);
ps = G__35901;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24177__auto____$2)){
return or__24177__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__24177__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24177__auto__)){
return or__24177__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__35915){
var vec__35916 = p__35915;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35916,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35916,(1),null);
var e = vec__35916;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__35917 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35917) : cljs.core.deref.call(null,G__35917));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24177__auto__ = (be == null);
if(or__24177__auto__){
return or__24177__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__35918 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35918) : cljs.core.deref.call(null,G__35918));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__35919 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35919) : cljs.core.deref.call(null,G__35919));
})(),(function (){var G__35920 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35920) : cljs.core.deref.call(null,G__35920));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj35922 = {};
return obj35922;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._reset[(function (){var G__35926 = x__24813__auto__;
return goog.typeOf(G__35926);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._reset["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._add_method[(function (){var G__35930 = x__24813__auto__;
return goog.typeOf(G__35930);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._add_method["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._remove_method[(function (){var G__35934 = x__24813__auto__;
return goog.typeOf(G__35934);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._prefer_method[(function (){var G__35938 = x__24813__auto__;
return goog.typeOf(G__35938);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._get_method[(function (){var G__35942 = x__24813__auto__;
return goog.typeOf(G__35942);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._get_method["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._methods[(function (){var G__35946 = x__24813__auto__;
return goog.typeOf(G__35946);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._methods["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__24165__auto__ = mf;
if(and__24165__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24165__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24813__auto__ = (((mf == null))?null:mf);
return (function (){var or__24177__auto__ = (cljs.core._prefers[(function (){var G__35950 = x__24813__auto__;
return goog.typeOf(G__35950);
})()]);
if(or__24177__auto__){
return or__24177__auto__;
} else {
var or__24177__auto____$1 = (cljs.core._prefers["_"]);
if(or__24177__auto____$1){
return or__24177__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__35952 = this$__$1;
return goog.getUid(G__35952);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__35953 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35953) : cljs.core.deref.call(null,G__35953));
})(),(function (){var G__35954 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35954) : cljs.core.deref.call(null,G__35954));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__35955 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35955) : cljs.core.deref.call(null,G__35955));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__35956 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35956) : cljs.core.deref.call(null,G__35956));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__35957 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35957) : cljs.core.deref.call(null,G__35957));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__35958 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35958) : cljs.core.deref.call(null,G__35958));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__36799 = null;
var G__36799__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__36799__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35959 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__35959) : self__.dispatch_fn.call(null,G__35959));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35960 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__35960) : target_fn.call(null,G__35960));
});
var G__36799__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35961 = a;
var G__35962 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__35961,G__35962) : self__.dispatch_fn.call(null,G__35961,G__35962));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35963 = a;
var G__35964 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__35963,G__35964) : target_fn.call(null,G__35963,G__35964));
});
var G__36799__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35965 = a;
var G__35966 = b;
var G__35967 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__35965,G__35966,G__35967) : self__.dispatch_fn.call(null,G__35965,G__35966,G__35967));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35968 = a;
var G__35969 = b;
var G__35970 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__35968,G__35969,G__35970) : target_fn.call(null,G__35968,G__35969,G__35970));
});
var G__36799__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35971 = a;
var G__35972 = b;
var G__35973 = c;
var G__35974 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__35971,G__35972,G__35973,G__35974) : self__.dispatch_fn.call(null,G__35971,G__35972,G__35973,G__35974));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35975 = a;
var G__35976 = b;
var G__35977 = c;
var G__35978 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__35975,G__35976,G__35977,G__35978) : target_fn.call(null,G__35975,G__35976,G__35977,G__35978));
});
var G__36799__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35979 = a;
var G__35980 = b;
var G__35981 = c;
var G__35982 = d;
var G__35983 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__35979,G__35980,G__35981,G__35982,G__35983) : self__.dispatch_fn.call(null,G__35979,G__35980,G__35981,G__35982,G__35983));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35984 = a;
var G__35985 = b;
var G__35986 = c;
var G__35987 = d;
var G__35988 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__35984,G__35985,G__35986,G__35987,G__35988) : target_fn.call(null,G__35984,G__35985,G__35986,G__35987,G__35988));
});
var G__36799__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__35989 = a;
var G__35990 = b;
var G__35991 = c;
var G__35992 = d;
var G__35993 = e;
var G__35994 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__35989,G__35990,G__35991,G__35992,G__35993,G__35994) : self__.dispatch_fn.call(null,G__35989,G__35990,G__35991,G__35992,G__35993,G__35994));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35995 = a;
var G__35996 = b;
var G__35997 = c;
var G__35998 = d;
var G__35999 = e;
var G__36000 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__35995,G__35996,G__35997,G__35998,G__35999,G__36000) : target_fn.call(null,G__35995,G__35996,G__35997,G__35998,G__35999,G__36000));
});
var G__36799__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36001 = a;
var G__36002 = b;
var G__36003 = c;
var G__36004 = d;
var G__36005 = e;
var G__36006 = f;
var G__36007 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__36001,G__36002,G__36003,G__36004,G__36005,G__36006,G__36007) : self__.dispatch_fn.call(null,G__36001,G__36002,G__36003,G__36004,G__36005,G__36006,G__36007));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36008 = a;
var G__36009 = b;
var G__36010 = c;
var G__36011 = d;
var G__36012 = e;
var G__36013 = f;
var G__36014 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__36008,G__36009,G__36010,G__36011,G__36012,G__36013,G__36014) : target_fn.call(null,G__36008,G__36009,G__36010,G__36011,G__36012,G__36013,G__36014));
});
var G__36799__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36015 = a;
var G__36016 = b;
var G__36017 = c;
var G__36018 = d;
var G__36019 = e;
var G__36020 = f;
var G__36021 = g;
var G__36022 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__36015,G__36016,G__36017,G__36018,G__36019,G__36020,G__36021,G__36022) : self__.dispatch_fn.call(null,G__36015,G__36016,G__36017,G__36018,G__36019,G__36020,G__36021,G__36022));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36023 = a;
var G__36024 = b;
var G__36025 = c;
var G__36026 = d;
var G__36027 = e;
var G__36028 = f;
var G__36029 = g;
var G__36030 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__36023,G__36024,G__36025,G__36026,G__36027,G__36028,G__36029,G__36030) : target_fn.call(null,G__36023,G__36024,G__36025,G__36026,G__36027,G__36028,G__36029,G__36030));
});
var G__36799__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36031 = a;
var G__36032 = b;
var G__36033 = c;
var G__36034 = d;
var G__36035 = e;
var G__36036 = f;
var G__36037 = g;
var G__36038 = h;
var G__36039 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__36031,G__36032,G__36033,G__36034,G__36035,G__36036,G__36037,G__36038,G__36039) : self__.dispatch_fn.call(null,G__36031,G__36032,G__36033,G__36034,G__36035,G__36036,G__36037,G__36038,G__36039));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36040 = a;
var G__36041 = b;
var G__36042 = c;
var G__36043 = d;
var G__36044 = e;
var G__36045 = f;
var G__36046 = g;
var G__36047 = h;
var G__36048 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__36040,G__36041,G__36042,G__36043,G__36044,G__36045,G__36046,G__36047,G__36048) : target_fn.call(null,G__36040,G__36041,G__36042,G__36043,G__36044,G__36045,G__36046,G__36047,G__36048));
});
var G__36799__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36049 = a;
var G__36050 = b;
var G__36051 = c;
var G__36052 = d;
var G__36053 = e;
var G__36054 = f;
var G__36055 = g;
var G__36056 = h;
var G__36057 = i;
var G__36058 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__36049,G__36050,G__36051,G__36052,G__36053,G__36054,G__36055,G__36056,G__36057,G__36058) : self__.dispatch_fn.call(null,G__36049,G__36050,G__36051,G__36052,G__36053,G__36054,G__36055,G__36056,G__36057,G__36058));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36059 = a;
var G__36060 = b;
var G__36061 = c;
var G__36062 = d;
var G__36063 = e;
var G__36064 = f;
var G__36065 = g;
var G__36066 = h;
var G__36067 = i;
var G__36068 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__36059,G__36060,G__36061,G__36062,G__36063,G__36064,G__36065,G__36066,G__36067,G__36068) : target_fn.call(null,G__36059,G__36060,G__36061,G__36062,G__36063,G__36064,G__36065,G__36066,G__36067,G__36068));
});
var G__36799__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36069 = a;
var G__36070 = b;
var G__36071 = c;
var G__36072 = d;
var G__36073 = e;
var G__36074 = f;
var G__36075 = g;
var G__36076 = h;
var G__36077 = i;
var G__36078 = j;
var G__36079 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__36069,G__36070,G__36071,G__36072,G__36073,G__36074,G__36075,G__36076,G__36077,G__36078,G__36079) : self__.dispatch_fn.call(null,G__36069,G__36070,G__36071,G__36072,G__36073,G__36074,G__36075,G__36076,G__36077,G__36078,G__36079));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36080 = a;
var G__36081 = b;
var G__36082 = c;
var G__36083 = d;
var G__36084 = e;
var G__36085 = f;
var G__36086 = g;
var G__36087 = h;
var G__36088 = i;
var G__36089 = j;
var G__36090 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__36080,G__36081,G__36082,G__36083,G__36084,G__36085,G__36086,G__36087,G__36088,G__36089,G__36090) : target_fn.call(null,G__36080,G__36081,G__36082,G__36083,G__36084,G__36085,G__36086,G__36087,G__36088,G__36089,G__36090));
});
var G__36799__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36091 = a;
var G__36092 = b;
var G__36093 = c;
var G__36094 = d;
var G__36095 = e;
var G__36096 = f;
var G__36097 = g;
var G__36098 = h;
var G__36099 = i;
var G__36100 = j;
var G__36101 = k;
var G__36102 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__36091,G__36092,G__36093,G__36094,G__36095,G__36096,G__36097,G__36098,G__36099,G__36100,G__36101,G__36102) : self__.dispatch_fn.call(null,G__36091,G__36092,G__36093,G__36094,G__36095,G__36096,G__36097,G__36098,G__36099,G__36100,G__36101,G__36102));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36103 = a;
var G__36104 = b;
var G__36105 = c;
var G__36106 = d;
var G__36107 = e;
var G__36108 = f;
var G__36109 = g;
var G__36110 = h;
var G__36111 = i;
var G__36112 = j;
var G__36113 = k;
var G__36114 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__36103,G__36104,G__36105,G__36106,G__36107,G__36108,G__36109,G__36110,G__36111,G__36112,G__36113,G__36114) : target_fn.call(null,G__36103,G__36104,G__36105,G__36106,G__36107,G__36108,G__36109,G__36110,G__36111,G__36112,G__36113,G__36114));
});
var G__36799__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36115 = a;
var G__36116 = b;
var G__36117 = c;
var G__36118 = d;
var G__36119 = e;
var G__36120 = f;
var G__36121 = g;
var G__36122 = h;
var G__36123 = i;
var G__36124 = j;
var G__36125 = k;
var G__36126 = l;
var G__36127 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__36115,G__36116,G__36117,G__36118,G__36119,G__36120,G__36121,G__36122,G__36123,G__36124,G__36125,G__36126,G__36127) : self__.dispatch_fn.call(null,G__36115,G__36116,G__36117,G__36118,G__36119,G__36120,G__36121,G__36122,G__36123,G__36124,G__36125,G__36126,G__36127));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36128 = a;
var G__36129 = b;
var G__36130 = c;
var G__36131 = d;
var G__36132 = e;
var G__36133 = f;
var G__36134 = g;
var G__36135 = h;
var G__36136 = i;
var G__36137 = j;
var G__36138 = k;
var G__36139 = l;
var G__36140 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__36128,G__36129,G__36130,G__36131,G__36132,G__36133,G__36134,G__36135,G__36136,G__36137,G__36138,G__36139,G__36140) : target_fn.call(null,G__36128,G__36129,G__36130,G__36131,G__36132,G__36133,G__36134,G__36135,G__36136,G__36137,G__36138,G__36139,G__36140));
});
var G__36799__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36141 = a;
var G__36142 = b;
var G__36143 = c;
var G__36144 = d;
var G__36145 = e;
var G__36146 = f;
var G__36147 = g;
var G__36148 = h;
var G__36149 = i;
var G__36150 = j;
var G__36151 = k;
var G__36152 = l;
var G__36153 = m;
var G__36154 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__36141,G__36142,G__36143,G__36144,G__36145,G__36146,G__36147,G__36148,G__36149,G__36150,G__36151,G__36152,G__36153,G__36154) : self__.dispatch_fn.call(null,G__36141,G__36142,G__36143,G__36144,G__36145,G__36146,G__36147,G__36148,G__36149,G__36150,G__36151,G__36152,G__36153,G__36154));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36155 = a;
var G__36156 = b;
var G__36157 = c;
var G__36158 = d;
var G__36159 = e;
var G__36160 = f;
var G__36161 = g;
var G__36162 = h;
var G__36163 = i;
var G__36164 = j;
var G__36165 = k;
var G__36166 = l;
var G__36167 = m;
var G__36168 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__36155,G__36156,G__36157,G__36158,G__36159,G__36160,G__36161,G__36162,G__36163,G__36164,G__36165,G__36166,G__36167,G__36168) : target_fn.call(null,G__36155,G__36156,G__36157,G__36158,G__36159,G__36160,G__36161,G__36162,G__36163,G__36164,G__36165,G__36166,G__36167,G__36168));
});
var G__36799__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36169 = a;
var G__36170 = b;
var G__36171 = c;
var G__36172 = d;
var G__36173 = e;
var G__36174 = f;
var G__36175 = g;
var G__36176 = h;
var G__36177 = i;
var G__36178 = j;
var G__36179 = k;
var G__36180 = l;
var G__36181 = m;
var G__36182 = n;
var G__36183 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__36169,G__36170,G__36171,G__36172,G__36173,G__36174,G__36175,G__36176,G__36177,G__36178,G__36179,G__36180,G__36181,G__36182,G__36183) : self__.dispatch_fn.call(null,G__36169,G__36170,G__36171,G__36172,G__36173,G__36174,G__36175,G__36176,G__36177,G__36178,G__36179,G__36180,G__36181,G__36182,G__36183));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36184 = a;
var G__36185 = b;
var G__36186 = c;
var G__36187 = d;
var G__36188 = e;
var G__36189 = f;
var G__36190 = g;
var G__36191 = h;
var G__36192 = i;
var G__36193 = j;
var G__36194 = k;
var G__36195 = l;
var G__36196 = m;
var G__36197 = n;
var G__36198 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__36184,G__36185,G__36186,G__36187,G__36188,G__36189,G__36190,G__36191,G__36192,G__36193,G__36194,G__36195,G__36196,G__36197,G__36198) : target_fn.call(null,G__36184,G__36185,G__36186,G__36187,G__36188,G__36189,G__36190,G__36191,G__36192,G__36193,G__36194,G__36195,G__36196,G__36197,G__36198));
});
var G__36799__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36199 = a;
var G__36200 = b;
var G__36201 = c;
var G__36202 = d;
var G__36203 = e;
var G__36204 = f;
var G__36205 = g;
var G__36206 = h;
var G__36207 = i;
var G__36208 = j;
var G__36209 = k;
var G__36210 = l;
var G__36211 = m;
var G__36212 = n;
var G__36213 = o;
var G__36214 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__36199,G__36200,G__36201,G__36202,G__36203,G__36204,G__36205,G__36206,G__36207,G__36208,G__36209,G__36210,G__36211,G__36212,G__36213,G__36214) : self__.dispatch_fn.call(null,G__36199,G__36200,G__36201,G__36202,G__36203,G__36204,G__36205,G__36206,G__36207,G__36208,G__36209,G__36210,G__36211,G__36212,G__36213,G__36214));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36215 = a;
var G__36216 = b;
var G__36217 = c;
var G__36218 = d;
var G__36219 = e;
var G__36220 = f;
var G__36221 = g;
var G__36222 = h;
var G__36223 = i;
var G__36224 = j;
var G__36225 = k;
var G__36226 = l;
var G__36227 = m;
var G__36228 = n;
var G__36229 = o;
var G__36230 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__36215,G__36216,G__36217,G__36218,G__36219,G__36220,G__36221,G__36222,G__36223,G__36224,G__36225,G__36226,G__36227,G__36228,G__36229,G__36230) : target_fn.call(null,G__36215,G__36216,G__36217,G__36218,G__36219,G__36220,G__36221,G__36222,G__36223,G__36224,G__36225,G__36226,G__36227,G__36228,G__36229,G__36230));
});
var G__36799__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36231 = a;
var G__36232 = b;
var G__36233 = c;
var G__36234 = d;
var G__36235 = e;
var G__36236 = f;
var G__36237 = g;
var G__36238 = h;
var G__36239 = i;
var G__36240 = j;
var G__36241 = k;
var G__36242 = l;
var G__36243 = m;
var G__36244 = n;
var G__36245 = o;
var G__36246 = p;
var G__36247 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__36231,G__36232,G__36233,G__36234,G__36235,G__36236,G__36237,G__36238,G__36239,G__36240,G__36241,G__36242,G__36243,G__36244,G__36245,G__36246,G__36247) : self__.dispatch_fn.call(null,G__36231,G__36232,G__36233,G__36234,G__36235,G__36236,G__36237,G__36238,G__36239,G__36240,G__36241,G__36242,G__36243,G__36244,G__36245,G__36246,G__36247));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36248 = a;
var G__36249 = b;
var G__36250 = c;
var G__36251 = d;
var G__36252 = e;
var G__36253 = f;
var G__36254 = g;
var G__36255 = h;
var G__36256 = i;
var G__36257 = j;
var G__36258 = k;
var G__36259 = l;
var G__36260 = m;
var G__36261 = n;
var G__36262 = o;
var G__36263 = p;
var G__36264 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__36248,G__36249,G__36250,G__36251,G__36252,G__36253,G__36254,G__36255,G__36256,G__36257,G__36258,G__36259,G__36260,G__36261,G__36262,G__36263,G__36264) : target_fn.call(null,G__36248,G__36249,G__36250,G__36251,G__36252,G__36253,G__36254,G__36255,G__36256,G__36257,G__36258,G__36259,G__36260,G__36261,G__36262,G__36263,G__36264));
});
var G__36799__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36265 = a;
var G__36266 = b;
var G__36267 = c;
var G__36268 = d;
var G__36269 = e;
var G__36270 = f;
var G__36271 = g;
var G__36272 = h;
var G__36273 = i;
var G__36274 = j;
var G__36275 = k;
var G__36276 = l;
var G__36277 = m;
var G__36278 = n;
var G__36279 = o;
var G__36280 = p;
var G__36281 = q;
var G__36282 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__36265,G__36266,G__36267,G__36268,G__36269,G__36270,G__36271,G__36272,G__36273,G__36274,G__36275,G__36276,G__36277,G__36278,G__36279,G__36280,G__36281,G__36282) : self__.dispatch_fn.call(null,G__36265,G__36266,G__36267,G__36268,G__36269,G__36270,G__36271,G__36272,G__36273,G__36274,G__36275,G__36276,G__36277,G__36278,G__36279,G__36280,G__36281,G__36282));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36283 = a;
var G__36284 = b;
var G__36285 = c;
var G__36286 = d;
var G__36287 = e;
var G__36288 = f;
var G__36289 = g;
var G__36290 = h;
var G__36291 = i;
var G__36292 = j;
var G__36293 = k;
var G__36294 = l;
var G__36295 = m;
var G__36296 = n;
var G__36297 = o;
var G__36298 = p;
var G__36299 = q;
var G__36300 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__36283,G__36284,G__36285,G__36286,G__36287,G__36288,G__36289,G__36290,G__36291,G__36292,G__36293,G__36294,G__36295,G__36296,G__36297,G__36298,G__36299,G__36300) : target_fn.call(null,G__36283,G__36284,G__36285,G__36286,G__36287,G__36288,G__36289,G__36290,G__36291,G__36292,G__36293,G__36294,G__36295,G__36296,G__36297,G__36298,G__36299,G__36300));
});
var G__36799__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36301 = a;
var G__36302 = b;
var G__36303 = c;
var G__36304 = d;
var G__36305 = e;
var G__36306 = f;
var G__36307 = g;
var G__36308 = h;
var G__36309 = i;
var G__36310 = j;
var G__36311 = k;
var G__36312 = l;
var G__36313 = m;
var G__36314 = n;
var G__36315 = o;
var G__36316 = p;
var G__36317 = q;
var G__36318 = r;
var G__36319 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__36301,G__36302,G__36303,G__36304,G__36305,G__36306,G__36307,G__36308,G__36309,G__36310,G__36311,G__36312,G__36313,G__36314,G__36315,G__36316,G__36317,G__36318,G__36319) : self__.dispatch_fn.call(null,G__36301,G__36302,G__36303,G__36304,G__36305,G__36306,G__36307,G__36308,G__36309,G__36310,G__36311,G__36312,G__36313,G__36314,G__36315,G__36316,G__36317,G__36318,G__36319));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36320 = a;
var G__36321 = b;
var G__36322 = c;
var G__36323 = d;
var G__36324 = e;
var G__36325 = f;
var G__36326 = g;
var G__36327 = h;
var G__36328 = i;
var G__36329 = j;
var G__36330 = k;
var G__36331 = l;
var G__36332 = m;
var G__36333 = n;
var G__36334 = o;
var G__36335 = p;
var G__36336 = q;
var G__36337 = r;
var G__36338 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__36320,G__36321,G__36322,G__36323,G__36324,G__36325,G__36326,G__36327,G__36328,G__36329,G__36330,G__36331,G__36332,G__36333,G__36334,G__36335,G__36336,G__36337,G__36338) : target_fn.call(null,G__36320,G__36321,G__36322,G__36323,G__36324,G__36325,G__36326,G__36327,G__36328,G__36329,G__36330,G__36331,G__36332,G__36333,G__36334,G__36335,G__36336,G__36337,G__36338));
});
var G__36799__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36339 = a;
var G__36340 = b;
var G__36341 = c;
var G__36342 = d;
var G__36343 = e;
var G__36344 = f;
var G__36345 = g;
var G__36346 = h;
var G__36347 = i;
var G__36348 = j;
var G__36349 = k;
var G__36350 = l;
var G__36351 = m;
var G__36352 = n;
var G__36353 = o;
var G__36354 = p;
var G__36355 = q;
var G__36356 = r;
var G__36357 = s;
var G__36358 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__36339,G__36340,G__36341,G__36342,G__36343,G__36344,G__36345,G__36346,G__36347,G__36348,G__36349,G__36350,G__36351,G__36352,G__36353,G__36354,G__36355,G__36356,G__36357,G__36358) : self__.dispatch_fn.call(null,G__36339,G__36340,G__36341,G__36342,G__36343,G__36344,G__36345,G__36346,G__36347,G__36348,G__36349,G__36350,G__36351,G__36352,G__36353,G__36354,G__36355,G__36356,G__36357,G__36358));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36359 = a;
var G__36360 = b;
var G__36361 = c;
var G__36362 = d;
var G__36363 = e;
var G__36364 = f;
var G__36365 = g;
var G__36366 = h;
var G__36367 = i;
var G__36368 = j;
var G__36369 = k;
var G__36370 = l;
var G__36371 = m;
var G__36372 = n;
var G__36373 = o;
var G__36374 = p;
var G__36375 = q;
var G__36376 = r;
var G__36377 = s;
var G__36378 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__36359,G__36360,G__36361,G__36362,G__36363,G__36364,G__36365,G__36366,G__36367,G__36368,G__36369,G__36370,G__36371,G__36372,G__36373,G__36374,G__36375,G__36376,G__36377,G__36378) : target_fn.call(null,G__36359,G__36360,G__36361,G__36362,G__36363,G__36364,G__36365,G__36366,G__36367,G__36368,G__36369,G__36370,G__36371,G__36372,G__36373,G__36374,G__36375,G__36376,G__36377,G__36378));
});
var G__36799__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__36799 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__36799__1.call(this,self__);
case 2:
return G__36799__2.call(this,self__,a);
case 3:
return G__36799__3.call(this,self__,a,b);
case 4:
return G__36799__4.call(this,self__,a,b,c);
case 5:
return G__36799__5.call(this,self__,a,b,c,d);
case 6:
return G__36799__6.call(this,self__,a,b,c,d,e);
case 7:
return G__36799__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__36799__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__36799__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__36799__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__36799__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__36799__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__36799__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__36799__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__36799__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__36799__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__36799__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__36799__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__36799__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__36799__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__36799__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__36799__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__36799.cljs$core$IFn$_invoke$arity$1 = G__36799__1;
G__36799.cljs$core$IFn$_invoke$arity$2 = G__36799__2;
G__36799.cljs$core$IFn$_invoke$arity$3 = G__36799__3;
G__36799.cljs$core$IFn$_invoke$arity$4 = G__36799__4;
G__36799.cljs$core$IFn$_invoke$arity$5 = G__36799__5;
G__36799.cljs$core$IFn$_invoke$arity$6 = G__36799__6;
G__36799.cljs$core$IFn$_invoke$arity$7 = G__36799__7;
G__36799.cljs$core$IFn$_invoke$arity$8 = G__36799__8;
G__36799.cljs$core$IFn$_invoke$arity$9 = G__36799__9;
G__36799.cljs$core$IFn$_invoke$arity$10 = G__36799__10;
G__36799.cljs$core$IFn$_invoke$arity$11 = G__36799__11;
G__36799.cljs$core$IFn$_invoke$arity$12 = G__36799__12;
G__36799.cljs$core$IFn$_invoke$arity$13 = G__36799__13;
G__36799.cljs$core$IFn$_invoke$arity$14 = G__36799__14;
G__36799.cljs$core$IFn$_invoke$arity$15 = G__36799__15;
G__36799.cljs$core$IFn$_invoke$arity$16 = G__36799__16;
G__36799.cljs$core$IFn$_invoke$arity$17 = G__36799__17;
G__36799.cljs$core$IFn$_invoke$arity$18 = G__36799__18;
G__36799.cljs$core$IFn$_invoke$arity$19 = G__36799__19;
G__36799.cljs$core$IFn$_invoke$arity$20 = G__36799__20;
G__36799.cljs$core$IFn$_invoke$arity$21 = G__36799__21;
G__36799.cljs$core$IFn$_invoke$arity$22 = G__36799__22;
return G__36799;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args35951){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35951)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36379 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__36379) : self__.dispatch_fn.call(null,G__36379));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36380 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__36380) : target_fn.call(null,G__36380));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36381 = a;
var G__36382 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__36381,G__36382) : self__.dispatch_fn.call(null,G__36381,G__36382));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36383 = a;
var G__36384 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__36383,G__36384) : target_fn.call(null,G__36383,G__36384));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36385 = a;
var G__36386 = b;
var G__36387 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__36385,G__36386,G__36387) : self__.dispatch_fn.call(null,G__36385,G__36386,G__36387));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36388 = a;
var G__36389 = b;
var G__36390 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__36388,G__36389,G__36390) : target_fn.call(null,G__36388,G__36389,G__36390));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36391 = a;
var G__36392 = b;
var G__36393 = c;
var G__36394 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__36391,G__36392,G__36393,G__36394) : self__.dispatch_fn.call(null,G__36391,G__36392,G__36393,G__36394));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36395 = a;
var G__36396 = b;
var G__36397 = c;
var G__36398 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__36395,G__36396,G__36397,G__36398) : target_fn.call(null,G__36395,G__36396,G__36397,G__36398));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36399 = a;
var G__36400 = b;
var G__36401 = c;
var G__36402 = d;
var G__36403 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__36399,G__36400,G__36401,G__36402,G__36403) : self__.dispatch_fn.call(null,G__36399,G__36400,G__36401,G__36402,G__36403));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36404 = a;
var G__36405 = b;
var G__36406 = c;
var G__36407 = d;
var G__36408 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__36404,G__36405,G__36406,G__36407,G__36408) : target_fn.call(null,G__36404,G__36405,G__36406,G__36407,G__36408));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36409 = a;
var G__36410 = b;
var G__36411 = c;
var G__36412 = d;
var G__36413 = e;
var G__36414 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__36409,G__36410,G__36411,G__36412,G__36413,G__36414) : self__.dispatch_fn.call(null,G__36409,G__36410,G__36411,G__36412,G__36413,G__36414));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36415 = a;
var G__36416 = b;
var G__36417 = c;
var G__36418 = d;
var G__36419 = e;
var G__36420 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__36415,G__36416,G__36417,G__36418,G__36419,G__36420) : target_fn.call(null,G__36415,G__36416,G__36417,G__36418,G__36419,G__36420));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36421 = a;
var G__36422 = b;
var G__36423 = c;
var G__36424 = d;
var G__36425 = e;
var G__36426 = f;
var G__36427 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__36421,G__36422,G__36423,G__36424,G__36425,G__36426,G__36427) : self__.dispatch_fn.call(null,G__36421,G__36422,G__36423,G__36424,G__36425,G__36426,G__36427));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36428 = a;
var G__36429 = b;
var G__36430 = c;
var G__36431 = d;
var G__36432 = e;
var G__36433 = f;
var G__36434 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__36428,G__36429,G__36430,G__36431,G__36432,G__36433,G__36434) : target_fn.call(null,G__36428,G__36429,G__36430,G__36431,G__36432,G__36433,G__36434));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36435 = a;
var G__36436 = b;
var G__36437 = c;
var G__36438 = d;
var G__36439 = e;
var G__36440 = f;
var G__36441 = g;
var G__36442 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__36435,G__36436,G__36437,G__36438,G__36439,G__36440,G__36441,G__36442) : self__.dispatch_fn.call(null,G__36435,G__36436,G__36437,G__36438,G__36439,G__36440,G__36441,G__36442));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36443 = a;
var G__36444 = b;
var G__36445 = c;
var G__36446 = d;
var G__36447 = e;
var G__36448 = f;
var G__36449 = g;
var G__36450 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__36443,G__36444,G__36445,G__36446,G__36447,G__36448,G__36449,G__36450) : target_fn.call(null,G__36443,G__36444,G__36445,G__36446,G__36447,G__36448,G__36449,G__36450));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36451 = a;
var G__36452 = b;
var G__36453 = c;
var G__36454 = d;
var G__36455 = e;
var G__36456 = f;
var G__36457 = g;
var G__36458 = h;
var G__36459 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__36451,G__36452,G__36453,G__36454,G__36455,G__36456,G__36457,G__36458,G__36459) : self__.dispatch_fn.call(null,G__36451,G__36452,G__36453,G__36454,G__36455,G__36456,G__36457,G__36458,G__36459));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36460 = a;
var G__36461 = b;
var G__36462 = c;
var G__36463 = d;
var G__36464 = e;
var G__36465 = f;
var G__36466 = g;
var G__36467 = h;
var G__36468 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__36460,G__36461,G__36462,G__36463,G__36464,G__36465,G__36466,G__36467,G__36468) : target_fn.call(null,G__36460,G__36461,G__36462,G__36463,G__36464,G__36465,G__36466,G__36467,G__36468));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36469 = a;
var G__36470 = b;
var G__36471 = c;
var G__36472 = d;
var G__36473 = e;
var G__36474 = f;
var G__36475 = g;
var G__36476 = h;
var G__36477 = i;
var G__36478 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__36469,G__36470,G__36471,G__36472,G__36473,G__36474,G__36475,G__36476,G__36477,G__36478) : self__.dispatch_fn.call(null,G__36469,G__36470,G__36471,G__36472,G__36473,G__36474,G__36475,G__36476,G__36477,G__36478));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36479 = a;
var G__36480 = b;
var G__36481 = c;
var G__36482 = d;
var G__36483 = e;
var G__36484 = f;
var G__36485 = g;
var G__36486 = h;
var G__36487 = i;
var G__36488 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__36479,G__36480,G__36481,G__36482,G__36483,G__36484,G__36485,G__36486,G__36487,G__36488) : target_fn.call(null,G__36479,G__36480,G__36481,G__36482,G__36483,G__36484,G__36485,G__36486,G__36487,G__36488));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36489 = a;
var G__36490 = b;
var G__36491 = c;
var G__36492 = d;
var G__36493 = e;
var G__36494 = f;
var G__36495 = g;
var G__36496 = h;
var G__36497 = i;
var G__36498 = j;
var G__36499 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__36489,G__36490,G__36491,G__36492,G__36493,G__36494,G__36495,G__36496,G__36497,G__36498,G__36499) : self__.dispatch_fn.call(null,G__36489,G__36490,G__36491,G__36492,G__36493,G__36494,G__36495,G__36496,G__36497,G__36498,G__36499));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36500 = a;
var G__36501 = b;
var G__36502 = c;
var G__36503 = d;
var G__36504 = e;
var G__36505 = f;
var G__36506 = g;
var G__36507 = h;
var G__36508 = i;
var G__36509 = j;
var G__36510 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__36500,G__36501,G__36502,G__36503,G__36504,G__36505,G__36506,G__36507,G__36508,G__36509,G__36510) : target_fn.call(null,G__36500,G__36501,G__36502,G__36503,G__36504,G__36505,G__36506,G__36507,G__36508,G__36509,G__36510));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36511 = a;
var G__36512 = b;
var G__36513 = c;
var G__36514 = d;
var G__36515 = e;
var G__36516 = f;
var G__36517 = g;
var G__36518 = h;
var G__36519 = i;
var G__36520 = j;
var G__36521 = k;
var G__36522 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__36511,G__36512,G__36513,G__36514,G__36515,G__36516,G__36517,G__36518,G__36519,G__36520,G__36521,G__36522) : self__.dispatch_fn.call(null,G__36511,G__36512,G__36513,G__36514,G__36515,G__36516,G__36517,G__36518,G__36519,G__36520,G__36521,G__36522));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36523 = a;
var G__36524 = b;
var G__36525 = c;
var G__36526 = d;
var G__36527 = e;
var G__36528 = f;
var G__36529 = g;
var G__36530 = h;
var G__36531 = i;
var G__36532 = j;
var G__36533 = k;
var G__36534 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__36523,G__36524,G__36525,G__36526,G__36527,G__36528,G__36529,G__36530,G__36531,G__36532,G__36533,G__36534) : target_fn.call(null,G__36523,G__36524,G__36525,G__36526,G__36527,G__36528,G__36529,G__36530,G__36531,G__36532,G__36533,G__36534));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36535 = a;
var G__36536 = b;
var G__36537 = c;
var G__36538 = d;
var G__36539 = e;
var G__36540 = f;
var G__36541 = g;
var G__36542 = h;
var G__36543 = i;
var G__36544 = j;
var G__36545 = k;
var G__36546 = l;
var G__36547 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__36535,G__36536,G__36537,G__36538,G__36539,G__36540,G__36541,G__36542,G__36543,G__36544,G__36545,G__36546,G__36547) : self__.dispatch_fn.call(null,G__36535,G__36536,G__36537,G__36538,G__36539,G__36540,G__36541,G__36542,G__36543,G__36544,G__36545,G__36546,G__36547));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36548 = a;
var G__36549 = b;
var G__36550 = c;
var G__36551 = d;
var G__36552 = e;
var G__36553 = f;
var G__36554 = g;
var G__36555 = h;
var G__36556 = i;
var G__36557 = j;
var G__36558 = k;
var G__36559 = l;
var G__36560 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__36548,G__36549,G__36550,G__36551,G__36552,G__36553,G__36554,G__36555,G__36556,G__36557,G__36558,G__36559,G__36560) : target_fn.call(null,G__36548,G__36549,G__36550,G__36551,G__36552,G__36553,G__36554,G__36555,G__36556,G__36557,G__36558,G__36559,G__36560));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36561 = a;
var G__36562 = b;
var G__36563 = c;
var G__36564 = d;
var G__36565 = e;
var G__36566 = f;
var G__36567 = g;
var G__36568 = h;
var G__36569 = i;
var G__36570 = j;
var G__36571 = k;
var G__36572 = l;
var G__36573 = m;
var G__36574 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__36561,G__36562,G__36563,G__36564,G__36565,G__36566,G__36567,G__36568,G__36569,G__36570,G__36571,G__36572,G__36573,G__36574) : self__.dispatch_fn.call(null,G__36561,G__36562,G__36563,G__36564,G__36565,G__36566,G__36567,G__36568,G__36569,G__36570,G__36571,G__36572,G__36573,G__36574));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36575 = a;
var G__36576 = b;
var G__36577 = c;
var G__36578 = d;
var G__36579 = e;
var G__36580 = f;
var G__36581 = g;
var G__36582 = h;
var G__36583 = i;
var G__36584 = j;
var G__36585 = k;
var G__36586 = l;
var G__36587 = m;
var G__36588 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__36575,G__36576,G__36577,G__36578,G__36579,G__36580,G__36581,G__36582,G__36583,G__36584,G__36585,G__36586,G__36587,G__36588) : target_fn.call(null,G__36575,G__36576,G__36577,G__36578,G__36579,G__36580,G__36581,G__36582,G__36583,G__36584,G__36585,G__36586,G__36587,G__36588));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36589 = a;
var G__36590 = b;
var G__36591 = c;
var G__36592 = d;
var G__36593 = e;
var G__36594 = f;
var G__36595 = g;
var G__36596 = h;
var G__36597 = i;
var G__36598 = j;
var G__36599 = k;
var G__36600 = l;
var G__36601 = m;
var G__36602 = n;
var G__36603 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__36589,G__36590,G__36591,G__36592,G__36593,G__36594,G__36595,G__36596,G__36597,G__36598,G__36599,G__36600,G__36601,G__36602,G__36603) : self__.dispatch_fn.call(null,G__36589,G__36590,G__36591,G__36592,G__36593,G__36594,G__36595,G__36596,G__36597,G__36598,G__36599,G__36600,G__36601,G__36602,G__36603));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36604 = a;
var G__36605 = b;
var G__36606 = c;
var G__36607 = d;
var G__36608 = e;
var G__36609 = f;
var G__36610 = g;
var G__36611 = h;
var G__36612 = i;
var G__36613 = j;
var G__36614 = k;
var G__36615 = l;
var G__36616 = m;
var G__36617 = n;
var G__36618 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__36604,G__36605,G__36606,G__36607,G__36608,G__36609,G__36610,G__36611,G__36612,G__36613,G__36614,G__36615,G__36616,G__36617,G__36618) : target_fn.call(null,G__36604,G__36605,G__36606,G__36607,G__36608,G__36609,G__36610,G__36611,G__36612,G__36613,G__36614,G__36615,G__36616,G__36617,G__36618));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36619 = a;
var G__36620 = b;
var G__36621 = c;
var G__36622 = d;
var G__36623 = e;
var G__36624 = f;
var G__36625 = g;
var G__36626 = h;
var G__36627 = i;
var G__36628 = j;
var G__36629 = k;
var G__36630 = l;
var G__36631 = m;
var G__36632 = n;
var G__36633 = o;
var G__36634 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__36619,G__36620,G__36621,G__36622,G__36623,G__36624,G__36625,G__36626,G__36627,G__36628,G__36629,G__36630,G__36631,G__36632,G__36633,G__36634) : self__.dispatch_fn.call(null,G__36619,G__36620,G__36621,G__36622,G__36623,G__36624,G__36625,G__36626,G__36627,G__36628,G__36629,G__36630,G__36631,G__36632,G__36633,G__36634));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36635 = a;
var G__36636 = b;
var G__36637 = c;
var G__36638 = d;
var G__36639 = e;
var G__36640 = f;
var G__36641 = g;
var G__36642 = h;
var G__36643 = i;
var G__36644 = j;
var G__36645 = k;
var G__36646 = l;
var G__36647 = m;
var G__36648 = n;
var G__36649 = o;
var G__36650 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__36635,G__36636,G__36637,G__36638,G__36639,G__36640,G__36641,G__36642,G__36643,G__36644,G__36645,G__36646,G__36647,G__36648,G__36649,G__36650) : target_fn.call(null,G__36635,G__36636,G__36637,G__36638,G__36639,G__36640,G__36641,G__36642,G__36643,G__36644,G__36645,G__36646,G__36647,G__36648,G__36649,G__36650));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36651 = a;
var G__36652 = b;
var G__36653 = c;
var G__36654 = d;
var G__36655 = e;
var G__36656 = f;
var G__36657 = g;
var G__36658 = h;
var G__36659 = i;
var G__36660 = j;
var G__36661 = k;
var G__36662 = l;
var G__36663 = m;
var G__36664 = n;
var G__36665 = o;
var G__36666 = p;
var G__36667 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__36651,G__36652,G__36653,G__36654,G__36655,G__36656,G__36657,G__36658,G__36659,G__36660,G__36661,G__36662,G__36663,G__36664,G__36665,G__36666,G__36667) : self__.dispatch_fn.call(null,G__36651,G__36652,G__36653,G__36654,G__36655,G__36656,G__36657,G__36658,G__36659,G__36660,G__36661,G__36662,G__36663,G__36664,G__36665,G__36666,G__36667));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36668 = a;
var G__36669 = b;
var G__36670 = c;
var G__36671 = d;
var G__36672 = e;
var G__36673 = f;
var G__36674 = g;
var G__36675 = h;
var G__36676 = i;
var G__36677 = j;
var G__36678 = k;
var G__36679 = l;
var G__36680 = m;
var G__36681 = n;
var G__36682 = o;
var G__36683 = p;
var G__36684 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__36668,G__36669,G__36670,G__36671,G__36672,G__36673,G__36674,G__36675,G__36676,G__36677,G__36678,G__36679,G__36680,G__36681,G__36682,G__36683,G__36684) : target_fn.call(null,G__36668,G__36669,G__36670,G__36671,G__36672,G__36673,G__36674,G__36675,G__36676,G__36677,G__36678,G__36679,G__36680,G__36681,G__36682,G__36683,G__36684));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36685 = a;
var G__36686 = b;
var G__36687 = c;
var G__36688 = d;
var G__36689 = e;
var G__36690 = f;
var G__36691 = g;
var G__36692 = h;
var G__36693 = i;
var G__36694 = j;
var G__36695 = k;
var G__36696 = l;
var G__36697 = m;
var G__36698 = n;
var G__36699 = o;
var G__36700 = p;
var G__36701 = q;
var G__36702 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__36685,G__36686,G__36687,G__36688,G__36689,G__36690,G__36691,G__36692,G__36693,G__36694,G__36695,G__36696,G__36697,G__36698,G__36699,G__36700,G__36701,G__36702) : self__.dispatch_fn.call(null,G__36685,G__36686,G__36687,G__36688,G__36689,G__36690,G__36691,G__36692,G__36693,G__36694,G__36695,G__36696,G__36697,G__36698,G__36699,G__36700,G__36701,G__36702));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36703 = a;
var G__36704 = b;
var G__36705 = c;
var G__36706 = d;
var G__36707 = e;
var G__36708 = f;
var G__36709 = g;
var G__36710 = h;
var G__36711 = i;
var G__36712 = j;
var G__36713 = k;
var G__36714 = l;
var G__36715 = m;
var G__36716 = n;
var G__36717 = o;
var G__36718 = p;
var G__36719 = q;
var G__36720 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__36703,G__36704,G__36705,G__36706,G__36707,G__36708,G__36709,G__36710,G__36711,G__36712,G__36713,G__36714,G__36715,G__36716,G__36717,G__36718,G__36719,G__36720) : target_fn.call(null,G__36703,G__36704,G__36705,G__36706,G__36707,G__36708,G__36709,G__36710,G__36711,G__36712,G__36713,G__36714,G__36715,G__36716,G__36717,G__36718,G__36719,G__36720));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36721 = a;
var G__36722 = b;
var G__36723 = c;
var G__36724 = d;
var G__36725 = e;
var G__36726 = f;
var G__36727 = g;
var G__36728 = h;
var G__36729 = i;
var G__36730 = j;
var G__36731 = k;
var G__36732 = l;
var G__36733 = m;
var G__36734 = n;
var G__36735 = o;
var G__36736 = p;
var G__36737 = q;
var G__36738 = r;
var G__36739 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__36721,G__36722,G__36723,G__36724,G__36725,G__36726,G__36727,G__36728,G__36729,G__36730,G__36731,G__36732,G__36733,G__36734,G__36735,G__36736,G__36737,G__36738,G__36739) : self__.dispatch_fn.call(null,G__36721,G__36722,G__36723,G__36724,G__36725,G__36726,G__36727,G__36728,G__36729,G__36730,G__36731,G__36732,G__36733,G__36734,G__36735,G__36736,G__36737,G__36738,G__36739));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36740 = a;
var G__36741 = b;
var G__36742 = c;
var G__36743 = d;
var G__36744 = e;
var G__36745 = f;
var G__36746 = g;
var G__36747 = h;
var G__36748 = i;
var G__36749 = j;
var G__36750 = k;
var G__36751 = l;
var G__36752 = m;
var G__36753 = n;
var G__36754 = o;
var G__36755 = p;
var G__36756 = q;
var G__36757 = r;
var G__36758 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__36740,G__36741,G__36742,G__36743,G__36744,G__36745,G__36746,G__36747,G__36748,G__36749,G__36750,G__36751,G__36752,G__36753,G__36754,G__36755,G__36756,G__36757,G__36758) : target_fn.call(null,G__36740,G__36741,G__36742,G__36743,G__36744,G__36745,G__36746,G__36747,G__36748,G__36749,G__36750,G__36751,G__36752,G__36753,G__36754,G__36755,G__36756,G__36757,G__36758));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36759 = a;
var G__36760 = b;
var G__36761 = c;
var G__36762 = d;
var G__36763 = e;
var G__36764 = f;
var G__36765 = g;
var G__36766 = h;
var G__36767 = i;
var G__36768 = j;
var G__36769 = k;
var G__36770 = l;
var G__36771 = m;
var G__36772 = n;
var G__36773 = o;
var G__36774 = p;
var G__36775 = q;
var G__36776 = r;
var G__36777 = s;
var G__36778 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__36759,G__36760,G__36761,G__36762,G__36763,G__36764,G__36765,G__36766,G__36767,G__36768,G__36769,G__36770,G__36771,G__36772,G__36773,G__36774,G__36775,G__36776,G__36777,G__36778) : self__.dispatch_fn.call(null,G__36759,G__36760,G__36761,G__36762,G__36763,G__36764,G__36765,G__36766,G__36767,G__36768,G__36769,G__36770,G__36771,G__36772,G__36773,G__36774,G__36775,G__36776,G__36777,G__36778));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36779 = a;
var G__36780 = b;
var G__36781 = c;
var G__36782 = d;
var G__36783 = e;
var G__36784 = f;
var G__36785 = g;
var G__36786 = h;
var G__36787 = i;
var G__36788 = j;
var G__36789 = k;
var G__36790 = l;
var G__36791 = m;
var G__36792 = n;
var G__36793 = o;
var G__36794 = p;
var G__36795 = q;
var G__36796 = r;
var G__36797 = s;
var G__36798 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__36779,G__36780,G__36781,G__36782,G__36783,G__36784,G__36785,G__36786,G__36787,G__36788,G__36789,G__36790,G__36791,G__36792,G__36793,G__36794,G__36795,G__36796,G__36797,G__36798) : target_fn.call(null,G__36779,G__36780,G__36781,G__36782,G__36783,G__36784,G__36785,G__36786,G__36787,G__36788,G__36789,G__36790,G__36791,G__36792,G__36793,G__36794,G__36795,G__36796,G__36797,G__36798));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 2048;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__36800 = self__.uuid;
var G__36801 = other.uuid;
return goog.array.defaultCompare(G__36800,G__36801);
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__36802 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__36802);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24756__auto__,writer__24757__auto__,opt__24758__auto__){
return cljs.core._write(writer__24757__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__36810 = x;
var G__36811 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__36810,G__36811) : pred.call(null,G__36810,G__36811));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__36812 = y;
var G__36813 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__36812,G__36813) : pred.call(null,G__36812,G__36813));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$ok;
} else {
return cljs.core.constant$keyword$no_DASH_test;
}
});
