// Compiled by ClojureScript 0.0-3119 {:optimize-constants true, :static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-3119";
cljs.core._STAR_unchecked_if_STAR_ = false;
/**
 * Var bound to the name value of the compiler build :target option.
 * For example, if the compiler build :target is :nodejs, *target* will be bound
 * to "nodejs". *target* is a Google Closure define and can be set by compiler
 * :closure-defines option.
 * @define {string}
 */
cljs.core._STAR_target_STAR_ = "default";
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
 * Each runtime environment provides a different way to print output.
 * Whatever function *print-fn* is bound to will be passed any
 * Strings which should be printed.
 */
cljs.core._STAR_print_fn_STAR_ = (function cljs$core$_STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
 * Set *print-fn* to f.
 */
cljs.core.set_print_fn_BANG_ = (function cljs$core$set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
/**
 * When set to true, output will be flushed whenever a newline is printed.
 * 
 * Defaults to true.
 */
cljs.core._STAR_flush_on_newline_STAR_ = true;
/**
 * When set to logical false will drop newlines from printing calls.
 * This is to work around the implicit newlines emitted by standard JavaScript
 * console objects.
 */
cljs.core._STAR_print_newline_STAR_ = true;
/**
 * When set to logical false, strings and characters will be printed with
 * non-alphanumeric characters converted to the appropriate escape sequences.
 * 
 * Defaults to true
 */
cljs.core._STAR_print_readably_STAR_ = true;
/**
 * If set to logical true, when printing an object, its metadata will also
 * be printed in a form that can be read back by the reader.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_meta_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_dup_STAR_ = false;
/**
 * When set to logical true, objects will be printed in a way that preserves
 * their type when read in later.
 * 
 * Defaults to false.
 */
cljs.core._STAR_print_length_STAR_ = null;
/**
 * *print-level* controls how many levels deep the printer will
 * print nested objects. If it is bound to logical false, there is no
 * limit. Otherwise, it must be bound to an integer indicating the maximum
 * level to print. Each argument to print is at level 0; if an argument is a
 * collection, its items are at level 1; and so on. If an object is a
 * collection and is at a level greater than or equal to the value bound to
 * *print-level*, the printer prints '#' to represent it. The root binding
 * is nil indicating no limit.
 */
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function cljs$core$pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$flush_DASH_on_DASH_newline,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$readably,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$meta,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$dup,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$print_DASH_length,cljs.core._STAR_print_length_STAR_], null);
});
/**
 * Set *print-fn* to console.log
 */
cljs.core.enable_console_print_BANG_ = (function cljs$core$enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__30932__delegate = function (args){
return console.log.apply(console,(function (){var G__30931 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__30931) : cljs.core.into_array.call(null,G__30931));
})());
};
var G__30932 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__30933__i = 0, G__30933__a = new Array(arguments.length -  0);
while (G__30933__i < G__30933__a.length) {G__30933__a[G__30933__i] = arguments[G__30933__i + 0]; ++G__30933__i;}
  args = new cljs.core.IndexedSeq(G__30933__a,0);
} 
return G__30932__delegate.call(this,args);};
G__30932.cljs$lang$maxFixedArity = 0;
G__30932.cljs$lang$applyTo = (function (arglist__30934){
var args = cljs.core.seq(arglist__30934);
return G__30932__delegate(args);
});
G__30932.cljs$core$IFn$_invoke$arity$variadic = G__30932__delegate;
return G__30932;
})()
;
});
/**
 * Internal - do not use!
 */
cljs.core.truth_ = (function cljs$core$truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
 * Tests if 2 arguments are the same object
 */
cljs.core.identical_QMARK_ = (function cljs$core$identical_QMARK_(x,y){
return (x === y);
});
/**
 * Returns true if x is nil, false otherwise.
 */
cljs.core.nil_QMARK_ = (function cljs$core$nil_QMARK_(x){
return (x == null);
});
/**
 * Returns true if x is a JavaScript array.
 */
cljs.core.array_QMARK_ = (function cljs$core$array_QMARK_(x){
if((cljs.core._STAR_target_STAR_ === "nodejs")){
return Array.isArray(x);
} else {
return (x instanceof Array);
}
});
/**
 * Returns true if x is a JavaScript number.
 */
cljs.core.number_QMARK_ = (function cljs$core$number_QMARK_(n){
return typeof n === 'number';
});
/**
 * Returns true if x is logical false, false otherwise.
 */
cljs.core.not = (function cljs$core$not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
 * Returns true if x is not nil, false otherwise.
 */
cljs.core.some_QMARK_ = (function cljs$core$some_QMARK_(x){
return !((x == null));
});
/**
 * Returns true if x's constructor is Object
 */
cljs.core.object_QMARK_ = (function cljs$core$object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
/**
 * Returns true if x is a JavaScript string.
 */
cljs.core.string_QMARK_ = (function cljs$core$string_QMARK_(x){
var G__30936 = x;
return goog.isString(G__30936);
});
/**
 * Internal - do not use!
 */
cljs.core.native_satisfies_QMARK_ = (function cljs$core$native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__30938 = x__$1;
return goog.typeOf(G__30938);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function cljs$core$is_proto_(x){
return (x.constructor.prototype === x);
});
/**
 * When compiled for a command-line target, whatever
 * function *main-fn* is set to will be called with the command-line
 * argv as arguments
 */
cljs.core._STAR_main_cli_fn_STAR_ = null;
/**
 * Return x's constructor.
 */
cljs.core.type = (function cljs$core$type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function cljs$core$missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__24171__auto__ = ty;
if(cljs.core.truth_(and__24171__auto__)){
return ty.cljs$lang$type;
} else {
return and__24171__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__30940 = obj;
return goog.typeOf(G__30940);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function cljs$core$type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function cljs$core$load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.nodeGlobalRequire(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__30942 = Symbol;
return goog.typeOf(G__30942);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
/**
 * Construct a JavaScript array of specified size. Accepts ignored type
 * argument for compatibility with Clojure.
 */
cljs.core.make_array = (function() {
var cljs$core$make_array = null;
var cljs$core$make_array__1 = (function (size){
return (new Array(size));
});
var cljs$core$make_array__2 = (function (type,size){
return cljs$core$make_array.cljs$core$IFn$_invoke$arity$1(size);
});
cljs$core$make_array = function(type,size){
switch(arguments.length){
case 1:
return cljs$core$make_array__1.call(this,type);
case 2:
return cljs$core$make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$make_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$make_array__1;
cljs$core$make_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$make_array__2;
return cljs$core$make_array;
})()
;
/**
 * Returns a javascript array, cloned from the passed in array
 */
cljs.core.aclone = (function cljs$core$aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__25068__auto___30944 = len;
var i_30945 = (0);
while(true){
if((i_30945 < n__25068__auto___30944)){
(new_arr[i_30945] = (arr[i_30945]));

var G__30946 = (i_30945 + (1));
i_30945 = G__30946;
continue;
} else {
}
break;
}

return new_arr;
});
/**
 * Creates a new javascript array.
 * @param {...*} var_args
 */
cljs.core.array = (function cljs$core$array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__30947 = (i + (1));
i = G__30947;
continue;
} else {
return a;
}
break;
}
});
/**
 * Returns the value at the index.
 * @param {...*} var_args
 */
cljs.core.aget = (function() {
var cljs$core$aget = null;
var cljs$core$aget__2 = (function (array,i){
return (array[i]);
});
var cljs$core$aget__3 = (function() { 
var G__30956__delegate = function (array,i,idxs){
var G__30953 = cljs$core$aget;
var G__30954 = cljs$core$aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__30955 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__30953,G__30954,G__30955) : cljs.core.apply.call(null,G__30953,G__30954,G__30955));
};
var G__30956 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__30957__i = 0, G__30957__a = new Array(arguments.length -  2);
while (G__30957__i < G__30957__a.length) {G__30957__a[G__30957__i] = arguments[G__30957__i + 2]; ++G__30957__i;}
  idxs = new cljs.core.IndexedSeq(G__30957__a,0);
} 
return G__30956__delegate.call(this,array,i,idxs);};
G__30956.cljs$lang$maxFixedArity = 2;
G__30956.cljs$lang$applyTo = (function (arglist__30958){
var array = cljs.core.first(arglist__30958);
arglist__30958 = cljs.core.next(arglist__30958);
var i = cljs.core.first(arglist__30958);
var idxs = cljs.core.rest(arglist__30958);
return G__30956__delegate(array,i,idxs);
});
G__30956.cljs$core$IFn$_invoke$arity$variadic = G__30956__delegate;
return G__30956;
})()
;
cljs$core$aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return cljs$core$aget__2.call(this,array,i);
default:
var G__30959 = null;
if (arguments.length > 2) {
var G__30960__i = 0, G__30960__a = new Array(arguments.length -  2);
while (G__30960__i < G__30960__a.length) {G__30960__a[G__30960__i] = arguments[G__30960__i + 2]; ++G__30960__i;}
G__30959 = new cljs.core.IndexedSeq(G__30960__a,0);
}
return cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__30959);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aget.cljs$lang$maxFixedArity = 2;
cljs$core$aget.cljs$lang$applyTo = cljs$core$aget__3.cljs$lang$applyTo;
cljs$core$aget.cljs$core$IFn$_invoke$arity$2 = cljs$core$aget__2;
cljs$core$aget.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aget__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aget;
})()
;
/**
 * Sets the value at the index.
 * @param {...*} var_args
 */
cljs.core.aset = (function() {
var cljs$core$aset = null;
var cljs$core$aset__3 = (function (array,i,val){
return (array[i] = val);
});
var cljs$core$aset__4 = (function() { 
var G__30969__delegate = function (array,idx,idx2,idxv){
var G__30965 = cljs$core$aset;
var G__30966 = (array[idx]);
var G__30967 = idx2;
var G__30968 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__30965,G__30966,G__30967,G__30968) : cljs.core.apply.call(null,G__30965,G__30966,G__30967,G__30968));
};
var G__30969 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__30970__i = 0, G__30970__a = new Array(arguments.length -  3);
while (G__30970__i < G__30970__a.length) {G__30970__a[G__30970__i] = arguments[G__30970__i + 3]; ++G__30970__i;}
  idxv = new cljs.core.IndexedSeq(G__30970__a,0);
} 
return G__30969__delegate.call(this,array,idx,idx2,idxv);};
G__30969.cljs$lang$maxFixedArity = 3;
G__30969.cljs$lang$applyTo = (function (arglist__30971){
var array = cljs.core.first(arglist__30971);
arglist__30971 = cljs.core.next(arglist__30971);
var idx = cljs.core.first(arglist__30971);
arglist__30971 = cljs.core.next(arglist__30971);
var idx2 = cljs.core.first(arglist__30971);
var idxv = cljs.core.rest(arglist__30971);
return G__30969__delegate(array,idx,idx2,idxv);
});
G__30969.cljs$core$IFn$_invoke$arity$variadic = G__30969__delegate;
return G__30969;
})()
;
cljs$core$aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return cljs$core$aset__3.call(this,array,idx,idx2);
default:
var G__30972 = null;
if (arguments.length > 3) {
var G__30973__i = 0, G__30973__a = new Array(arguments.length -  3);
while (G__30973__i < G__30973__a.length) {G__30973__a[G__30973__i] = arguments[G__30973__i + 3]; ++G__30973__i;}
G__30972 = new cljs.core.IndexedSeq(G__30973__a,0);
}
return cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__30972);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$aset.cljs$lang$maxFixedArity = 3;
cljs$core$aset.cljs$lang$applyTo = cljs$core$aset__4.cljs$lang$applyTo;
cljs$core$aset.cljs$core$IFn$_invoke$arity$3 = cljs$core$aset__3;
cljs$core$aset.cljs$core$IFn$_invoke$arity$variadic = cljs$core$aset__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$aset;
})()
;
/**
 * Returns the length of the array. Works on arrays of all types.
 */
cljs.core.alength = (function cljs$core$alength(array){
return array.length;
});
/**
 * Returns an array with components set to the values in aseq. Optional type
 * argument accepted for compatibility with Clojure.
 */
cljs.core.into_array = (function() {
var cljs$core$into_array = null;
var cljs$core$into_array__1 = (function (aseq){
return cljs$core$into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var cljs$core$into_array__2 = (function (type,aseq){
var G__30979 = (function (a,x){
a.push(x);

return a;
});
var G__30980 = [];
var G__30981 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__30979,G__30980,G__30981) : cljs.core.reduce.call(null,G__30979,G__30980,G__30981));
});
cljs$core$into_array = function(type,aseq){
switch(arguments.length){
case 1:
return cljs$core$into_array__1.call(this,type);
case 2:
return cljs$core$into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$into_array__1;
cljs$core$into_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$into_array__2;
return cljs$core$into_array;
})()
;
/**
 * Invoke JavaScript object method via string. Needed when the
 * string is not a valid unquoted property name.
 * @param {...*} var_args
 */
cljs.core.js_invoke = (function() { 
var cljs$core$js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var cljs$core$js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__30982__i = 0, G__30982__a = new Array(arguments.length -  2);
while (G__30982__i < G__30982__a.length) {G__30982__a[G__30982__i] = arguments[G__30982__i + 2]; ++G__30982__i;}
  args = new cljs.core.IndexedSeq(G__30982__a,0);
} 
return cljs$core$js_invoke__delegate.call(this,obj,s,args);};
cljs$core$js_invoke.cljs$lang$maxFixedArity = 2;
cljs$core$js_invoke.cljs$lang$applyTo = (function (arglist__30983){
var obj = cljs.core.first(arglist__30983);
arglist__30983 = cljs.core.next(arglist__30983);
var s = cljs.core.first(arglist__30983);
var args = cljs.core.rest(arglist__30983);
return cljs$core$js_invoke__delegate(obj,s,args);
});
cljs$core$js_invoke.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_invoke__delegate;
return cljs$core$js_invoke;
})()
;

/**
 * Marker protocol
 */
cljs.core.Fn = (function (){var obj30985 = {};
return obj30985;
})();


/**
 * Protocol for adding the ability to invoke an object as a function.
 * For example, a vector can also be used to look up a value:
 * ([1 2 3 4] 1) => 2
 */
cljs.core.IFn = (function (){var obj30987 = {};
return obj30987;
})();

cljs.core._invoke = (function() {
var cljs$core$_invoke = null;
var cljs$core$_invoke__1 = (function (this$){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31033 = x__24819__auto__;
return goog.typeOf(G__31033);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var cljs$core$_invoke__2 = (function (this$,a){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31035 = x__24819__auto__;
return goog.typeOf(G__31035);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var cljs$core$_invoke__3 = (function (this$,a,b){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31037 = x__24819__auto__;
return goog.typeOf(G__31037);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var cljs$core$_invoke__4 = (function (this$,a,b,c){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31039 = x__24819__auto__;
return goog.typeOf(G__31039);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var cljs$core$_invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31041 = x__24819__auto__;
return goog.typeOf(G__31041);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var cljs$core$_invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31043 = x__24819__auto__;
return goog.typeOf(G__31043);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var cljs$core$_invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31045 = x__24819__auto__;
return goog.typeOf(G__31045);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var cljs$core$_invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31047 = x__24819__auto__;
return goog.typeOf(G__31047);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var cljs$core$_invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31049 = x__24819__auto__;
return goog.typeOf(G__31049);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var cljs$core$_invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31051 = x__24819__auto__;
return goog.typeOf(G__31051);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var cljs$core$_invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31053 = x__24819__auto__;
return goog.typeOf(G__31053);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var cljs$core$_invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31055 = x__24819__auto__;
return goog.typeOf(G__31055);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var cljs$core$_invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31057 = x__24819__auto__;
return goog.typeOf(G__31057);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var cljs$core$_invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31059 = x__24819__auto__;
return goog.typeOf(G__31059);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var cljs$core$_invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31061 = x__24819__auto__;
return goog.typeOf(G__31061);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var cljs$core$_invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31063 = x__24819__auto__;
return goog.typeOf(G__31063);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var cljs$core$_invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31065 = x__24819__auto__;
return goog.typeOf(G__31065);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var cljs$core$_invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31067 = x__24819__auto__;
return goog.typeOf(G__31067);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var cljs$core$_invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31069 = x__24819__auto__;
return goog.typeOf(G__31069);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var cljs$core$_invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31071 = x__24819__auto__;
return goog.typeOf(G__31071);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var cljs$core$_invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31073 = x__24819__auto__;
return goog.typeOf(G__31073);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var cljs$core$_invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._invoke[(function (){var G__31075 = x__24819__auto__;
return goog.typeOf(G__31075);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._invoke["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
cljs$core$_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return cljs$core$_invoke__1.call(this,this$);
case 2:
return cljs$core$_invoke__2.call(this,this$,a);
case 3:
return cljs$core$_invoke__3.call(this,this$,a,b);
case 4:
return cljs$core$_invoke__4.call(this,this$,a,b,c);
case 5:
return cljs$core$_invoke__5.call(this,this$,a,b,c,d);
case 6:
return cljs$core$_invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return cljs$core$_invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return cljs$core$_invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return cljs$core$_invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return cljs$core$_invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return cljs$core$_invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return cljs$core$_invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return cljs$core$_invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return cljs$core$_invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return cljs$core$_invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return cljs$core$_invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return cljs$core$_invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return cljs$core$_invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return cljs$core$_invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return cljs$core$_invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return cljs$core$_invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return cljs$core$_invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$1 = cljs$core$_invoke__1;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$2 = cljs$core$_invoke__2;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$3 = cljs$core$_invoke__3;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$4 = cljs$core$_invoke__4;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$5 = cljs$core$_invoke__5;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$6 = cljs$core$_invoke__6;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$7 = cljs$core$_invoke__7;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$8 = cljs$core$_invoke__8;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$9 = cljs$core$_invoke__9;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$10 = cljs$core$_invoke__10;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$11 = cljs$core$_invoke__11;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$12 = cljs$core$_invoke__12;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$13 = cljs$core$_invoke__13;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$14 = cljs$core$_invoke__14;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$15 = cljs$core$_invoke__15;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$16 = cljs$core$_invoke__16;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$17 = cljs$core$_invoke__17;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$18 = cljs$core$_invoke__18;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$19 = cljs$core$_invoke__19;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$20 = cljs$core$_invoke__20;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$21 = cljs$core$_invoke__21;
cljs$core$_invoke.cljs$core$IFn$_invoke$arity$22 = cljs$core$_invoke__22;
return cljs$core$_invoke;
})()
;


/**
 * Protocol for cloning a value.
 */
cljs.core.ICloneable = (function (){var obj31077 = {};
return obj31077;
})();

/**
 * Creates a clone of value.
 */
cljs.core._clone = (function cljs$core$_clone(value){
if((function (){var and__24171__auto__ = value;
if(and__24171__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__24171__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__24819__auto__ = (((value == null))?null:value);
return (function (){var or__24183__auto__ = (cljs.core._clone[(function (){var G__31081 = x__24819__auto__;
return goog.typeOf(G__31081);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._clone["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


/**
 * Protocol for adding the ability to count a collection in constant time.
 */
cljs.core.ICounted = (function (){var obj31083 = {};
return obj31083;
})();

/**
 * Calculates the count of coll in constant time. Used by cljs.core/count.
 */
cljs.core._count = (function cljs$core$_count(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._count[(function (){var G__31087 = x__24819__auto__;
return goog.typeOf(G__31087);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._count["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for creating an empty collection.
 */
cljs.core.IEmptyableCollection = (function (){var obj31089 = {};
return obj31089;
})();

/**
 * Returns an empty collection of the same category as coll. Used
 * by cljs.core/count.
 */
cljs.core._empty = (function cljs$core$_empty(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._empty[(function (){var G__31093 = x__24819__auto__;
return goog.typeOf(G__31093);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._empty["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding to a collection.
 */
cljs.core.ICollection = (function (){var obj31095 = {};
return obj31095;
})();

/**
 * Returns a new collection of coll with o added to it. The new item
 * should be added to the most efficient place, e.g.
 * (conj [1 2 3 4] 5) => [1 2 3 4 5]
 * (conj '(2 3 4 5) 1) => '(1 2 3 4 5)
 */
cljs.core._conj = (function cljs$core$_conj(coll,o){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._conj[(function (){var G__31099 = x__24819__auto__;
return goog.typeOf(G__31099);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._conj["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


/**
 * Protocol for collections to provide idexed-based access to their items.
 */
cljs.core.IIndexed = (function (){var obj31101 = {};
return obj31101;
})();

/**
 * Returns the value at the index n in the collection coll.
 * Returns not-found if index n is out of bounds and not-found is supplied.
 */
cljs.core._nth = (function() {
var cljs$core$_nth = null;
var cljs$core$_nth__2 = (function (coll,n){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._nth[(function (){var G__31107 = x__24819__auto__;
return goog.typeOf(G__31107);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._nth["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var cljs$core$_nth__3 = (function (coll,n,not_found){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._nth[(function (){var G__31109 = x__24819__auto__;
return goog.typeOf(G__31109);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._nth["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
cljs$core$_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$_nth__2.call(this,coll,n);
case 3:
return cljs$core$_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$_nth__2;
cljs$core$_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$_nth__3;
return cljs$core$_nth;
})()
;


/**
 * Marker protocol indicating an array sequence.
 */
cljs.core.ASeq = (function (){var obj31111 = {};
return obj31111;
})();


/**
 * Protocol for collections to provide access to their items as sequences.
 */
cljs.core.ISeq = (function (){var obj31113 = {};
return obj31113;
})();

/**
 * Returns the first item in the collection coll. Used by cljs.core/first.
 */
cljs.core._first = (function cljs$core$_first(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._first[(function (){var G__31117 = x__24819__auto__;
return goog.typeOf(G__31117);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._first["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new collection of coll without the first item. It should
 * always return a seq, e.g.
 * (rest []) => ()
 * (rest nil) => ()
 */
cljs.core._rest = (function cljs$core$_rest(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._rest[(function (){var G__31121 = x__24819__auto__;
return goog.typeOf(G__31121);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._rest["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the next items of a collection.
 */
cljs.core.INext = (function (){var obj31123 = {};
return obj31123;
})();

/**
 * Returns a new collection of coll without the first item. In contrast to
 * rest, it should return nil if there are no more items, e.g.
 * (next []) => nil
 * (next nil) => nil
 */
cljs.core._next = (function cljs$core$_next(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._next[(function (){var G__31127 = x__24819__auto__;
return goog.typeOf(G__31127);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._next["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for looking up a value in a data structure.
 */
cljs.core.ILookup = (function (){var obj31129 = {};
return obj31129;
})();

/**
 * Use k to look up a value in o. If not-found is supplied and k is not
 * a valid value that can be used for look up, not-found is returned.
 */
cljs.core._lookup = (function() {
var cljs$core$_lookup = null;
var cljs$core$_lookup__2 = (function (o,k){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._lookup[(function (){var G__31135 = x__24819__auto__;
return goog.typeOf(G__31135);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._lookup["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var cljs$core$_lookup__3 = (function (o,k,not_found){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._lookup[(function (){var G__31137 = x__24819__auto__;
return goog.typeOf(G__31137);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._lookup["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
cljs$core$_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$_lookup__2.call(this,o,k);
case 3:
return cljs$core$_lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$2 = cljs$core$_lookup__2;
cljs$core$_lookup.cljs$core$IFn$_invoke$arity$3 = cljs$core$_lookup__3;
return cljs$core$_lookup;
})()
;


/**
 * Protocol for adding associativity to collections.
 */
cljs.core.IAssociative = (function (){var obj31139 = {};
return obj31139;
})();

/**
 * Returns true if k is a key in coll.
 */
cljs.core._contains_key_QMARK_ = (function cljs$core$_contains_key_QMARK_(coll,k){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__31143 = x__24819__auto__;
return goog.typeOf(G__31143);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

/**
 * Returns a new collection of coll with a mapping from key k to
 * value v added to it.
 */
cljs.core._assoc = (function cljs$core$_assoc(coll,k,v){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._assoc[(function (){var G__31147 = x__24819__auto__;
return goog.typeOf(G__31147);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._assoc["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


/**
 * Protocol for adding mapping functionality to collections.
 */
cljs.core.IMap = (function (){var obj31149 = {};
return obj31149;
})();

/**
 * Returns a new collection of coll without the mapping for key k.
 */
cljs.core._dissoc = (function cljs$core$_dissoc(coll,k){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._dissoc[(function (){var G__31153 = x__24819__auto__;
return goog.typeOf(G__31153);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._dissoc["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


/**
 * Protocol for examining a map entry.
 */
cljs.core.IMapEntry = (function (){var obj31155 = {};
return obj31155;
})();

/**
 * Returns the key of the map entry.
 */
cljs.core._key = (function cljs$core$_key(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._key[(function (){var G__31159 = x__24819__auto__;
return goog.typeOf(G__31159);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._key["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns the value of the map entry.
 */
cljs.core._val = (function cljs$core$_val(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._val[(function (){var G__31163 = x__24819__auto__;
return goog.typeOf(G__31163);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._val["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding set functionality to a collection.
 */
cljs.core.ISet = (function (){var obj31165 = {};
return obj31165;
})();

/**
 * Returns a new collection of coll that does not contain v.
 */
cljs.core._disjoin = (function cljs$core$_disjoin(coll,v){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._disjoin[(function (){var G__31169 = x__24819__auto__;
return goog.typeOf(G__31169);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._disjoin["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


/**
 * Protocol for collections to provide access to their items as stacks. The top
 * of the stack should be accessed in the most efficient way for the different
 * data structures.
 */
cljs.core.IStack = (function (){var obj31171 = {};
return obj31171;
})();

/**
 * Returns the item from the top of the stack. Is used by cljs.core/peek.
 */
cljs.core._peek = (function cljs$core$_peek(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._peek[(function (){var G__31175 = x__24819__auto__;
return goog.typeOf(G__31175);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._peek["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

/**
 * Returns a new stack without the item on top of the stack. Is used
 * by cljs.core/pop.
 */
cljs.core._pop = (function cljs$core$_pop(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._pop[(function (){var G__31179 = x__24819__auto__;
return goog.typeOf(G__31179);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._pop["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding vector functionality to collections.
 */
cljs.core.IVector = (function (){var obj31181 = {};
return obj31181;
})();

/**
 * Returns a new vector with value val added at position n.
 */
cljs.core._assoc_n = (function cljs$core$_assoc_n(coll,n,val){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._assoc_n[(function (){var G__31185 = x__24819__auto__;
return goog.typeOf(G__31185);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


/**
 * Protocol for adding dereference functionality to a reference.
 */
cljs.core.IDeref = (function (){var obj31187 = {};
return obj31187;
})();

/**
 * Returns the value of the reference o.
 */
cljs.core._deref = (function cljs$core$_deref(o){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._deref[(function (){var G__31191 = x__24819__auto__;
return goog.typeOf(G__31191);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._deref["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj31193 = {};
return obj31193;
})();

cljs.core._deref_with_timeout = (function cljs$core$_deref_with_timeout(o,msec,timeout_val){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._deref_with_timeout[(function (){var G__31197 = x__24819__auto__;
return goog.typeOf(G__31197);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


/**
 * Protocol for accessing the metadata of an object.
 */
cljs.core.IMeta = (function (){var obj31199 = {};
return obj31199;
})();

/**
 * Returns the metadata of object o.
 */
cljs.core._meta = (function cljs$core$_meta(o){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._meta[(function (){var G__31203 = x__24819__auto__;
return goog.typeOf(G__31203);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._meta["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding metadata to an object.
 */
cljs.core.IWithMeta = (function (){var obj31205 = {};
return obj31205;
})();

/**
 * Returns a new object with value of o and metadata meta added to it.
 */
cljs.core._with_meta = (function cljs$core$_with_meta(o,meta){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._with_meta[(function (){var G__31209 = x__24819__auto__;
return goog.typeOf(G__31209);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._with_meta["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


/**
 * Protocol for seq types that can reduce themselves.
 * Called by cljs.core/reduce.
 */
cljs.core.IReduce = (function (){var obj31211 = {};
return obj31211;
})();

/**
 * f should be a function of 2 arguments. If start is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc.
 */
cljs.core._reduce = (function() {
var cljs$core$_reduce = null;
var cljs$core$_reduce__2 = (function (coll,f){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._reduce[(function (){var G__31217 = x__24819__auto__;
return goog.typeOf(G__31217);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._reduce["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var cljs$core$_reduce__3 = (function (coll,f,start){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._reduce[(function (){var G__31219 = x__24819__auto__;
return goog.typeOf(G__31219);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._reduce["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
cljs$core$_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return cljs$core$_reduce__2.call(this,coll,f);
case 3:
return cljs$core$_reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$_reduce__2;
cljs$core$_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$_reduce__3;
return cljs$core$_reduce;
})()
;


/**
 * Protocol for associative types that can reduce themselves
 * via a function of key and val. Called by cljs.core/reduce-kv.
 */
cljs.core.IKVReduce = (function (){var obj31221 = {};
return obj31221;
})();

/**
 * Reduces an associative collection and returns the result. f should be
 * a function that takes three arguments.
 */
cljs.core._kv_reduce = (function cljs$core$_kv_reduce(coll,f,init){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._kv_reduce[(function (){var G__31225 = x__24819__auto__;
return goog.typeOf(G__31225);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


/**
 * Protocol for adding value comparison functionality to a type.
 */
cljs.core.IEquiv = (function (){var obj31227 = {};
return obj31227;
})();

/**
 * Returns true if o and other are equal, false otherwise.
 */
cljs.core._equiv = (function cljs$core$_equiv(o,other){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._equiv[(function (){var G__31231 = x__24819__auto__;
return goog.typeOf(G__31231);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._equiv["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


/**
 * Protocol for adding hashing functionality to a type.
 */
cljs.core.IHash = (function (){var obj31233 = {};
return obj31233;
})();

/**
 * Returns the hash code of o.
 */
cljs.core._hash = (function cljs$core$_hash(o){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._hash[(function (){var G__31237 = x__24819__auto__;
return goog.typeOf(G__31237);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._hash["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


/**
 * Protocol for adding the ability to a type to be transformed into a sequence.
 */
cljs.core.ISeqable = (function (){var obj31239 = {};
return obj31239;
})();

/**
 * Returns a seq of o, or nil if o is empty.
 */
cljs.core._seq = (function cljs$core$_seq(o){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._seq[(function (){var G__31243 = x__24819__auto__;
return goog.typeOf(G__31243);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._seq["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


/**
 * Marker interface indicating a persistent collection of sequential items
 */
cljs.core.ISequential = (function (){var obj31245 = {};
return obj31245;
})();


/**
 * Marker interface indicating a persistent list
 */
cljs.core.IList = (function (){var obj31247 = {};
return obj31247;
})();


/**
 * Marker interface indicating a record object
 */
cljs.core.IRecord = (function (){var obj31249 = {};
return obj31249;
})();


/**
 * Protocol for reversing a seq.
 */
cljs.core.IReversible = (function (){var obj31251 = {};
return obj31251;
})();

/**
 * Returns a seq of the items in coll in reversed order.
 */
cljs.core._rseq = (function cljs$core$_rseq(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._rseq[(function (){var G__31255 = x__24819__auto__;
return goog.typeOf(G__31255);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._rseq["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for a collection which can represent their items
 * in a sorted manner.
 */
cljs.core.ISorted = (function (){var obj31257 = {};
return obj31257;
})();

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 */
cljs.core._sorted_seq = (function cljs$core$_sorted_seq(coll,ascending_QMARK_){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._sorted_seq[(function (){var G__31261 = x__24819__auto__;
return goog.typeOf(G__31261);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

/**
 * Returns a sorted seq from coll in either ascending or descending order.
 * If ascending is true, the result should contain all items which are > or >=
 * than k. If ascending is false, the result should contain all items which
 * are < or <= than k, e.g.
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 true) => (3 4 5)
 * (-sorted-seq-from (sorted-set 1 2 3 4 5) 3 false) => (3 2 1)
 */
cljs.core._sorted_seq_from = (function cljs$core$_sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._sorted_seq_from[(function (){var G__31265 = x__24819__auto__;
return goog.typeOf(G__31265);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

/**
 * Returns the key for entry.
 */
cljs.core._entry_key = (function cljs$core$_entry_key(coll,entry){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._entry_key[(function (){var G__31269 = x__24819__auto__;
return goog.typeOf(G__31269);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._entry_key["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

/**
 * Returns the comparator for coll.
 */
cljs.core._comparator = (function cljs$core$_comparator(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._comparator[(function (){var G__31273 = x__24819__auto__;
return goog.typeOf(G__31273);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._comparator["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for writing. Currently only implemented by StringBufferWriter.
 */
cljs.core.IWriter = (function (){var obj31275 = {};
return obj31275;
})();

/**
 * Writes s with writer and returns the result.
 */
cljs.core._write = (function cljs$core$_write(writer,s){
if((function (){var and__24171__auto__ = writer;
if(and__24171__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__24171__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__24819__auto__ = (((writer == null))?null:writer);
return (function (){var or__24183__auto__ = (cljs.core._write[(function (){var G__31279 = x__24819__auto__;
return goog.typeOf(G__31279);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._write["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

/**
 * Flush writer.
 */
cljs.core._flush = (function cljs$core$_flush(writer){
if((function (){var and__24171__auto__ = writer;
if(and__24171__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__24171__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__24819__auto__ = (((writer == null))?null:writer);
return (function (){var or__24183__auto__ = (cljs.core._flush[(function (){var G__31283 = x__24819__auto__;
return goog.typeOf(G__31283);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._flush["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


/**
 * The old IPrintable protocol's implementation consisted of building a giant
 * list of strings to concatenate.  This involved lots of concat calls,
 * intermediate vectors, and lazy-seqs, and was very slow in some older JS
 * engines.  IPrintWithWriter implements printing via the IWriter protocol, so it
 * be implemented efficiently in terms of e.g. a StringBuffer append.
 */
cljs.core.IPrintWithWriter = (function (){var obj31285 = {};
return obj31285;
})();

cljs.core._pr_writer = (function cljs$core$_pr_writer(o,writer,opts){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._pr_writer[(function (){var G__31289 = x__24819__auto__;
return goog.typeOf(G__31289);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


/**
 * Protocol for types which can have a deferred realization. Currently only
 * implemented by Delay.
 */
cljs.core.IPending = (function (){var obj31291 = {};
return obj31291;
})();

/**
 * Returns true if a value for d has been produced, false otherwise.
 */
cljs.core._realized_QMARK_ = (function cljs$core$_realized_QMARK_(d){
if((function (){var and__24171__auto__ = d;
if(and__24171__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__24171__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__24819__auto__ = (((d == null))?null:d);
return (function (){var or__24183__auto__ = (cljs.core._realized_QMARK_[(function (){var G__31295 = x__24819__auto__;
return goog.typeOf(G__31295);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


/**
 * Protocol for types that can be watched. Currently only implemented by Atom.
 */
cljs.core.IWatchable = (function (){var obj31297 = {};
return obj31297;
})();

/**
 * Calls all watchers with this, oldval and newval.
 */
cljs.core._notify_watches = (function cljs$core$_notify_watches(this$,oldval,newval){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._notify_watches[(function (){var G__31301 = x__24819__auto__;
return goog.typeOf(G__31301);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

/**
 * Adds a watcher function f to this. Keys must be unique per reference,
 * and can be used to remove the watch with -remove-watch.
 */
cljs.core._add_watch = (function cljs$core$_add_watch(this$,key,f){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._add_watch[(function (){var G__31305 = x__24819__auto__;
return goog.typeOf(G__31305);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._add_watch["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

/**
 * Removes watcher that corresponds to key from this.
 */
cljs.core._remove_watch = (function cljs$core$_remove_watch(this$,key){
if((function (){var and__24171__auto__ = this$;
if(and__24171__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__24171__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__24819__auto__ = (((this$ == null))?null:this$);
return (function (){var or__24183__auto__ = (cljs.core._remove_watch[(function (){var G__31309 = x__24819__auto__;
return goog.typeOf(G__31309);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


/**
 * Protocol for collections which can transformed to transients.
 */
cljs.core.IEditableCollection = (function (){var obj31311 = {};
return obj31311;
})();

/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core._as_transient = (function cljs$core$_as_transient(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._as_transient[(function (){var G__31315 = x__24819__auto__;
return goog.typeOf(G__31315);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._as_transient["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding basic functionality to transient collections.
 */
cljs.core.ITransientCollection = (function (){var obj31317 = {};
return obj31317;
})();

/**
 * Adds value val to tcoll and returns tcoll.
 */
cljs.core._conj_BANG_ = (function cljs$core$_conj_BANG_(tcoll,val){
if((function (){var and__24171__auto__ = tcoll;
if(and__24171__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__24171__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__24819__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24183__auto__ = (cljs.core._conj_BANG_[(function (){var G__31321 = x__24819__auto__;
return goog.typeOf(G__31321);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

/**
 * Creates a persistent data structure from tcoll and returns it.
 */
cljs.core._persistent_BANG_ = (function cljs$core$_persistent_BANG_(tcoll){
if((function (){var and__24171__auto__ = tcoll;
if(and__24171__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__24171__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__24819__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24183__auto__ = (cljs.core._persistent_BANG_[(function (){var G__31325 = x__24819__auto__;
return goog.typeOf(G__31325);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding associativity to transient collections.
 */
cljs.core.ITransientAssociative = (function (){var obj31327 = {};
return obj31327;
})();

/**
 * Returns a new transient collection of tcoll with a mapping from key to
 * val added to it.
 */
cljs.core._assoc_BANG_ = (function cljs$core$_assoc_BANG_(tcoll,key,val){
if((function (){var and__24171__auto__ = tcoll;
if(and__24171__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__24171__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__24819__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24183__auto__ = (cljs.core._assoc_BANG_[(function (){var G__31331 = x__24819__auto__;
return goog.typeOf(G__31331);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


/**
 * Protocol for adding mapping functionality to transient collections.
 */
cljs.core.ITransientMap = (function (){var obj31333 = {};
return obj31333;
})();

/**
 * Returns a new transient collection of tcoll without the mapping for key.
 */
cljs.core._dissoc_BANG_ = (function cljs$core$_dissoc_BANG_(tcoll,key){
if((function (){var and__24171__auto__ = tcoll;
if(and__24171__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__24171__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__24819__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24183__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__31337 = x__24819__auto__;
return goog.typeOf(G__31337);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


/**
 * Protocol for adding vector functionality to transient collections.
 */
cljs.core.ITransientVector = (function (){var obj31339 = {};
return obj31339;
})();

/**
 * Returns tcoll with value val added at position n.
 */
cljs.core._assoc_n_BANG_ = (function cljs$core$_assoc_n_BANG_(tcoll,n,val){
if((function (){var and__24171__auto__ = tcoll;
if(and__24171__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__24171__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__24819__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24183__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__31343 = x__24819__auto__;
return goog.typeOf(G__31343);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

/**
 * Returns tcoll with the last item removed from it.
 */
cljs.core._pop_BANG_ = (function cljs$core$_pop_BANG_(tcoll){
if((function (){var and__24171__auto__ = tcoll;
if(and__24171__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__24171__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__24819__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24183__auto__ = (cljs.core._pop_BANG_[(function (){var G__31347 = x__24819__auto__;
return goog.typeOf(G__31347);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


/**
 * Protocol for adding set functionality to a transient collection.
 */
cljs.core.ITransientSet = (function (){var obj31349 = {};
return obj31349;
})();

/**
 * Returns tcoll without v.
 */
cljs.core._disjoin_BANG_ = (function cljs$core$_disjoin_BANG_(tcoll,v){
if((function (){var and__24171__auto__ = tcoll;
if(and__24171__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__24171__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__24819__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__24183__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__31353 = x__24819__auto__;
return goog.typeOf(G__31353);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


/**
 * Protocol for values that can be compared.
 */
cljs.core.IComparable = (function (){var obj31355 = {};
return obj31355;
})();

/**
 * Returns a negative number, zero, or a positive number when x is logically
 * 'less than', 'equal to', or 'greater than' y.
 */
cljs.core._compare = (function cljs$core$_compare(x,y){
if((function (){var and__24171__auto__ = x;
if(and__24171__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__24171__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__24819__auto__ = (((x == null))?null:x);
return (function (){var or__24183__auto__ = (cljs.core._compare[(function (){var G__31359 = x__24819__auto__;
return goog.typeOf(G__31359);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._compare["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


/**
 * Protocol for accessing the items of a chunk.
 */
cljs.core.IChunk = (function (){var obj31361 = {};
return obj31361;
})();

/**
 * Return a new chunk of coll with the first item removed.
 */
cljs.core._drop_first = (function cljs$core$_drop_first(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._drop_first[(function (){var G__31365 = x__24819__auto__;
return goog.typeOf(G__31365);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._drop_first["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing a collection as sequential chunks.
 */
cljs.core.IChunkedSeq = (function (){var obj31367 = {};
return obj31367;
})();

/**
 * Returns the first chunk in coll.
 */
cljs.core._chunked_first = (function cljs$core$_chunked_first(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._chunked_first[(function (){var G__31371 = x__24819__auto__;
return goog.typeOf(G__31371);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

/**
 * Return a new collection of coll with the first chunk removed.
 */
cljs.core._chunked_rest = (function cljs$core$_chunked_rest(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._chunked_rest[(function (){var G__31375 = x__24819__auto__;
return goog.typeOf(G__31375);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for accessing the chunks of a collection.
 */
cljs.core.IChunkedNext = (function (){var obj31377 = {};
return obj31377;
})();

/**
 * Returns a new collection of coll without the first chunk.
 */
cljs.core._chunked_next = (function cljs$core$_chunked_next(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._chunked_next[(function (){var G__31381 = x__24819__auto__;
return goog.typeOf(G__31381);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


/**
 * Protocol for adding a name.
 */
cljs.core.INamed = (function (){var obj31383 = {};
return obj31383;
})();

/**
 * Returns the name String of x.
 */
cljs.core._name = (function cljs$core$_name(x){
if((function (){var and__24171__auto__ = x;
if(and__24171__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__24171__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__24819__auto__ = (((x == null))?null:x);
return (function (){var or__24183__auto__ = (cljs.core._name[(function (){var G__31387 = x__24819__auto__;
return goog.typeOf(G__31387);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._name["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

/**
 * Returns the namespace String of x.
 */
cljs.core._namespace = (function cljs$core$_namespace(x){
if((function (){var and__24171__auto__ = x;
if(and__24171__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__24171__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__24819__auto__ = (((x == null))?null:x);
return (function (){var or__24183__auto__ = (cljs.core._namespace[(function (){var G__31391 = x__24819__auto__;
return goog.typeOf(G__31391);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._namespace["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


/**
 * Marker protocol indicating an atom.
 */
cljs.core.IAtom = (function (){var obj31393 = {};
return obj31393;
})();


/**
 * Protocol for adding resetting functionality.
 */
cljs.core.IReset = (function (){var obj31395 = {};
return obj31395;
})();

/**
 * Sets the value of o to new-value.
 */
cljs.core._reset_BANG_ = (function cljs$core$_reset_BANG_(o,new_value){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._reset_BANG_[(function (){var G__31399 = x__24819__auto__;
return goog.typeOf(G__31399);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for adding swapping functionality.
 */
cljs.core.ISwap = (function (){var obj31401 = {};
return obj31401;
})();

/**
 * Swaps the value of o to be (apply f current-value-of-atom args).
 */
cljs.core._swap_BANG_ = (function() {
var cljs$core$_swap_BANG_ = null;
var cljs$core$_swap_BANG___2 = (function (o,f){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._swap_BANG_[(function (){var G__31411 = x__24819__auto__;
return goog.typeOf(G__31411);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var cljs$core$_swap_BANG___3 = (function (o,f,a){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._swap_BANG_[(function (){var G__31413 = x__24819__auto__;
return goog.typeOf(G__31413);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var cljs$core$_swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._swap_BANG_[(function (){var G__31415 = x__24819__auto__;
return goog.typeOf(G__31415);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var cljs$core$_swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._swap_BANG_[(function (){var G__31417 = x__24819__auto__;
return goog.typeOf(G__31417);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
cljs$core$_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return cljs$core$_swap_BANG___2.call(this,o,f);
case 3:
return cljs$core$_swap_BANG___3.call(this,o,f,a);
case 4:
return cljs$core$_swap_BANG___4.call(this,o,f,a,b);
case 5:
return cljs$core$_swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_swap_BANG___2;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$_swap_BANG___3;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$_swap_BANG___4;
cljs$core$_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = cljs$core$_swap_BANG___5;
return cljs$core$_swap_BANG_;
})()
;


/**
 * Protocol for adding volatile functionality.
 */
cljs.core.IVolatile = (function (){var obj31419 = {};
return obj31419;
})();

/**
 * Sets the value of volatile o to new-value without regard for the
 * current value. Returns new-value.
 */
cljs.core._vreset_BANG_ = (function cljs$core$_vreset_BANG_(o,new_value){
if((function (){var and__24171__auto__ = o;
if(and__24171__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__24171__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__24819__auto__ = (((o == null))?null:o);
return (function (){var or__24183__auto__ = (cljs.core._vreset_BANG_[(function (){var G__31423 = x__24819__auto__;
return goog.typeOf(G__31423);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


/**
 * Protocol for iterating over a collection.
 */
cljs.core.IIterable = (function (){var obj31425 = {};
return obj31425;
})();

/**
 * Returns an iterator for coll.
 */
cljs.core._iterator = (function cljs$core$_iterator(coll){
if((function (){var and__24171__auto__ = coll;
if(and__24171__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__24171__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__24819__auto__ = (((coll == null))?null:coll);
return (function (){var or__24183__auto__ = (cljs.core._iterator[(function (){var G__31429 = x__24819__auto__;
return goog.typeOf(G__31429);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._iterator["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function cljs$core$__GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
 * Support so that collections can implement toString without
 * loading all the printing machinery.
 */
cljs.core.pr_str_STAR_ = (function cljs$core$pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function cljs$core$int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__31432 = (4294967295);
var G__31433 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__31432,G__31433) : Math.imul.call(null,G__31432,G__31433));
})() === (0))))){
cljs.core.imul = (function cljs$core$imul(a,b){
var G__31436 = a;
var G__31437 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__31436,G__31437) : Math.imul.call(null,G__31436,G__31437));
});
} else {
cljs.core.imul = (function cljs$core$imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = ((3432918353) | (0));
cljs.core.m3_C2 = ((461845907) | (0));
cljs.core.m3_mix_K1 = (function cljs$core$m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul((k1 | (0)),cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function cljs$core$m3_mix_H1(h1,k1){
return ((cljs.core.imul(cljs.core.int_rotate_left(((h1 | (0)) ^ (k1 | (0))),(13)),(5)) + ((3864292196) | (0))) | (0));
});
cljs.core.m3_fmix = (function cljs$core$m3_fmix(h1,len){
var h1__$1 = (h1 | (0));
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,((2246822507) | (0)));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,((3266489909) | (0)));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function cljs$core$m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function cljs$core$m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__31438 = (i + (2));
var G__31439 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__31438;
h1 = G__31439;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj31441 = {};
return obj31441;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function cljs$core$hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__31442 = (i + (1));
var G__31443 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__31442;
hash = G__31443;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function cljs$core$add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function cljs$core$hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj31447 = {};
return obj31447;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
/**
 * Returns the hash code of its argument. Note this is the hash code
 * consistent with =.
 */
cljs.core.hash = (function cljs$core$hash(o){
if((function (){var G__31450 = o;
if(G__31450){
var bit__24850__auto__ = (G__31450.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__24850__auto__) || (G__31450.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__31451 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__31451) : Math.floor.call(null,G__31451));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function cljs$core$hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
/**
 * Evaluates x and tests if it is an instance of the type
 * c. Returns true or false
 */
cljs.core.instance_QMARK_ = (function cljs$core$instance_QMARK_(t,o){
return (o instanceof t);
});
/**
 * Return true if x is a Symbol
 */
cljs.core.symbol_QMARK_ = (function cljs$core$symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function cljs$core$hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function cljs$core$compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24171__auto__ = cljs.core.not(a.ns);
if(and__24171__auto__){
return b.ns;
} else {
return and__24171__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__31458 = a.ns;
var G__31459 = b.ns;
return goog.array.defaultCompare(G__31458,G__31459);
})();
if(((0) === nsc)){
var G__31460 = a.name;
var G__31461 = b.name;
return goog.array.defaultCompare(G__31460,G__31461);
} else {
return nsc;
}
}
} else {
var G__31462 = a.name;
var G__31463 = b.name;
return goog.array.defaultCompare(G__31462,G__31463);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__24599__auto__ = self__._hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__31465 = null;
var G__31465__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__31465__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__31465 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__31465__2.call(this,self__,coll);
case 3:
return G__31465__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31465.cljs$core$IFn$_invoke$arity$2 = G__31465__2;
G__31465.cljs$core$IFn$_invoke$arity$3 = G__31465__3;
return G__31465;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args31464){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31464)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function cljs$core$__GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var cljs$core$symbol = null;
var cljs$core$symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return cljs$core$symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var cljs$core$symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
cljs$core$symbol = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$symbol__1.call(this,ns);
case 2:
return cljs$core$symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$symbol.cljs$core$IFn$_invoke$arity$1 = cljs$core$symbol__1;
cljs$core$symbol.cljs$core$IFn$_invoke$arity$2 = cljs$core$symbol__2;
return cljs$core$symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__31513 = null;
var G__31513__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__31513__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__31513__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__31513__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__31513__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__31513__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__31513__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__31513__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__31513__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__31513__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__31513__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__31513__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__31513__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__31513__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__31513__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__31513__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__31513__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__31513__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__31513__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__31513__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__31513__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__31513__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31469 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__31470 = a;
var G__31471 = b;
var G__31472 = c;
var G__31473 = d;
var G__31474 = e;
var G__31475 = f;
var G__31476 = g;
var G__31477 = h;
var G__31478 = i;
var G__31479 = j;
var G__31480 = k;
var G__31481 = l;
var G__31482 = m;
var G__31483 = n;
var G__31484 = o;
var G__31485 = p;
var G__31486 = q;
var G__31487 = r;
var G__31488 = s;
var G__31489 = t;
var G__31490 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31469,G__31470,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476,G__31477,G__31478,G__31479,G__31480,G__31481,G__31482,G__31483,G__31484,G__31485,G__31486,G__31487,G__31488,G__31489,G__31490) : cljs.core.apply.call(null,G__31469,G__31470,G__31471,G__31472,G__31473,G__31474,G__31475,G__31476,G__31477,G__31478,G__31479,G__31480,G__31481,G__31482,G__31483,G__31484,G__31485,G__31486,G__31487,G__31488,G__31489,G__31490));
});
G__31513 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__31513__1.call(this,self__);
case 2:
return G__31513__2.call(this,self__,a);
case 3:
return G__31513__3.call(this,self__,a,b);
case 4:
return G__31513__4.call(this,self__,a,b,c);
case 5:
return G__31513__5.call(this,self__,a,b,c,d);
case 6:
return G__31513__6.call(this,self__,a,b,c,d,e);
case 7:
return G__31513__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__31513__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__31513__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__31513__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__31513__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__31513__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__31513__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__31513__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__31513__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__31513__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__31513__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__31513__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__31513__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__31513__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__31513__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__31513__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31513.cljs$core$IFn$_invoke$arity$1 = G__31513__1;
G__31513.cljs$core$IFn$_invoke$arity$2 = G__31513__2;
G__31513.cljs$core$IFn$_invoke$arity$3 = G__31513__3;
G__31513.cljs$core$IFn$_invoke$arity$4 = G__31513__4;
G__31513.cljs$core$IFn$_invoke$arity$5 = G__31513__5;
G__31513.cljs$core$IFn$_invoke$arity$6 = G__31513__6;
G__31513.cljs$core$IFn$_invoke$arity$7 = G__31513__7;
G__31513.cljs$core$IFn$_invoke$arity$8 = G__31513__8;
G__31513.cljs$core$IFn$_invoke$arity$9 = G__31513__9;
G__31513.cljs$core$IFn$_invoke$arity$10 = G__31513__10;
G__31513.cljs$core$IFn$_invoke$arity$11 = G__31513__11;
G__31513.cljs$core$IFn$_invoke$arity$12 = G__31513__12;
G__31513.cljs$core$IFn$_invoke$arity$13 = G__31513__13;
G__31513.cljs$core$IFn$_invoke$arity$14 = G__31513__14;
G__31513.cljs$core$IFn$_invoke$arity$15 = G__31513__15;
G__31513.cljs$core$IFn$_invoke$arity$16 = G__31513__16;
G__31513.cljs$core$IFn$_invoke$arity$17 = G__31513__17;
G__31513.cljs$core$IFn$_invoke$arity$18 = G__31513__18;
G__31513.cljs$core$IFn$_invoke$arity$19 = G__31513__19;
G__31513.cljs$core$IFn$_invoke$arity$20 = G__31513__20;
G__31513.cljs$core$IFn$_invoke$arity$21 = G__31513__21;
G__31513.cljs$core$IFn$_invoke$arity$22 = G__31513__22;
return G__31513;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args31468){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31468)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__31491 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__31492 = a;
var G__31493 = b;
var G__31494 = c;
var G__31495 = d;
var G__31496 = e;
var G__31497 = f;
var G__31498 = g;
var G__31499 = h;
var G__31500 = i;
var G__31501 = j;
var G__31502 = k;
var G__31503 = l;
var G__31504 = m;
var G__31505 = n;
var G__31506 = o;
var G__31507 = p;
var G__31508 = q;
var G__31509 = r;
var G__31510 = s;
var G__31511 = t;
var G__31512 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31491,G__31492,G__31493,G__31494,G__31495,G__31496,G__31497,G__31498,G__31499,G__31500,G__31501,G__31502,G__31503,G__31504,G__31505,G__31506,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512) : cljs.core.apply.call(null,G__31491,G__31492,G__31493,G__31494,G__31495,G__31496,G__31497,G__31498,G__31499,G__31500,G__31501,G__31502,G__31503,G__31504,G__31505,G__31506,G__31507,G__31508,G__31509,G__31510,G__31511,G__31512));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function cljs$core$__GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



/**
 * Return true if x implements IIterable protocol.
 */
cljs.core.iterable_QMARK_ = (function cljs$core$iterable_QMARK_(x){
var G__31515 = x;
if(G__31515){
var bit__24857__auto__ = null;
if(cljs.core.truth_((function (){var or__24183__auto__ = bit__24857__auto__;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return G__31515.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__31515.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__31515);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__31515);
}
});
/**
 * Clone the supplied value which must implement ICloneable.
 */
cljs.core.clone = (function cljs$core$clone(value){
return cljs.core._clone(value);
});
/**
 * Return true if x implements ICloneable protocol.
 */
cljs.core.cloneable_QMARK_ = (function cljs$core$cloneable_QMARK_(value){
var G__31517 = value;
if(G__31517){
var bit__24857__auto__ = (G__31517.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__24857__auto__) || (G__31517.cljs$core$ICloneable$)){
return true;
} else {
if((!G__31517.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__31517);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__31517);
}
});
/**
 * Returns a seq on the collection. If the collection is
 * empty, returns nil.  (seq nil) returns nil. seq also works on
 * Strings.
 */
cljs.core.seq = (function cljs$core$seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31519 = coll;
if(G__31519){
var bit__24850__auto__ = (G__31519.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24850__auto__) || (G__31519.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
 * Returns the first item in the collection. Calls seq on its
 * argument. If coll is nil, returns nil.
 */
cljs.core.first = (function cljs$core$first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31521 = coll;
if(G__31521){
var bit__24850__auto__ = (G__31521.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24850__auto__) || (G__31521.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
 * Returns a possibly empty seq of the items after the first. Calls seq on its
 * argument.
 */
cljs.core.rest = (function cljs$core$rest(coll){
if(!((coll == null))){
if((function (){var G__31523 = coll;
if(G__31523){
var bit__24850__auto__ = (G__31523.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24850__auto__) || (G__31523.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
 * Returns a seq of the items after the first. Calls seq on its
 * argument.  If there are no more items, returns nil
 */
cljs.core.next = (function cljs$core$next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__31525 = coll;
if(G__31525){
var bit__24850__auto__ = (G__31525.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24850__auto__) || (G__31525.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
 * Equality. Returns true if x equals y, false if not. Compares
 * numbers and collections in a type-independent manner.  Clojure's immutable data
 * structures define -equiv (and thus =) as a value, not an identity,
 * comparison.
 * @param {...*} var_args
 */
cljs.core._EQ_ = (function() {
var cljs$core$_EQ_ = null;
var cljs$core$_EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var cljs$core$_EQ___3 = (function() { 
var G__31530__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__31531 = y;
var G__31532 = cljs.core.first(more);
var G__31533 = cljs.core.next(more);
x = G__31531;
y = G__31532;
more = G__31533;
continue;
} else {
return cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__31530 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31534__i = 0, G__31534__a = new Array(arguments.length -  2);
while (G__31534__i < G__31534__a.length) {G__31534__a[G__31534__i] = arguments[G__31534__i + 2]; ++G__31534__i;}
  more = new cljs.core.IndexedSeq(G__31534__a,0);
} 
return G__31530__delegate.call(this,x,y,more);};
G__31530.cljs$lang$maxFixedArity = 2;
G__31530.cljs$lang$applyTo = (function (arglist__31535){
var x = cljs.core.first(arglist__31535);
arglist__31535 = cljs.core.next(arglist__31535);
var y = cljs.core.first(arglist__31535);
var more = cljs.core.rest(arglist__31535);
return G__31530__delegate(x,y,more);
});
G__31530.cljs$core$IFn$_invoke$arity$variadic = G__31530__delegate;
return G__31530;
})()
;
cljs$core$_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ___1.call(this,x);
case 2:
return cljs$core$_EQ___2.call(this,x,y);
default:
var G__31536 = null;
if (arguments.length > 2) {
var G__31537__i = 0, G__31537__a = new Array(arguments.length -  2);
while (G__31537__i < G__31537__a.length) {G__31537__a[G__31537__i] = arguments[G__31537__i + 2]; ++G__31537__i;}
G__31536 = new cljs.core.IndexedSeq(G__31537__a,0);
}
return cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31536);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ_.cljs$lang$applyTo = cljs$core$_EQ___3.cljs$lang$applyTo;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ___1;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ___2;
cljs$core$_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function cljs$core$__GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

/**
 * EXPERIMENTAL: Return a ES2015 compatible iterator for coll.
 */
cljs.core.es6_iterator = (function cljs$core$es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__31538 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__31538) : cljs.core.es6_iterator_seq.call(null,G__31538));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function cljs$core$__GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

/**
 * EXPERIMENTAL: Given an ES2015 compatible iterator return a seq.
 */
cljs.core.es6_iterator_seq = (function cljs$core$es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
 * Mix final collection hash for ordered or unordered collections.
 * hash-basis is the combined collection hash, count is the number
 * of elements included in the basis. Note this is the hash code
 * consistent with =, different from .hashCode.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.mix_collection_hash = (function cljs$core$mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
 * Returns the hash code, consistent with =, for an external ordered
 * collection implementing Iterable.
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_ordered_coll = (function cljs$core$hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__31539 = (n + (1));
var G__31540 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__31541 = cljs.core.next(coll__$1);
n = G__31539;
hash_code = G__31540;
coll__$1 = G__31541;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
 * Returns the hash code, consistent with =, for an external unordered
 * collection implementing Iterable. For maps, the iterator should
 * return map entries whose hash is computed as
 * (hash-ordered-coll [k v]).
 * See http://clojure.org/data_structures#hash for full algorithms.
 */
cljs.core.hash_unordered_coll = (function cljs$core$hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__31542 = (n + (1));
var G__31543 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__31544 = cljs.core.next(coll__$1);
n = G__31542;
hash_code = G__31543;
coll__$1 = G__31544;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IComparable$ = true;

Date.prototype.cljs$core$IComparable$_compare$arity$2 = (function (this$,other){
var this$__$1 = this;
var G__31545 = this$__$1.valueOf();
var G__31546 = other.valueOf();
return goog.array.defaultCompare(G__31545,G__31546);
});

Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.valueOf() === other.valueOf()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__31547 = o;
return goog.getUid(G__31547);
}));
/**
 * Returns a number one greater than num.
 */
cljs.core.inc = (function cljs$core$inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function cljs$core$__GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
 * Wraps x in a way such that a reduce will terminate with the value x
 */
cljs.core.reduced = (function cljs$core$reduced(x){
return (new cljs.core.Reduced(x));
});
/**
 * Returns true if x is the result of a call to reduced
 */
cljs.core.reduced_QMARK_ = (function cljs$core$reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
 * If x is already reduced?, returns it, else returns (reduced x)
 */
cljs.core.ensure_reduced = (function cljs$core$ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
 * If x is reduced?, returns (deref x), else returns x
 */
cljs.core.unreduced = (function cljs$core$unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__31549 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__31549) : cljs.core.deref.call(null,G__31549));
} else {
return x;
}
});
/**
 * Also reader macro: @var/@atom/@delay. Returns the
 * most-recently-committed value of ref. When applied to a var
 * or atom, returns its current state. When applied to a delay, forces
 * it if not already forced. See also - realized?.
 */
cljs.core.deref = (function cljs$core$deref(o){
return cljs.core._deref(o);
});
/**
 * Accepts any collection which satisfies the ICount and IIndexed protocols and
 * reduces them without incurring seq initialization
 */
cljs.core.ci_reduce = (function() {
var cljs$core$ci_reduce = null;
var cljs$core$ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__31556 = val;
var G__31557 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31556,G__31557) : f.call(null,G__31556,G__31557));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31562 = nval;
var G__31563 = (n + (1));
val = G__31562;
n = G__31563;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__31558 = val__$1;
var G__31559 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31558,G__31559) : f.call(null,G__31558,G__31559));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31564 = nval;
var G__31565 = (n + (1));
val__$1 = G__31564;
n = G__31565;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__31560 = val__$1;
var G__31561 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31560,G__31561) : f.call(null,G__31560,G__31561));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31566 = nval;
var G__31567 = (n + (1));
val__$1 = G__31566;
n = G__31567;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$ci_reduce__2.call(this,cicoll,f);
case 3:
return cljs$core$ci_reduce__3.call(this,cicoll,f,val);
case 4:
return cljs$core$ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$ci_reduce__2;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$ci_reduce__3;
cljs$core$ci_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$ci_reduce__4;
return cljs$core$ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var cljs$core$array_reduce = null;
var cljs$core$array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__31574 = val;
var G__31575 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31574,G__31575) : f.call(null,G__31574,G__31575));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31580 = nval;
var G__31581 = (n + (1));
val = G__31580;
n = G__31581;
continue;
}
} else {
return val;
}
break;
}
}
});
var cljs$core$array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__31576 = val__$1;
var G__31577 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31576,G__31577) : f.call(null,G__31576,G__31577));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31582 = nval;
var G__31583 = (n + (1));
val__$1 = G__31582;
n = G__31583;
continue;
}
} else {
return val__$1;
}
break;
}
});
var cljs$core$array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__31578 = val__$1;
var G__31579 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31578,G__31579) : f.call(null,G__31578,G__31579));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__31584 = nval;
var G__31585 = (n + (1));
val__$1 = G__31584;
n = G__31585;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return cljs$core$array_reduce__2.call(this,arr,f);
case 3:
return cljs$core$array_reduce__3.call(this,arr,f,val);
case 4:
return cljs$core$array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_reduce__2;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_reduce__3;
cljs$core$array_reduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$array_reduce__4;
return cljs$core$array_reduce;
})()
;



/**
 * Returns true if coll implements count in constant time
 */
cljs.core.counted_QMARK_ = (function cljs$core$counted_QMARK_(x){
var G__31587 = x;
if(G__31587){
var bit__24857__auto__ = (G__31587.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24857__auto__) || (G__31587.cljs$core$ICounted$)){
return true;
} else {
if((!G__31587.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__31587);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__31587);
}
});
/**
 * Returns true if coll implements nth in constant time
 */
cljs.core.indexed_QMARK_ = (function cljs$core$indexed_QMARK_(x){
var G__31589 = x;
if(G__31589){
var bit__24857__auto__ = (G__31589.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24857__auto__) || (G__31589.cljs$core$IIndexed$)){
return true;
} else {
if((!G__31589.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__31589);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__31589);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function cljs$core$__GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__31590 = coll__$1;
var G__31591 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__31590,G__31591) : cljs.core.equiv_sequential.call(null,G__31590,G__31591));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31592 = o;
var G__31593 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__31592,G__31593) : cljs.core.cons.call(null,G__31592,G__31593));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function cljs$core$__GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Create seq from a primitive JavaScript Array-like.
 */
cljs.core.prim_seq = (function() {
var cljs$core$prim_seq = null;
var cljs$core$prim_seq__1 = (function (prim){
return cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var cljs$core$prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
cljs$core$prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return cljs$core$prim_seq__1.call(this,prim);
case 2:
return cljs$core$prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$prim_seq__1;
cljs$core$prim_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$prim_seq__2;
return cljs$core$prim_seq;
})()
;
/**
 * Create a seq from a JavaScript array.
 */
cljs.core.array_seq = (function() {
var cljs$core$array_seq = null;
var cljs$core$array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var cljs$core$array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
cljs$core$array_seq = function(array,i){
switch(arguments.length){
case 1:
return cljs$core$array_seq__1.call(this,array);
case 2:
return cljs$core$array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_seq__1;
cljs$core$array_seq.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_seq__2;
return cljs$core$array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__31596 = coll__$1;
var G__31597 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__31596,G__31597) : cljs.core.equiv_sequential.call(null,G__31596,G__31597));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__31598 = cljs.core.List.EMPTY;
var G__31599 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__31598,G__31599) : cljs.core.with_meta.call(null,G__31598,G__31599));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__31600 = f;
var G__31601 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__31600,G__31601) : cljs.core.seq_reduce.call(null,G__31600,G__31601));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__31602 = f;
var G__31603 = start;
var G__31604 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__31602,G__31603,G__31604) : cljs.core.seq_reduce.call(null,G__31602,G__31603,G__31604));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__31605 = o;
var G__31606 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__31605,G__31606) : cljs.core.cons.call(null,G__31605,G__31606));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function cljs$core$__GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Same as (first (next x))
 */
cljs.core.second = (function cljs$core$second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (first (first x))
 */
cljs.core.ffirst = (function cljs$core$ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
 * Same as (next (first x))
 */
cljs.core.nfirst = (function cljs$core$nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
 * Same as (first (next x))
 */
cljs.core.fnext = (function cljs$core$fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
 * Same as (next (next x))
 */
cljs.core.nnext = (function cljs$core$nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
 * Return the last item in coll, in linear time
 */
cljs.core.last = (function cljs$core$last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__31607 = sn;
s = G__31607;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
 * conj[oin]. Returns a new collection with the xs
 * 'added'. (conj nil item) returns (item).  The 'addition' may
 * happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj = (function() {
var cljs$core$conj = null;
var cljs$core$conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var cljs$core$conj__1 = (function (coll){
return coll;
});
var cljs$core$conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var cljs$core$conj__3 = (function() { 
var G__31612__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__31613 = cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__31614 = cljs.core.first(xs);
var G__31615 = cljs.core.next(xs);
coll = G__31613;
x = G__31614;
xs = G__31615;
continue;
} else {
return cljs$core$conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__31612 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__31616__i = 0, G__31616__a = new Array(arguments.length -  2);
while (G__31616__i < G__31616__a.length) {G__31616__a[G__31616__i] = arguments[G__31616__i + 2]; ++G__31616__i;}
  xs = new cljs.core.IndexedSeq(G__31616__a,0);
} 
return G__31612__delegate.call(this,coll,x,xs);};
G__31612.cljs$lang$maxFixedArity = 2;
G__31612.cljs$lang$applyTo = (function (arglist__31617){
var coll = cljs.core.first(arglist__31617);
arglist__31617 = cljs.core.next(arglist__31617);
var x = cljs.core.first(arglist__31617);
var xs = cljs.core.rest(arglist__31617);
return G__31612__delegate(coll,x,xs);
});
G__31612.cljs$core$IFn$_invoke$arity$variadic = G__31612__delegate;
return G__31612;
})()
;
cljs$core$conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj__0.call(this);
case 1:
return cljs$core$conj__1.call(this,coll);
case 2:
return cljs$core$conj__2.call(this,coll,x);
default:
var G__31618 = null;
if (arguments.length > 2) {
var G__31619__i = 0, G__31619__a = new Array(arguments.length -  2);
while (G__31619__i < G__31619__a.length) {G__31619__a[G__31619__i] = arguments[G__31619__i + 2]; ++G__31619__i;}
G__31618 = new cljs.core.IndexedSeq(G__31619__a,0);
}
return cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__31618);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj.cljs$lang$maxFixedArity = 2;
cljs$core$conj.cljs$lang$applyTo = cljs$core$conj__3.cljs$lang$applyTo;
cljs$core$conj.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj__0;
cljs$core$conj.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj__1;
cljs$core$conj.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj__2;
cljs$core$conj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj;
})()
;
/**
 * Returns an empty collection of the same category as coll, or nil
 */
cljs.core.empty = (function cljs$core$empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function cljs$core$accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__31620 = cljs.core.next(s);
var G__31621 = (acc + (1));
s = G__31620;
acc = G__31621;
continue;
}
break;
}
});
/**
 * Returns the number of items in the collection. (count nil) returns
 * 0.  Also works on strings, arrays, and Maps
 */
cljs.core.count = (function cljs$core$count(coll){
if(!((coll == null))){
if((function (){var G__31623 = coll;
if(G__31623){
var bit__24850__auto__ = (G__31623.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__24850__auto__) || (G__31623.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(cljs.core.array_QMARK_(coll)){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var cljs$core$linear_traversal_nth = null;
var cljs$core$linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__31624 = cljs.core.next(coll);
var G__31625 = (n - (1));
coll = G__31624;
n = G__31625;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var cljs$core$linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__31626 = cljs.core.next(coll);
var G__31627 = (n - (1));
var G__31628 = not_found;
coll = G__31626;
n = G__31627;
not_found = G__31628;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
cljs$core$linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$linear_traversal_nth__2.call(this,coll,n);
case 3:
return cljs$core$linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$linear_traversal_nth__2;
cljs$core$linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$linear_traversal_nth__3;
return cljs$core$linear_traversal_nth;
})()
;
/**
 * Returns the value at the index. get returns nil if index out of
 * bounds, nth throws an exception unless not-found is supplied.  nth
 * also works for strings, arrays, regex Matchers and Lists, and,
 * in O(n) time, for sequences.
 */
cljs.core.nth = (function() {
var cljs$core$nth = null;
var cljs$core$nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__31633 = coll;
if(G__31633){
var bit__24850__auto__ = (G__31633.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24850__auto__) || (G__31633.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__31634 = coll;
if(G__31634){
var bit__24857__auto__ = (G__31634.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24857__auto__) || (G__31634.cljs$core$ISeq$)){
return true;
} else {
if((!G__31634.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31634);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31634);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var cljs$core$nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__31635 = coll;
if(G__31635){
var bit__24850__auto__ = (G__31635.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__24850__auto__) || (G__31635.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(cljs.core.array_QMARK_(coll)){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__31636 = coll;
if(G__31636){
var bit__24857__auto__ = (G__31636.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24857__auto__) || (G__31636.cljs$core$ISeq$)){
return true;
} else {
if((!G__31636.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31636);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__31636);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
cljs$core$nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return cljs$core$nth__2.call(this,coll,n);
case 3:
return cljs$core$nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$nth__2;
cljs$core$nth.cljs$core$IFn$_invoke$arity$3 = cljs$core$nth__3;
return cljs$core$nth;
})()
;
/**
 * Returns the nth rest of coll, coll when n is 0.
 */
cljs.core.nthrest = (function cljs$core$nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__31637 = (n__$1 - (1));
var G__31638 = cljs.core.rest(xs);
n__$1 = G__31637;
xs = G__31638;
continue;
} else {
return xs;
}
break;
}
});
/**
 * Returns the value mapped to key, not-found or nil if key not present.
 */
cljs.core.get = (function() {
var cljs$core$get = null;
var cljs$core$get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__31641 = o;
if(G__31641){
var bit__24850__auto__ = (G__31641.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24850__auto__) || (G__31641.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var cljs$core$get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__31642 = o;
if(G__31642){
var bit__24850__auto__ = (G__31642.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24850__auto__) || (G__31642.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(cljs.core.array_QMARK_(o)){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
cljs$core$get = function(o,k,not_found){
switch(arguments.length){
case 2:
return cljs$core$get__2.call(this,o,k);
case 3:
return cljs$core$get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get.cljs$core$IFn$_invoke$arity$2 = cljs$core$get__2;
cljs$core$get.cljs$core$IFn$_invoke$arity$3 = cljs$core$get__3;
return cljs$core$get;
})()
;
/**
 * assoc[iate]. When applied to a map, returns a new map of the
 * same (hashed/sorted) type, that contains the mapping of key(s) to
 * val(s). When applied to a vector, returns a new vector that
 * contains val at index.
 * @param {...*} var_args
 */
cljs.core.assoc = (function() {
var cljs$core$assoc = null;
var cljs$core$assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var cljs$core$assoc__4 = (function() { 
var G__31646__delegate = function (coll,k,v,kvs){
while(true){
var ret = cljs$core$assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__31647 = ret;
var G__31648 = cljs.core.first(kvs);
var G__31649 = cljs.core.second(kvs);
var G__31650 = cljs.core.nnext(kvs);
coll = G__31647;
k = G__31648;
v = G__31649;
kvs = G__31650;
continue;
} else {
return ret;
}
break;
}
};
var G__31646 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__31651__i = 0, G__31651__a = new Array(arguments.length -  3);
while (G__31651__i < G__31651__a.length) {G__31651__a[G__31651__i] = arguments[G__31651__i + 3]; ++G__31651__i;}
  kvs = new cljs.core.IndexedSeq(G__31651__a,0);
} 
return G__31646__delegate.call(this,coll,k,v,kvs);};
G__31646.cljs$lang$maxFixedArity = 3;
G__31646.cljs$lang$applyTo = (function (arglist__31652){
var coll = cljs.core.first(arglist__31652);
arglist__31652 = cljs.core.next(arglist__31652);
var k = cljs.core.first(arglist__31652);
arglist__31652 = cljs.core.next(arglist__31652);
var v = cljs.core.first(arglist__31652);
var kvs = cljs.core.rest(arglist__31652);
return G__31646__delegate(coll,k,v,kvs);
});
G__31646.cljs$core$IFn$_invoke$arity$variadic = G__31646__delegate;
return G__31646;
})()
;
cljs$core$assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc__3.call(this,coll,k,v);
default:
var G__31653 = null;
if (arguments.length > 3) {
var G__31654__i = 0, G__31654__a = new Array(arguments.length -  3);
while (G__31654__i < G__31654__a.length) {G__31654__a[G__31654__i] = arguments[G__31654__i + 3]; ++G__31654__i;}
G__31653 = new cljs.core.IndexedSeq(G__31654__a,0);
}
return cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__31653);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc.cljs$lang$maxFixedArity = 3;
cljs$core$assoc.cljs$lang$applyTo = cljs$core$assoc__4.cljs$lang$applyTo;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc__3;
cljs$core$assoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc;
})()
;
/**
 * dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
 * that does not contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc = (function() {
var cljs$core$dissoc = null;
var cljs$core$dissoc__1 = (function (coll){
return coll;
});
var cljs$core$dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var cljs$core$dissoc__3 = (function() { 
var G__31657__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__31658 = ret;
var G__31659 = cljs.core.first(ks);
var G__31660 = cljs.core.next(ks);
coll = G__31658;
k = G__31659;
ks = G__31660;
continue;
} else {
return ret;
}
}
break;
}
};
var G__31657 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__31661__i = 0, G__31661__a = new Array(arguments.length -  2);
while (G__31661__i < G__31661__a.length) {G__31661__a[G__31661__i] = arguments[G__31661__i + 2]; ++G__31661__i;}
  ks = new cljs.core.IndexedSeq(G__31661__a,0);
} 
return G__31657__delegate.call(this,coll,k,ks);};
G__31657.cljs$lang$maxFixedArity = 2;
G__31657.cljs$lang$applyTo = (function (arglist__31662){
var coll = cljs.core.first(arglist__31662);
arglist__31662 = cljs.core.next(arglist__31662);
var k = cljs.core.first(arglist__31662);
var ks = cljs.core.rest(arglist__31662);
return G__31657__delegate(coll,k,ks);
});
G__31657.cljs$core$IFn$_invoke$arity$variadic = G__31657__delegate;
return G__31657;
})()
;
cljs$core$dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$dissoc__1.call(this,coll);
case 2:
return cljs$core$dissoc__2.call(this,coll,k);
default:
var G__31663 = null;
if (arguments.length > 2) {
var G__31664__i = 0, G__31664__a = new Array(arguments.length -  2);
while (G__31664__i < G__31664__a.length) {G__31664__a[G__31664__i] = arguments[G__31664__i + 2]; ++G__31664__i;}
G__31663 = new cljs.core.IndexedSeq(G__31664__a,0);
}
return cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__31663);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc.cljs$lang$applyTo = cljs$core$dissoc__3.cljs$lang$applyTo;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$1 = cljs$core$dissoc__1;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc__2;
cljs$core$dissoc.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc;
})()
;
/**
 * Return true if f is a JavaScript function or satisfies the Fn protocol.
 */
cljs.core.fn_QMARK_ = (function cljs$core$fn_QMARK_(f){
var or__24183__auto__ = (function (){var G__31669 = f;
return goog.isFunction(G__31669);
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var G__31670 = f;
if(G__31670){
var bit__24857__auto__ = null;
if(cljs.core.truth_((function (){var or__24183__auto____$1 = bit__24857__auto__;
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
return G__31670.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__31670.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__31670);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__31670);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__32136 = null;
var G__32136__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__32136__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31672 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__31672) : self__.afn.call(null,G__31672));
});
var G__32136__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31673 = a;
var G__31674 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__31673,G__31674) : self__.afn.call(null,G__31673,G__31674));
});
var G__32136__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31675 = a;
var G__31676 = b;
var G__31677 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__31675,G__31676,G__31677) : self__.afn.call(null,G__31675,G__31676,G__31677));
});
var G__32136__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31678 = a;
var G__31679 = b;
var G__31680 = c;
var G__31681 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__31678,G__31679,G__31680,G__31681) : self__.afn.call(null,G__31678,G__31679,G__31680,G__31681));
});
var G__32136__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31682 = a;
var G__31683 = b;
var G__31684 = c;
var G__31685 = d;
var G__31686 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__31682,G__31683,G__31684,G__31685,G__31686) : self__.afn.call(null,G__31682,G__31683,G__31684,G__31685,G__31686));
});
var G__32136__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31687 = a;
var G__31688 = b;
var G__31689 = c;
var G__31690 = d;
var G__31691 = e;
var G__31692 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__31687,G__31688,G__31689,G__31690,G__31691,G__31692) : self__.afn.call(null,G__31687,G__31688,G__31689,G__31690,G__31691,G__31692));
});
var G__32136__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31693 = a;
var G__31694 = b;
var G__31695 = c;
var G__31696 = d;
var G__31697 = e;
var G__31698 = f;
var G__31699 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__31693,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699) : self__.afn.call(null,G__31693,G__31694,G__31695,G__31696,G__31697,G__31698,G__31699));
});
var G__32136__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31700 = a;
var G__31701 = b;
var G__31702 = c;
var G__31703 = d;
var G__31704 = e;
var G__31705 = f;
var G__31706 = g;
var G__31707 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__31700,G__31701,G__31702,G__31703,G__31704,G__31705,G__31706,G__31707) : self__.afn.call(null,G__31700,G__31701,G__31702,G__31703,G__31704,G__31705,G__31706,G__31707));
});
var G__32136__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31708 = a;
var G__31709 = b;
var G__31710 = c;
var G__31711 = d;
var G__31712 = e;
var G__31713 = f;
var G__31714 = g;
var G__31715 = h;
var G__31716 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__31708,G__31709,G__31710,G__31711,G__31712,G__31713,G__31714,G__31715,G__31716) : self__.afn.call(null,G__31708,G__31709,G__31710,G__31711,G__31712,G__31713,G__31714,G__31715,G__31716));
});
var G__32136__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31717 = a;
var G__31718 = b;
var G__31719 = c;
var G__31720 = d;
var G__31721 = e;
var G__31722 = f;
var G__31723 = g;
var G__31724 = h;
var G__31725 = i;
var G__31726 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__31717,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726) : self__.afn.call(null,G__31717,G__31718,G__31719,G__31720,G__31721,G__31722,G__31723,G__31724,G__31725,G__31726));
});
var G__32136__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31727 = a;
var G__31728 = b;
var G__31729 = c;
var G__31730 = d;
var G__31731 = e;
var G__31732 = f;
var G__31733 = g;
var G__31734 = h;
var G__31735 = i;
var G__31736 = j;
var G__31737 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__31727,G__31728,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737) : self__.afn.call(null,G__31727,G__31728,G__31729,G__31730,G__31731,G__31732,G__31733,G__31734,G__31735,G__31736,G__31737));
});
var G__32136__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31738 = a;
var G__31739 = b;
var G__31740 = c;
var G__31741 = d;
var G__31742 = e;
var G__31743 = f;
var G__31744 = g;
var G__31745 = h;
var G__31746 = i;
var G__31747 = j;
var G__31748 = k;
var G__31749 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__31738,G__31739,G__31740,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749) : self__.afn.call(null,G__31738,G__31739,G__31740,G__31741,G__31742,G__31743,G__31744,G__31745,G__31746,G__31747,G__31748,G__31749));
});
var G__32136__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31750 = a;
var G__31751 = b;
var G__31752 = c;
var G__31753 = d;
var G__31754 = e;
var G__31755 = f;
var G__31756 = g;
var G__31757 = h;
var G__31758 = i;
var G__31759 = j;
var G__31760 = k;
var G__31761 = l;
var G__31762 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__31750,G__31751,G__31752,G__31753,G__31754,G__31755,G__31756,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762) : self__.afn.call(null,G__31750,G__31751,G__31752,G__31753,G__31754,G__31755,G__31756,G__31757,G__31758,G__31759,G__31760,G__31761,G__31762));
});
var G__32136__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31763 = a;
var G__31764 = b;
var G__31765 = c;
var G__31766 = d;
var G__31767 = e;
var G__31768 = f;
var G__31769 = g;
var G__31770 = h;
var G__31771 = i;
var G__31772 = j;
var G__31773 = k;
var G__31774 = l;
var G__31775 = m;
var G__31776 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__31763,G__31764,G__31765,G__31766,G__31767,G__31768,G__31769,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775,G__31776) : self__.afn.call(null,G__31763,G__31764,G__31765,G__31766,G__31767,G__31768,G__31769,G__31770,G__31771,G__31772,G__31773,G__31774,G__31775,G__31776));
});
var G__32136__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31777 = a;
var G__31778 = b;
var G__31779 = c;
var G__31780 = d;
var G__31781 = e;
var G__31782 = f;
var G__31783 = g;
var G__31784 = h;
var G__31785 = i;
var G__31786 = j;
var G__31787 = k;
var G__31788 = l;
var G__31789 = m;
var G__31790 = n;
var G__31791 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789,G__31790,G__31791) : self__.afn.call(null,G__31777,G__31778,G__31779,G__31780,G__31781,G__31782,G__31783,G__31784,G__31785,G__31786,G__31787,G__31788,G__31789,G__31790,G__31791));
});
var G__32136__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31792 = a;
var G__31793 = b;
var G__31794 = c;
var G__31795 = d;
var G__31796 = e;
var G__31797 = f;
var G__31798 = g;
var G__31799 = h;
var G__31800 = i;
var G__31801 = j;
var G__31802 = k;
var G__31803 = l;
var G__31804 = m;
var G__31805 = n;
var G__31806 = o;
var G__31807 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__31792,G__31793,G__31794,G__31795,G__31796,G__31797,G__31798,G__31799,G__31800,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807) : self__.afn.call(null,G__31792,G__31793,G__31794,G__31795,G__31796,G__31797,G__31798,G__31799,G__31800,G__31801,G__31802,G__31803,G__31804,G__31805,G__31806,G__31807));
});
var G__32136__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31808 = a;
var G__31809 = b;
var G__31810 = c;
var G__31811 = d;
var G__31812 = e;
var G__31813 = f;
var G__31814 = g;
var G__31815 = h;
var G__31816 = i;
var G__31817 = j;
var G__31818 = k;
var G__31819 = l;
var G__31820 = m;
var G__31821 = n;
var G__31822 = o;
var G__31823 = p;
var G__31824 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815,G__31816,G__31817,G__31818,G__31819,G__31820,G__31821,G__31822,G__31823,G__31824) : self__.afn.call(null,G__31808,G__31809,G__31810,G__31811,G__31812,G__31813,G__31814,G__31815,G__31816,G__31817,G__31818,G__31819,G__31820,G__31821,G__31822,G__31823,G__31824));
});
var G__32136__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31825 = a;
var G__31826 = b;
var G__31827 = c;
var G__31828 = d;
var G__31829 = e;
var G__31830 = f;
var G__31831 = g;
var G__31832 = h;
var G__31833 = i;
var G__31834 = j;
var G__31835 = k;
var G__31836 = l;
var G__31837 = m;
var G__31838 = n;
var G__31839 = o;
var G__31840 = p;
var G__31841 = q;
var G__31842 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__31825,G__31826,G__31827,G__31828,G__31829,G__31830,G__31831,G__31832,G__31833,G__31834,G__31835,G__31836,G__31837,G__31838,G__31839,G__31840,G__31841,G__31842) : self__.afn.call(null,G__31825,G__31826,G__31827,G__31828,G__31829,G__31830,G__31831,G__31832,G__31833,G__31834,G__31835,G__31836,G__31837,G__31838,G__31839,G__31840,G__31841,G__31842));
});
var G__32136__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31843 = a;
var G__31844 = b;
var G__31845 = c;
var G__31846 = d;
var G__31847 = e;
var G__31848 = f;
var G__31849 = g;
var G__31850 = h;
var G__31851 = i;
var G__31852 = j;
var G__31853 = k;
var G__31854 = l;
var G__31855 = m;
var G__31856 = n;
var G__31857 = o;
var G__31858 = p;
var G__31859 = q;
var G__31860 = r;
var G__31861 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__31843,G__31844,G__31845,G__31846,G__31847,G__31848,G__31849,G__31850,G__31851,G__31852,G__31853,G__31854,G__31855,G__31856,G__31857,G__31858,G__31859,G__31860,G__31861) : self__.afn.call(null,G__31843,G__31844,G__31845,G__31846,G__31847,G__31848,G__31849,G__31850,G__31851,G__31852,G__31853,G__31854,G__31855,G__31856,G__31857,G__31858,G__31859,G__31860,G__31861));
});
var G__32136__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31862 = a;
var G__31863 = b;
var G__31864 = c;
var G__31865 = d;
var G__31866 = e;
var G__31867 = f;
var G__31868 = g;
var G__31869 = h;
var G__31870 = i;
var G__31871 = j;
var G__31872 = k;
var G__31873 = l;
var G__31874 = m;
var G__31875 = n;
var G__31876 = o;
var G__31877 = p;
var G__31878 = q;
var G__31879 = r;
var G__31880 = s;
var G__31881 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__31862,G__31863,G__31864,G__31865,G__31866,G__31867,G__31868,G__31869,G__31870,G__31871,G__31872,G__31873,G__31874,G__31875,G__31876,G__31877,G__31878,G__31879,G__31880,G__31881) : self__.afn.call(null,G__31862,G__31863,G__31864,G__31865,G__31866,G__31867,G__31868,G__31869,G__31870,G__31871,G__31872,G__31873,G__31874,G__31875,G__31876,G__31877,G__31878,G__31879,G__31880,G__31881));
});
var G__32136__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__31882 = self__.afn;
var G__31883 = a;
var G__31884 = b;
var G__31885 = c;
var G__31886 = d;
var G__31887 = e;
var G__31888 = f;
var G__31889 = g;
var G__31890 = h;
var G__31891 = i;
var G__31892 = j;
var G__31893 = k;
var G__31894 = l;
var G__31895 = m;
var G__31896 = n;
var G__31897 = o;
var G__31898 = p;
var G__31899 = q;
var G__31900 = r;
var G__31901 = s;
var G__31902 = t;
var G__31903 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__31882,G__31883,G__31884,G__31885,G__31886,G__31887,G__31888,G__31889,G__31890,G__31891,G__31892,G__31893,G__31894,G__31895,G__31896,G__31897,G__31898,G__31899,G__31900,G__31901,G__31902,G__31903) : cljs.core.apply.call(null,G__31882,G__31883,G__31884,G__31885,G__31886,G__31887,G__31888,G__31889,G__31890,G__31891,G__31892,G__31893,G__31894,G__31895,G__31896,G__31897,G__31898,G__31899,G__31900,G__31901,G__31902,G__31903));
});
G__32136 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__32136__1.call(this,self__);
case 2:
return G__32136__2.call(this,self__,a);
case 3:
return G__32136__3.call(this,self__,a,b);
case 4:
return G__32136__4.call(this,self__,a,b,c);
case 5:
return G__32136__5.call(this,self__,a,b,c,d);
case 6:
return G__32136__6.call(this,self__,a,b,c,d,e);
case 7:
return G__32136__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__32136__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__32136__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__32136__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__32136__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__32136__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__32136__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__32136__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__32136__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__32136__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__32136__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__32136__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__32136__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__32136__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__32136__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__32136__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32136.cljs$core$IFn$_invoke$arity$1 = G__32136__1;
G__32136.cljs$core$IFn$_invoke$arity$2 = G__32136__2;
G__32136.cljs$core$IFn$_invoke$arity$3 = G__32136__3;
G__32136.cljs$core$IFn$_invoke$arity$4 = G__32136__4;
G__32136.cljs$core$IFn$_invoke$arity$5 = G__32136__5;
G__32136.cljs$core$IFn$_invoke$arity$6 = G__32136__6;
G__32136.cljs$core$IFn$_invoke$arity$7 = G__32136__7;
G__32136.cljs$core$IFn$_invoke$arity$8 = G__32136__8;
G__32136.cljs$core$IFn$_invoke$arity$9 = G__32136__9;
G__32136.cljs$core$IFn$_invoke$arity$10 = G__32136__10;
G__32136.cljs$core$IFn$_invoke$arity$11 = G__32136__11;
G__32136.cljs$core$IFn$_invoke$arity$12 = G__32136__12;
G__32136.cljs$core$IFn$_invoke$arity$13 = G__32136__13;
G__32136.cljs$core$IFn$_invoke$arity$14 = G__32136__14;
G__32136.cljs$core$IFn$_invoke$arity$15 = G__32136__15;
G__32136.cljs$core$IFn$_invoke$arity$16 = G__32136__16;
G__32136.cljs$core$IFn$_invoke$arity$17 = G__32136__17;
G__32136.cljs$core$IFn$_invoke$arity$18 = G__32136__18;
G__32136.cljs$core$IFn$_invoke$arity$19 = G__32136__19;
G__32136.cljs$core$IFn$_invoke$arity$20 = G__32136__20;
G__32136.cljs$core$IFn$_invoke$arity$21 = G__32136__21;
G__32136.cljs$core$IFn$_invoke$arity$22 = G__32136__22;
return G__32136;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args31671){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args31671)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__31904 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__31904) : self__.afn.call(null,G__31904));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__31905 = a;
var G__31906 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__31905,G__31906) : self__.afn.call(null,G__31905,G__31906));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__31907 = a;
var G__31908 = b;
var G__31909 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__31907,G__31908,G__31909) : self__.afn.call(null,G__31907,G__31908,G__31909));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__31910 = a;
var G__31911 = b;
var G__31912 = c;
var G__31913 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__31910,G__31911,G__31912,G__31913) : self__.afn.call(null,G__31910,G__31911,G__31912,G__31913));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__31914 = a;
var G__31915 = b;
var G__31916 = c;
var G__31917 = d;
var G__31918 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__31914,G__31915,G__31916,G__31917,G__31918) : self__.afn.call(null,G__31914,G__31915,G__31916,G__31917,G__31918));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__31919 = a;
var G__31920 = b;
var G__31921 = c;
var G__31922 = d;
var G__31923 = e;
var G__31924 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__31919,G__31920,G__31921,G__31922,G__31923,G__31924) : self__.afn.call(null,G__31919,G__31920,G__31921,G__31922,G__31923,G__31924));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__31925 = a;
var G__31926 = b;
var G__31927 = c;
var G__31928 = d;
var G__31929 = e;
var G__31930 = f;
var G__31931 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__31925,G__31926,G__31927,G__31928,G__31929,G__31930,G__31931) : self__.afn.call(null,G__31925,G__31926,G__31927,G__31928,G__31929,G__31930,G__31931));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__31932 = a;
var G__31933 = b;
var G__31934 = c;
var G__31935 = d;
var G__31936 = e;
var G__31937 = f;
var G__31938 = g;
var G__31939 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__31932,G__31933,G__31934,G__31935,G__31936,G__31937,G__31938,G__31939) : self__.afn.call(null,G__31932,G__31933,G__31934,G__31935,G__31936,G__31937,G__31938,G__31939));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__31940 = a;
var G__31941 = b;
var G__31942 = c;
var G__31943 = d;
var G__31944 = e;
var G__31945 = f;
var G__31946 = g;
var G__31947 = h;
var G__31948 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__31940,G__31941,G__31942,G__31943,G__31944,G__31945,G__31946,G__31947,G__31948) : self__.afn.call(null,G__31940,G__31941,G__31942,G__31943,G__31944,G__31945,G__31946,G__31947,G__31948));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__31949 = a;
var G__31950 = b;
var G__31951 = c;
var G__31952 = d;
var G__31953 = e;
var G__31954 = f;
var G__31955 = g;
var G__31956 = h;
var G__31957 = i;
var G__31958 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__31949,G__31950,G__31951,G__31952,G__31953,G__31954,G__31955,G__31956,G__31957,G__31958) : self__.afn.call(null,G__31949,G__31950,G__31951,G__31952,G__31953,G__31954,G__31955,G__31956,G__31957,G__31958));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__31959 = a;
var G__31960 = b;
var G__31961 = c;
var G__31962 = d;
var G__31963 = e;
var G__31964 = f;
var G__31965 = g;
var G__31966 = h;
var G__31967 = i;
var G__31968 = j;
var G__31969 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__31959,G__31960,G__31961,G__31962,G__31963,G__31964,G__31965,G__31966,G__31967,G__31968,G__31969) : self__.afn.call(null,G__31959,G__31960,G__31961,G__31962,G__31963,G__31964,G__31965,G__31966,G__31967,G__31968,G__31969));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__31970 = a;
var G__31971 = b;
var G__31972 = c;
var G__31973 = d;
var G__31974 = e;
var G__31975 = f;
var G__31976 = g;
var G__31977 = h;
var G__31978 = i;
var G__31979 = j;
var G__31980 = k;
var G__31981 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__31970,G__31971,G__31972,G__31973,G__31974,G__31975,G__31976,G__31977,G__31978,G__31979,G__31980,G__31981) : self__.afn.call(null,G__31970,G__31971,G__31972,G__31973,G__31974,G__31975,G__31976,G__31977,G__31978,G__31979,G__31980,G__31981));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__31982 = a;
var G__31983 = b;
var G__31984 = c;
var G__31985 = d;
var G__31986 = e;
var G__31987 = f;
var G__31988 = g;
var G__31989 = h;
var G__31990 = i;
var G__31991 = j;
var G__31992 = k;
var G__31993 = l;
var G__31994 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__31982,G__31983,G__31984,G__31985,G__31986,G__31987,G__31988,G__31989,G__31990,G__31991,G__31992,G__31993,G__31994) : self__.afn.call(null,G__31982,G__31983,G__31984,G__31985,G__31986,G__31987,G__31988,G__31989,G__31990,G__31991,G__31992,G__31993,G__31994));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__31995 = a;
var G__31996 = b;
var G__31997 = c;
var G__31998 = d;
var G__31999 = e;
var G__32000 = f;
var G__32001 = g;
var G__32002 = h;
var G__32003 = i;
var G__32004 = j;
var G__32005 = k;
var G__32006 = l;
var G__32007 = m;
var G__32008 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__31995,G__31996,G__31997,G__31998,G__31999,G__32000,G__32001,G__32002,G__32003,G__32004,G__32005,G__32006,G__32007,G__32008) : self__.afn.call(null,G__31995,G__31996,G__31997,G__31998,G__31999,G__32000,G__32001,G__32002,G__32003,G__32004,G__32005,G__32006,G__32007,G__32008));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__32009 = a;
var G__32010 = b;
var G__32011 = c;
var G__32012 = d;
var G__32013 = e;
var G__32014 = f;
var G__32015 = g;
var G__32016 = h;
var G__32017 = i;
var G__32018 = j;
var G__32019 = k;
var G__32020 = l;
var G__32021 = m;
var G__32022 = n;
var G__32023 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__32009,G__32010,G__32011,G__32012,G__32013,G__32014,G__32015,G__32016,G__32017,G__32018,G__32019,G__32020,G__32021,G__32022,G__32023) : self__.afn.call(null,G__32009,G__32010,G__32011,G__32012,G__32013,G__32014,G__32015,G__32016,G__32017,G__32018,G__32019,G__32020,G__32021,G__32022,G__32023));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__32024 = a;
var G__32025 = b;
var G__32026 = c;
var G__32027 = d;
var G__32028 = e;
var G__32029 = f;
var G__32030 = g;
var G__32031 = h;
var G__32032 = i;
var G__32033 = j;
var G__32034 = k;
var G__32035 = l;
var G__32036 = m;
var G__32037 = n;
var G__32038 = o;
var G__32039 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__32024,G__32025,G__32026,G__32027,G__32028,G__32029,G__32030,G__32031,G__32032,G__32033,G__32034,G__32035,G__32036,G__32037,G__32038,G__32039) : self__.afn.call(null,G__32024,G__32025,G__32026,G__32027,G__32028,G__32029,G__32030,G__32031,G__32032,G__32033,G__32034,G__32035,G__32036,G__32037,G__32038,G__32039));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__32040 = a;
var G__32041 = b;
var G__32042 = c;
var G__32043 = d;
var G__32044 = e;
var G__32045 = f;
var G__32046 = g;
var G__32047 = h;
var G__32048 = i;
var G__32049 = j;
var G__32050 = k;
var G__32051 = l;
var G__32052 = m;
var G__32053 = n;
var G__32054 = o;
var G__32055 = p;
var G__32056 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__32040,G__32041,G__32042,G__32043,G__32044,G__32045,G__32046,G__32047,G__32048,G__32049,G__32050,G__32051,G__32052,G__32053,G__32054,G__32055,G__32056) : self__.afn.call(null,G__32040,G__32041,G__32042,G__32043,G__32044,G__32045,G__32046,G__32047,G__32048,G__32049,G__32050,G__32051,G__32052,G__32053,G__32054,G__32055,G__32056));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__32057 = a;
var G__32058 = b;
var G__32059 = c;
var G__32060 = d;
var G__32061 = e;
var G__32062 = f;
var G__32063 = g;
var G__32064 = h;
var G__32065 = i;
var G__32066 = j;
var G__32067 = k;
var G__32068 = l;
var G__32069 = m;
var G__32070 = n;
var G__32071 = o;
var G__32072 = p;
var G__32073 = q;
var G__32074 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__32057,G__32058,G__32059,G__32060,G__32061,G__32062,G__32063,G__32064,G__32065,G__32066,G__32067,G__32068,G__32069,G__32070,G__32071,G__32072,G__32073,G__32074) : self__.afn.call(null,G__32057,G__32058,G__32059,G__32060,G__32061,G__32062,G__32063,G__32064,G__32065,G__32066,G__32067,G__32068,G__32069,G__32070,G__32071,G__32072,G__32073,G__32074));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__32075 = a;
var G__32076 = b;
var G__32077 = c;
var G__32078 = d;
var G__32079 = e;
var G__32080 = f;
var G__32081 = g;
var G__32082 = h;
var G__32083 = i;
var G__32084 = j;
var G__32085 = k;
var G__32086 = l;
var G__32087 = m;
var G__32088 = n;
var G__32089 = o;
var G__32090 = p;
var G__32091 = q;
var G__32092 = r;
var G__32093 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__32075,G__32076,G__32077,G__32078,G__32079,G__32080,G__32081,G__32082,G__32083,G__32084,G__32085,G__32086,G__32087,G__32088,G__32089,G__32090,G__32091,G__32092,G__32093) : self__.afn.call(null,G__32075,G__32076,G__32077,G__32078,G__32079,G__32080,G__32081,G__32082,G__32083,G__32084,G__32085,G__32086,G__32087,G__32088,G__32089,G__32090,G__32091,G__32092,G__32093));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__32094 = a;
var G__32095 = b;
var G__32096 = c;
var G__32097 = d;
var G__32098 = e;
var G__32099 = f;
var G__32100 = g;
var G__32101 = h;
var G__32102 = i;
var G__32103 = j;
var G__32104 = k;
var G__32105 = l;
var G__32106 = m;
var G__32107 = n;
var G__32108 = o;
var G__32109 = p;
var G__32110 = q;
var G__32111 = r;
var G__32112 = s;
var G__32113 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__32094,G__32095,G__32096,G__32097,G__32098,G__32099,G__32100,G__32101,G__32102,G__32103,G__32104,G__32105,G__32106,G__32107,G__32108,G__32109,G__32110,G__32111,G__32112,G__32113) : self__.afn.call(null,G__32094,G__32095,G__32096,G__32097,G__32098,G__32099,G__32100,G__32101,G__32102,G__32103,G__32104,G__32105,G__32106,G__32107,G__32108,G__32109,G__32110,G__32111,G__32112,G__32113));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__32114 = self__.afn;
var G__32115 = a;
var G__32116 = b;
var G__32117 = c;
var G__32118 = d;
var G__32119 = e;
var G__32120 = f;
var G__32121 = g;
var G__32122 = h;
var G__32123 = i;
var G__32124 = j;
var G__32125 = k;
var G__32126 = l;
var G__32127 = m;
var G__32128 = n;
var G__32129 = o;
var G__32130 = p;
var G__32131 = q;
var G__32132 = r;
var G__32133 = s;
var G__32134 = t;
var G__32135 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__32114,G__32115,G__32116,G__32117,G__32118,G__32119,G__32120,G__32121,G__32122,G__32123,G__32124,G__32125,G__32126,G__32127,G__32128,G__32129,G__32130,G__32131,G__32132,G__32133,G__32134,G__32135) : cljs.core.apply.call(null,G__32114,G__32115,G__32116,G__32117,G__32118,G__32119,G__32120,G__32121,G__32122,G__32123,G__32124,G__32125,G__32126,G__32127,G__32128,G__32129,G__32130,G__32131,G__32132,G__32133,G__32134,G__32135));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function cljs$core$__GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
 * Returns an object of the same type and value as obj, with
 * map m as its metadata.
 */
cljs.core.with_meta = (function cljs$core$with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__32140 = o;
if(G__32140){
var bit__24857__auto__ = (G__32140.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__24857__auto__) || (G__32140.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__32140.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__32140);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__32140);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
 * Returns the metadata of obj, returns nil if there is no metadata.
 */
cljs.core.meta = (function cljs$core$meta(o){
if((function (){var and__24171__auto__ = !((o == null));
if(and__24171__auto__){
var G__32144 = o;
if(G__32144){
var bit__24857__auto__ = (G__32144.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24857__auto__) || (G__32144.cljs$core$IMeta$)){
return true;
} else {
if((!G__32144.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32144);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__32144);
}
} else {
return and__24171__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
 * For a list or queue, same as first, for a vector, same as, but much
 * more efficient than, last. If the collection is empty, returns nil.
 */
cljs.core.peek = (function cljs$core$peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
 * For a list or queue, returns a new list/queue without the first
 * item, for a vector, returns a new vector without the last item.
 * Note - not the same as next/butlast.
 */
cljs.core.pop = (function cljs$core$pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
 * disj[oin]. Returns a new set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj = (function() {
var cljs$core$disj = null;
var cljs$core$disj__1 = (function (coll){
return coll;
});
var cljs$core$disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var cljs$core$disj__3 = (function() { 
var G__32147__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = cljs$core$disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__32148 = ret;
var G__32149 = cljs.core.first(ks);
var G__32150 = cljs.core.next(ks);
coll = G__32148;
k = G__32149;
ks = G__32150;
continue;
} else {
return ret;
}
}
break;
}
};
var G__32147 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__32151__i = 0, G__32151__a = new Array(arguments.length -  2);
while (G__32151__i < G__32151__a.length) {G__32151__a[G__32151__i] = arguments[G__32151__i + 2]; ++G__32151__i;}
  ks = new cljs.core.IndexedSeq(G__32151__a,0);
} 
return G__32147__delegate.call(this,coll,k,ks);};
G__32147.cljs$lang$maxFixedArity = 2;
G__32147.cljs$lang$applyTo = (function (arglist__32152){
var coll = cljs.core.first(arglist__32152);
arglist__32152 = cljs.core.next(arglist__32152);
var k = cljs.core.first(arglist__32152);
var ks = cljs.core.rest(arglist__32152);
return G__32147__delegate(coll,k,ks);
});
G__32147.cljs$core$IFn$_invoke$arity$variadic = G__32147__delegate;
return G__32147;
})()
;
cljs$core$disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return cljs$core$disj__1.call(this,coll);
case 2:
return cljs$core$disj__2.call(this,coll,k);
default:
var G__32153 = null;
if (arguments.length > 2) {
var G__32154__i = 0, G__32154__a = new Array(arguments.length -  2);
while (G__32154__i < G__32154__a.length) {G__32154__a[G__32154__i] = arguments[G__32154__i + 2]; ++G__32154__i;}
G__32153 = new cljs.core.IndexedSeq(G__32154__a,0);
}
return cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__32153);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj.cljs$lang$maxFixedArity = 2;
cljs$core$disj.cljs$lang$applyTo = cljs$core$disj__3.cljs$lang$applyTo;
cljs$core$disj.cljs$core$IFn$_invoke$arity$1 = cljs$core$disj__1;
cljs$core$disj.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj__2;
cljs$core$disj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj;
})()
;
/**
 * Returns true if coll has no items - same as (not (seq coll)).
 * Please use the idiom (seq x) rather than (not (empty? x))
 */
cljs.core.empty_QMARK_ = (function cljs$core$empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
 * Returns true if x satisfies ICollection
 */
cljs.core.coll_QMARK_ = (function cljs$core$coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32156 = x;
if(G__32156){
var bit__24857__auto__ = (G__32156.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__24857__auto__) || (G__32156.cljs$core$ICollection$)){
return true;
} else {
if((!G__32156.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__32156);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__32156);
}
}
});
/**
 * Returns true if x satisfies ISet
 */
cljs.core.set_QMARK_ = (function cljs$core$set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32158 = x;
if(G__32158){
var bit__24857__auto__ = (G__32158.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__24857__auto__) || (G__32158.cljs$core$ISet$)){
return true;
} else {
if((!G__32158.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__32158);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__32158);
}
}
});
/**
 * Returns true if coll implements Associative
 */
cljs.core.associative_QMARK_ = (function cljs$core$associative_QMARK_(x){
var G__32160 = x;
if(G__32160){
var bit__24857__auto__ = (G__32160.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__24857__auto__) || (G__32160.cljs$core$IAssociative$)){
return true;
} else {
if((!G__32160.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__32160);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__32160);
}
});
/**
 * Returns true if coll satisfies ISequential
 */
cljs.core.sequential_QMARK_ = (function cljs$core$sequential_QMARK_(x){
var G__32162 = x;
if(G__32162){
var bit__24857__auto__ = (G__32162.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__24857__auto__) || (G__32162.cljs$core$ISequential$)){
return true;
} else {
if((!G__32162.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__32162);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__32162);
}
});
/**
 * Returns true if coll satisfies ISorted
 */
cljs.core.sorted_QMARK_ = (function cljs$core$sorted_QMARK_(x){
var G__32164 = x;
if(G__32164){
var bit__24857__auto__ = (G__32164.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__24857__auto__) || (G__32164.cljs$core$ISorted$)){
return true;
} else {
if((!G__32164.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__32164);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__32164);
}
});
/**
 * Returns true if coll satisfies IReduce
 */
cljs.core.reduceable_QMARK_ = (function cljs$core$reduceable_QMARK_(x){
var G__32166 = x;
if(G__32166){
var bit__24857__auto__ = (G__32166.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24857__auto__) || (G__32166.cljs$core$IReduce$)){
return true;
} else {
if((!G__32166.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__32166);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__32166);
}
});
/**
 * Return true if x satisfies IMap
 */
cljs.core.map_QMARK_ = (function cljs$core$map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__32168 = x;
if(G__32168){
var bit__24857__auto__ = (G__32168.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24857__auto__) || (G__32168.cljs$core$IMap$)){
return true;
} else {
if((!G__32168.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__32168);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__32168);
}
}
});
/**
 * Return true if x satisfies IVector
 */
cljs.core.vector_QMARK_ = (function cljs$core$vector_QMARK_(x){
var G__32170 = x;
if(G__32170){
var bit__24857__auto__ = (G__32170.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__24857__auto__) || (G__32170.cljs$core$IVector$)){
return true;
} else {
if((!G__32170.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__32170);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__32170);
}
});

/**
 * Return true if x is satisfies IChunkedSeq.
 */
cljs.core.chunked_seq_QMARK_ = (function cljs$core$chunked_seq_QMARK_(x){
var G__32172 = x;
if(G__32172){
var bit__24850__auto__ = (G__32172.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__24850__auto__) || (G__32172.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
 * Create JavaSript object from an even number arguments representing
 * interleaved keys and values.
 * @param {...*} var_args
 */
cljs.core.js_obj = (function() {
var cljs$core$js_obj = null;
var cljs$core$js_obj__0 = (function (){
var obj32178 = {};
return obj32178;
});
var cljs$core$js_obj__1 = (function() { 
var G__32181__delegate = function (keyvals){
var G__32179 = goog.object.create;
var G__32180 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__32179,G__32180) : cljs.core.apply.call(null,G__32179,G__32180));
};
var G__32181 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__32182__i = 0, G__32182__a = new Array(arguments.length -  0);
while (G__32182__i < G__32182__a.length) {G__32182__a[G__32182__i] = arguments[G__32182__i + 0]; ++G__32182__i;}
  keyvals = new cljs.core.IndexedSeq(G__32182__a,0);
} 
return G__32181__delegate.call(this,keyvals);};
G__32181.cljs$lang$maxFixedArity = 0;
G__32181.cljs$lang$applyTo = (function (arglist__32183){
var keyvals = cljs.core.seq(arglist__32183);
return G__32181__delegate(keyvals);
});
G__32181.cljs$core$IFn$_invoke$arity$variadic = G__32181__delegate;
return G__32181;
})()
;
cljs$core$js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return cljs$core$js_obj__0.call(this);
default:
var G__32184 = null;
if (arguments.length > 0) {
var G__32185__i = 0, G__32185__a = new Array(arguments.length -  0);
while (G__32185__i < G__32185__a.length) {G__32185__a[G__32185__i] = arguments[G__32185__i + 0]; ++G__32185__i;}
G__32184 = new cljs.core.IndexedSeq(G__32185__a,0);
}
return cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__32184);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js_obj.cljs$lang$maxFixedArity = 0;
cljs$core$js_obj.cljs$lang$applyTo = cljs$core$js_obj__1.cljs$lang$applyTo;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$0 = cljs$core$js_obj__0;
cljs$core$js_obj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js_obj;
})()
;
/**
 * Return the JavaScript keys for an object.
 */
cljs.core.js_keys = (function cljs$core$js_keys(obj){
var keys = [];
var G__32188_32190 = obj;
var G__32189_32191 = ((function (G__32188_32190,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__32188_32190,keys))
;
goog.object.forEach(G__32188_32190,G__32189_32191);

return keys;
});
/**
 * Delete a property from a JavaScript object.
 */
cljs.core.js_delete = (function cljs$core$js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function cljs$core$array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__32192 = (i__$1 + (1));
var G__32193 = (j__$1 + (1));
var G__32194 = (len__$1 - (1));
i__$1 = G__32192;
j__$1 = G__32193;
len__$1 = G__32194;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function cljs$core$array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__32195 = (i__$1 - (1));
var G__32196 = (j__$1 - (1));
var G__32197 = (len__$1 - (1));
i__$1 = G__32195;
j__$1 = G__32196;
len__$1 = G__32197;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj32199 = {};
return obj32199;
})();
/**
 * Returns true if x is the value false, false otherwise.
 */
cljs.core.false_QMARK_ = (function cljs$core$false_QMARK_(x){
return x === false;
});
/**
 * Returns true if x is the value true, false otherwise.
 */
cljs.core.true_QMARK_ = (function cljs$core$true_QMARK_(x){
return x === true;
});
/**
 * Returns true if x identical to the JavaScript undefined value.
 */
cljs.core.undefined_QMARK_ = (function cljs$core$undefined_QMARK_(x){
return (void 0 === x);
});
/**
 * Return true if s satisfies ISeq
 */
cljs.core.seq_QMARK_ = (function cljs$core$seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__32201 = s;
if(G__32201){
var bit__24857__auto__ = (G__32201.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24857__auto__) || (G__32201.cljs$core$ISeq$)){
return true;
} else {
if((!G__32201.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32201);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__32201);
}
}
});
/**
 * Return true if s satisfies ISeqable
 */
cljs.core.seqable_QMARK_ = (function cljs$core$seqable_QMARK_(s){
var G__32203 = s;
if(G__32203){
var bit__24857__auto__ = (G__32203.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__24857__auto__) || (G__32203.cljs$core$ISeqable$)){
return true;
} else {
if((!G__32203.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__32203);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__32203);
}
});
/**
 * Coerce to boolean
 */
cljs.core.boolean$ = (function cljs$core$boolean(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
/**
 * Returns true if f returns true for fn? or satisfies IFn.
 */
cljs.core.ifn_QMARK_ = (function cljs$core$ifn_QMARK_(f){
var or__24183__auto__ = cljs.core.fn_QMARK_(f);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var G__32207 = f;
if(G__32207){
var bit__24857__auto__ = (G__32207.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__24857__auto__) || (G__32207.cljs$core$IFn$)){
return true;
} else {
if((!G__32207.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__32207);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__32207);
}
}
});
/**
 * Returns true if n is an integer.
 */
cljs.core.integer_QMARK_ = (function cljs$core$integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__32220 = n;
return isNaN(G__32220);
})())) && (!((n === Infinity))) && (((function (){var G__32221 = n;
return parseFloat(G__32221);
})() === (function (){var G__32222 = n;
var G__32223 = (10);
return parseInt(G__32222,G__32223);
})()));
});
/**
 * Returns true if key is present in the given collection, otherwise
 * returns false.  Note that for numerically indexed collections like
 * vectors and arrays, this tests if the numeric key is within the
 * range of indexes. 'contains?' operates constant or logarithmic time;
 * it will not perform a linear search for a value.  See also 'some'.
 */
cljs.core.contains_QMARK_ = (function cljs$core$contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
 * Returns the map entry for key, or nil if key not present.
 */
cljs.core.find = (function cljs$core$find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
 * Returns true if no two of the arguments are =
 * @param {...*} var_args
 */
cljs.core.distinct_QMARK_ = (function() {
var cljs$core$distinct_QMARK_ = null;
var cljs$core$distinct_QMARK___1 = (function (x){
return true;
});
var cljs$core$distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$distinct_QMARK___3 = (function() { 
var G__32224__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__32225 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__32226 = etc;
s = G__32225;
xs = G__32226;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__32224 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32227__i = 0, G__32227__a = new Array(arguments.length -  2);
while (G__32227__i < G__32227__a.length) {G__32227__a[G__32227__i] = arguments[G__32227__i + 2]; ++G__32227__i;}
  more = new cljs.core.IndexedSeq(G__32227__a,0);
} 
return G__32224__delegate.call(this,x,y,more);};
G__32224.cljs$lang$maxFixedArity = 2;
G__32224.cljs$lang$applyTo = (function (arglist__32228){
var x = cljs.core.first(arglist__32228);
arglist__32228 = cljs.core.next(arglist__32228);
var y = cljs.core.first(arglist__32228);
var more = cljs.core.rest(arglist__32228);
return G__32224__delegate(x,y,more);
});
G__32224.cljs$core$IFn$_invoke$arity$variadic = G__32224__delegate;
return G__32224;
})()
;
cljs$core$distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$distinct_QMARK___1.call(this,x);
case 2:
return cljs$core$distinct_QMARK___2.call(this,x,y);
default:
var G__32229 = null;
if (arguments.length > 2) {
var G__32230__i = 0, G__32230__a = new Array(arguments.length -  2);
while (G__32230__i < G__32230__a.length) {G__32230__a[G__32230__i] = arguments[G__32230__i + 2]; ++G__32230__i;}
G__32229 = new cljs.core.IndexedSeq(G__32230__a,0);
}
return cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct_QMARK_.cljs$lang$maxFixedArity = 2;
cljs$core$distinct_QMARK_.cljs$lang$applyTo = cljs$core$distinct_QMARK___3.cljs$lang$applyTo;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct_QMARK___1;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$distinct_QMARK___2;
cljs$core$distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$distinct_QMARK_;
})()
;
/**
 * Comparator. Returns a negative number, zero, or a positive number
 * when x is logically 'less than', 'equal to', or 'greater than'
 * y. Uses IComparable if available and google.array.defaultCompare for objects
 * of the same type and special-cases nil to be less than any other object.
 */
cljs.core.compare = (function cljs$core$compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__32234 = x;
if(G__32234){
var bit__24850__auto__ = (G__32234.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__24850__auto__) || (G__32234.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__32235 = x;
var G__32236 = y;
return goog.array.defaultCompare(G__32235,G__32236);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
 * Compare indexed collection.
 */
cljs.core.compare_indexed = (function() {
var cljs$core$compare_indexed = null;
var cljs$core$compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var cljs$core$compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__32241 = xs;
var G__32242 = ys;
var G__32243 = len;
var G__32244 = (n + (1));
xs = G__32241;
ys = G__32242;
len = G__32243;
n = G__32244;
continue;
} else {
return d;
}
break;
}
});
cljs$core$compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return cljs$core$compare_indexed__2.call(this,xs,ys);
case 4:
return cljs$core$compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$compare_indexed__2;
cljs$core$compare_indexed.cljs$core$IFn$_invoke$arity$4 = cljs$core$compare_indexed__4;
return cljs$core$compare_indexed;
})()
;
/**
 * Given a fn that might be boolean valued or a comparator,
 * return a fn that is a comparator.
 */
cljs.core.fn__GT_comparator = (function cljs$core$fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__32249 = x;
var G__32250 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32249,G__32250) : f.call(null,G__32249,G__32250));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__32251 = y;
var G__32252 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32251,G__32252) : f.call(null,G__32251,G__32252));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
 * Returns a sorted sequence of the items in coll. Comp can be
 * boolean-valued comparison function, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort = (function() {
var cljs$core$sort = null;
var cljs$core$sort__1 = (function (coll){
return cljs$core$sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var cljs$core$sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__32258 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__32258) : cljs.core.to_array.call(null,G__32258));
})();
var G__32259_32261 = a;
var G__32260_32262 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__32259_32261,G__32260_32262);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
cljs$core$sort = function(comp,coll){
switch(arguments.length){
case 1:
return cljs$core$sort__1.call(this,comp);
case 2:
return cljs$core$sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort.cljs$core$IFn$_invoke$arity$1 = cljs$core$sort__1;
cljs$core$sort.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort__2;
return cljs$core$sort;
})()
;
/**
 * Returns a sorted sequence of the items in coll, where the sort
 * order is determined by comparing (keyfn item).  Comp can be
 * boolean-valued comparison funcion, or a -/0/+ valued comparator.
 * Comp defaults to compare.
 */
cljs.core.sort_by = (function() {
var cljs$core$sort_by = null;
var cljs$core$sort_by__2 = (function (keyfn,coll){
return cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var cljs$core$sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__32268 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32268) : keyfn.call(null,G__32268));
})(),(function (){var G__32269 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__32269) : keyfn.call(null,G__32269));
})());
}),coll);
});
cljs$core$sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return cljs$core$sort_by__2.call(this,keyfn,comp);
case 3:
return cljs$core$sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$sort_by__2;
cljs$core$sort_by.cljs$core$IFn$_invoke$arity$3 = cljs$core$sort_by__3;
return cljs$core$sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var cljs$core$seq_reduce = null;
var cljs$core$seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__32275 = f;
var G__32276 = cljs.core.first(s);
var G__32277 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__32275,G__32276,G__32277) : cljs.core.reduce.call(null,G__32275,G__32276,G__32277));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var cljs$core$seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__32278 = val__$1;
var G__32279 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32278,G__32279) : f.call(null,G__32278,G__32279));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__32280 = nval;
var G__32281 = cljs.core.next(coll__$1);
val__$1 = G__32280;
coll__$1 = G__32281;
continue;
}
} else {
return val__$1;
}
break;
}
});
cljs$core$seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$seq_reduce__2.call(this,f,val);
case 3:
return cljs$core$seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$seq_reduce__2;
cljs$core$seq_reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$seq_reduce__3;
return cljs$core$seq_reduce;
})()
;
/**
 * Return a random permutation of coll
 */
cljs.core.shuffle = (function cljs$core$shuffle(coll){
var a = (function (){var G__32285 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__32285) : cljs.core.to_array.call(null,G__32285));
})();
var G__32286_32288 = a;
goog.array.shuffle(G__32286_32288);

var G__32287 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__32287) : cljs.core.vec.call(null,G__32287));
});
/**
 * f should be a function of 2 arguments. If val is not supplied,
 * returns the result of applying f to the first 2 items in coll, then
 * applying f to that result and the 3rd item, etc. If coll contains no
 * items, f must accept no arguments as well, and reduce returns the
 * result of calling f with no arguments.  If coll has only 1 item, it
 * is returned and f is not called.  If val is supplied, returns the
 * result of applying f to val and the first item in coll, then
 * applying f to that result and the 2nd item, etc. If coll contains no
 * items, returns val and f is not called.
 */
cljs.core.reduce = (function() {
var cljs$core$reduce = null;
var cljs$core$reduce__2 = (function (f,coll){
if((function (){var G__32291 = coll;
if(G__32291){
var bit__24850__auto__ = (G__32291.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24850__auto__) || (G__32291.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var cljs$core$reduce__3 = (function (f,val,coll){
if((function (){var G__32292 = coll;
if(G__32292){
var bit__24850__auto__ = (G__32292.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__24850__auto__) || (G__32292.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
cljs$core$reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return cljs$core$reduce__2.call(this,f,val);
case 3:
return cljs$core$reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reduce.cljs$core$IFn$_invoke$arity$2 = cljs$core$reduce__2;
cljs$core$reduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$reduce__3;
return cljs$core$reduce;
})()
;
/**
 * Reduces an associative collection. f should be a function of 3
 * arguments. Returns the result of applying f to init, the first key
 * and the first value in coll, then applying f to that result and the
 * 2nd key and value, etc. If coll contains no entries, returns init
 * and f is not called. Note that reduce-kv is supported on vectors,
 * where the keys will be the ordinals.
 */
cljs.core.reduce_kv = (function cljs$core$reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
/**
 * Returns its argument.
 */
cljs.core.identity = (function cljs$core$identity(x){
return x;
});
/**
 * Takes a reducing function f of 2 args and returns a fn suitable for
 * transduce by adding an arity-1 signature that calls cf (default -
 * identity) on the result argument.
 */
cljs.core.completing = (function() {
var cljs$core$completing = null;
var cljs$core$completing__1 = (function (f){
return cljs$core$completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var cljs$core$completing__2 = (function (f,cf){
return (function() {
var G__32301 = null;
var G__32301__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__32301__1 = (function (x){
var G__32298 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__32298) : cf.call(null,G__32298));
});
var G__32301__2 = (function (x,y){
var G__32299 = x;
var G__32300 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32299,G__32300) : f.call(null,G__32299,G__32300));
});
G__32301 = function(x,y){
switch(arguments.length){
case 0:
return G__32301__0.call(this);
case 1:
return G__32301__1.call(this,x);
case 2:
return G__32301__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32301.cljs$core$IFn$_invoke$arity$0 = G__32301__0;
G__32301.cljs$core$IFn$_invoke$arity$1 = G__32301__1;
G__32301.cljs$core$IFn$_invoke$arity$2 = G__32301__2;
return G__32301;
})()
});
cljs$core$completing = function(f,cf){
switch(arguments.length){
case 1:
return cljs$core$completing__1.call(this,f);
case 2:
return cljs$core$completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$completing.cljs$core$IFn$_invoke$arity$1 = cljs$core$completing__1;
cljs$core$completing.cljs$core$IFn$_invoke$arity$2 = cljs$core$completing__2;
return cljs$core$completing;
})()
;
/**
 * reduce with a transformation of f (xf). If init is not
 * supplied, (f) will be called to produce it. f should be a reducing
 * step function that accepts both 1 and 2 arguments, if it accepts
 * only 2 you can add the arity-1 with 'completing'. Returns the result
 * of applying (the transformed) xf to init and the first item in coll,
 * then applying xf to that result and the 2nd item, etc. If coll
 * contains no items, returns init and f is not called. Note that
 * certain transforms may inject or skip items.
 */
cljs.core.transduce = (function() {
var cljs$core$transduce = null;
var cljs$core$transduce__3 = (function (xform,f,coll){
return cljs$core$transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var cljs$core$transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__32308 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__32308) : xform.call(null,G__32308));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__32309 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__32309) : f__$1.call(null,G__32309));
});
cljs$core$transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return cljs$core$transduce__3.call(this,xform,f,init);
case 4:
return cljs$core$transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$transduce.cljs$core$IFn$_invoke$arity$3 = cljs$core$transduce__3;
cljs$core$transduce.cljs$core$IFn$_invoke$arity$4 = cljs$core$transduce__4;
return cljs$core$transduce;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core._PLUS_ = (function() {
var cljs$core$_PLUS_ = null;
var cljs$core$_PLUS___0 = (function (){
return (0);
});
var cljs$core$_PLUS___1 = (function (x){
return x;
});
var cljs$core$_PLUS___2 = (function (x,y){
return (x + y);
});
var cljs$core$_PLUS___3 = (function() { 
var G__32310__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_PLUS_,(x + y),more);
};
var G__32310 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32311__i = 0, G__32311__a = new Array(arguments.length -  2);
while (G__32311__i < G__32311__a.length) {G__32311__a[G__32311__i] = arguments[G__32311__i + 2]; ++G__32311__i;}
  more = new cljs.core.IndexedSeq(G__32311__a,0);
} 
return G__32310__delegate.call(this,x,y,more);};
G__32310.cljs$lang$maxFixedArity = 2;
G__32310.cljs$lang$applyTo = (function (arglist__32312){
var x = cljs.core.first(arglist__32312);
arglist__32312 = cljs.core.next(arglist__32312);
var y = cljs.core.first(arglist__32312);
var more = cljs.core.rest(arglist__32312);
return G__32310__delegate(x,y,more);
});
G__32310.cljs$core$IFn$_invoke$arity$variadic = G__32310__delegate;
return G__32310;
})()
;
cljs$core$_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_PLUS___0.call(this);
case 1:
return cljs$core$_PLUS___1.call(this,x);
case 2:
return cljs$core$_PLUS___2.call(this,x,y);
default:
var G__32313 = null;
if (arguments.length > 2) {
var G__32314__i = 0, G__32314__a = new Array(arguments.length -  2);
while (G__32314__i < G__32314__a.length) {G__32314__a[G__32314__i] = arguments[G__32314__i + 2]; ++G__32314__i;}
G__32313 = new cljs.core.IndexedSeq(G__32314__a,0);
}
return cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32313);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_PLUS_.cljs$lang$maxFixedArity = 2;
cljs$core$_PLUS_.cljs$lang$applyTo = cljs$core$_PLUS___3.cljs$lang$applyTo;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_PLUS___0;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_PLUS___1;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_PLUS___2;
cljs$core$_PLUS_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_PLUS_;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core._ = (function() {
var cljs$core$_ = null;
var cljs$core$___1 = (function (x){
return (- x);
});
var cljs$core$___2 = (function (x,y){
return (x - y);
});
var cljs$core$___3 = (function() { 
var G__32315__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_,(x - y),more);
};
var G__32315 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32316__i = 0, G__32316__a = new Array(arguments.length -  2);
while (G__32316__i < G__32316__a.length) {G__32316__a[G__32316__i] = arguments[G__32316__i + 2]; ++G__32316__i;}
  more = new cljs.core.IndexedSeq(G__32316__a,0);
} 
return G__32315__delegate.call(this,x,y,more);};
G__32315.cljs$lang$maxFixedArity = 2;
G__32315.cljs$lang$applyTo = (function (arglist__32317){
var x = cljs.core.first(arglist__32317);
arglist__32317 = cljs.core.next(arglist__32317);
var y = cljs.core.first(arglist__32317);
var more = cljs.core.rest(arglist__32317);
return G__32315__delegate(x,y,more);
});
G__32315.cljs$core$IFn$_invoke$arity$variadic = G__32315__delegate;
return G__32315;
})()
;
cljs$core$_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$___1.call(this,x);
case 2:
return cljs$core$___2.call(this,x,y);
default:
var G__32318 = null;
if (arguments.length > 2) {
var G__32319__i = 0, G__32319__a = new Array(arguments.length -  2);
while (G__32319__i < G__32319__a.length) {G__32319__a[G__32319__i] = arguments[G__32319__i + 2]; ++G__32319__i;}
G__32318 = new cljs.core.IndexedSeq(G__32319__a,0);
}
return cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32318);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_.cljs$lang$maxFixedArity = 2;
cljs$core$_.cljs$lang$applyTo = cljs$core$___3.cljs$lang$applyTo;
cljs$core$_.cljs$core$IFn$_invoke$arity$1 = cljs$core$___1;
cljs$core$_.cljs$core$IFn$_invoke$arity$2 = cljs$core$___2;
cljs$core$_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core._STAR_ = (function() {
var cljs$core$_STAR_ = null;
var cljs$core$_STAR___0 = (function (){
return (1);
});
var cljs$core$_STAR___1 = (function (x){
return x;
});
var cljs$core$_STAR___2 = (function (x,y){
return (x * y);
});
var cljs$core$_STAR___3 = (function() { 
var G__32320__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_STAR_,(x * y),more);
};
var G__32320 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32321__i = 0, G__32321__a = new Array(arguments.length -  2);
while (G__32321__i < G__32321__a.length) {G__32321__a[G__32321__i] = arguments[G__32321__i + 2]; ++G__32321__i;}
  more = new cljs.core.IndexedSeq(G__32321__a,0);
} 
return G__32320__delegate.call(this,x,y,more);};
G__32320.cljs$lang$maxFixedArity = 2;
G__32320.cljs$lang$applyTo = (function (arglist__32322){
var x = cljs.core.first(arglist__32322);
arglist__32322 = cljs.core.next(arglist__32322);
var y = cljs.core.first(arglist__32322);
var more = cljs.core.rest(arglist__32322);
return G__32320__delegate(x,y,more);
});
G__32320.cljs$core$IFn$_invoke$arity$variadic = G__32320__delegate;
return G__32320;
})()
;
cljs$core$_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$_STAR___0.call(this);
case 1:
return cljs$core$_STAR___1.call(this,x);
case 2:
return cljs$core$_STAR___2.call(this,x,y);
default:
var G__32323 = null;
if (arguments.length > 2) {
var G__32324__i = 0, G__32324__a = new Array(arguments.length -  2);
while (G__32324__i < G__32324__a.length) {G__32324__a[G__32324__i] = arguments[G__32324__i + 2]; ++G__32324__i;}
G__32323 = new cljs.core.IndexedSeq(G__32324__a,0);
}
return cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32323);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_STAR_.cljs$lang$maxFixedArity = 2;
cljs$core$_STAR_.cljs$lang$applyTo = cljs$core$_STAR___3.cljs$lang$applyTo;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$0 = cljs$core$_STAR___0;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_STAR___1;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_STAR___2;
cljs$core$_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_STAR_;
})()
;
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core._SLASH_ = (function() {
var cljs$core$_SLASH_ = null;
var cljs$core$_SLASH___1 = (function (x){
return cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$_SLASH___2 = (function (x,y){
return (x / y);
});
var cljs$core$_SLASH___3 = (function() { 
var G__32329__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$_SLASH_,cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__32329 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32330__i = 0, G__32330__a = new Array(arguments.length -  2);
while (G__32330__i < G__32330__a.length) {G__32330__a[G__32330__i] = arguments[G__32330__i + 2]; ++G__32330__i;}
  more = new cljs.core.IndexedSeq(G__32330__a,0);
} 
return G__32329__delegate.call(this,x,y,more);};
G__32329.cljs$lang$maxFixedArity = 2;
G__32329.cljs$lang$applyTo = (function (arglist__32331){
var x = cljs.core.first(arglist__32331);
arglist__32331 = cljs.core.next(arglist__32331);
var y = cljs.core.first(arglist__32331);
var more = cljs.core.rest(arglist__32331);
return G__32329__delegate(x,y,more);
});
G__32329.cljs$core$IFn$_invoke$arity$variadic = G__32329__delegate;
return G__32329;
})()
;
cljs$core$_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_SLASH___1.call(this,x);
case 2:
return cljs$core$_SLASH___2.call(this,x,y);
default:
var G__32332 = null;
if (arguments.length > 2) {
var G__32333__i = 0, G__32333__a = new Array(arguments.length -  2);
while (G__32333__i < G__32333__a.length) {G__32333__a[G__32333__i] = arguments[G__32333__i + 2]; ++G__32333__i;}
G__32332 = new cljs.core.IndexedSeq(G__32333__a,0);
}
return cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32332);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_SLASH_.cljs$lang$maxFixedArity = 2;
cljs$core$_SLASH_.cljs$lang$applyTo = cljs$core$_SLASH___3.cljs$lang$applyTo;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_SLASH___1;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_SLASH___2;
cljs$core$_SLASH_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_SLASH_;
})()
;
/**
 * Returns non-nil if nums are in monotonically increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT_ = (function() {
var cljs$core$_LT_ = null;
var cljs$core$_LT___1 = (function (x){
return true;
});
var cljs$core$_LT___2 = (function (x,y){
return (x < y);
});
var cljs$core$_LT___3 = (function() { 
var G__32334__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__32335 = y;
var G__32336 = cljs.core.first(more);
var G__32337 = cljs.core.next(more);
x = G__32335;
y = G__32336;
more = G__32337;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32334 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32338__i = 0, G__32338__a = new Array(arguments.length -  2);
while (G__32338__i < G__32338__a.length) {G__32338__a[G__32338__i] = arguments[G__32338__i + 2]; ++G__32338__i;}
  more = new cljs.core.IndexedSeq(G__32338__a,0);
} 
return G__32334__delegate.call(this,x,y,more);};
G__32334.cljs$lang$maxFixedArity = 2;
G__32334.cljs$lang$applyTo = (function (arglist__32339){
var x = cljs.core.first(arglist__32339);
arglist__32339 = cljs.core.next(arglist__32339);
var y = cljs.core.first(arglist__32339);
var more = cljs.core.rest(arglist__32339);
return G__32334__delegate(x,y,more);
});
G__32334.cljs$core$IFn$_invoke$arity$variadic = G__32334__delegate;
return G__32334;
})()
;
cljs$core$_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT___1.call(this,x);
case 2:
return cljs$core$_LT___2.call(this,x,y);
default:
var G__32340 = null;
if (arguments.length > 2) {
var G__32341__i = 0, G__32341__a = new Array(arguments.length -  2);
while (G__32341__i < G__32341__a.length) {G__32341__a[G__32341__i] = arguments[G__32341__i + 2]; ++G__32341__i;}
G__32340 = new cljs.core.IndexedSeq(G__32341__a,0);
}
return cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32340);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT_.cljs$lang$applyTo = cljs$core$_LT___3.cljs$lang$applyTo;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT___1;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT___2;
cljs$core$_LT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._LT__EQ_ = (function() {
var cljs$core$_LT__EQ_ = null;
var cljs$core$_LT__EQ___1 = (function (x){
return true;
});
var cljs$core$_LT__EQ___2 = (function (x,y){
return (x <= y);
});
var cljs$core$_LT__EQ___3 = (function() { 
var G__32342__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__32343 = y;
var G__32344 = cljs.core.first(more);
var G__32345 = cljs.core.next(more);
x = G__32343;
y = G__32344;
more = G__32345;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32342 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32346__i = 0, G__32346__a = new Array(arguments.length -  2);
while (G__32346__i < G__32346__a.length) {G__32346__a[G__32346__i] = arguments[G__32346__i + 2]; ++G__32346__i;}
  more = new cljs.core.IndexedSeq(G__32346__a,0);
} 
return G__32342__delegate.call(this,x,y,more);};
G__32342.cljs$lang$maxFixedArity = 2;
G__32342.cljs$lang$applyTo = (function (arglist__32347){
var x = cljs.core.first(arglist__32347);
arglist__32347 = cljs.core.next(arglist__32347);
var y = cljs.core.first(arglist__32347);
var more = cljs.core.rest(arglist__32347);
return G__32342__delegate(x,y,more);
});
G__32342.cljs$core$IFn$_invoke$arity$variadic = G__32342__delegate;
return G__32342;
})()
;
cljs$core$_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_LT__EQ___1.call(this,x);
case 2:
return cljs$core$_LT__EQ___2.call(this,x,y);
default:
var G__32348 = null;
if (arguments.length > 2) {
var G__32349__i = 0, G__32349__a = new Array(arguments.length -  2);
while (G__32349__i < G__32349__a.length) {G__32349__a[G__32349__i] = arguments[G__32349__i + 2]; ++G__32349__i;}
G__32348 = new cljs.core.IndexedSeq(G__32349__a,0);
}
return cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32348);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_LT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_LT__EQ_.cljs$lang$applyTo = cljs$core$_LT__EQ___3.cljs$lang$applyTo;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_LT__EQ___1;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_LT__EQ___2;
cljs$core$_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_LT__EQ_;
})()
;
/**
 * Returns non-nil if nums are in monotonically decreasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT_ = (function() {
var cljs$core$_GT_ = null;
var cljs$core$_GT___1 = (function (x){
return true;
});
var cljs$core$_GT___2 = (function (x,y){
return (x > y);
});
var cljs$core$_GT___3 = (function() { 
var G__32350__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__32351 = y;
var G__32352 = cljs.core.first(more);
var G__32353 = cljs.core.next(more);
x = G__32351;
y = G__32352;
more = G__32353;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32350 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32354__i = 0, G__32354__a = new Array(arguments.length -  2);
while (G__32354__i < G__32354__a.length) {G__32354__a[G__32354__i] = arguments[G__32354__i + 2]; ++G__32354__i;}
  more = new cljs.core.IndexedSeq(G__32354__a,0);
} 
return G__32350__delegate.call(this,x,y,more);};
G__32350.cljs$lang$maxFixedArity = 2;
G__32350.cljs$lang$applyTo = (function (arglist__32355){
var x = cljs.core.first(arglist__32355);
arglist__32355 = cljs.core.next(arglist__32355);
var y = cljs.core.first(arglist__32355);
var more = cljs.core.rest(arglist__32355);
return G__32350__delegate(x,y,more);
});
G__32350.cljs$core$IFn$_invoke$arity$variadic = G__32350__delegate;
return G__32350;
})()
;
cljs$core$_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT___1.call(this,x);
case 2:
return cljs$core$_GT___2.call(this,x,y);
default:
var G__32356 = null;
if (arguments.length > 2) {
var G__32357__i = 0, G__32357__a = new Array(arguments.length -  2);
while (G__32357__i < G__32357__a.length) {G__32357__a[G__32357__i] = arguments[G__32357__i + 2]; ++G__32357__i;}
G__32356 = new cljs.core.IndexedSeq(G__32357__a,0);
}
return cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32356);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT_.cljs$lang$applyTo = cljs$core$_GT___3.cljs$lang$applyTo;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT___1;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT___2;
cljs$core$_GT_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT_;
})()
;
/**
 * Returns non-nil if nums are in monotonically non-increasing order,
 * otherwise false.
 * @param {...*} var_args
 */
cljs.core._GT__EQ_ = (function() {
var cljs$core$_GT__EQ_ = null;
var cljs$core$_GT__EQ___1 = (function (x){
return true;
});
var cljs$core$_GT__EQ___2 = (function (x,y){
return (x >= y);
});
var cljs$core$_GT__EQ___3 = (function() { 
var G__32358__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__32359 = y;
var G__32360 = cljs.core.first(more);
var G__32361 = cljs.core.next(more);
x = G__32359;
y = G__32360;
more = G__32361;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32358 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32362__i = 0, G__32362__a = new Array(arguments.length -  2);
while (G__32362__i < G__32362__a.length) {G__32362__a[G__32362__i] = arguments[G__32362__i + 2]; ++G__32362__i;}
  more = new cljs.core.IndexedSeq(G__32362__a,0);
} 
return G__32358__delegate.call(this,x,y,more);};
G__32358.cljs$lang$maxFixedArity = 2;
G__32358.cljs$lang$applyTo = (function (arglist__32363){
var x = cljs.core.first(arglist__32363);
arglist__32363 = cljs.core.next(arglist__32363);
var y = cljs.core.first(arglist__32363);
var more = cljs.core.rest(arglist__32363);
return G__32358__delegate(x,y,more);
});
G__32358.cljs$core$IFn$_invoke$arity$variadic = G__32358__delegate;
return G__32358;
})()
;
cljs$core$_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_GT__EQ___1.call(this,x);
case 2:
return cljs$core$_GT__EQ___2.call(this,x,y);
default:
var G__32364 = null;
if (arguments.length > 2) {
var G__32365__i = 0, G__32365__a = new Array(arguments.length -  2);
while (G__32365__i < G__32365__a.length) {G__32365__a[G__32365__i] = arguments[G__32365__i + 2]; ++G__32365__i;}
G__32364 = new cljs.core.IndexedSeq(G__32365__a,0);
}
return cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_GT__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_GT__EQ_.cljs$lang$applyTo = cljs$core$_GT__EQ___3.cljs$lang$applyTo;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_GT__EQ___1;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_GT__EQ___2;
cljs$core$_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_GT__EQ_;
})()
;
/**
 * Returns a number one less than num.
 */
cljs.core.dec = (function cljs$core$dec(x){
return (x - (1));
});
/**
 * Returns the greatest of the nums.
 * @param {...*} var_args
 */
cljs.core.max = (function() {
var cljs$core$max = null;
var cljs$core$max__1 = (function (x){
return x;
});
var cljs$core$max__2 = (function (x,y){
var x__24495__auto__ = x;
var y__24496__auto__ = y;
return ((x__24495__auto__ > y__24496__auto__) ? x__24495__auto__ : y__24496__auto__);
});
var cljs$core$max__3 = (function() { 
var G__32366__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$max,(function (){var x__24495__auto__ = x;
var y__24496__auto__ = y;
return ((x__24495__auto__ > y__24496__auto__) ? x__24495__auto__ : y__24496__auto__);
})(),more);
};
var G__32366 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32367__i = 0, G__32367__a = new Array(arguments.length -  2);
while (G__32367__i < G__32367__a.length) {G__32367__a[G__32367__i] = arguments[G__32367__i + 2]; ++G__32367__i;}
  more = new cljs.core.IndexedSeq(G__32367__a,0);
} 
return G__32366__delegate.call(this,x,y,more);};
G__32366.cljs$lang$maxFixedArity = 2;
G__32366.cljs$lang$applyTo = (function (arglist__32368){
var x = cljs.core.first(arglist__32368);
arglist__32368 = cljs.core.next(arglist__32368);
var y = cljs.core.first(arglist__32368);
var more = cljs.core.rest(arglist__32368);
return G__32366__delegate(x,y,more);
});
G__32366.cljs$core$IFn$_invoke$arity$variadic = G__32366__delegate;
return G__32366;
})()
;
cljs$core$max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$max__1.call(this,x);
case 2:
return cljs$core$max__2.call(this,x,y);
default:
var G__32369 = null;
if (arguments.length > 2) {
var G__32370__i = 0, G__32370__a = new Array(arguments.length -  2);
while (G__32370__i < G__32370__a.length) {G__32370__a[G__32370__i] = arguments[G__32370__i + 2]; ++G__32370__i;}
G__32369 = new cljs.core.IndexedSeq(G__32370__a,0);
}
return cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32369);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max.cljs$lang$maxFixedArity = 2;
cljs$core$max.cljs$lang$applyTo = cljs$core$max__3.cljs$lang$applyTo;
cljs$core$max.cljs$core$IFn$_invoke$arity$1 = cljs$core$max__1;
cljs$core$max.cljs$core$IFn$_invoke$arity$2 = cljs$core$max__2;
cljs$core$max.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max;
})()
;
/**
 * Returns the least of the nums.
 * @param {...*} var_args
 */
cljs.core.min = (function() {
var cljs$core$min = null;
var cljs$core$min__1 = (function (x){
return x;
});
var cljs$core$min__2 = (function (x,y){
var x__24502__auto__ = x;
var y__24503__auto__ = y;
return ((x__24502__auto__ < y__24503__auto__) ? x__24502__auto__ : y__24503__auto__);
});
var cljs$core$min__3 = (function() { 
var G__32371__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$min,(function (){var x__24502__auto__ = x;
var y__24503__auto__ = y;
return ((x__24502__auto__ < y__24503__auto__) ? x__24502__auto__ : y__24503__auto__);
})(),more);
};
var G__32371 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32372__i = 0, G__32372__a = new Array(arguments.length -  2);
while (G__32372__i < G__32372__a.length) {G__32372__a[G__32372__i] = arguments[G__32372__i + 2]; ++G__32372__i;}
  more = new cljs.core.IndexedSeq(G__32372__a,0);
} 
return G__32371__delegate.call(this,x,y,more);};
G__32371.cljs$lang$maxFixedArity = 2;
G__32371.cljs$lang$applyTo = (function (arglist__32373){
var x = cljs.core.first(arglist__32373);
arglist__32373 = cljs.core.next(arglist__32373);
var y = cljs.core.first(arglist__32373);
var more = cljs.core.rest(arglist__32373);
return G__32371__delegate(x,y,more);
});
G__32371.cljs$core$IFn$_invoke$arity$variadic = G__32371__delegate;
return G__32371;
})()
;
cljs$core$min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$min__1.call(this,x);
case 2:
return cljs$core$min__2.call(this,x,y);
default:
var G__32374 = null;
if (arguments.length > 2) {
var G__32375__i = 0, G__32375__a = new Array(arguments.length -  2);
while (G__32375__i < G__32375__a.length) {G__32375__a[G__32375__i] = arguments[G__32375__i + 2]; ++G__32375__i;}
G__32374 = new cljs.core.IndexedSeq(G__32375__a,0);
}
return cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32374);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min.cljs$lang$maxFixedArity = 2;
cljs$core$min.cljs$lang$applyTo = cljs$core$min__3.cljs$lang$applyTo;
cljs$core$min.cljs$core$IFn$_invoke$arity$1 = cljs$core$min__1;
cljs$core$min.cljs$core$IFn$_invoke$arity$2 = cljs$core$min__2;
cljs$core$min.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min;
})()
;
cljs.core.byte$ = (function cljs$core$byte(x){
return x;
});
/**
 * Coerce to char
 */
cljs.core.char$ = (function cljs$core$char(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function cljs$core$short(x){
return x;
});
cljs.core.float$ = (function cljs$core$float(x){
return x;
});
cljs.core.double$ = (function cljs$core$double(x){
return x;
});
cljs.core.unchecked_byte = (function cljs$core$unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function cljs$core$unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function cljs$core$unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function cljs$core$unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function cljs$core$unchecked_double(x){
return x;
});
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add = (function() {
var cljs$core$unchecked_add = null;
var cljs$core$unchecked_add__0 = (function (){
return (0);
});
var cljs$core$unchecked_add__1 = (function (x){
return x;
});
var cljs$core$unchecked_add__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add__3 = (function() { 
var G__32376__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add,(x + y),more);
};
var G__32376 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32377__i = 0, G__32377__a = new Array(arguments.length -  2);
while (G__32377__i < G__32377__a.length) {G__32377__a[G__32377__i] = arguments[G__32377__i + 2]; ++G__32377__i;}
  more = new cljs.core.IndexedSeq(G__32377__a,0);
} 
return G__32376__delegate.call(this,x,y,more);};
G__32376.cljs$lang$maxFixedArity = 2;
G__32376.cljs$lang$applyTo = (function (arglist__32378){
var x = cljs.core.first(arglist__32378);
arglist__32378 = cljs.core.next(arglist__32378);
var y = cljs.core.first(arglist__32378);
var more = cljs.core.rest(arglist__32378);
return G__32376__delegate(x,y,more);
});
G__32376.cljs$core$IFn$_invoke$arity$variadic = G__32376__delegate;
return G__32376;
})()
;
cljs$core$unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add__0.call(this);
case 1:
return cljs$core$unchecked_add__1.call(this,x);
case 2:
return cljs$core$unchecked_add__2.call(this,x,y);
default:
var G__32379 = null;
if (arguments.length > 2) {
var G__32380__i = 0, G__32380__a = new Array(arguments.length -  2);
while (G__32380__i < G__32380__a.length) {G__32380__a[G__32380__i] = arguments[G__32380__i + 2]; ++G__32380__i;}
G__32379 = new cljs.core.IndexedSeq(G__32380__a,0);
}
return cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32379);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add.cljs$lang$applyTo = cljs$core$unchecked_add__3.cljs$lang$applyTo;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add__0;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add__1;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add__2;
cljs$core$unchecked_add.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add;
})()
;
/**
 * Returns the sum of nums. (+) returns 0.
 * @param {...*} var_args
 */
cljs.core.unchecked_add_int = (function() {
var cljs$core$unchecked_add_int = null;
var cljs$core$unchecked_add_int__0 = (function (){
return (0);
});
var cljs$core$unchecked_add_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var cljs$core$unchecked_add_int__3 = (function() { 
var G__32381__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_add_int,(x + y),more);
};
var G__32381 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32382__i = 0, G__32382__a = new Array(arguments.length -  2);
while (G__32382__i < G__32382__a.length) {G__32382__a[G__32382__i] = arguments[G__32382__i + 2]; ++G__32382__i;}
  more = new cljs.core.IndexedSeq(G__32382__a,0);
} 
return G__32381__delegate.call(this,x,y,more);};
G__32381.cljs$lang$maxFixedArity = 2;
G__32381.cljs$lang$applyTo = (function (arglist__32383){
var x = cljs.core.first(arglist__32383);
arglist__32383 = cljs.core.next(arglist__32383);
var y = cljs.core.first(arglist__32383);
var more = cljs.core.rest(arglist__32383);
return G__32381__delegate(x,y,more);
});
G__32381.cljs$core$IFn$_invoke$arity$variadic = G__32381__delegate;
return G__32381;
})()
;
cljs$core$unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_add_int__0.call(this);
case 1:
return cljs$core$unchecked_add_int__1.call(this,x);
case 2:
return cljs$core$unchecked_add_int__2.call(this,x,y);
default:
var G__32384 = null;
if (arguments.length > 2) {
var G__32385__i = 0, G__32385__a = new Array(arguments.length -  2);
while (G__32385__i < G__32385__a.length) {G__32385__a[G__32385__i] = arguments[G__32385__i + 2]; ++G__32385__i;}
G__32384 = new cljs.core.IndexedSeq(G__32385__a,0);
}
return cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_add_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_add_int.cljs$lang$applyTo = cljs$core$unchecked_add_int__3.cljs$lang$applyTo;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_add_int__0;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_add_int__1;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_add_int__2;
cljs$core$unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_add_int;
})()
;
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec = (function cljs$core$unchecked_dec(x){
return (x - (1));
});
/**
 * Returns a number one less than x, an int.
 */
cljs.core.unchecked_dec_int = (function cljs$core$unchecked_dec_int(x){
return (x - (1));
});
/**
 * If no denominators are supplied, returns 1/numerator,
 * else returns numerator divided by all of the denominators.
 * @param {...*} var_args
 */
cljs.core.unchecked_divide_int = (function() {
var cljs$core$unchecked_divide_int = null;
var cljs$core$unchecked_divide_int__1 = (function (x){
return cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var cljs$core$unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var cljs$core$unchecked_divide_int__3 = (function() { 
var G__32390__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_divide_int,cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__32390 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32391__i = 0, G__32391__a = new Array(arguments.length -  2);
while (G__32391__i < G__32391__a.length) {G__32391__a[G__32391__i] = arguments[G__32391__i + 2]; ++G__32391__i;}
  more = new cljs.core.IndexedSeq(G__32391__a,0);
} 
return G__32390__delegate.call(this,x,y,more);};
G__32390.cljs$lang$maxFixedArity = 2;
G__32390.cljs$lang$applyTo = (function (arglist__32392){
var x = cljs.core.first(arglist__32392);
arglist__32392 = cljs.core.next(arglist__32392);
var y = cljs.core.first(arglist__32392);
var more = cljs.core.rest(arglist__32392);
return G__32390__delegate(x,y,more);
});
G__32390.cljs$core$IFn$_invoke$arity$variadic = G__32390__delegate;
return G__32390;
})()
;
cljs$core$unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_divide_int__1.call(this,x);
case 2:
return cljs$core$unchecked_divide_int__2.call(this,x,y);
default:
var G__32393 = null;
if (arguments.length > 2) {
var G__32394__i = 0, G__32394__a = new Array(arguments.length -  2);
while (G__32394__i < G__32394__a.length) {G__32394__a[G__32394__i] = arguments[G__32394__i + 2]; ++G__32394__i;}
G__32393 = new cljs.core.IndexedSeq(G__32394__a,0);
}
return cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32393);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_divide_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_divide_int.cljs$lang$applyTo = cljs$core$unchecked_divide_int__3.cljs$lang$applyTo;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_divide_int__1;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_divide_int__2;
cljs$core$unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function cljs$core$unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function cljs$core$unchecked_inc_int(x){
return (x + (1));
});
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply = (function() {
var cljs$core$unchecked_multiply = null;
var cljs$core$unchecked_multiply__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply__3 = (function() { 
var G__32395__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply,(x * y),more);
};
var G__32395 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32396__i = 0, G__32396__a = new Array(arguments.length -  2);
while (G__32396__i < G__32396__a.length) {G__32396__a[G__32396__i] = arguments[G__32396__i + 2]; ++G__32396__i;}
  more = new cljs.core.IndexedSeq(G__32396__a,0);
} 
return G__32395__delegate.call(this,x,y,more);};
G__32395.cljs$lang$maxFixedArity = 2;
G__32395.cljs$lang$applyTo = (function (arglist__32397){
var x = cljs.core.first(arglist__32397);
arglist__32397 = cljs.core.next(arglist__32397);
var y = cljs.core.first(arglist__32397);
var more = cljs.core.rest(arglist__32397);
return G__32395__delegate(x,y,more);
});
G__32395.cljs$core$IFn$_invoke$arity$variadic = G__32395__delegate;
return G__32395;
})()
;
cljs$core$unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply__0.call(this);
case 1:
return cljs$core$unchecked_multiply__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply__2.call(this,x,y);
default:
var G__32398 = null;
if (arguments.length > 2) {
var G__32399__i = 0, G__32399__a = new Array(arguments.length -  2);
while (G__32399__i < G__32399__a.length) {G__32399__a[G__32399__i] = arguments[G__32399__i + 2]; ++G__32399__i;}
G__32398 = new cljs.core.IndexedSeq(G__32399__a,0);
}
return cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32398);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply.cljs$lang$applyTo = cljs$core$unchecked_multiply__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply__0;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply__1;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply__2;
cljs$core$unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply;
})()
;
/**
 * Returns the product of nums. (*) returns 1.
 * @param {...*} var_args
 */
cljs.core.unchecked_multiply_int = (function() {
var cljs$core$unchecked_multiply_int = null;
var cljs$core$unchecked_multiply_int__0 = (function (){
return (1);
});
var cljs$core$unchecked_multiply_int__1 = (function (x){
return x;
});
var cljs$core$unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var cljs$core$unchecked_multiply_int__3 = (function() { 
var G__32400__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_multiply_int,(x * y),more);
};
var G__32400 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32401__i = 0, G__32401__a = new Array(arguments.length -  2);
while (G__32401__i < G__32401__a.length) {G__32401__a[G__32401__i] = arguments[G__32401__i + 2]; ++G__32401__i;}
  more = new cljs.core.IndexedSeq(G__32401__a,0);
} 
return G__32400__delegate.call(this,x,y,more);};
G__32400.cljs$lang$maxFixedArity = 2;
G__32400.cljs$lang$applyTo = (function (arglist__32402){
var x = cljs.core.first(arglist__32402);
arglist__32402 = cljs.core.next(arglist__32402);
var y = cljs.core.first(arglist__32402);
var more = cljs.core.rest(arglist__32402);
return G__32400__delegate(x,y,more);
});
G__32400.cljs$core$IFn$_invoke$arity$variadic = G__32400__delegate;
return G__32400;
})()
;
cljs$core$unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return cljs$core$unchecked_multiply_int__0.call(this);
case 1:
return cljs$core$unchecked_multiply_int__1.call(this,x);
case 2:
return cljs$core$unchecked_multiply_int__2.call(this,x,y);
default:
var G__32403 = null;
if (arguments.length > 2) {
var G__32404__i = 0, G__32404__a = new Array(arguments.length -  2);
while (G__32404__i < G__32404__a.length) {G__32404__a[G__32404__i] = arguments[G__32404__i + 2]; ++G__32404__i;}
G__32403 = new cljs.core.IndexedSeq(G__32404__a,0);
}
return cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32403);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_multiply_int.cljs$lang$applyTo = cljs$core$unchecked_multiply_int__3.cljs$lang$applyTo;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = cljs$core$unchecked_multiply_int__0;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_multiply_int__1;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_multiply_int__2;
cljs$core$unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function cljs$core$unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function cljs$core$unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function cljs$core$unchecked_remainder_int(x,n){
var G__32407 = x;
var G__32408 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__32407,G__32408) : cljs.core.mod.call(null,G__32407,G__32408));
});
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract = (function() {
var cljs$core$unchecked_subtract = null;
var cljs$core$unchecked_subtract__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract__3 = (function() { 
var G__32409__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract,(x - y),more);
};
var G__32409 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32410__i = 0, G__32410__a = new Array(arguments.length -  2);
while (G__32410__i < G__32410__a.length) {G__32410__a[G__32410__i] = arguments[G__32410__i + 2]; ++G__32410__i;}
  more = new cljs.core.IndexedSeq(G__32410__a,0);
} 
return G__32409__delegate.call(this,x,y,more);};
G__32409.cljs$lang$maxFixedArity = 2;
G__32409.cljs$lang$applyTo = (function (arglist__32411){
var x = cljs.core.first(arglist__32411);
arglist__32411 = cljs.core.next(arglist__32411);
var y = cljs.core.first(arglist__32411);
var more = cljs.core.rest(arglist__32411);
return G__32409__delegate(x,y,more);
});
G__32409.cljs$core$IFn$_invoke$arity$variadic = G__32409__delegate;
return G__32409;
})()
;
cljs$core$unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract__2.call(this,x,y);
default:
var G__32412 = null;
if (arguments.length > 2) {
var G__32413__i = 0, G__32413__a = new Array(arguments.length -  2);
while (G__32413__i < G__32413__a.length) {G__32413__a[G__32413__i] = arguments[G__32413__i + 2]; ++G__32413__i;}
G__32412 = new cljs.core.IndexedSeq(G__32413__a,0);
}
return cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32412);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract.cljs$lang$applyTo = cljs$core$unchecked_subtract__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract__1;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract__2;
cljs$core$unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract;
})()
;
/**
 * If no ys are supplied, returns the negation of x, else subtracts
 * the ys from x and returns the result.
 * @param {...*} var_args
 */
cljs.core.unchecked_subtract_int = (function() {
var cljs$core$unchecked_subtract_int = null;
var cljs$core$unchecked_subtract_int__1 = (function (x){
return (- x);
});
var cljs$core$unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var cljs$core$unchecked_subtract_int__3 = (function() { 
var G__32414__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$unchecked_subtract_int,(x - y),more);
};
var G__32414 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32415__i = 0, G__32415__a = new Array(arguments.length -  2);
while (G__32415__i < G__32415__a.length) {G__32415__a[G__32415__i] = arguments[G__32415__i + 2]; ++G__32415__i;}
  more = new cljs.core.IndexedSeq(G__32415__a,0);
} 
return G__32414__delegate.call(this,x,y,more);};
G__32414.cljs$lang$maxFixedArity = 2;
G__32414.cljs$lang$applyTo = (function (arglist__32416){
var x = cljs.core.first(arglist__32416);
arglist__32416 = cljs.core.next(arglist__32416);
var y = cljs.core.first(arglist__32416);
var more = cljs.core.rest(arglist__32416);
return G__32414__delegate(x,y,more);
});
G__32414.cljs$core$IFn$_invoke$arity$variadic = G__32414__delegate;
return G__32414;
})()
;
cljs$core$unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$unchecked_subtract_int__1.call(this,x);
case 2:
return cljs$core$unchecked_subtract_int__2.call(this,x,y);
default:
var G__32417 = null;
if (arguments.length > 2) {
var G__32418__i = 0, G__32418__a = new Array(arguments.length -  2);
while (G__32418__i < G__32418__a.length) {G__32418__a[G__32418__i] = arguments[G__32418__i + 2]; ++G__32418__i;}
G__32417 = new cljs.core.IndexedSeq(G__32418__a,0);
}
return cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32417);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
cljs$core$unchecked_subtract_int.cljs$lang$applyTo = cljs$core$unchecked_subtract_int__3.cljs$lang$applyTo;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = cljs$core$unchecked_subtract_int__1;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = cljs$core$unchecked_subtract_int__2;
cljs$core$unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = cljs$core$unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$unchecked_subtract_int;
})()
;
cljs.core.fix = (function cljs$core$fix(q){
if((q >= (0))){
var G__32421 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__32421) : Math.floor.call(null,G__32421));
} else {
var G__32422 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__32422) : Math.ceil.call(null,G__32422));
}
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.int$ = (function cljs$core$int(x){
return (x | (0));
});
/**
 * Coerce to int by stripping decimal places.
 */
cljs.core.unchecked_int = (function cljs$core$unchecked_int(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.long$ = (function cljs$core$long(x){
return cljs.core.fix(x);
});
/**
 * Coerce to long by stripping decimal places. Identical to `int'.
 */
cljs.core.unchecked_long = (function cljs$core$unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function cljs$core$booleans(x){
return x;
});
cljs.core.bytes = (function cljs$core$bytes(x){
return x;
});
cljs.core.chars = (function cljs$core$chars(x){
return x;
});
cljs.core.shorts = (function cljs$core$shorts(x){
return x;
});
cljs.core.ints = (function cljs$core$ints(x){
return x;
});
cljs.core.floats = (function cljs$core$floats(x){
return x;
});
cljs.core.doubles = (function cljs$core$doubles(x){
return x;
});
cljs.core.longs = (function cljs$core$longs(x){
return x;
});
/**
 * Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
 */
cljs.core.js_mod = (function cljs$core$js_mod(n,d){
return (n % d);
});
/**
 * Modulus of num and div. Truncates toward negative infinity.
 */
cljs.core.mod = (function cljs$core$mod(n,d){
return (((n % d) + d) % d);
});
/**
 * quot[ient] of dividing numerator by denominator.
 */
cljs.core.quot = (function cljs$core$quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
 * remainder of dividing numerator by denominator.
 */
cljs.core.rem = (function cljs$core$rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
 * Bitwise exclusive or
 * @param {...*} var_args
 */
cljs.core.bit_xor = (function() {
var cljs$core$bit_xor = null;
var cljs$core$bit_xor__2 = (function (x,y){
return (x ^ y);
});
var cljs$core$bit_xor__3 = (function() { 
var G__32423__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_xor,(x ^ y),more);
};
var G__32423 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32424__i = 0, G__32424__a = new Array(arguments.length -  2);
while (G__32424__i < G__32424__a.length) {G__32424__a[G__32424__i] = arguments[G__32424__i + 2]; ++G__32424__i;}
  more = new cljs.core.IndexedSeq(G__32424__a,0);
} 
return G__32423__delegate.call(this,x,y,more);};
G__32423.cljs$lang$maxFixedArity = 2;
G__32423.cljs$lang$applyTo = (function (arglist__32425){
var x = cljs.core.first(arglist__32425);
arglist__32425 = cljs.core.next(arglist__32425);
var y = cljs.core.first(arglist__32425);
var more = cljs.core.rest(arglist__32425);
return G__32423__delegate(x,y,more);
});
G__32423.cljs$core$IFn$_invoke$arity$variadic = G__32423__delegate;
return G__32423;
})()
;
cljs$core$bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_xor__2.call(this,x,y);
default:
var G__32426 = null;
if (arguments.length > 2) {
var G__32427__i = 0, G__32427__a = new Array(arguments.length -  2);
while (G__32427__i < G__32427__a.length) {G__32427__a[G__32427__i] = arguments[G__32427__i + 2]; ++G__32427__i;}
G__32426 = new cljs.core.IndexedSeq(G__32427__a,0);
}
return cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32426);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_xor.cljs$lang$maxFixedArity = 2;
cljs$core$bit_xor.cljs$lang$applyTo = cljs$core$bit_xor__3.cljs$lang$applyTo;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_xor__2;
cljs$core$bit_xor.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_xor;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and = (function() {
var cljs$core$bit_and = null;
var cljs$core$bit_and__2 = (function (x,y){
return (x & y);
});
var cljs$core$bit_and__3 = (function() { 
var G__32428__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and,(x & y),more);
};
var G__32428 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32429__i = 0, G__32429__a = new Array(arguments.length -  2);
while (G__32429__i < G__32429__a.length) {G__32429__a[G__32429__i] = arguments[G__32429__i + 2]; ++G__32429__i;}
  more = new cljs.core.IndexedSeq(G__32429__a,0);
} 
return G__32428__delegate.call(this,x,y,more);};
G__32428.cljs$lang$maxFixedArity = 2;
G__32428.cljs$lang$applyTo = (function (arglist__32430){
var x = cljs.core.first(arglist__32430);
arglist__32430 = cljs.core.next(arglist__32430);
var y = cljs.core.first(arglist__32430);
var more = cljs.core.rest(arglist__32430);
return G__32428__delegate(x,y,more);
});
G__32428.cljs$core$IFn$_invoke$arity$variadic = G__32428__delegate;
return G__32428;
})()
;
cljs$core$bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and__2.call(this,x,y);
default:
var G__32431 = null;
if (arguments.length > 2) {
var G__32432__i = 0, G__32432__a = new Array(arguments.length -  2);
while (G__32432__i < G__32432__a.length) {G__32432__a[G__32432__i] = arguments[G__32432__i + 2]; ++G__32432__i;}
G__32431 = new cljs.core.IndexedSeq(G__32432__a,0);
}
return cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32431);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and.cljs$lang$applyTo = cljs$core$bit_and__3.cljs$lang$applyTo;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and__2;
cljs$core$bit_and.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and;
})()
;
/**
 * Bitwise or
 * @param {...*} var_args
 */
cljs.core.bit_or = (function() {
var cljs$core$bit_or = null;
var cljs$core$bit_or__2 = (function (x,y){
return (x | y);
});
var cljs$core$bit_or__3 = (function() { 
var G__32433__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_or,(x | y),more);
};
var G__32433 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32434__i = 0, G__32434__a = new Array(arguments.length -  2);
while (G__32434__i < G__32434__a.length) {G__32434__a[G__32434__i] = arguments[G__32434__i + 2]; ++G__32434__i;}
  more = new cljs.core.IndexedSeq(G__32434__a,0);
} 
return G__32433__delegate.call(this,x,y,more);};
G__32433.cljs$lang$maxFixedArity = 2;
G__32433.cljs$lang$applyTo = (function (arglist__32435){
var x = cljs.core.first(arglist__32435);
arglist__32435 = cljs.core.next(arglist__32435);
var y = cljs.core.first(arglist__32435);
var more = cljs.core.rest(arglist__32435);
return G__32433__delegate(x,y,more);
});
G__32433.cljs$core$IFn$_invoke$arity$variadic = G__32433__delegate;
return G__32433;
})()
;
cljs$core$bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_or__2.call(this,x,y);
default:
var G__32436 = null;
if (arguments.length > 2) {
var G__32437__i = 0, G__32437__a = new Array(arguments.length -  2);
while (G__32437__i < G__32437__a.length) {G__32437__a[G__32437__i] = arguments[G__32437__i + 2]; ++G__32437__i;}
G__32436 = new cljs.core.IndexedSeq(G__32437__a,0);
}
return cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32436);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_or.cljs$lang$maxFixedArity = 2;
cljs$core$bit_or.cljs$lang$applyTo = cljs$core$bit_or__3.cljs$lang$applyTo;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_or__2;
cljs$core$bit_or.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_or;
})()
;
/**
 * Bitwise and
 * @param {...*} var_args
 */
cljs.core.bit_and_not = (function() {
var cljs$core$bit_and_not = null;
var cljs$core$bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var cljs$core$bit_and_not__3 = (function() { 
var G__32438__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs$core$bit_and_not,(x & ~y),more);
};
var G__32438 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32439__i = 0, G__32439__a = new Array(arguments.length -  2);
while (G__32439__i < G__32439__a.length) {G__32439__a[G__32439__i] = arguments[G__32439__i + 2]; ++G__32439__i;}
  more = new cljs.core.IndexedSeq(G__32439__a,0);
} 
return G__32438__delegate.call(this,x,y,more);};
G__32438.cljs$lang$maxFixedArity = 2;
G__32438.cljs$lang$applyTo = (function (arglist__32440){
var x = cljs.core.first(arglist__32440);
arglist__32440 = cljs.core.next(arglist__32440);
var y = cljs.core.first(arglist__32440);
var more = cljs.core.rest(arglist__32440);
return G__32438__delegate(x,y,more);
});
G__32438.cljs$core$IFn$_invoke$arity$variadic = G__32438__delegate;
return G__32438;
})()
;
cljs$core$bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$bit_and_not__2.call(this,x,y);
default:
var G__32441 = null;
if (arguments.length > 2) {
var G__32442__i = 0, G__32442__a = new Array(arguments.length -  2);
while (G__32442__i < G__32442__a.length) {G__32442__a[G__32442__i] = arguments[G__32442__i + 2]; ++G__32442__i;}
G__32441 = new cljs.core.IndexedSeq(G__32442__a,0);
}
return cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32441);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$bit_and_not.cljs$lang$maxFixedArity = 2;
cljs$core$bit_and_not.cljs$lang$applyTo = cljs$core$bit_and_not__3.cljs$lang$applyTo;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$2 = cljs$core$bit_and_not__2;
cljs$core$bit_and_not.cljs$core$IFn$_invoke$arity$variadic = cljs$core$bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$bit_and_not;
})()
;
/**
 * Clear bit at index n
 */
cljs.core.bit_clear = (function cljs$core$bit_clear(x,n){
return (x & ~(1 << n));
});
/**
 * Flip bit at index n
 */
cljs.core.bit_flip = (function cljs$core$bit_flip(x,n){
return (x ^ (1 << n));
});
/**
 * Bitwise complement
 */
cljs.core.bit_not = (function cljs$core$bit_not(x){
return (~ x);
});
/**
 * Set bit at index n
 */
cljs.core.bit_set = (function cljs$core$bit_set(x,n){
return (x | (1 << n));
});
/**
 * Test bit at index n
 */
cljs.core.bit_test = (function cljs$core$bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
 * Bitwise shift left
 */
cljs.core.bit_shift_left = (function cljs$core$bit_shift_left(x,n){
return (x << n);
});
/**
 * Bitwise shift right
 */
cljs.core.bit_shift_right = (function cljs$core$bit_shift_right(x,n){
return (x >> n);
});
/**
 * DEPRECATED: Bitwise shift right with zero fill
 */
cljs.core.bit_shift_right_zero_fill = (function cljs$core$bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
 * Bitwise shift right with zero fill
 */
cljs.core.unsigned_bit_shift_right = (function cljs$core$unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
 * Counts the number of bits set in n
 */
cljs.core.bit_count = (function cljs$core$bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
 * Returns non-nil if nums all have the equivalent
 * value, otherwise false. Behavior on non nums is
 * undefined.
 * @param {...*} var_args
 */
cljs.core._EQ__EQ_ = (function() {
var cljs$core$_EQ__EQ_ = null;
var cljs$core$_EQ__EQ___1 = (function (x){
return true;
});
var cljs$core$_EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var cljs$core$_EQ__EQ___3 = (function() { 
var G__32447__delegate = function (x,y,more){
while(true){
if(cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__32448 = y;
var G__32449 = cljs.core.first(more);
var G__32450 = cljs.core.next(more);
x = G__32448;
y = G__32449;
more = G__32450;
continue;
} else {
return cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__32447 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__32451__i = 0, G__32451__a = new Array(arguments.length -  2);
while (G__32451__i < G__32451__a.length) {G__32451__a[G__32451__i] = arguments[G__32451__i + 2]; ++G__32451__i;}
  more = new cljs.core.IndexedSeq(G__32451__a,0);
} 
return G__32447__delegate.call(this,x,y,more);};
G__32447.cljs$lang$maxFixedArity = 2;
G__32447.cljs$lang$applyTo = (function (arglist__32452){
var x = cljs.core.first(arglist__32452);
arglist__32452 = cljs.core.next(arglist__32452);
var y = cljs.core.first(arglist__32452);
var more = cljs.core.rest(arglist__32452);
return G__32447__delegate(x,y,more);
});
G__32447.cljs$core$IFn$_invoke$arity$variadic = G__32447__delegate;
return G__32447;
})()
;
cljs$core$_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$_EQ__EQ___1.call(this,x);
case 2:
return cljs$core$_EQ__EQ___2.call(this,x,y);
default:
var G__32453 = null;
if (arguments.length > 2) {
var G__32454__i = 0, G__32454__a = new Array(arguments.length -  2);
while (G__32454__i < G__32454__a.length) {G__32454__a[G__32454__i] = arguments[G__32454__i + 2]; ++G__32454__i;}
G__32453 = new cljs.core.IndexedSeq(G__32454__a,0);
}
return cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$_EQ__EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$_EQ__EQ_.cljs$lang$applyTo = cljs$core$_EQ__EQ___3.cljs$lang$applyTo;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$_EQ__EQ___1;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$_EQ__EQ___2;
cljs$core$_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$_EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$_EQ__EQ_;
})()
;
/**
 * Returns true if num is greater than zero, else false
 */
cljs.core.pos_QMARK_ = (function cljs$core$pos_QMARK_(n){
return (n > (0));
});
/**
 * Returns true if num is zero, else false
 */
cljs.core.zero_QMARK_ = (function cljs$core$zero_QMARK_(n){
return (n === (0));
});
/**
 * Returns true if num is less than zero, else false
 */
cljs.core.neg_QMARK_ = (function cljs$core$neg_QMARK_(x){
return (x < (0));
});
/**
 * Returns the nth next of coll, (seq coll) when n is 0.
 */
cljs.core.nthnext = (function cljs$core$nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__32455 = (n__$1 - (1));
var G__32456 = cljs.core.next(xs);
n__$1 = G__32455;
xs = G__32456;
continue;
} else {
return xs;
}
break;
}
});
/**
 * With no args, returns the empty string. With one arg x, returns
 * x.toString().  (str nil) returns the empty string. With more than
 * one arg, returns the concatenation of the str values of the args.
 * @param {...*} var_args
 */
cljs.core.str = (function() {
var cljs$core$str = null;
var cljs$core$str__0 = (function (){
return "";
});
var cljs$core$str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__32460 = x;
return goog.string.buildString(G__32460);
}
});
var cljs$core$str__2 = (function() { 
var G__32461__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(cljs$core$str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__32462 = sb.append(cljs$core$str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__32463 = cljs.core.next(more);
sb = G__32462;
more = G__32463;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__32461 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__32464__i = 0, G__32464__a = new Array(arguments.length -  1);
while (G__32464__i < G__32464__a.length) {G__32464__a[G__32464__i] = arguments[G__32464__i + 1]; ++G__32464__i;}
  ys = new cljs.core.IndexedSeq(G__32464__a,0);
} 
return G__32461__delegate.call(this,x,ys);};
G__32461.cljs$lang$maxFixedArity = 1;
G__32461.cljs$lang$applyTo = (function (arglist__32465){
var x = cljs.core.first(arglist__32465);
var ys = cljs.core.rest(arglist__32465);
return G__32461__delegate(x,ys);
});
G__32461.cljs$core$IFn$_invoke$arity$variadic = G__32461__delegate;
return G__32461;
})()
;
cljs$core$str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return cljs$core$str__0.call(this);
case 1:
return cljs$core$str__1.call(this,x);
default:
var G__32466 = null;
if (arguments.length > 1) {
var G__32467__i = 0, G__32467__a = new Array(arguments.length -  1);
while (G__32467__i < G__32467__a.length) {G__32467__a[G__32467__i] = arguments[G__32467__i + 1]; ++G__32467__i;}
G__32466 = new cljs.core.IndexedSeq(G__32467__a,0);
}
return cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__32466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$str.cljs$lang$maxFixedArity = 1;
cljs$core$str.cljs$lang$applyTo = cljs$core$str__2.cljs$lang$applyTo;
cljs$core$str.cljs$core$IFn$_invoke$arity$0 = cljs$core$str__0;
cljs$core$str.cljs$core$IFn$_invoke$arity$1 = cljs$core$str__1;
cljs$core$str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$str__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$str;
})()
;
/**
 * Returns the substring of s beginning at start inclusive, and ending
 * at end (defaults to length of string), exclusive.
 */
cljs.core.subs = (function() {
var cljs$core$subs = null;
var cljs$core$subs__2 = (function (s,start){
return s.substring(start);
});
var cljs$core$subs__3 = (function (s,start,end){
return s.substring(start,end);
});
cljs$core$subs = function(s,start,end){
switch(arguments.length){
case 2:
return cljs$core$subs__2.call(this,s,start);
case 3:
return cljs$core$subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subs.cljs$core$IFn$_invoke$arity$2 = cljs$core$subs__2;
cljs$core$subs.cljs$core$IFn$_invoke$arity$3 = cljs$core$subs__3;
return cljs$core$subs;
})()
;

/**
 * Assumes x is sequential. Returns true if x equals y, otherwise
 * returns false.
 */
cljs.core.equiv_sequential = (function cljs$core$equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__32468 = cljs.core.next(xs);
var G__32469 = cljs.core.next(ys);
xs = G__32468;
ys = G__32469;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function cljs$core$hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__32470 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__32471 = cljs.core.next(s);
res = G__32470;
s = G__32471;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function cljs$core$hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__32476 = ((h + (cljs.core.hash((function (){var G__32474 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__32474) : cljs.core.key.call(null,G__32474));
})()) ^ cljs.core.hash((function (){var G__32475 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__32475) : cljs.core.val.call(null,G__32475));
})()))) % (4503599627370496));
var G__32477 = cljs.core.next(s);
h = G__32476;
s = G__32477;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function cljs$core$hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__32478 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__32479 = cljs.core.next(s__$1);
h = G__32478;
s__$1 = G__32479;
continue;
} else {
return h;
}
break;
}
});


/**
 * Takes a JavaScript object and a map of names to functions and
 * attaches said functions as methods on the object.  Any references to
 * JavaScript's implicit this (via the this-as macro) will resolve to the
 * object that the function is attached.
 */
cljs.core.extend_object_BANG_ = (function cljs$core$extend_object_BANG_(obj,fn_map){
var seq__32490_32500 = cljs.core.seq(fn_map);
var chunk__32491_32501 = null;
var count__32492_32502 = (0);
var i__32493_32503 = (0);
while(true){
if((i__32493_32503 < count__32492_32502)){
var vec__32494_32504 = chunk__32491_32501.cljs$core$IIndexed$_nth$arity$2(null,i__32493_32503);
var key_name_32505 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32494_32504,(0),null);
var f_32506 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32494_32504,(1),null);
var str_name_32507 = (function (){var G__32495 = key_name_32505;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32495) : cljs.core.name.call(null,G__32495));
})();
(obj[str_name_32507] = f_32506);

var G__32508 = seq__32490_32500;
var G__32509 = chunk__32491_32501;
var G__32510 = count__32492_32502;
var G__32511 = (i__32493_32503 + (1));
seq__32490_32500 = G__32508;
chunk__32491_32501 = G__32509;
count__32492_32502 = G__32510;
i__32493_32503 = G__32511;
continue;
} else {
var temp__4126__auto___32512 = cljs.core.seq(seq__32490_32500);
if(temp__4126__auto___32512){
var seq__32490_32513__$1 = temp__4126__auto___32512;
if(cljs.core.chunked_seq_QMARK_(seq__32490_32513__$1)){
var c__24968__auto___32514 = (function (){var G__32496 = seq__32490_32513__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__32496) : cljs.core.chunk_first.call(null,G__32496));
})();
var G__32515 = (function (){var G__32497 = seq__32490_32513__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__32497) : cljs.core.chunk_rest.call(null,G__32497));
})();
var G__32516 = c__24968__auto___32514;
var G__32517 = cljs.core.count(c__24968__auto___32514);
var G__32518 = (0);
seq__32490_32500 = G__32515;
chunk__32491_32501 = G__32516;
count__32492_32502 = G__32517;
i__32493_32503 = G__32518;
continue;
} else {
var vec__32498_32519 = cljs.core.first(seq__32490_32513__$1);
var key_name_32520 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32498_32519,(0),null);
var f_32521 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32498_32519,(1),null);
var str_name_32522 = (function (){var G__32499 = key_name_32520;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32499) : cljs.core.name.call(null,G__32499));
})();
(obj[str_name_32522] = f_32521);

var G__32523 = cljs.core.next(seq__32490_32513__$1);
var G__32524 = null;
var G__32525 = (0);
var G__32526 = (0);
seq__32490_32500 = G__32523;
chunk__32491_32501 = G__32524;
count__32492_32502 = G__32525;
i__32493_32503 = G__32526;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function cljs$core$__GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function cljs$core$__GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Returns true if coll satisfies? IReversible.
 */
cljs.core.reversible_QMARK_ = (function cljs$core$reversible_QMARK_(coll){
var G__32528 = coll;
if(G__32528){
var bit__24857__auto__ = (G__32528.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__24857__auto__) || (G__32528.cljs$core$IReversible$)){
return true;
} else {
if((!G__32528.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__32528);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__32528);
}
});
/**
 * Returns, in constant time, a seq of the items in rev (which
 * can be a vector or sorted-map), in reverse order. If rev is empty returns nil
 */
cljs.core.rseq = (function cljs$core$rseq(coll){
return cljs.core._rseq(coll);
});
/**
 * Returns a seq of the items in coll in reverse order. Not lazy.
 */
cljs.core.reverse = (function cljs$core$reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
 * Creates a new list containing the items.
 * @param {...*} var_args
 */
cljs.core.list = (function() { 
var cljs$core$list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__32529 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__32529;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__32530 = (i - (1));
var G__32531 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__32530;
r = G__32531;
continue;
} else {
return r;
}
break;
}
};
var cljs$core$list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__32532__i = 0, G__32532__a = new Array(arguments.length -  0);
while (G__32532__i < G__32532__a.length) {G__32532__a[G__32532__i] = arguments[G__32532__i + 0]; ++G__32532__i;}
  xs = new cljs.core.IndexedSeq(G__32532__a,0);
} 
return cljs$core$list__delegate.call(this,xs);};
cljs$core$list.cljs$lang$maxFixedArity = 0;
cljs$core$list.cljs$lang$applyTo = (function (arglist__32533){
var xs = cljs.core.seq(arglist__32533);
return cljs$core$list__delegate(xs);
});
cljs$core$list.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list__delegate;
return cljs$core$list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function cljs$core$__GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Returns a new seq where x is the first element and seq is the rest.
 */
cljs.core.cons = (function cljs$core$cons(x,coll){
if((function (){var or__24183__auto__ = (coll == null);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var G__32537 = coll;
if(G__32537){
var bit__24850__auto__ = (G__32537.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__24850__auto__) || (G__32537.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
/**
 * Returns true if x implements IList
 */
cljs.core.list_QMARK_ = (function cljs$core$list_QMARK_(x){
var G__32539 = x;
if(G__32539){
var bit__24857__auto__ = (G__32539.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__24857__auto__) || (G__32539.cljs$core$IList$)){
return true;
} else {
if((!G__32539.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__32539);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__32539);
}
});
cljs.core.hash_keyword = (function cljs$core$hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function cljs$core$compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__24171__auto__ = cljs.core.not(a.ns);
if(and__24171__auto__){
return b.ns;
} else {
return and__24171__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__32546 = a.ns;
var G__32547 = b.ns;
return goog.array.defaultCompare(G__32546,G__32547);
})();
if(((0) === nsc)){
var G__32548 = a.name;
var G__32549 = b.name;
return goog.array.defaultCompare(G__32548,G__32549);
} else {
return nsc;
}
}
} else {
var G__32550 = a.name;
var G__32551 = b.name;
return goog.array.defaultCompare(G__32550,G__32551);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__24599__auto__ = self__._hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__32553 = null;
var G__32553__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__32553__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__32553 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__32553__2.call(this,self__,coll);
case 3:
return G__32553__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32553.cljs$core$IFn$_invoke$arity$2 = G__32553__2;
G__32553.cljs$core$IFn$_invoke$arity$3 = G__32553__3;
return G__32553;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args32552){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32552)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function cljs$core$__GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

/**
 * Return true if x is a Keyword
 */
cljs.core.keyword_QMARK_ = (function cljs$core$keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
/**
 * Efficient test to determine that two keywords are identical.
 */
cljs.core.keyword_identical_QMARK_ = (function cljs$core$keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
 * Returns the namespace String of a symbol or keyword, or nil if not present.
 */
cljs.core.namespace = (function cljs$core$namespace(x){
if((function (){var G__32555 = x;
if(G__32555){
var bit__24850__auto__ = (G__32555.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24850__auto__) || (G__32555.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
 * Returns a Keyword with the given namespace and name.  Do not use :
 * in the keyword strings, it will be added automatically.
 */
cljs.core.keyword = (function() {
var cljs$core$keyword = null;
var cljs$core$keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__32557 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__32557) : cljs.core.name.call(null,G__32557));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var cljs$core$keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
cljs$core$keyword = function(ns,name){
switch(arguments.length){
case 1:
return cljs$core$keyword__1.call(this,ns);
case 2:
return cljs$core$keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keyword.cljs$core$IFn$_invoke$arity$1 = cljs$core$keyword__1;
cljs$core$keyword.cljs$core$IFn$_invoke$arity$2 = cljs$core$keyword__2;
return cljs$core$keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__32558 = ls.sval();
ls = G__32558;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function cljs$core$__GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function cljs$core$__GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function cljs$core$chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function cljs$core$__GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var cljs$core$array_chunk = null;
var cljs$core$array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var cljs$core$array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var cljs$core$array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
cljs$core$array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return cljs$core$array_chunk__1.call(this,arr);
case 2:
return cljs$core$array_chunk__2.call(this,arr,off);
case 3:
return cljs$core$array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$1 = cljs$core$array_chunk__1;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$2 = cljs$core$array_chunk__2;
cljs$core$array_chunk.cljs$core$IFn$_invoke$arity$3 = cljs$core$array_chunk__3;
return cljs$core$array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function cljs$core$__GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.chunk_cons = (function cljs$core$chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function cljs$core$chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function cljs$core$chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function cljs$core$chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function cljs$core$chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function cljs$core$chunk_next(s){
if((function (){var G__32560 = s;
if(G__32560){
var bit__24850__auto__ = (G__32560.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__24850__auto__) || (G__32560.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
 * Naive impl of to-array as a start.
 */
cljs.core.to_array = (function cljs$core$to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__32561 = cljs.core.next(s__$1);
s__$1 = G__32561;
continue;
} else {
return ary;
}
break;
}
});
/**
 * Returns a (potentially-ragged) 2-dimensional array
 * containing the contents of coll.
 */
cljs.core.to_array_2d = (function cljs$core$to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_32562 = (0);
var xs_32563 = cljs.core.seq(coll);
while(true){
if(xs_32563){
(ret[i_32562] = cljs.core.to_array(cljs.core.first(xs_32563)));

var G__32564 = (i_32562 + (1));
var G__32565 = cljs.core.next(xs_32563);
i_32562 = G__32564;
xs_32563 = G__32565;
continue;
} else {
}
break;
}

return ret;
});
/**
 * Creates an array of ints. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.int_array = (function() {
var cljs$core$int_array = null;
var cljs$core$int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32568 = (i + (1));
var G__32569 = cljs.core.next(s__$1);
i = G__32568;
s__$1 = G__32569;
continue;
} else {
return a;
}
break;
}
} else {
var n__25068__auto___32570 = size;
var i_32571 = (0);
while(true){
if((i_32571 < n__25068__auto___32570)){
(a[i_32571] = init_val_or_seq);

var G__32572 = (i_32571 + (1));
i_32571 = G__32572;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$int_array__1.call(this,size);
case 2:
return cljs$core$int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$int_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$int_array__1;
cljs$core$int_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$int_array__2;
return cljs$core$int_array;
})()
;
/**
 * Creates an array of longs. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.long_array = (function() {
var cljs$core$long_array = null;
var cljs$core$long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32575 = (i + (1));
var G__32576 = cljs.core.next(s__$1);
i = G__32575;
s__$1 = G__32576;
continue;
} else {
return a;
}
break;
}
} else {
var n__25068__auto___32577 = size;
var i_32578 = (0);
while(true){
if((i_32578 < n__25068__auto___32577)){
(a[i_32578] = init_val_or_seq);

var G__32579 = (i_32578 + (1));
i_32578 = G__32579;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$long_array__1.call(this,size);
case 2:
return cljs$core$long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$long_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$long_array__1;
cljs$core$long_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$long_array__2;
return cljs$core$long_array;
})()
;
/**
 * Creates an array of doubles. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.double_array = (function() {
var cljs$core$double_array = null;
var cljs$core$double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32582 = (i + (1));
var G__32583 = cljs.core.next(s__$1);
i = G__32582;
s__$1 = G__32583;
continue;
} else {
return a;
}
break;
}
} else {
var n__25068__auto___32584 = size;
var i_32585 = (0);
while(true){
if((i_32585 < n__25068__auto___32584)){
(a[i_32585] = init_val_or_seq);

var G__32586 = (i_32585 + (1));
i_32585 = G__32586;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$double_array__1.call(this,size);
case 2:
return cljs$core$double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$double_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$double_array__1;
cljs$core$double_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$double_array__2;
return cljs$core$double_array;
})()
;
/**
 * Creates an array of objects. Does not coerce array, provided for compatibility
 * with Clojure.
 */
cljs.core.object_array = (function() {
var cljs$core$object_array = null;
var cljs$core$object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return cljs$core$object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var cljs$core$object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__32589 = (i + (1));
var G__32590 = cljs.core.next(s__$1);
i = G__32589;
s__$1 = G__32590;
continue;
} else {
return a;
}
break;
}
} else {
var n__25068__auto___32591 = size;
var i_32592 = (0);
while(true){
if((i_32592 < n__25068__auto___32591)){
(a[i_32592] = init_val_or_seq);

var G__32593 = (i_32592 + (1));
i_32592 = G__32593;
continue;
} else {
}
break;
}

return a;
}
});
cljs$core$object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return cljs$core$object_array__1.call(this,size);
case 2:
return cljs$core$object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$object_array.cljs$core$IFn$_invoke$arity$1 = cljs$core$object_array__1;
cljs$core$object_array.cljs$core$IFn$_invoke$arity$2 = cljs$core$object_array__2;
return cljs$core$object_array;
})()
;
cljs.core.bounded_count = (function cljs$core$bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__32594 = cljs.core.next(s__$1);
var G__32595 = (i - (1));
var G__32596 = (sum + (1));
s__$1 = G__32594;
i = G__32595;
sum = G__32596;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function cljs$core$spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),cljs$core$spread(cljs.core.next(arglist)));

}
}
});
/**
 * Returns a lazy seq representing the concatenation of the elements in the supplied colls.
 * @param {...*} var_args
 */
cljs.core.concat = (function() {
var cljs$core$concat = null;
var cljs$core$concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var cljs$core$concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var cljs$core$concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),cljs$core$concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var cljs$core$concat__3 = (function() { 
var G__32616__delegate = function (x,y,zs){
var cat = (function cljs$core$concat_$_cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cljs$core$concat_$_cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cljs$core$concat_$_cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cljs$core$concat_$_cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(cljs$core$concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__32616 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__32617__i = 0, G__32617__a = new Array(arguments.length -  2);
while (G__32617__i < G__32617__a.length) {G__32617__a[G__32617__i] = arguments[G__32617__i + 2]; ++G__32617__i;}
  zs = new cljs.core.IndexedSeq(G__32617__a,0);
} 
return G__32616__delegate.call(this,x,y,zs);};
G__32616.cljs$lang$maxFixedArity = 2;
G__32616.cljs$lang$applyTo = (function (arglist__32618){
var x = cljs.core.first(arglist__32618);
arglist__32618 = cljs.core.next(arglist__32618);
var y = cljs.core.first(arglist__32618);
var zs = cljs.core.rest(arglist__32618);
return G__32616__delegate(x,y,zs);
});
G__32616.cljs$core$IFn$_invoke$arity$variadic = G__32616__delegate;
return G__32616;
})()
;
cljs$core$concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return cljs$core$concat__0.call(this);
case 1:
return cljs$core$concat__1.call(this,x);
case 2:
return cljs$core$concat__2.call(this,x,y);
default:
var G__32619 = null;
if (arguments.length > 2) {
var G__32620__i = 0, G__32620__a = new Array(arguments.length -  2);
while (G__32620__i < G__32620__a.length) {G__32620__a[G__32620__i] = arguments[G__32620__i + 2]; ++G__32620__i;}
G__32619 = new cljs.core.IndexedSeq(G__32620__a,0);
}
return cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__32619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$concat.cljs$lang$maxFixedArity = 2;
cljs$core$concat.cljs$lang$applyTo = cljs$core$concat__3.cljs$lang$applyTo;
cljs$core$concat.cljs$core$IFn$_invoke$arity$0 = cljs$core$concat__0;
cljs$core$concat.cljs$core$IFn$_invoke$arity$1 = cljs$core$concat__1;
cljs$core$concat.cljs$core$IFn$_invoke$arity$2 = cljs$core$concat__2;
cljs$core$concat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$concat__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$concat;
})()
;
/**
 * Creates a new list containing the items prepended to the rest, the
 * last of which will be treated as a sequence.
 * @param {...*} var_args
 */
cljs.core.list_STAR_ = (function() {
var cljs$core$list_STAR_ = null;
var cljs$core$list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var cljs$core$list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var cljs$core$list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var cljs$core$list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var cljs$core$list_STAR___5 = (function() { 
var G__32621__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__32621 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__32622__i = 0, G__32622__a = new Array(arguments.length -  4);
while (G__32622__i < G__32622__a.length) {G__32622__a[G__32622__i] = arguments[G__32622__i + 4]; ++G__32622__i;}
  more = new cljs.core.IndexedSeq(G__32622__a,0);
} 
return G__32621__delegate.call(this,a,b,c,d,more);};
G__32621.cljs$lang$maxFixedArity = 4;
G__32621.cljs$lang$applyTo = (function (arglist__32623){
var a = cljs.core.first(arglist__32623);
arglist__32623 = cljs.core.next(arglist__32623);
var b = cljs.core.first(arglist__32623);
arglist__32623 = cljs.core.next(arglist__32623);
var c = cljs.core.first(arglist__32623);
arglist__32623 = cljs.core.next(arglist__32623);
var d = cljs.core.first(arglist__32623);
var more = cljs.core.rest(arglist__32623);
return G__32621__delegate(a,b,c,d,more);
});
G__32621.cljs$core$IFn$_invoke$arity$variadic = G__32621__delegate;
return G__32621;
})()
;
cljs$core$list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$list_STAR___1.call(this,a);
case 2:
return cljs$core$list_STAR___2.call(this,a,b);
case 3:
return cljs$core$list_STAR___3.call(this,a,b,c);
case 4:
return cljs$core$list_STAR___4.call(this,a,b,c,d);
default:
var G__32624 = null;
if (arguments.length > 4) {
var G__32625__i = 0, G__32625__a = new Array(arguments.length -  4);
while (G__32625__i < G__32625__a.length) {G__32625__a[G__32625__i] = arguments[G__32625__i + 4]; ++G__32625__i;}
G__32624 = new cljs.core.IndexedSeq(G__32625__a,0);
}
return cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__32624);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$list_STAR_.cljs$lang$maxFixedArity = 4;
cljs$core$list_STAR_.cljs$lang$applyTo = cljs$core$list_STAR___5.cljs$lang$applyTo;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$1 = cljs$core$list_STAR___1;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$2 = cljs$core$list_STAR___2;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$3 = cljs$core$list_STAR___3;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$4 = cljs$core$list_STAR___4;
cljs$core$list_STAR_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$list_STAR_;
})()
;
/**
 * Returns a new, transient version of the collection, in constant time.
 */
cljs.core.transient$ = (function cljs$core$transient(coll){
return cljs.core._as_transient(coll);
});
/**
 * Returns a new, persistent version of the transient collection, in
 * constant time. The transient collection cannot be used after this
 * call, any such use will throw an exception.
 */
cljs.core.persistent_BANG_ = (function cljs$core$persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
 * Adds x to the transient collection, and return coll. The 'addition'
 * may happen at different 'places' depending on the concrete type.
 * @param {...*} var_args
 */
cljs.core.conj_BANG_ = (function() {
var cljs$core$conj_BANG_ = null;
var cljs$core$conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var cljs$core$conj_BANG___1 = (function (coll){
return coll;
});
var cljs$core$conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var cljs$core$conj_BANG___3 = (function() { 
var G__32626__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__32627 = ntcoll;
var G__32628 = cljs.core.first(vals);
var G__32629 = cljs.core.next(vals);
tcoll = G__32627;
val = G__32628;
vals = G__32629;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32626 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__32630__i = 0, G__32630__a = new Array(arguments.length -  2);
while (G__32630__i < G__32630__a.length) {G__32630__a[G__32630__i] = arguments[G__32630__i + 2]; ++G__32630__i;}
  vals = new cljs.core.IndexedSeq(G__32630__a,0);
} 
return G__32626__delegate.call(this,tcoll,val,vals);};
G__32626.cljs$lang$maxFixedArity = 2;
G__32626.cljs$lang$applyTo = (function (arglist__32631){
var tcoll = cljs.core.first(arglist__32631);
arglist__32631 = cljs.core.next(arglist__32631);
var val = cljs.core.first(arglist__32631);
var vals = cljs.core.rest(arglist__32631);
return G__32626__delegate(tcoll,val,vals);
});
G__32626.cljs$core$IFn$_invoke$arity$variadic = G__32626__delegate;
return G__32626;
})()
;
cljs$core$conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return cljs$core$conj_BANG___0.call(this);
case 1:
return cljs$core$conj_BANG___1.call(this,tcoll);
case 2:
return cljs$core$conj_BANG___2.call(this,tcoll,val);
default:
var G__32632 = null;
if (arguments.length > 2) {
var G__32633__i = 0, G__32633__a = new Array(arguments.length -  2);
while (G__32633__i < G__32633__a.length) {G__32633__a[G__32633__i] = arguments[G__32633__i + 2]; ++G__32633__i;}
G__32632 = new cljs.core.IndexedSeq(G__32633__a,0);
}
return cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__32632);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$conj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$conj_BANG_.cljs$lang$applyTo = cljs$core$conj_BANG___3.cljs$lang$applyTo;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$0 = cljs$core$conj_BANG___0;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$1 = cljs$core$conj_BANG___1;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$conj_BANG___2;
cljs$core$conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$conj_BANG_;
})()
;
/**
 * When applied to a transient map, adds mapping of key(s) to
 * val(s). When applied to a transient vector, sets the val at index.
 * Note - index must be <= (count vector). Returns coll.
 * @param {...*} var_args
 */
cljs.core.assoc_BANG_ = (function() {
var cljs$core$assoc_BANG_ = null;
var cljs$core$assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var cljs$core$assoc_BANG___4 = (function() { 
var G__32634__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__32635 = ntcoll;
var G__32636 = cljs.core.first(kvs);
var G__32637 = cljs.core.second(kvs);
var G__32638 = cljs.core.nnext(kvs);
tcoll = G__32635;
key = G__32636;
val = G__32637;
kvs = G__32638;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32634 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__32639__i = 0, G__32639__a = new Array(arguments.length -  3);
while (G__32639__i < G__32639__a.length) {G__32639__a[G__32639__i] = arguments[G__32639__i + 3]; ++G__32639__i;}
  kvs = new cljs.core.IndexedSeq(G__32639__a,0);
} 
return G__32634__delegate.call(this,tcoll,key,val,kvs);};
G__32634.cljs$lang$maxFixedArity = 3;
G__32634.cljs$lang$applyTo = (function (arglist__32640){
var tcoll = cljs.core.first(arglist__32640);
arglist__32640 = cljs.core.next(arglist__32640);
var key = cljs.core.first(arglist__32640);
arglist__32640 = cljs.core.next(arglist__32640);
var val = cljs.core.first(arglist__32640);
var kvs = cljs.core.rest(arglist__32640);
return G__32634__delegate(tcoll,key,val,kvs);
});
G__32634.cljs$core$IFn$_invoke$arity$variadic = G__32634__delegate;
return G__32634;
})()
;
cljs$core$assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return cljs$core$assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__32641 = null;
if (arguments.length > 3) {
var G__32642__i = 0, G__32642__a = new Array(arguments.length -  3);
while (G__32642__i < G__32642__a.length) {G__32642__a[G__32642__i] = arguments[G__32642__i + 3]; ++G__32642__i;}
G__32641 = new cljs.core.IndexedSeq(G__32642__a,0);
}
return cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__32641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$assoc_BANG_.cljs$lang$maxFixedArity = 3;
cljs$core$assoc_BANG_.cljs$lang$applyTo = cljs$core$assoc_BANG___4.cljs$lang$applyTo;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$assoc_BANG___3;
cljs$core$assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$assoc_BANG_;
})()
;
/**
 * Returns a transient map that doesn't contain a mapping for key(s).
 * @param {...*} var_args
 */
cljs.core.dissoc_BANG_ = (function() {
var cljs$core$dissoc_BANG_ = null;
var cljs$core$dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var cljs$core$dissoc_BANG___3 = (function() { 
var G__32643__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__32644 = ntcoll;
var G__32645 = cljs.core.first(ks);
var G__32646 = cljs.core.next(ks);
tcoll = G__32644;
key = G__32645;
ks = G__32646;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32643 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__32647__i = 0, G__32647__a = new Array(arguments.length -  2);
while (G__32647__i < G__32647__a.length) {G__32647__a[G__32647__i] = arguments[G__32647__i + 2]; ++G__32647__i;}
  ks = new cljs.core.IndexedSeq(G__32647__a,0);
} 
return G__32643__delegate.call(this,tcoll,key,ks);};
G__32643.cljs$lang$maxFixedArity = 2;
G__32643.cljs$lang$applyTo = (function (arglist__32648){
var tcoll = cljs.core.first(arglist__32648);
arglist__32648 = cljs.core.next(arglist__32648);
var key = cljs.core.first(arglist__32648);
var ks = cljs.core.rest(arglist__32648);
return G__32643__delegate(tcoll,key,ks);
});
G__32643.cljs$core$IFn$_invoke$arity$variadic = G__32643__delegate;
return G__32643;
})()
;
cljs$core$dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return cljs$core$dissoc_BANG___2.call(this,tcoll,key);
default:
var G__32649 = null;
if (arguments.length > 2) {
var G__32650__i = 0, G__32650__a = new Array(arguments.length -  2);
while (G__32650__i < G__32650__a.length) {G__32650__a[G__32650__i] = arguments[G__32650__i + 2]; ++G__32650__i;}
G__32649 = new cljs.core.IndexedSeq(G__32650__a,0);
}
return cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__32649);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dissoc_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$dissoc_BANG_.cljs$lang$applyTo = cljs$core$dissoc_BANG___3.cljs$lang$applyTo;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$dissoc_BANG___2;
cljs$core$dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$dissoc_BANG_;
})()
;
/**
 * Removes the last item from a transient vector. If
 * the collection is empty, throws an exception. Returns coll
 */
cljs.core.pop_BANG_ = (function cljs$core$pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
 * disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
 * does not contain key(s).
 * @param {...*} var_args
 */
cljs.core.disj_BANG_ = (function() {
var cljs$core$disj_BANG_ = null;
var cljs$core$disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var cljs$core$disj_BANG___3 = (function() { 
var G__32651__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__32652 = ntcoll;
var G__32653 = cljs.core.first(vals);
var G__32654 = cljs.core.next(vals);
tcoll = G__32652;
val = G__32653;
vals = G__32654;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__32651 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__32655__i = 0, G__32655__a = new Array(arguments.length -  2);
while (G__32655__i < G__32655__a.length) {G__32655__a[G__32655__i] = arguments[G__32655__i + 2]; ++G__32655__i;}
  vals = new cljs.core.IndexedSeq(G__32655__a,0);
} 
return G__32651__delegate.call(this,tcoll,val,vals);};
G__32651.cljs$lang$maxFixedArity = 2;
G__32651.cljs$lang$applyTo = (function (arglist__32656){
var tcoll = cljs.core.first(arglist__32656);
arglist__32656 = cljs.core.next(arglist__32656);
var val = cljs.core.first(arglist__32656);
var vals = cljs.core.rest(arglist__32656);
return G__32651__delegate(tcoll,val,vals);
});
G__32651.cljs$core$IFn$_invoke$arity$variadic = G__32651__delegate;
return G__32651;
})()
;
cljs$core$disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return cljs$core$disj_BANG___2.call(this,tcoll,val);
default:
var G__32657 = null;
if (arguments.length > 2) {
var G__32658__i = 0, G__32658__a = new Array(arguments.length -  2);
while (G__32658__i < G__32658__a.length) {G__32658__a[G__32658__i] = arguments[G__32658__i + 2]; ++G__32658__i;}
G__32657 = new cljs.core.IndexedSeq(G__32658__a,0);
}
return cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__32657);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$disj_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$disj_BANG_.cljs$lang$applyTo = cljs$core$disj_BANG___3.cljs$lang$applyTo;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$disj_BANG___2;
cljs$core$disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$disj_BANG_;
})()
;

cljs.core.apply_to = (function cljs$core$apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a25112 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a25112);
} else {
var G__32869 = a25112;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32869) : f.call(null,G__32869));
}
} else {
var b25113 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a25112,b25113);
} else {
var G__32870 = a25112;
var G__32871 = b25113;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32870,G__32871) : f.call(null,G__32870,G__32871));
}
} else {
var c25114 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a25112,b25113,c25114);
} else {
var G__32872 = a25112;
var G__32873 = b25113;
var G__32874 = c25114;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32872,G__32873,G__32874) : f.call(null,G__32872,G__32873,G__32874));
}
} else {
var d25115 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a25112,b25113,c25114,d25115);
} else {
var G__32875 = a25112;
var G__32876 = b25113;
var G__32877 = c25114;
var G__32878 = d25115;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32875,G__32876,G__32877,G__32878) : f.call(null,G__32875,G__32876,G__32877,G__32878));
}
} else {
var e25116 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a25112,b25113,c25114,d25115,e25116);
} else {
var G__32879 = a25112;
var G__32880 = b25113;
var G__32881 = c25114;
var G__32882 = d25115;
var G__32883 = e25116;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__32879,G__32880,G__32881,G__32882,G__32883) : f.call(null,G__32879,G__32880,G__32881,G__32882,G__32883));
}
} else {
var f25117 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a25112,b25113,c25114,d25115,e25116,f25117);
} else {
var G__32884 = a25112;
var G__32885 = b25113;
var G__32886 = c25114;
var G__32887 = d25115;
var G__32888 = e25116;
var G__32889 = f25117;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__32884,G__32885,G__32886,G__32887,G__32888,G__32889) : f.call(null,G__32884,G__32885,G__32886,G__32887,G__32888,G__32889));
}
} else {
var g25118 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a25112,b25113,c25114,d25115,e25116,f25117,g25118);
} else {
var G__32890 = a25112;
var G__32891 = b25113;
var G__32892 = c25114;
var G__32893 = d25115;
var G__32894 = e25116;
var G__32895 = f25117;
var G__32896 = g25118;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896) : f.call(null,G__32890,G__32891,G__32892,G__32893,G__32894,G__32895,G__32896));
}
} else {
var h25119 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119);
} else {
var G__32897 = a25112;
var G__32898 = b25113;
var G__32899 = c25114;
var G__32900 = d25115;
var G__32901 = e25116;
var G__32902 = f25117;
var G__32903 = g25118;
var G__32904 = h25119;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__32897,G__32898,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904) : f.call(null,G__32897,G__32898,G__32899,G__32900,G__32901,G__32902,G__32903,G__32904));
}
} else {
var i25120 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120);
} else {
var G__32905 = a25112;
var G__32906 = b25113;
var G__32907 = c25114;
var G__32908 = d25115;
var G__32909 = e25116;
var G__32910 = f25117;
var G__32911 = g25118;
var G__32912 = h25119;
var G__32913 = i25120;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__32905,G__32906,G__32907,G__32908,G__32909,G__32910,G__32911,G__32912,G__32913) : f.call(null,G__32905,G__32906,G__32907,G__32908,G__32909,G__32910,G__32911,G__32912,G__32913));
}
} else {
var j25121 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121);
} else {
var G__32914 = a25112;
var G__32915 = b25113;
var G__32916 = c25114;
var G__32917 = d25115;
var G__32918 = e25116;
var G__32919 = f25117;
var G__32920 = g25118;
var G__32921 = h25119;
var G__32922 = i25120;
var G__32923 = j25121;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__32914,G__32915,G__32916,G__32917,G__32918,G__32919,G__32920,G__32921,G__32922,G__32923) : f.call(null,G__32914,G__32915,G__32916,G__32917,G__32918,G__32919,G__32920,G__32921,G__32922,G__32923));
}
} else {
var k25122 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122);
} else {
var G__32924 = a25112;
var G__32925 = b25113;
var G__32926 = c25114;
var G__32927 = d25115;
var G__32928 = e25116;
var G__32929 = f25117;
var G__32930 = g25118;
var G__32931 = h25119;
var G__32932 = i25120;
var G__32933 = j25121;
var G__32934 = k25122;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__32924,G__32925,G__32926,G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934) : f.call(null,G__32924,G__32925,G__32926,G__32927,G__32928,G__32929,G__32930,G__32931,G__32932,G__32933,G__32934));
}
} else {
var l25123 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123);
} else {
var G__32935 = a25112;
var G__32936 = b25113;
var G__32937 = c25114;
var G__32938 = d25115;
var G__32939 = e25116;
var G__32940 = f25117;
var G__32941 = g25118;
var G__32942 = h25119;
var G__32943 = i25120;
var G__32944 = j25121;
var G__32945 = k25122;
var G__32946 = l25123;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__32935,G__32936,G__32937,G__32938,G__32939,G__32940,G__32941,G__32942,G__32943,G__32944,G__32945,G__32946) : f.call(null,G__32935,G__32936,G__32937,G__32938,G__32939,G__32940,G__32941,G__32942,G__32943,G__32944,G__32945,G__32946));
}
} else {
var m25124 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123,m25124);
} else {
var G__32947 = a25112;
var G__32948 = b25113;
var G__32949 = c25114;
var G__32950 = d25115;
var G__32951 = e25116;
var G__32952 = f25117;
var G__32953 = g25118;
var G__32954 = h25119;
var G__32955 = i25120;
var G__32956 = j25121;
var G__32957 = k25122;
var G__32958 = l25123;
var G__32959 = m25124;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__32947,G__32948,G__32949,G__32950,G__32951,G__32952,G__32953,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959) : f.call(null,G__32947,G__32948,G__32949,G__32950,G__32951,G__32952,G__32953,G__32954,G__32955,G__32956,G__32957,G__32958,G__32959));
}
} else {
var n25125 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123,m25124,n25125);
} else {
var G__32960 = a25112;
var G__32961 = b25113;
var G__32962 = c25114;
var G__32963 = d25115;
var G__32964 = e25116;
var G__32965 = f25117;
var G__32966 = g25118;
var G__32967 = h25119;
var G__32968 = i25120;
var G__32969 = j25121;
var G__32970 = k25122;
var G__32971 = l25123;
var G__32972 = m25124;
var G__32973 = n25125;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__32960,G__32961,G__32962,G__32963,G__32964,G__32965,G__32966,G__32967,G__32968,G__32969,G__32970,G__32971,G__32972,G__32973) : f.call(null,G__32960,G__32961,G__32962,G__32963,G__32964,G__32965,G__32966,G__32967,G__32968,G__32969,G__32970,G__32971,G__32972,G__32973));
}
} else {
var o25126 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123,m25124,n25125,o25126);
} else {
var G__32974 = a25112;
var G__32975 = b25113;
var G__32976 = c25114;
var G__32977 = d25115;
var G__32978 = e25116;
var G__32979 = f25117;
var G__32980 = g25118;
var G__32981 = h25119;
var G__32982 = i25120;
var G__32983 = j25121;
var G__32984 = k25122;
var G__32985 = l25123;
var G__32986 = m25124;
var G__32987 = n25125;
var G__32988 = o25126;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983,G__32984,G__32985,G__32986,G__32987,G__32988) : f.call(null,G__32974,G__32975,G__32976,G__32977,G__32978,G__32979,G__32980,G__32981,G__32982,G__32983,G__32984,G__32985,G__32986,G__32987,G__32988));
}
} else {
var p25127 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123,m25124,n25125,o25126,p25127);
} else {
var G__32989 = a25112;
var G__32990 = b25113;
var G__32991 = c25114;
var G__32992 = d25115;
var G__32993 = e25116;
var G__32994 = f25117;
var G__32995 = g25118;
var G__32996 = h25119;
var G__32997 = i25120;
var G__32998 = j25121;
var G__32999 = k25122;
var G__33000 = l25123;
var G__33001 = m25124;
var G__33002 = n25125;
var G__33003 = o25126;
var G__33004 = p25127;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__32989,G__32990,G__32991,G__32992,G__32993,G__32994,G__32995,G__32996,G__32997,G__32998,G__32999,G__33000,G__33001,G__33002,G__33003,G__33004) : f.call(null,G__32989,G__32990,G__32991,G__32992,G__32993,G__32994,G__32995,G__32996,G__32997,G__32998,G__32999,G__33000,G__33001,G__33002,G__33003,G__33004));
}
} else {
var q25128 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123,m25124,n25125,o25126,p25127,q25128);
} else {
var G__33005 = a25112;
var G__33006 = b25113;
var G__33007 = c25114;
var G__33008 = d25115;
var G__33009 = e25116;
var G__33010 = f25117;
var G__33011 = g25118;
var G__33012 = h25119;
var G__33013 = i25120;
var G__33014 = j25121;
var G__33015 = k25122;
var G__33016 = l25123;
var G__33017 = m25124;
var G__33018 = n25125;
var G__33019 = o25126;
var G__33020 = p25127;
var G__33021 = q25128;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__33005,G__33006,G__33007,G__33008,G__33009,G__33010,G__33011,G__33012,G__33013,G__33014,G__33015,G__33016,G__33017,G__33018,G__33019,G__33020,G__33021) : f.call(null,G__33005,G__33006,G__33007,G__33008,G__33009,G__33010,G__33011,G__33012,G__33013,G__33014,G__33015,G__33016,G__33017,G__33018,G__33019,G__33020,G__33021));
}
} else {
var r25129 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123,m25124,n25125,o25126,p25127,q25128,r25129);
} else {
var G__33022 = a25112;
var G__33023 = b25113;
var G__33024 = c25114;
var G__33025 = d25115;
var G__33026 = e25116;
var G__33027 = f25117;
var G__33028 = g25118;
var G__33029 = h25119;
var G__33030 = i25120;
var G__33031 = j25121;
var G__33032 = k25122;
var G__33033 = l25123;
var G__33034 = m25124;
var G__33035 = n25125;
var G__33036 = o25126;
var G__33037 = p25127;
var G__33038 = q25128;
var G__33039 = r25129;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__33022,G__33023,G__33024,G__33025,G__33026,G__33027,G__33028,G__33029,G__33030,G__33031,G__33032,G__33033,G__33034,G__33035,G__33036,G__33037,G__33038,G__33039) : f.call(null,G__33022,G__33023,G__33024,G__33025,G__33026,G__33027,G__33028,G__33029,G__33030,G__33031,G__33032,G__33033,G__33034,G__33035,G__33036,G__33037,G__33038,G__33039));
}
} else {
var s25130 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123,m25124,n25125,o25126,p25127,q25128,r25129,s25130);
} else {
var G__33040 = a25112;
var G__33041 = b25113;
var G__33042 = c25114;
var G__33043 = d25115;
var G__33044 = e25116;
var G__33045 = f25117;
var G__33046 = g25118;
var G__33047 = h25119;
var G__33048 = i25120;
var G__33049 = j25121;
var G__33050 = k25122;
var G__33051 = l25123;
var G__33052 = m25124;
var G__33053 = n25125;
var G__33054 = o25126;
var G__33055 = p25127;
var G__33056 = q25128;
var G__33057 = r25129;
var G__33058 = s25130;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__33040,G__33041,G__33042,G__33043,G__33044,G__33045,G__33046,G__33047,G__33048,G__33049,G__33050,G__33051,G__33052,G__33053,G__33054,G__33055,G__33056,G__33057,G__33058) : f.call(null,G__33040,G__33041,G__33042,G__33043,G__33044,G__33045,G__33046,G__33047,G__33048,G__33049,G__33050,G__33051,G__33052,G__33053,G__33054,G__33055,G__33056,G__33057,G__33058));
}
} else {
var t25131 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a25112,b25113,c25114,d25115,e25116,f25117,g25118,h25119,i25120,j25121,k25122,l25123,m25124,n25125,o25126,p25127,q25128,r25129,s25130,t25131);
} else {
var G__33059 = a25112;
var G__33060 = b25113;
var G__33061 = c25114;
var G__33062 = d25115;
var G__33063 = e25116;
var G__33064 = f25117;
var G__33065 = g25118;
var G__33066 = h25119;
var G__33067 = i25120;
var G__33068 = j25121;
var G__33069 = k25122;
var G__33070 = l25123;
var G__33071 = m25124;
var G__33072 = n25125;
var G__33073 = o25126;
var G__33074 = p25127;
var G__33075 = q25128;
var G__33076 = r25129;
var G__33077 = s25130;
var G__33078 = t25131;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__33059,G__33060,G__33061,G__33062,G__33063,G__33064,G__33065,G__33066,G__33067,G__33068,G__33069,G__33070,G__33071,G__33072,G__33073,G__33074,G__33075,G__33076,G__33077,G__33078) : f.call(null,G__33059,G__33060,G__33061,G__33062,G__33063,G__33064,G__33065,G__33066,G__33067,G__33068,G__33069,G__33070,G__33071,G__33072,G__33073,G__33074,G__33075,G__33076,G__33077,G__33078));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
 * Applies fn f to the argument list formed by prepending intervening arguments to args.
 * @param {...*} var_args
 */
cljs.core.apply = (function() {
var cljs$core$apply = null;
var cljs$core$apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var cljs$core$apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var cljs$core$apply__6 = (function() { 
var G__33079__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__33079 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__33080__i = 0, G__33080__a = new Array(arguments.length -  5);
while (G__33080__i < G__33080__a.length) {G__33080__a[G__33080__i] = arguments[G__33080__i + 5]; ++G__33080__i;}
  args = new cljs.core.IndexedSeq(G__33080__a,0);
} 
return G__33079__delegate.call(this,f,a,b,c,d,args);};
G__33079.cljs$lang$maxFixedArity = 5;
G__33079.cljs$lang$applyTo = (function (arglist__33081){
var f = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var a = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var b = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var c = cljs.core.first(arglist__33081);
arglist__33081 = cljs.core.next(arglist__33081);
var d = cljs.core.first(arglist__33081);
var args = cljs.core.rest(arglist__33081);
return G__33079__delegate(f,a,b,c,d,args);
});
G__33079.cljs$core$IFn$_invoke$arity$variadic = G__33079__delegate;
return G__33079;
})()
;
cljs$core$apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$apply__2.call(this,f,a);
case 3:
return cljs$core$apply__3.call(this,f,a,b);
case 4:
return cljs$core$apply__4.call(this,f,a,b,c);
case 5:
return cljs$core$apply__5.call(this,f,a,b,c,d);
default:
var G__33082 = null;
if (arguments.length > 5) {
var G__33083__i = 0, G__33083__a = new Array(arguments.length -  5);
while (G__33083__i < G__33083__a.length) {G__33083__a[G__33083__i] = arguments[G__33083__i + 5]; ++G__33083__i;}
G__33082 = new cljs.core.IndexedSeq(G__33083__a,0);
}
return cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__33082);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$apply.cljs$lang$maxFixedArity = 5;
cljs$core$apply.cljs$lang$applyTo = cljs$core$apply__6.cljs$lang$applyTo;
cljs$core$apply.cljs$core$IFn$_invoke$arity$2 = cljs$core$apply__2;
cljs$core$apply.cljs$core$IFn$_invoke$arity$3 = cljs$core$apply__3;
cljs$core$apply.cljs$core$IFn$_invoke$arity$4 = cljs$core$apply__4;
cljs$core$apply.cljs$core$IFn$_invoke$arity$5 = cljs$core$apply__5;
cljs$core$apply.cljs$core$IFn$_invoke$arity$variadic = cljs$core$apply__6.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$apply;
})()
;
/**
 * Returns an object of the same type and value as obj, with
 * (apply f (meta obj) args) as its metadata.
 * @param {...*} var_args
 */
cljs.core.vary_meta = (function() {
var cljs$core$vary_meta = null;
var cljs$core$vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__33099 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33099) : f.call(null,G__33099));
})());
});
var cljs$core$vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__33100 = cljs.core.meta(obj);
var G__33101 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33100,G__33101) : f.call(null,G__33100,G__33101));
})());
});
var cljs$core$vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__33102 = cljs.core.meta(obj);
var G__33103 = a;
var G__33104 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33102,G__33103,G__33104) : f.call(null,G__33102,G__33103,G__33104));
})());
});
var cljs$core$vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__33105 = cljs.core.meta(obj);
var G__33106 = a;
var G__33107 = b;
var G__33108 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33105,G__33106,G__33107,G__33108) : f.call(null,G__33105,G__33106,G__33107,G__33108));
})());
});
var cljs$core$vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__33109 = cljs.core.meta(obj);
var G__33110 = a;
var G__33111 = b;
var G__33112 = c;
var G__33113 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33109,G__33110,G__33111,G__33112,G__33113) : f.call(null,G__33109,G__33110,G__33111,G__33112,G__33113));
})());
});
var cljs$core$vary_meta__7 = (function() { 
var G__33114__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__33114 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__33115__i = 0, G__33115__a = new Array(arguments.length -  6);
while (G__33115__i < G__33115__a.length) {G__33115__a[G__33115__i] = arguments[G__33115__i + 6]; ++G__33115__i;}
  args = new cljs.core.IndexedSeq(G__33115__a,0);
} 
return G__33114__delegate.call(this,obj,f,a,b,c,d,args);};
G__33114.cljs$lang$maxFixedArity = 6;
G__33114.cljs$lang$applyTo = (function (arglist__33116){
var obj = cljs.core.first(arglist__33116);
arglist__33116 = cljs.core.next(arglist__33116);
var f = cljs.core.first(arglist__33116);
arglist__33116 = cljs.core.next(arglist__33116);
var a = cljs.core.first(arglist__33116);
arglist__33116 = cljs.core.next(arglist__33116);
var b = cljs.core.first(arglist__33116);
arglist__33116 = cljs.core.next(arglist__33116);
var c = cljs.core.first(arglist__33116);
arglist__33116 = cljs.core.next(arglist__33116);
var d = cljs.core.first(arglist__33116);
var args = cljs.core.rest(arglist__33116);
return G__33114__delegate(obj,f,a,b,c,d,args);
});
G__33114.cljs$core$IFn$_invoke$arity$variadic = G__33114__delegate;
return G__33114;
})()
;
cljs$core$vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return cljs$core$vary_meta__2.call(this,obj,f);
case 3:
return cljs$core$vary_meta__3.call(this,obj,f,a);
case 4:
return cljs$core$vary_meta__4.call(this,obj,f,a,b);
case 5:
return cljs$core$vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return cljs$core$vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__33117 = null;
if (arguments.length > 6) {
var G__33118__i = 0, G__33118__a = new Array(arguments.length -  6);
while (G__33118__i < G__33118__a.length) {G__33118__a[G__33118__i] = arguments[G__33118__i + 6]; ++G__33118__i;}
G__33117 = new cljs.core.IndexedSeq(G__33118__a,0);
}
return cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__33117);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$vary_meta.cljs$lang$maxFixedArity = 6;
cljs$core$vary_meta.cljs$lang$applyTo = cljs$core$vary_meta__7.cljs$lang$applyTo;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$2 = cljs$core$vary_meta__2;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$3 = cljs$core$vary_meta__3;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$4 = cljs$core$vary_meta__4;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$5 = cljs$core$vary_meta__5;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$6 = cljs$core$vary_meta__6;
cljs$core$vary_meta.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$vary_meta;
})()
;
/**
 * Same as (not (= obj1 obj2))
 * @param {...*} var_args
 */
cljs.core.not_EQ_ = (function() {
var cljs$core$not_EQ_ = null;
var cljs$core$not_EQ___1 = (function (x){
return false;
});
var cljs$core$not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var cljs$core$not_EQ___3 = (function() { 
var G__33119__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__33119 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__33120__i = 0, G__33120__a = new Array(arguments.length -  2);
while (G__33120__i < G__33120__a.length) {G__33120__a[G__33120__i] = arguments[G__33120__i + 2]; ++G__33120__i;}
  more = new cljs.core.IndexedSeq(G__33120__a,0);
} 
return G__33119__delegate.call(this,x,y,more);};
G__33119.cljs$lang$maxFixedArity = 2;
G__33119.cljs$lang$applyTo = (function (arglist__33121){
var x = cljs.core.first(arglist__33121);
arglist__33121 = cljs.core.next(arglist__33121);
var y = cljs.core.first(arglist__33121);
var more = cljs.core.rest(arglist__33121);
return G__33119__delegate(x,y,more);
});
G__33119.cljs$core$IFn$_invoke$arity$variadic = G__33119__delegate;
return G__33119;
})()
;
cljs$core$not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$not_EQ___1.call(this,x);
case 2:
return cljs$core$not_EQ___2.call(this,x,y);
default:
var G__33122 = null;
if (arguments.length > 2) {
var G__33123__i = 0, G__33123__a = new Array(arguments.length -  2);
while (G__33123__i < G__33123__a.length) {G__33123__a[G__33123__i] = arguments[G__33123__i + 2]; ++G__33123__i;}
G__33122 = new cljs.core.IndexedSeq(G__33123__a,0);
}
return cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33122);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$not_EQ_.cljs$lang$maxFixedArity = 2;
cljs$core$not_EQ_.cljs$lang$applyTo = cljs$core$not_EQ___3.cljs$lang$applyTo;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$1 = cljs$core$not_EQ___1;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$2 = cljs$core$not_EQ___2;
cljs$core$not_EQ_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$not_EQ_;
})()
;
/**
 * If coll is empty, returns nil, else coll
 */
cljs.core.not_empty = (function cljs$core$not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function cljs$core$nil_iter(){
if(typeof cljs.core.t33127 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t33127 = (function (nil_iter,meta33128){
this.nil_iter = nil_iter;
this.meta33128 = meta33128;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t33127.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t33127.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t33127.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t33127.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_33129){
var self__ = this;
var _33129__$1 = this;
return self__.meta33128;
});

cljs.core.t33127.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_33129,meta33128__$1){
var self__ = this;
var _33129__$1 = this;
return (new cljs.core.t33127(self__.nil_iter,meta33128__$1));
});

cljs.core.t33127.cljs$lang$type = true;

cljs.core.t33127.cljs$lang$ctorStr = "cljs.core/t33127";

cljs.core.t33127.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/t33127");
});

cljs.core.__GT_t33127 = (function cljs$core$nil_iter_$___GT_t33127(nil_iter__$1,meta33128){
return (new cljs.core.t33127(nil_iter__$1,meta33128));
});

}

return (new cljs.core.t33127(cljs$core$nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function cljs$core$__GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function cljs$core$string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function cljs$core$__GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function cljs$core$array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function cljs$core$__GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function cljs$core$seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function cljs$core$iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(cljs.core.array_QMARK_(coll)){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function cljs$core$lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24171__auto__ = !((lt.stepper == null));
if(and__24171__auto__){
return self__.iter.hasNext();
} else {
return and__24171__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__33130 = lt;
var G__33131 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__33130,G__33131) : self__.xform.call(null,G__33130,G__33131));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__33132 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__33132) : self__.xform.call(null,G__33132));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function cljs$core$__GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function cljs$core$stepper(xform,iter){
var stepfn = (function() {
var cljs$core$stepper_$_stepfn = null;
var cljs$core$stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var cljs$core$stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$stepper_$_stepfn__1;
cljs$core$stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$stepper_$_stepfn__2;
return cljs$core$stepper_$_stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__33134 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33134) : xform.call(null,G__33134));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__33136 = cljs.core.next(iters__$1);
iters__$1 = G__33136;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__25068__auto___33137 = self__.iters.length;
var i_33138 = (0);
while(true){
if((i_33138 < n__25068__auto___33137)){
(self__.nexts[i_33138] = (self__.iters[i_33138]).next());

var G__33139 = (i_33138 + (1));
i_33138 = G__33139;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__24171__auto__ = !((lt.stepper == null));
if(and__24171__auto__){
return this$.hasNext();
} else {
return and__24171__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__33135 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__33135) : self__.xform.call(null,G__33135));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function cljs$core$__GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var cljs$core$multi_stepper = null;
var cljs$core$multi_stepper__2 = (function (xform,iters){
return cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var cljs$core$multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var cljs$core$multi_stepper_$_stepfn = null;
var cljs$core$multi_stepper_$_stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var cljs$core$multi_stepper_$_stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
cljs$core$multi_stepper_$_stepfn = function(result,input){
switch(arguments.length){
case 1:
return cljs$core$multi_stepper_$_stepfn__1.call(this,result);
case 2:
return cljs$core$multi_stepper_$_stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$1 = cljs$core$multi_stepper_$_stepfn__1;
cljs$core$multi_stepper_$_stepfn.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper_$_stepfn__2;
return cljs$core$multi_stepper_$_stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__33144 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__33144) : xform.call(null,G__33144));
})(),iters,nexts));
});
cljs$core$multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return cljs$core$multi_stepper__2.call(this,xform,iters);
case 3:
return cljs$core$multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$2 = cljs$core$multi_stepper__2;
cljs$core$multi_stepper.cljs$core$IFn$_invoke$arity$3 = cljs$core$multi_stepper__3;
return cljs$core$multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function cljs$core$__GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__33145_33149 = cljs.core.seq(colls);
var chunk__33146_33150 = null;
var count__33147_33151 = (0);
var i__33148_33152 = (0);
while(true){
if((i__33148_33152 < count__33147_33151)){
var coll_33153 = chunk__33146_33150.cljs$core$IIndexed$_nth$arity$2(null,i__33148_33152);
iters.push(cljs.core.iter(coll_33153));

var G__33154 = seq__33145_33149;
var G__33155 = chunk__33146_33150;
var G__33156 = count__33147_33151;
var G__33157 = (i__33148_33152 + (1));
seq__33145_33149 = G__33154;
chunk__33146_33150 = G__33155;
count__33147_33151 = G__33156;
i__33148_33152 = G__33157;
continue;
} else {
var temp__4126__auto___33158 = cljs.core.seq(seq__33145_33149);
if(temp__4126__auto___33158){
var seq__33145_33159__$1 = temp__4126__auto___33158;
if(cljs.core.chunked_seq_QMARK_(seq__33145_33159__$1)){
var c__24968__auto___33160 = cljs.core.chunk_first(seq__33145_33159__$1);
var G__33161 = cljs.core.chunk_rest(seq__33145_33159__$1);
var G__33162 = c__24968__auto___33160;
var G__33163 = cljs.core.count(c__24968__auto___33160);
var G__33164 = (0);
seq__33145_33149 = G__33161;
chunk__33146_33150 = G__33162;
count__33147_33151 = G__33163;
i__33148_33152 = G__33164;
continue;
} else {
var coll_33165 = cljs.core.first(seq__33145_33159__$1);
iters.push(cljs.core.iter(coll_33165));

var G__33166 = cljs.core.next(seq__33145_33159__$1);
var G__33167 = null;
var G__33168 = (0);
var G__33169 = (0);
seq__33145_33149 = G__33166;
chunk__33146_33150 = G__33167;
count__33147_33151 = G__33168;
i__33148_33152 = G__33169;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
 * Coerces coll to a (possibly empty) sequence, if it is not already
 * one. Will not force a lazy seq. (sequence nil) yields (), When a
 * transducer is supplied, returns a lazy sequence of applications of
 * the transform to the items in coll(s), i.e. to the set of first
 * items of each coll, followed by the set of second
 * items in each coll, until any one of the colls is exhausted.  Any
 * remaining items in other colls are ignored. The transform should accept
 * number-of-colls arguments
 * @param {...*} var_args
 */
cljs.core.sequence = (function() {
var cljs$core$sequence = null;
var cljs$core$sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__24183__auto__ = cljs.core.seq(coll);
if(or__24183__auto__){
return or__24183__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var cljs$core$sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var cljs$core$sequence__3 = (function() { 
var G__33170__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__33170 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__33171__i = 0, G__33171__a = new Array(arguments.length -  2);
while (G__33171__i < G__33171__a.length) {G__33171__a[G__33171__i] = arguments[G__33171__i + 2]; ++G__33171__i;}
  colls = new cljs.core.IndexedSeq(G__33171__a,0);
} 
return G__33170__delegate.call(this,xform,coll,colls);};
G__33170.cljs$lang$maxFixedArity = 2;
G__33170.cljs$lang$applyTo = (function (arglist__33172){
var xform = cljs.core.first(arglist__33172);
arglist__33172 = cljs.core.next(arglist__33172);
var coll = cljs.core.first(arglist__33172);
var colls = cljs.core.rest(arglist__33172);
return G__33170__delegate(xform,coll,colls);
});
G__33170.cljs$core$IFn$_invoke$arity$variadic = G__33170__delegate;
return G__33170;
})()
;
cljs$core$sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$sequence__1.call(this,xform);
case 2:
return cljs$core$sequence__2.call(this,xform,coll);
default:
var G__33173 = null;
if (arguments.length > 2) {
var G__33174__i = 0, G__33174__a = new Array(arguments.length -  2);
while (G__33174__i < G__33174__a.length) {G__33174__a[G__33174__i] = arguments[G__33174__i + 2]; ++G__33174__i;}
G__33173 = new cljs.core.IndexedSeq(G__33174__a,0);
}
return cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__33173);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$sequence.cljs$lang$maxFixedArity = 2;
cljs$core$sequence.cljs$lang$applyTo = cljs$core$sequence__3.cljs$lang$applyTo;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$1 = cljs$core$sequence__1;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$2 = cljs$core$sequence__2;
cljs$core$sequence.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$sequence;
})()
;
/**
 * Returns true if (pred x) is logical true for every x in coll, else
 * false.
 */
cljs.core.every_QMARK_ = (function cljs$core$every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__33176 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33176) : pred.call(null,G__33176));
})())){
var G__33177 = pred;
var G__33178 = cljs.core.next(coll);
pred = G__33177;
coll = G__33178;
continue;
} else {
return false;

}
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for every x in
 * coll, else true.
 */
cljs.core.not_every_QMARK_ = (function cljs$core$not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
 * Returns the first logical true value of (pred x) for any x in coll,
 * else nil.  One common idiom is to use a set as pred, for example
 * this will return :fred if :fred is in the sequence, otherwise nil:
 * (some #{:fred} coll)
 */
cljs.core.some = (function cljs$core$some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__24183__auto__ = (function (){var G__33182 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33182) : pred.call(null,G__33182));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var G__33183 = pred;
var G__33184 = cljs.core.next(coll);
pred = G__33183;
coll = G__33184;
continue;
}
} else {
return null;
}
break;
}
});
/**
 * Returns false if (pred x) is logical true for any x in coll,
 * else true.
 */
cljs.core.not_any_QMARK_ = (function cljs$core$not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
 * Returns true if n is even, throws an exception if n is not an integer
 */
cljs.core.even_QMARK_ = (function cljs$core$even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
 * Returns true if n is odd, throws an exception if n is not an integer
 */
cljs.core.odd_QMARK_ = (function cljs$core$odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
 * Takes a fn f and returns a fn that takes the same arguments as f,
 * has the same effects, if any, and returns the opposite truth value.
 */
cljs.core.complement = (function cljs$core$complement(f){
return (function() {
var G__33191 = null;
var G__33191__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__33191__1 = (function (x){
return cljs.core.not((function (){var G__33188 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33188) : f.call(null,G__33188));
})());
});
var G__33191__2 = (function (x,y){
return cljs.core.not((function (){var G__33189 = x;
var G__33190 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33189,G__33190) : f.call(null,G__33189,G__33190));
})());
});
var G__33191__3 = (function() { 
var G__33192__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__33192 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__33193__i = 0, G__33193__a = new Array(arguments.length -  2);
while (G__33193__i < G__33193__a.length) {G__33193__a[G__33193__i] = arguments[G__33193__i + 2]; ++G__33193__i;}
  zs = new cljs.core.IndexedSeq(G__33193__a,0);
} 
return G__33192__delegate.call(this,x,y,zs);};
G__33192.cljs$lang$maxFixedArity = 2;
G__33192.cljs$lang$applyTo = (function (arglist__33194){
var x = cljs.core.first(arglist__33194);
arglist__33194 = cljs.core.next(arglist__33194);
var y = cljs.core.first(arglist__33194);
var zs = cljs.core.rest(arglist__33194);
return G__33192__delegate(x,y,zs);
});
G__33192.cljs$core$IFn$_invoke$arity$variadic = G__33192__delegate;
return G__33192;
})()
;
G__33191 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__33191__0.call(this);
case 1:
return G__33191__1.call(this,x);
case 2:
return G__33191__2.call(this,x,y);
default:
var G__33195 = null;
if (arguments.length > 2) {
var G__33196__i = 0, G__33196__a = new Array(arguments.length -  2);
while (G__33196__i < G__33196__a.length) {G__33196__a[G__33196__i] = arguments[G__33196__i + 2]; ++G__33196__i;}
G__33195 = new cljs.core.IndexedSeq(G__33196__a,0);
}
return G__33191__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__33195);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33191.cljs$lang$maxFixedArity = 2;
G__33191.cljs$lang$applyTo = G__33191__3.cljs$lang$applyTo;
G__33191.cljs$core$IFn$_invoke$arity$0 = G__33191__0;
G__33191.cljs$core$IFn$_invoke$arity$1 = G__33191__1;
G__33191.cljs$core$IFn$_invoke$arity$2 = G__33191__2;
G__33191.cljs$core$IFn$_invoke$arity$variadic = G__33191__3.cljs$core$IFn$_invoke$arity$variadic;
return G__33191;
})()
});
/**
 * Returns a function that takes any number of arguments and returns x.
 */
cljs.core.constantly = (function cljs$core$constantly(x){
return (function() { 
var G__33197__delegate = function (args){
return x;
};
var G__33197 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33198__i = 0, G__33198__a = new Array(arguments.length -  0);
while (G__33198__i < G__33198__a.length) {G__33198__a[G__33198__i] = arguments[G__33198__i + 0]; ++G__33198__i;}
  args = new cljs.core.IndexedSeq(G__33198__a,0);
} 
return G__33197__delegate.call(this,args);};
G__33197.cljs$lang$maxFixedArity = 0;
G__33197.cljs$lang$applyTo = (function (arglist__33199){
var args = cljs.core.seq(arglist__33199);
return G__33197__delegate(args);
});
G__33197.cljs$core$IFn$_invoke$arity$variadic = G__33197__delegate;
return G__33197;
})()
;
});
/**
 * Takes a set of functions and returns a fn that is the composition
 * of those fns.  The returned fn takes a variable number of args,
 * applies the rightmost of fns to the args, the next
 * fn (right-to-left) to the result, etc.
 * @param {...*} var_args
 */
cljs.core.comp = (function() {
var cljs$core$comp = null;
var cljs$core$comp__0 = (function (){
return cljs.core.identity;
});
var cljs$core$comp__1 = (function (f){
return f;
});
var cljs$core$comp__2 = (function (f,g){
return (function() {
var G__33254 = null;
var G__33254__0 = (function (){
var G__33227 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33227) : f.call(null,G__33227));
});
var G__33254__1 = (function (x){
var G__33228 = (function (){var G__33229 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33229) : g.call(null,G__33229));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33228) : f.call(null,G__33228));
});
var G__33254__2 = (function (x,y){
var G__33230 = (function (){var G__33231 = x;
var G__33232 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__33231,G__33232) : g.call(null,G__33231,G__33232));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33230) : f.call(null,G__33230));
});
var G__33254__3 = (function (x,y,z){
var G__33233 = (function (){var G__33234 = x;
var G__33235 = y;
var G__33236 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__33234,G__33235,G__33236) : g.call(null,G__33234,G__33235,G__33236));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33233) : f.call(null,G__33233));
});
var G__33254__4 = (function() { 
var G__33255__delegate = function (x,y,z,args){
var G__33237 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33237) : f.call(null,G__33237));
};
var G__33255 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33256__i = 0, G__33256__a = new Array(arguments.length -  3);
while (G__33256__i < G__33256__a.length) {G__33256__a[G__33256__i] = arguments[G__33256__i + 3]; ++G__33256__i;}
  args = new cljs.core.IndexedSeq(G__33256__a,0);
} 
return G__33255__delegate.call(this,x,y,z,args);};
G__33255.cljs$lang$maxFixedArity = 3;
G__33255.cljs$lang$applyTo = (function (arglist__33257){
var x = cljs.core.first(arglist__33257);
arglist__33257 = cljs.core.next(arglist__33257);
var y = cljs.core.first(arglist__33257);
arglist__33257 = cljs.core.next(arglist__33257);
var z = cljs.core.first(arglist__33257);
var args = cljs.core.rest(arglist__33257);
return G__33255__delegate(x,y,z,args);
});
G__33255.cljs$core$IFn$_invoke$arity$variadic = G__33255__delegate;
return G__33255;
})()
;
G__33254 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33254__0.call(this);
case 1:
return G__33254__1.call(this,x);
case 2:
return G__33254__2.call(this,x,y);
case 3:
return G__33254__3.call(this,x,y,z);
default:
var G__33258 = null;
if (arguments.length > 3) {
var G__33259__i = 0, G__33259__a = new Array(arguments.length -  3);
while (G__33259__i < G__33259__a.length) {G__33259__a[G__33259__i] = arguments[G__33259__i + 3]; ++G__33259__i;}
G__33258 = new cljs.core.IndexedSeq(G__33259__a,0);
}
return G__33254__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33258);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33254.cljs$lang$maxFixedArity = 3;
G__33254.cljs$lang$applyTo = G__33254__4.cljs$lang$applyTo;
G__33254.cljs$core$IFn$_invoke$arity$0 = G__33254__0;
G__33254.cljs$core$IFn$_invoke$arity$1 = G__33254__1;
G__33254.cljs$core$IFn$_invoke$arity$2 = G__33254__2;
G__33254.cljs$core$IFn$_invoke$arity$3 = G__33254__3;
G__33254.cljs$core$IFn$_invoke$arity$variadic = G__33254__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33254;
})()
});
var cljs$core$comp__3 = (function (f,g,h){
return (function() {
var G__33260 = null;
var G__33260__0 = (function (){
var G__33238 = (function (){var G__33239 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33239) : g.call(null,G__33239));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33238) : f.call(null,G__33238));
});
var G__33260__1 = (function (x){
var G__33240 = (function (){var G__33241 = (function (){var G__33242 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__33242) : h.call(null,G__33242));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33241) : g.call(null,G__33241));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33240) : f.call(null,G__33240));
});
var G__33260__2 = (function (x,y){
var G__33243 = (function (){var G__33244 = (function (){var G__33245 = x;
var G__33246 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__33245,G__33246) : h.call(null,G__33245,G__33246));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33244) : g.call(null,G__33244));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33243) : f.call(null,G__33243));
});
var G__33260__3 = (function (x,y,z){
var G__33247 = (function (){var G__33248 = (function (){var G__33249 = x;
var G__33250 = y;
var G__33251 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__33249,G__33250,G__33251) : h.call(null,G__33249,G__33250,G__33251));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33248) : g.call(null,G__33248));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33247) : f.call(null,G__33247));
});
var G__33260__4 = (function() { 
var G__33261__delegate = function (x,y,z,args){
var G__33252 = (function (){var G__33253 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33253) : g.call(null,G__33253));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33252) : f.call(null,G__33252));
};
var G__33261 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33262__i = 0, G__33262__a = new Array(arguments.length -  3);
while (G__33262__i < G__33262__a.length) {G__33262__a[G__33262__i] = arguments[G__33262__i + 3]; ++G__33262__i;}
  args = new cljs.core.IndexedSeq(G__33262__a,0);
} 
return G__33261__delegate.call(this,x,y,z,args);};
G__33261.cljs$lang$maxFixedArity = 3;
G__33261.cljs$lang$applyTo = (function (arglist__33263){
var x = cljs.core.first(arglist__33263);
arglist__33263 = cljs.core.next(arglist__33263);
var y = cljs.core.first(arglist__33263);
arglist__33263 = cljs.core.next(arglist__33263);
var z = cljs.core.first(arglist__33263);
var args = cljs.core.rest(arglist__33263);
return G__33261__delegate(x,y,z,args);
});
G__33261.cljs$core$IFn$_invoke$arity$variadic = G__33261__delegate;
return G__33261;
})()
;
G__33260 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33260__0.call(this);
case 1:
return G__33260__1.call(this,x);
case 2:
return G__33260__2.call(this,x,y);
case 3:
return G__33260__3.call(this,x,y,z);
default:
var G__33264 = null;
if (arguments.length > 3) {
var G__33265__i = 0, G__33265__a = new Array(arguments.length -  3);
while (G__33265__i < G__33265__a.length) {G__33265__a[G__33265__i] = arguments[G__33265__i + 3]; ++G__33265__i;}
G__33264 = new cljs.core.IndexedSeq(G__33265__a,0);
}
return G__33260__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33264);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33260.cljs$lang$maxFixedArity = 3;
G__33260.cljs$lang$applyTo = G__33260__4.cljs$lang$applyTo;
G__33260.cljs$core$IFn$_invoke$arity$0 = G__33260__0;
G__33260.cljs$core$IFn$_invoke$arity$1 = G__33260__1;
G__33260.cljs$core$IFn$_invoke$arity$2 = G__33260__2;
G__33260.cljs$core$IFn$_invoke$arity$3 = G__33260__3;
G__33260.cljs$core$IFn$_invoke$arity$variadic = G__33260__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33260;
})()
});
var cljs$core$comp__4 = (function() { 
var G__33266__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__33267__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__33268 = cljs.core.first(fs__$2).call(null,ret);
var G__33269 = cljs.core.next(fs__$2);
ret = G__33268;
fs__$2 = G__33269;
continue;
} else {
return ret;
}
break;
}
};
var G__33267 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33270__i = 0, G__33270__a = new Array(arguments.length -  0);
while (G__33270__i < G__33270__a.length) {G__33270__a[G__33270__i] = arguments[G__33270__i + 0]; ++G__33270__i;}
  args = new cljs.core.IndexedSeq(G__33270__a,0);
} 
return G__33267__delegate.call(this,args);};
G__33267.cljs$lang$maxFixedArity = 0;
G__33267.cljs$lang$applyTo = (function (arglist__33271){
var args = cljs.core.seq(arglist__33271);
return G__33267__delegate(args);
});
G__33267.cljs$core$IFn$_invoke$arity$variadic = G__33267__delegate;
return G__33267;
})()
;
;})(fs__$1))
};
var G__33266 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__33272__i = 0, G__33272__a = new Array(arguments.length -  3);
while (G__33272__i < G__33272__a.length) {G__33272__a[G__33272__i] = arguments[G__33272__i + 3]; ++G__33272__i;}
  fs = new cljs.core.IndexedSeq(G__33272__a,0);
} 
return G__33266__delegate.call(this,f1,f2,f3,fs);};
G__33266.cljs$lang$maxFixedArity = 3;
G__33266.cljs$lang$applyTo = (function (arglist__33273){
var f1 = cljs.core.first(arglist__33273);
arglist__33273 = cljs.core.next(arglist__33273);
var f2 = cljs.core.first(arglist__33273);
arglist__33273 = cljs.core.next(arglist__33273);
var f3 = cljs.core.first(arglist__33273);
var fs = cljs.core.rest(arglist__33273);
return G__33266__delegate(f1,f2,f3,fs);
});
G__33266.cljs$core$IFn$_invoke$arity$variadic = G__33266__delegate;
return G__33266;
})()
;
cljs$core$comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return cljs$core$comp__0.call(this);
case 1:
return cljs$core$comp__1.call(this,f1);
case 2:
return cljs$core$comp__2.call(this,f1,f2);
case 3:
return cljs$core$comp__3.call(this,f1,f2,f3);
default:
var G__33274 = null;
if (arguments.length > 3) {
var G__33275__i = 0, G__33275__a = new Array(arguments.length -  3);
while (G__33275__i < G__33275__a.length) {G__33275__a[G__33275__i] = arguments[G__33275__i + 3]; ++G__33275__i;}
G__33274 = new cljs.core.IndexedSeq(G__33275__a,0);
}
return cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__33274);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$comp.cljs$lang$maxFixedArity = 3;
cljs$core$comp.cljs$lang$applyTo = cljs$core$comp__4.cljs$lang$applyTo;
cljs$core$comp.cljs$core$IFn$_invoke$arity$0 = cljs$core$comp__0;
cljs$core$comp.cljs$core$IFn$_invoke$arity$1 = cljs$core$comp__1;
cljs$core$comp.cljs$core$IFn$_invoke$arity$2 = cljs$core$comp__2;
cljs$core$comp.cljs$core$IFn$_invoke$arity$3 = cljs$core$comp__3;
cljs$core$comp.cljs$core$IFn$_invoke$arity$variadic = cljs$core$comp__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$comp;
})()
;
/**
 * Takes a function f and fewer than the normal arguments to f, and
 * returns a fn that takes a variable number of additional args. When
 * called, the returned function calls f with args + additional args.
 * @param {...*} var_args
 */
cljs.core.partial = (function() {
var cljs$core$partial = null;
var cljs$core$partial__1 = (function (f){
return f;
});
var cljs$core$partial__2 = (function (f,arg1){
return (function() {
var G__33360 = null;
var G__33360__0 = (function (){
var G__33318 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33318) : f.call(null,G__33318));
});
var G__33360__1 = (function (x){
var G__33319 = arg1;
var G__33320 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33319,G__33320) : f.call(null,G__33319,G__33320));
});
var G__33360__2 = (function (x,y){
var G__33321 = arg1;
var G__33322 = x;
var G__33323 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33321,G__33322,G__33323) : f.call(null,G__33321,G__33322,G__33323));
});
var G__33360__3 = (function (x,y,z){
var G__33324 = arg1;
var G__33325 = x;
var G__33326 = y;
var G__33327 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33324,G__33325,G__33326,G__33327) : f.call(null,G__33324,G__33325,G__33326,G__33327));
});
var G__33360__4 = (function() { 
var G__33361__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__33361 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33362__i = 0, G__33362__a = new Array(arguments.length -  3);
while (G__33362__i < G__33362__a.length) {G__33362__a[G__33362__i] = arguments[G__33362__i + 3]; ++G__33362__i;}
  args = new cljs.core.IndexedSeq(G__33362__a,0);
} 
return G__33361__delegate.call(this,x,y,z,args);};
G__33361.cljs$lang$maxFixedArity = 3;
G__33361.cljs$lang$applyTo = (function (arglist__33363){
var x = cljs.core.first(arglist__33363);
arglist__33363 = cljs.core.next(arglist__33363);
var y = cljs.core.first(arglist__33363);
arglist__33363 = cljs.core.next(arglist__33363);
var z = cljs.core.first(arglist__33363);
var args = cljs.core.rest(arglist__33363);
return G__33361__delegate(x,y,z,args);
});
G__33361.cljs$core$IFn$_invoke$arity$variadic = G__33361__delegate;
return G__33361;
})()
;
G__33360 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33360__0.call(this);
case 1:
return G__33360__1.call(this,x);
case 2:
return G__33360__2.call(this,x,y);
case 3:
return G__33360__3.call(this,x,y,z);
default:
var G__33364 = null;
if (arguments.length > 3) {
var G__33365__i = 0, G__33365__a = new Array(arguments.length -  3);
while (G__33365__i < G__33365__a.length) {G__33365__a[G__33365__i] = arguments[G__33365__i + 3]; ++G__33365__i;}
G__33364 = new cljs.core.IndexedSeq(G__33365__a,0);
}
return G__33360__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33364);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33360.cljs$lang$maxFixedArity = 3;
G__33360.cljs$lang$applyTo = G__33360__4.cljs$lang$applyTo;
G__33360.cljs$core$IFn$_invoke$arity$0 = G__33360__0;
G__33360.cljs$core$IFn$_invoke$arity$1 = G__33360__1;
G__33360.cljs$core$IFn$_invoke$arity$2 = G__33360__2;
G__33360.cljs$core$IFn$_invoke$arity$3 = G__33360__3;
G__33360.cljs$core$IFn$_invoke$arity$variadic = G__33360__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33360;
})()
});
var cljs$core$partial__3 = (function (f,arg1,arg2){
return (function() {
var G__33366 = null;
var G__33366__0 = (function (){
var G__33328 = arg1;
var G__33329 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33328,G__33329) : f.call(null,G__33328,G__33329));
});
var G__33366__1 = (function (x){
var G__33330 = arg1;
var G__33331 = arg2;
var G__33332 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33330,G__33331,G__33332) : f.call(null,G__33330,G__33331,G__33332));
});
var G__33366__2 = (function (x,y){
var G__33333 = arg1;
var G__33334 = arg2;
var G__33335 = x;
var G__33336 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33333,G__33334,G__33335,G__33336) : f.call(null,G__33333,G__33334,G__33335,G__33336));
});
var G__33366__3 = (function (x,y,z){
var G__33337 = arg1;
var G__33338 = arg2;
var G__33339 = x;
var G__33340 = y;
var G__33341 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33337,G__33338,G__33339,G__33340,G__33341) : f.call(null,G__33337,G__33338,G__33339,G__33340,G__33341));
});
var G__33366__4 = (function() { 
var G__33367__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__33367 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33368__i = 0, G__33368__a = new Array(arguments.length -  3);
while (G__33368__i < G__33368__a.length) {G__33368__a[G__33368__i] = arguments[G__33368__i + 3]; ++G__33368__i;}
  args = new cljs.core.IndexedSeq(G__33368__a,0);
} 
return G__33367__delegate.call(this,x,y,z,args);};
G__33367.cljs$lang$maxFixedArity = 3;
G__33367.cljs$lang$applyTo = (function (arglist__33369){
var x = cljs.core.first(arglist__33369);
arglist__33369 = cljs.core.next(arglist__33369);
var y = cljs.core.first(arglist__33369);
arglist__33369 = cljs.core.next(arglist__33369);
var z = cljs.core.first(arglist__33369);
var args = cljs.core.rest(arglist__33369);
return G__33367__delegate(x,y,z,args);
});
G__33367.cljs$core$IFn$_invoke$arity$variadic = G__33367__delegate;
return G__33367;
})()
;
G__33366 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33366__0.call(this);
case 1:
return G__33366__1.call(this,x);
case 2:
return G__33366__2.call(this,x,y);
case 3:
return G__33366__3.call(this,x,y,z);
default:
var G__33370 = null;
if (arguments.length > 3) {
var G__33371__i = 0, G__33371__a = new Array(arguments.length -  3);
while (G__33371__i < G__33371__a.length) {G__33371__a[G__33371__i] = arguments[G__33371__i + 3]; ++G__33371__i;}
G__33370 = new cljs.core.IndexedSeq(G__33371__a,0);
}
return G__33366__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33370);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33366.cljs$lang$maxFixedArity = 3;
G__33366.cljs$lang$applyTo = G__33366__4.cljs$lang$applyTo;
G__33366.cljs$core$IFn$_invoke$arity$0 = G__33366__0;
G__33366.cljs$core$IFn$_invoke$arity$1 = G__33366__1;
G__33366.cljs$core$IFn$_invoke$arity$2 = G__33366__2;
G__33366.cljs$core$IFn$_invoke$arity$3 = G__33366__3;
G__33366.cljs$core$IFn$_invoke$arity$variadic = G__33366__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33366;
})()
});
var cljs$core$partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__33372 = null;
var G__33372__0 = (function (){
var G__33342 = arg1;
var G__33343 = arg2;
var G__33344 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33342,G__33343,G__33344) : f.call(null,G__33342,G__33343,G__33344));
});
var G__33372__1 = (function (x){
var G__33345 = arg1;
var G__33346 = arg2;
var G__33347 = arg3;
var G__33348 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33345,G__33346,G__33347,G__33348) : f.call(null,G__33345,G__33346,G__33347,G__33348));
});
var G__33372__2 = (function (x,y){
var G__33349 = arg1;
var G__33350 = arg2;
var G__33351 = arg3;
var G__33352 = x;
var G__33353 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__33349,G__33350,G__33351,G__33352,G__33353) : f.call(null,G__33349,G__33350,G__33351,G__33352,G__33353));
});
var G__33372__3 = (function (x,y,z){
var G__33354 = arg1;
var G__33355 = arg2;
var G__33356 = arg3;
var G__33357 = x;
var G__33358 = y;
var G__33359 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__33354,G__33355,G__33356,G__33357,G__33358,G__33359) : f.call(null,G__33354,G__33355,G__33356,G__33357,G__33358,G__33359));
});
var G__33372__4 = (function() { 
var G__33373__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__33373 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33374__i = 0, G__33374__a = new Array(arguments.length -  3);
while (G__33374__i < G__33374__a.length) {G__33374__a[G__33374__i] = arguments[G__33374__i + 3]; ++G__33374__i;}
  args = new cljs.core.IndexedSeq(G__33374__a,0);
} 
return G__33373__delegate.call(this,x,y,z,args);};
G__33373.cljs$lang$maxFixedArity = 3;
G__33373.cljs$lang$applyTo = (function (arglist__33375){
var x = cljs.core.first(arglist__33375);
arglist__33375 = cljs.core.next(arglist__33375);
var y = cljs.core.first(arglist__33375);
arglist__33375 = cljs.core.next(arglist__33375);
var z = cljs.core.first(arglist__33375);
var args = cljs.core.rest(arglist__33375);
return G__33373__delegate(x,y,z,args);
});
G__33373.cljs$core$IFn$_invoke$arity$variadic = G__33373__delegate;
return G__33373;
})()
;
G__33372 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33372__0.call(this);
case 1:
return G__33372__1.call(this,x);
case 2:
return G__33372__2.call(this,x,y);
case 3:
return G__33372__3.call(this,x,y,z);
default:
var G__33376 = null;
if (arguments.length > 3) {
var G__33377__i = 0, G__33377__a = new Array(arguments.length -  3);
while (G__33377__i < G__33377__a.length) {G__33377__a[G__33377__i] = arguments[G__33377__i + 3]; ++G__33377__i;}
G__33376 = new cljs.core.IndexedSeq(G__33377__a,0);
}
return G__33372__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33376);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33372.cljs$lang$maxFixedArity = 3;
G__33372.cljs$lang$applyTo = G__33372__4.cljs$lang$applyTo;
G__33372.cljs$core$IFn$_invoke$arity$0 = G__33372__0;
G__33372.cljs$core$IFn$_invoke$arity$1 = G__33372__1;
G__33372.cljs$core$IFn$_invoke$arity$2 = G__33372__2;
G__33372.cljs$core$IFn$_invoke$arity$3 = G__33372__3;
G__33372.cljs$core$IFn$_invoke$arity$variadic = G__33372__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33372;
})()
});
var cljs$core$partial__5 = (function() { 
var G__33378__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__33379__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__33379 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__33380__i = 0, G__33380__a = new Array(arguments.length -  0);
while (G__33380__i < G__33380__a.length) {G__33380__a[G__33380__i] = arguments[G__33380__i + 0]; ++G__33380__i;}
  args = new cljs.core.IndexedSeq(G__33380__a,0);
} 
return G__33379__delegate.call(this,args);};
G__33379.cljs$lang$maxFixedArity = 0;
G__33379.cljs$lang$applyTo = (function (arglist__33381){
var args = cljs.core.seq(arglist__33381);
return G__33379__delegate(args);
});
G__33379.cljs$core$IFn$_invoke$arity$variadic = G__33379__delegate;
return G__33379;
})()
;
};
var G__33378 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__33382__i = 0, G__33382__a = new Array(arguments.length -  4);
while (G__33382__i < G__33382__a.length) {G__33382__a[G__33382__i] = arguments[G__33382__i + 4]; ++G__33382__i;}
  more = new cljs.core.IndexedSeq(G__33382__a,0);
} 
return G__33378__delegate.call(this,f,arg1,arg2,arg3,more);};
G__33378.cljs$lang$maxFixedArity = 4;
G__33378.cljs$lang$applyTo = (function (arglist__33383){
var f = cljs.core.first(arglist__33383);
arglist__33383 = cljs.core.next(arglist__33383);
var arg1 = cljs.core.first(arglist__33383);
arglist__33383 = cljs.core.next(arglist__33383);
var arg2 = cljs.core.first(arglist__33383);
arglist__33383 = cljs.core.next(arglist__33383);
var arg3 = cljs.core.first(arglist__33383);
var more = cljs.core.rest(arglist__33383);
return G__33378__delegate(f,arg1,arg2,arg3,more);
});
G__33378.cljs$core$IFn$_invoke$arity$variadic = G__33378__delegate;
return G__33378;
})()
;
cljs$core$partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return cljs$core$partial__1.call(this,f);
case 2:
return cljs$core$partial__2.call(this,f,arg1);
case 3:
return cljs$core$partial__3.call(this,f,arg1,arg2);
case 4:
return cljs$core$partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__33384 = null;
if (arguments.length > 4) {
var G__33385__i = 0, G__33385__a = new Array(arguments.length -  4);
while (G__33385__i < G__33385__a.length) {G__33385__a[G__33385__i] = arguments[G__33385__i + 4]; ++G__33385__i;}
G__33384 = new cljs.core.IndexedSeq(G__33385__a,0);
}
return cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__33384);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partial.cljs$lang$maxFixedArity = 4;
cljs$core$partial.cljs$lang$applyTo = cljs$core$partial__5.cljs$lang$applyTo;
cljs$core$partial.cljs$core$IFn$_invoke$arity$1 = cljs$core$partial__1;
cljs$core$partial.cljs$core$IFn$_invoke$arity$2 = cljs$core$partial__2;
cljs$core$partial.cljs$core$IFn$_invoke$arity$3 = cljs$core$partial__3;
cljs$core$partial.cljs$core$IFn$_invoke$arity$4 = cljs$core$partial__4;
cljs$core$partial.cljs$core$IFn$_invoke$arity$variadic = cljs$core$partial__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$partial;
})()
;
/**
 * Takes a function f, and returns a function that calls f, replacing
 * a nil first argument to f with the supplied value x. Higher arity
 * versions can replace arguments in the second and third
 * positions (y, z). Note that the function f can take any number of
 * arguments, not just the one(s) being nil-patched.
 */
cljs.core.fnil = (function() {
var cljs$core$fnil = null;
var cljs$core$fnil__2 = (function (f,x){
return (function() {
var G__33418 = null;
var G__33418__1 = (function (a){
var G__33402 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33402) : f.call(null,G__33402));
});
var G__33418__2 = (function (a,b){
var G__33403 = (((a == null))?x:a);
var G__33404 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33403,G__33404) : f.call(null,G__33403,G__33404));
});
var G__33418__3 = (function (a,b,c){
var G__33405 = (((a == null))?x:a);
var G__33406 = b;
var G__33407 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33405,G__33406,G__33407) : f.call(null,G__33405,G__33406,G__33407));
});
var G__33418__4 = (function() { 
var G__33419__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__33419 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33420__i = 0, G__33420__a = new Array(arguments.length -  3);
while (G__33420__i < G__33420__a.length) {G__33420__a[G__33420__i] = arguments[G__33420__i + 3]; ++G__33420__i;}
  ds = new cljs.core.IndexedSeq(G__33420__a,0);
} 
return G__33419__delegate.call(this,a,b,c,ds);};
G__33419.cljs$lang$maxFixedArity = 3;
G__33419.cljs$lang$applyTo = (function (arglist__33421){
var a = cljs.core.first(arglist__33421);
arglist__33421 = cljs.core.next(arglist__33421);
var b = cljs.core.first(arglist__33421);
arglist__33421 = cljs.core.next(arglist__33421);
var c = cljs.core.first(arglist__33421);
var ds = cljs.core.rest(arglist__33421);
return G__33419__delegate(a,b,c,ds);
});
G__33419.cljs$core$IFn$_invoke$arity$variadic = G__33419__delegate;
return G__33419;
})()
;
G__33418 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__33418__1.call(this,a);
case 2:
return G__33418__2.call(this,a,b);
case 3:
return G__33418__3.call(this,a,b,c);
default:
var G__33422 = null;
if (arguments.length > 3) {
var G__33423__i = 0, G__33423__a = new Array(arguments.length -  3);
while (G__33423__i < G__33423__a.length) {G__33423__a[G__33423__i] = arguments[G__33423__i + 3]; ++G__33423__i;}
G__33422 = new cljs.core.IndexedSeq(G__33423__a,0);
}
return G__33418__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33422);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33418.cljs$lang$maxFixedArity = 3;
G__33418.cljs$lang$applyTo = G__33418__4.cljs$lang$applyTo;
G__33418.cljs$core$IFn$_invoke$arity$1 = G__33418__1;
G__33418.cljs$core$IFn$_invoke$arity$2 = G__33418__2;
G__33418.cljs$core$IFn$_invoke$arity$3 = G__33418__3;
G__33418.cljs$core$IFn$_invoke$arity$variadic = G__33418__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33418;
})()
});
var cljs$core$fnil__3 = (function (f,x,y){
return (function() {
var G__33424 = null;
var G__33424__2 = (function (a,b){
var G__33408 = (((a == null))?x:a);
var G__33409 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33408,G__33409) : f.call(null,G__33408,G__33409));
});
var G__33424__3 = (function (a,b,c){
var G__33410 = (((a == null))?x:a);
var G__33411 = (((b == null))?y:b);
var G__33412 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33410,G__33411,G__33412) : f.call(null,G__33410,G__33411,G__33412));
});
var G__33424__4 = (function() { 
var G__33425__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__33425 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33426__i = 0, G__33426__a = new Array(arguments.length -  3);
while (G__33426__i < G__33426__a.length) {G__33426__a[G__33426__i] = arguments[G__33426__i + 3]; ++G__33426__i;}
  ds = new cljs.core.IndexedSeq(G__33426__a,0);
} 
return G__33425__delegate.call(this,a,b,c,ds);};
G__33425.cljs$lang$maxFixedArity = 3;
G__33425.cljs$lang$applyTo = (function (arglist__33427){
var a = cljs.core.first(arglist__33427);
arglist__33427 = cljs.core.next(arglist__33427);
var b = cljs.core.first(arglist__33427);
arglist__33427 = cljs.core.next(arglist__33427);
var c = cljs.core.first(arglist__33427);
var ds = cljs.core.rest(arglist__33427);
return G__33425__delegate(a,b,c,ds);
});
G__33425.cljs$core$IFn$_invoke$arity$variadic = G__33425__delegate;
return G__33425;
})()
;
G__33424 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__33424__2.call(this,a,b);
case 3:
return G__33424__3.call(this,a,b,c);
default:
var G__33428 = null;
if (arguments.length > 3) {
var G__33429__i = 0, G__33429__a = new Array(arguments.length -  3);
while (G__33429__i < G__33429__a.length) {G__33429__a[G__33429__i] = arguments[G__33429__i + 3]; ++G__33429__i;}
G__33428 = new cljs.core.IndexedSeq(G__33429__a,0);
}
return G__33424__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33428);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33424.cljs$lang$maxFixedArity = 3;
G__33424.cljs$lang$applyTo = G__33424__4.cljs$lang$applyTo;
G__33424.cljs$core$IFn$_invoke$arity$2 = G__33424__2;
G__33424.cljs$core$IFn$_invoke$arity$3 = G__33424__3;
G__33424.cljs$core$IFn$_invoke$arity$variadic = G__33424__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33424;
})()
});
var cljs$core$fnil__4 = (function (f,x,y,z){
return (function() {
var G__33430 = null;
var G__33430__2 = (function (a,b){
var G__33413 = (((a == null))?x:a);
var G__33414 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33413,G__33414) : f.call(null,G__33413,G__33414));
});
var G__33430__3 = (function (a,b,c){
var G__33415 = (((a == null))?x:a);
var G__33416 = (((b == null))?y:b);
var G__33417 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33415,G__33416,G__33417) : f.call(null,G__33415,G__33416,G__33417));
});
var G__33430__4 = (function() { 
var G__33431__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__33431 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__33432__i = 0, G__33432__a = new Array(arguments.length -  3);
while (G__33432__i < G__33432__a.length) {G__33432__a[G__33432__i] = arguments[G__33432__i + 3]; ++G__33432__i;}
  ds = new cljs.core.IndexedSeq(G__33432__a,0);
} 
return G__33431__delegate.call(this,a,b,c,ds);};
G__33431.cljs$lang$maxFixedArity = 3;
G__33431.cljs$lang$applyTo = (function (arglist__33433){
var a = cljs.core.first(arglist__33433);
arglist__33433 = cljs.core.next(arglist__33433);
var b = cljs.core.first(arglist__33433);
arglist__33433 = cljs.core.next(arglist__33433);
var c = cljs.core.first(arglist__33433);
var ds = cljs.core.rest(arglist__33433);
return G__33431__delegate(a,b,c,ds);
});
G__33431.cljs$core$IFn$_invoke$arity$variadic = G__33431__delegate;
return G__33431;
})()
;
G__33430 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__33430__2.call(this,a,b);
case 3:
return G__33430__3.call(this,a,b,c);
default:
var G__33434 = null;
if (arguments.length > 3) {
var G__33435__i = 0, G__33435__a = new Array(arguments.length -  3);
while (G__33435__i < G__33435__a.length) {G__33435__a[G__33435__i] = arguments[G__33435__i + 3]; ++G__33435__i;}
G__33434 = new cljs.core.IndexedSeq(G__33435__a,0);
}
return G__33430__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__33434);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33430.cljs$lang$maxFixedArity = 3;
G__33430.cljs$lang$applyTo = G__33430__4.cljs$lang$applyTo;
G__33430.cljs$core$IFn$_invoke$arity$2 = G__33430__2;
G__33430.cljs$core$IFn$_invoke$arity$3 = G__33430__3;
G__33430.cljs$core$IFn$_invoke$arity$variadic = G__33430__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33430;
})()
});
cljs$core$fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return cljs$core$fnil__2.call(this,f,x);
case 3:
return cljs$core$fnil__3.call(this,f,x,y);
case 4:
return cljs$core$fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$fnil.cljs$core$IFn$_invoke$arity$2 = cljs$core$fnil__2;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$3 = cljs$core$fnil__3;
cljs$core$fnil.cljs$core$IFn$_invoke$arity$4 = cljs$core$fnil__4;
return cljs$core$fnil;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to 0
 * and the first item of coll, followed by applying f to 1 and the second
 * item in coll, etc, until coll is exhausted. Thus function f should
 * accept 2 arguments, index and item.
 */
cljs.core.map_indexed = (function() {
var cljs$core$map_indexed = null;
var cljs$core$map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__33466 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__33466) : cljs.core.volatile_BANG_.call(null,G__33466));
})();
return ((function (i){
return (function() {
var G__33496 = null;
var G__33496__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33496__1 = (function (result){
var G__33467 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33467) : rf.call(null,G__33467));
});
var G__33496__2 = (function (result,input){
var G__33468 = result;
var G__33469 = (function (){var G__33470 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__33471 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33470,G__33471) : f.call(null,G__33470,G__33471));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33468,G__33469) : rf.call(null,G__33468,G__33469));
});
G__33496 = function(result,input){
switch(arguments.length){
case 0:
return G__33496__0.call(this);
case 1:
return G__33496__1.call(this,result);
case 2:
return G__33496__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33496.cljs$core$IFn$_invoke$arity$0 = G__33496__0;
G__33496.cljs$core$IFn$_invoke$arity$1 = G__33496__1;
G__33496.cljs$core$IFn$_invoke$arity$2 = G__33496__2;
return G__33496;
})()
;})(i))
});
});
var cljs$core$map_indexed__2 = (function (f,coll){
var mapi = (function cljs$core$map_indexed_$_mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25068__auto___33497 = size;
var i_33498 = (0);
while(true){
if((i_33498 < n__25068__auto___33497)){
cljs.core.chunk_append(b,(function (){var G__33492 = (idx + i_33498);
var G__33493 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33498);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33492,G__33493) : f.call(null,G__33492,G__33493));
})());

var G__33499 = (i_33498 + (1));
i_33498 = G__33499;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map_indexed_$_mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__33494 = idx;
var G__33495 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33494,G__33495) : f.call(null,G__33494,G__33495));
})(),cljs$core$map_indexed_$_mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
cljs$core$map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$map_indexed__1.call(this,f);
case 2:
return cljs$core$map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$map_indexed__1;
cljs$core$map_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$map_indexed__2;
return cljs$core$map_indexed;
})()
;
/**
 * Returns a lazy sequence of the non-nil results of (f item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a transducer when no collection is provided.
 */
cljs.core.keep = (function() {
var cljs$core$keep = null;
var cljs$core$keep__1 = (function (f){
return (function (rf){
return (function() {
var G__33518 = null;
var G__33518__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33518__1 = (function (result){
var G__33512 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33512) : rf.call(null,G__33512));
});
var G__33518__2 = (function (result,input){
var v = (function (){var G__33513 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33513) : f.call(null,G__33513));
})();
if((v == null)){
return result;
} else {
var G__33514 = result;
var G__33515 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33514,G__33515) : rf.call(null,G__33514,G__33515));
}
});
G__33518 = function(result,input){
switch(arguments.length){
case 0:
return G__33518__0.call(this);
case 1:
return G__33518__1.call(this,result);
case 2:
return G__33518__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33518.cljs$core$IFn$_invoke$arity$0 = G__33518__0;
G__33518.cljs$core$IFn$_invoke$arity$1 = G__33518__1;
G__33518.cljs$core$IFn$_invoke$arity$2 = G__33518__2;
return G__33518;
})()
});
});
var cljs$core$keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25068__auto___33519 = size;
var i_33520 = (0);
while(true){
if((i_33520 < n__25068__auto___33519)){
var x_33521 = (function (){var G__33516 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33520);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33516) : f.call(null,G__33516));
})();
if((x_33521 == null)){
} else {
cljs.core.chunk_append(b,x_33521);
}

var G__33522 = (i_33520 + (1));
i_33520 = G__33522;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__33517 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33517) : f.call(null,G__33517));
})();
if((x == null)){
return cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$keep = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep__1.call(this,f);
case 2:
return cljs$core$keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep__1;
cljs$core$keep.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep__2;
return cljs$core$keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__33523 = this$__$1;
return goog.getUid(G__33523);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__33524 = cljs.core.seq(self__.watches);
var chunk__33525 = null;
var count__33526 = (0);
var i__33527 = (0);
while(true){
if((i__33527 < count__33526)){
var vec__33528 = chunk__33525.cljs$core$IIndexed$_nth$arity$2(null,i__33527);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33528,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33528,(1),null);
var G__33529_33538 = key;
var G__33530_33539 = this$__$1;
var G__33531_33540 = oldval;
var G__33532_33541 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33529_33538,G__33530_33539,G__33531_33540,G__33532_33541) : f.call(null,G__33529_33538,G__33530_33539,G__33531_33540,G__33532_33541));

var G__33542 = seq__33524;
var G__33543 = chunk__33525;
var G__33544 = count__33526;
var G__33545 = (i__33527 + (1));
seq__33524 = G__33542;
chunk__33525 = G__33543;
count__33526 = G__33544;
i__33527 = G__33545;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33524);
if(temp__4126__auto__){
var seq__33524__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33524__$1)){
var c__24968__auto__ = cljs.core.chunk_first(seq__33524__$1);
var G__33546 = cljs.core.chunk_rest(seq__33524__$1);
var G__33547 = c__24968__auto__;
var G__33548 = cljs.core.count(c__24968__auto__);
var G__33549 = (0);
seq__33524 = G__33546;
chunk__33525 = G__33547;
count__33526 = G__33548;
i__33527 = G__33549;
continue;
} else {
var vec__33533 = cljs.core.first(seq__33524__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33533,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33533,(1),null);
var G__33534_33550 = key;
var G__33535_33551 = this$__$1;
var G__33536_33552 = oldval;
var G__33537_33553 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__33534_33550,G__33535_33551,G__33536_33552,G__33537_33553) : f.call(null,G__33534_33550,G__33535_33551,G__33536_33552,G__33537_33553));

var G__33554 = cljs.core.next(seq__33524__$1);
var G__33555 = null;
var G__33556 = (0);
var G__33557 = (0);
seq__33524 = G__33554;
chunk__33525 = G__33555;
count__33526 = G__33556;
i__33527 = G__33557;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function cljs$core$__GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
 * Creates and returns an Atom with an initial value of x and zero or
 * more options (in any order):
 * 
 * :meta metadata-map
 * 
 * :validator validate-fn
 * 
 * If metadata-map is supplied, it will be come the metadata on the
 * atom. validate-fn must be nil or a side-effect-free fn of one
 * argument, which will be passed the intended new state on any state
 * change. If the new state is unacceptable, the validate-fn should
 * return false or throw an Error.  If either of these error conditions
 * occur, then the value of the atom will not change.
 * @param {...*} var_args
 */
cljs.core.atom = (function() {
var cljs$core$atom = null;
var cljs$core$atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var cljs$core$atom__2 = (function() { 
var G__33561__delegate = function (x,p__33558){
var map__33560 = p__33558;
var map__33560__$1 = ((cljs.core.seq_QMARK_(map__33560))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__33560):map__33560);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33560__$1,cljs.core.constant$keyword$validator);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__33560__$1,cljs.core.constant$keyword$meta);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__33561 = function (x,var_args){
var p__33558 = null;
if (arguments.length > 1) {
var G__33562__i = 0, G__33562__a = new Array(arguments.length -  1);
while (G__33562__i < G__33562__a.length) {G__33562__a[G__33562__i] = arguments[G__33562__i + 1]; ++G__33562__i;}
  p__33558 = new cljs.core.IndexedSeq(G__33562__a,0);
} 
return G__33561__delegate.call(this,x,p__33558);};
G__33561.cljs$lang$maxFixedArity = 1;
G__33561.cljs$lang$applyTo = (function (arglist__33563){
var x = cljs.core.first(arglist__33563);
var p__33558 = cljs.core.rest(arglist__33563);
return G__33561__delegate(x,p__33558);
});
G__33561.cljs$core$IFn$_invoke$arity$variadic = G__33561__delegate;
return G__33561;
})()
;
cljs$core$atom = function(x,var_args){
var p__33558 = var_args;
switch(arguments.length){
case 1:
return cljs$core$atom__1.call(this,x);
default:
var G__33564 = null;
if (arguments.length > 1) {
var G__33565__i = 0, G__33565__a = new Array(arguments.length -  1);
while (G__33565__i < G__33565__a.length) {G__33565__a[G__33565__i] = arguments[G__33565__i + 1]; ++G__33565__i;}
G__33564 = new cljs.core.IndexedSeq(G__33565__a,0);
}
return cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__33564);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$atom.cljs$lang$maxFixedArity = 1;
cljs$core$atom.cljs$lang$applyTo = cljs$core$atom__2.cljs$lang$applyTo;
cljs$core$atom.cljs$core$IFn$_invoke$arity$1 = cljs$core$atom__1;
cljs$core$atom.cljs$core$IFn$_invoke$arity$variadic = cljs$core$atom__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$atom;
})()
;
/**
 * Sets the value of atom to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.reset_BANG_ = (function cljs$core$reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__33568 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__33568) : validate.call(null,G__33568));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__33569 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__33569) : cljs.core.pr_str.call(null,G__33569));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
 * Atomically swaps the value of atom to be:
 * (apply f current-value-of-atom args). Note that f may be called
 * multiple times, and thus should be free of side effects.  Returns
 * the value that was swapped in.
 * @param {...*} var_args
 */
cljs.core.swap_BANG_ = (function() {
var cljs$core$swap_BANG_ = null;
var cljs$core$swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33576 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33576) : f.call(null,G__33576));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var cljs$core$swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33577 = a.state;
var G__33578 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33577,G__33578) : f.call(null,G__33577,G__33578));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var cljs$core$swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__33579 = a.state;
var G__33580 = x;
var G__33581 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33579,G__33580,G__33581) : f.call(null,G__33579,G__33580,G__33581));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var cljs$core$swap_BANG___5 = (function() { 
var G__33582__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__33582 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__33583__i = 0, G__33583__a = new Array(arguments.length -  4);
while (G__33583__i < G__33583__a.length) {G__33583__a[G__33583__i] = arguments[G__33583__i + 4]; ++G__33583__i;}
  more = new cljs.core.IndexedSeq(G__33583__a,0);
} 
return G__33582__delegate.call(this,a,f,x,y,more);};
G__33582.cljs$lang$maxFixedArity = 4;
G__33582.cljs$lang$applyTo = (function (arglist__33584){
var a = cljs.core.first(arglist__33584);
arglist__33584 = cljs.core.next(arglist__33584);
var f = cljs.core.first(arglist__33584);
arglist__33584 = cljs.core.next(arglist__33584);
var x = cljs.core.first(arglist__33584);
arglist__33584 = cljs.core.next(arglist__33584);
var y = cljs.core.first(arglist__33584);
var more = cljs.core.rest(arglist__33584);
return G__33582__delegate(a,f,x,y,more);
});
G__33582.cljs$core$IFn$_invoke$arity$variadic = G__33582__delegate;
return G__33582;
})()
;
cljs$core$swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$swap_BANG___2.call(this,a,f);
case 3:
return cljs$core$swap_BANG___3.call(this,a,f,x);
case 4:
return cljs$core$swap_BANG___4.call(this,a,f,x,y);
default:
var G__33585 = null;
if (arguments.length > 4) {
var G__33586__i = 0, G__33586__a = new Array(arguments.length -  4);
while (G__33586__i < G__33586__a.length) {G__33586__a[G__33586__i] = arguments[G__33586__i + 4]; ++G__33586__i;}
G__33585 = new cljs.core.IndexedSeq(G__33586__a,0);
}
return cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__33585);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$swap_BANG_.cljs$lang$maxFixedArity = 4;
cljs$core$swap_BANG_.cljs$lang$applyTo = cljs$core$swap_BANG___5.cljs$lang$applyTo;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$2 = cljs$core$swap_BANG___2;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$3 = cljs$core$swap_BANG___3;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$4 = cljs$core$swap_BANG___4;
cljs$core$swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$swap_BANG_;
})()
;
/**
 * Atomically sets the value of atom to newval if and only if the
 * current value of the atom is equal to oldval. Returns true if
 * set happened, else false.
 */
cljs.core.compare_and_set_BANG_ = (function cljs$core$compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
 * Sets the validator-fn for an atom. validator-fn must be nil or a
 * side-effect-free fn of one argument, which will be passed the intended
 * new state on any state change. If the new state is unacceptable, the
 * validator-fn should return false or throw an Error. If the current state
 * is not acceptable to the new validator, an Error will be thrown and the
 * validator will not be changed.
 */
cljs.core.set_validator_BANG_ = (function cljs$core$set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
 * Gets the validator-fn for a var/ref/agent/atom.
 */
cljs.core.get_validator = (function cljs$core$get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function cljs$core$__GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
 * Creates and returns a Volatile with an initial value of val.
 */
cljs.core.volatile_BANG_ = (function cljs$core$volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
 * Returns true if x is a volatile.
 */
cljs.core.volatile_QMARK_ = (function cljs$core$volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
 * Sets the value of volatile to newval without regard for the
 * current value. Returns newval.
 */
cljs.core.vreset_BANG_ = (function cljs$core$vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
 * Returns a lazy sequence of the non-nil results of (f index item). Note,
 * this means false return values will be included.  f must be free of
 * side-effects.  Returns a stateful transducer when no collection is
 * provided.
 */
cljs.core.keep_indexed = (function() {
var cljs$core$keep_indexed = null;
var cljs$core$keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__33653 = null;
var G__33653__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33653__1 = (function (result){
var G__33620 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33620) : rf.call(null,G__33620));
});
var G__33653__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__33621 = i;
var G__33622 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33621,G__33622) : f.call(null,G__33621,G__33622));
})();
if((v == null)){
return result;
} else {
var G__33623 = result;
var G__33624 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33623,G__33624) : rf.call(null,G__33623,G__33624));
}
});
G__33653 = function(result,input){
switch(arguments.length){
case 0:
return G__33653__0.call(this);
case 1:
return G__33653__1.call(this,result);
case 2:
return G__33653__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33653.cljs$core$IFn$_invoke$arity$0 = G__33653__0;
G__33653.cljs$core$IFn$_invoke$arity$1 = G__33653__1;
G__33653.cljs$core$IFn$_invoke$arity$2 = G__33653__2;
return G__33653;
})()
;})(ia))
});
});
var cljs$core$keep_indexed__2 = (function (f,coll){
var keepi = (function cljs$core$keep_indexed_$_keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25068__auto___33654 = size;
var i_33655 = (0);
while(true){
if((i_33655 < n__25068__auto___33654)){
var x_33656 = (function (){var G__33649 = (idx + i_33655);
var G__33650 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_33655);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33649,G__33650) : f.call(null,G__33649,G__33650));
})();
if((x_33656 == null)){
} else {
cljs.core.chunk_append(b,x_33656);
}

var G__33657 = (i_33655 + (1));
i_33655 = G__33657;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$keep_indexed_$_keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__33651 = idx;
var G__33652 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33651,G__33652) : f.call(null,G__33651,G__33652));
})();
if((x == null)){
return cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,cljs$core$keep_indexed_$_keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
cljs$core$keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$keep_indexed__1.call(this,f);
case 2:
return cljs$core$keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$1 = cljs$core$keep_indexed__1;
cljs$core$keep_indexed.cljs$core$IFn$_invoke$arity$2 = cljs$core$keep_indexed__2;
return cljs$core$keep_indexed;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns true if all of its
 * composing predicates return a logical true value against all of its arguments, else it returns
 * false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical false result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.every_pred = (function() {
var cljs$core$every_pred = null;
var cljs$core$every_pred__1 = (function (p){
return (function() {
var cljs$core$every_pred_$_ep1 = null;
var cljs$core$every_pred_$_ep1__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__33871 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33871) : p.call(null,G__33871));
})());
});
var cljs$core$every_pred_$_ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24171__auto__ = (function (){var G__33873 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33873) : p.call(null,G__33873));
})();
if(cljs.core.truth_(and__24171__auto__)){
var G__33874 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33874) : p.call(null,G__33874));
} else {
return and__24171__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24171__auto__ = (function (){var G__33876 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33876) : p.call(null,G__33876));
})();
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__33878 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33878) : p.call(null,G__33878));
})();
if(cljs.core.truth_(and__24171__auto____$1)){
var G__33879 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__33879) : p.call(null,G__33879));
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
})());
});
var cljs$core$every_pred_$_ep1__4 = (function() { 
var G__34048__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__34048 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34049__i = 0, G__34049__a = new Array(arguments.length -  3);
while (G__34049__i < G__34049__a.length) {G__34049__a[G__34049__i] = arguments[G__34049__i + 3]; ++G__34049__i;}
  args = new cljs.core.IndexedSeq(G__34049__a,0);
} 
return G__34048__delegate.call(this,x,y,z,args);};
G__34048.cljs$lang$maxFixedArity = 3;
G__34048.cljs$lang$applyTo = (function (arglist__34050){
var x = cljs.core.first(arglist__34050);
arglist__34050 = cljs.core.next(arglist__34050);
var y = cljs.core.first(arglist__34050);
arglist__34050 = cljs.core.next(arglist__34050);
var z = cljs.core.first(arglist__34050);
var args = cljs.core.rest(arglist__34050);
return G__34048__delegate(x,y,z,args);
});
G__34048.cljs$core$IFn$_invoke$arity$variadic = G__34048__delegate;
return G__34048;
})()
;
cljs$core$every_pred_$_ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep1__0.call(this);
case 1:
return cljs$core$every_pred_$_ep1__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep1__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep1__3.call(this,x,y,z);
default:
var G__34051 = null;
if (arguments.length > 3) {
var G__34052__i = 0, G__34052__a = new Array(arguments.length -  3);
while (G__34052__i < G__34052__a.length) {G__34052__a[G__34052__i] = arguments[G__34052__i + 3]; ++G__34052__i;}
G__34051 = new cljs.core.IndexedSeq(G__34052__a,0);
}
return cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34051);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep1.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep1.cljs$lang$applyTo = cljs$core$every_pred_$_ep1__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep1__0;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep1__1;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep1__2;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep1__3;
cljs$core$every_pred_$_ep1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep1;
})()
});
var cljs$core$every_pred__2 = (function (p1,p2){
return (function() {
var cljs$core$every_pred_$_ep2 = null;
var cljs$core$every_pred_$_ep2__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__24171__auto__ = (function (){var G__33911 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33911) : p1.call(null,G__33911));
})();
if(cljs.core.truth_(and__24171__auto__)){
var G__33912 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33912) : p2.call(null,G__33912));
} else {
return and__24171__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24171__auto__ = (function (){var G__33914 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33914) : p1.call(null,G__33914));
})();
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__33916 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33916) : p1.call(null,G__33916));
})();
if(cljs.core.truth_(and__24171__auto____$1)){
var and__24171__auto____$2 = (function (){var G__33918 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33918) : p2.call(null,G__33918));
})();
if(cljs.core.truth_(and__24171__auto____$2)){
var G__33919 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33919) : p2.call(null,G__33919));
} else {
return and__24171__auto____$2;
}
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24171__auto__ = (function (){var G__33921 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33921) : p1.call(null,G__33921));
})();
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__33923 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33923) : p1.call(null,G__33923));
})();
if(cljs.core.truth_(and__24171__auto____$1)){
var and__24171__auto____$2 = (function (){var G__33925 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33925) : p1.call(null,G__33925));
})();
if(cljs.core.truth_(and__24171__auto____$2)){
var and__24171__auto____$3 = (function (){var G__33927 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33927) : p2.call(null,G__33927));
})();
if(cljs.core.truth_(and__24171__auto____$3)){
var and__24171__auto____$4 = (function (){var G__33929 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33929) : p2.call(null,G__33929));
})();
if(cljs.core.truth_(and__24171__auto____$4)){
var G__33930 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33930) : p2.call(null,G__33930));
} else {
return and__24171__auto____$4;
}
} else {
return and__24171__auto____$3;
}
} else {
return and__24171__auto____$2;
}
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
})());
});
var cljs$core$every_pred_$_ep2__4 = (function() { 
var G__34053__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__33658_SHARP_){
var and__24171__auto__ = (function (){var G__33935 = p1__33658_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33935) : p1.call(null,G__33935));
})();
if(cljs.core.truth_(and__24171__auto__)){
var G__33936 = p1__33658_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33936) : p2.call(null,G__33936));
} else {
return and__24171__auto__;
}
}),args)));
};
var G__34053 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34054__i = 0, G__34054__a = new Array(arguments.length -  3);
while (G__34054__i < G__34054__a.length) {G__34054__a[G__34054__i] = arguments[G__34054__i + 3]; ++G__34054__i;}
  args = new cljs.core.IndexedSeq(G__34054__a,0);
} 
return G__34053__delegate.call(this,x,y,z,args);};
G__34053.cljs$lang$maxFixedArity = 3;
G__34053.cljs$lang$applyTo = (function (arglist__34055){
var x = cljs.core.first(arglist__34055);
arglist__34055 = cljs.core.next(arglist__34055);
var y = cljs.core.first(arglist__34055);
arglist__34055 = cljs.core.next(arglist__34055);
var z = cljs.core.first(arglist__34055);
var args = cljs.core.rest(arglist__34055);
return G__34053__delegate(x,y,z,args);
});
G__34053.cljs$core$IFn$_invoke$arity$variadic = G__34053__delegate;
return G__34053;
})()
;
cljs$core$every_pred_$_ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep2__0.call(this);
case 1:
return cljs$core$every_pred_$_ep2__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep2__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep2__3.call(this,x,y,z);
default:
var G__34056 = null;
if (arguments.length > 3) {
var G__34057__i = 0, G__34057__a = new Array(arguments.length -  3);
while (G__34057__i < G__34057__a.length) {G__34057__a[G__34057__i] = arguments[G__34057__i + 3]; ++G__34057__i;}
G__34056 = new cljs.core.IndexedSeq(G__34057__a,0);
}
return cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34056);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep2.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep2.cljs$lang$applyTo = cljs$core$every_pred_$_ep2__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep2__0;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep2__1;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep2__2;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep2__3;
cljs$core$every_pred_$_ep2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep2;
})()
});
var cljs$core$every_pred__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$every_pred_$_ep3 = null;
var cljs$core$every_pred_$_ep3__0 = (function (){
return true;
});
var cljs$core$every_pred_$_ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__24171__auto__ = (function (){var G__33982 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33982) : p1.call(null,G__33982));
})();
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__33984 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33984) : p2.call(null,G__33984));
})();
if(cljs.core.truth_(and__24171__auto____$1)){
var G__33985 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33985) : p3.call(null,G__33985));
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__24171__auto__ = (function (){var G__33987 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33987) : p1.call(null,G__33987));
})();
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__33989 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33989) : p2.call(null,G__33989));
})();
if(cljs.core.truth_(and__24171__auto____$1)){
var and__24171__auto____$2 = (function (){var G__33991 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33991) : p3.call(null,G__33991));
})();
if(cljs.core.truth_(and__24171__auto____$2)){
var and__24171__auto____$3 = (function (){var G__33993 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33993) : p1.call(null,G__33993));
})();
if(cljs.core.truth_(and__24171__auto____$3)){
var and__24171__auto____$4 = (function (){var G__33995 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__33995) : p2.call(null,G__33995));
})();
if(cljs.core.truth_(and__24171__auto____$4)){
var G__33996 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__33996) : p3.call(null,G__33996));
} else {
return and__24171__auto____$4;
}
} else {
return and__24171__auto____$3;
}
} else {
return and__24171__auto____$2;
}
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__24171__auto__ = (function (){var G__33998 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__33998) : p1.call(null,G__33998));
})();
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__34000 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34000) : p2.call(null,G__34000));
})();
if(cljs.core.truth_(and__24171__auto____$1)){
var and__24171__auto____$2 = (function (){var G__34002 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34002) : p3.call(null,G__34002));
})();
if(cljs.core.truth_(and__24171__auto____$2)){
var and__24171__auto____$3 = (function (){var G__34004 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34004) : p1.call(null,G__34004));
})();
if(cljs.core.truth_(and__24171__auto____$3)){
var and__24171__auto____$4 = (function (){var G__34006 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34006) : p2.call(null,G__34006));
})();
if(cljs.core.truth_(and__24171__auto____$4)){
var and__24171__auto____$5 = (function (){var G__34008 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34008) : p3.call(null,G__34008));
})();
if(cljs.core.truth_(and__24171__auto____$5)){
var and__24171__auto____$6 = (function (){var G__34010 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34010) : p1.call(null,G__34010));
})();
if(cljs.core.truth_(and__24171__auto____$6)){
var and__24171__auto____$7 = (function (){var G__34012 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34012) : p2.call(null,G__34012));
})();
if(cljs.core.truth_(and__24171__auto____$7)){
var G__34013 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34013) : p3.call(null,G__34013));
} else {
return and__24171__auto____$7;
}
} else {
return and__24171__auto____$6;
}
} else {
return and__24171__auto____$5;
}
} else {
return and__24171__auto____$4;
}
} else {
return and__24171__auto____$3;
}
} else {
return and__24171__auto____$2;
}
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
})());
});
var cljs$core$every_pred_$_ep3__4 = (function() { 
var G__34058__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__33659_SHARP_){
var and__24171__auto__ = (function (){var G__34020 = p1__33659_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34020) : p1.call(null,G__34020));
})();
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__34022 = p1__33659_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34022) : p2.call(null,G__34022));
})();
if(cljs.core.truth_(and__24171__auto____$1)){
var G__34023 = p1__33659_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34023) : p3.call(null,G__34023));
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
}),args)));
};
var G__34058 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34059__i = 0, G__34059__a = new Array(arguments.length -  3);
while (G__34059__i < G__34059__a.length) {G__34059__a[G__34059__i] = arguments[G__34059__i + 3]; ++G__34059__i;}
  args = new cljs.core.IndexedSeq(G__34059__a,0);
} 
return G__34058__delegate.call(this,x,y,z,args);};
G__34058.cljs$lang$maxFixedArity = 3;
G__34058.cljs$lang$applyTo = (function (arglist__34060){
var x = cljs.core.first(arglist__34060);
arglist__34060 = cljs.core.next(arglist__34060);
var y = cljs.core.first(arglist__34060);
arglist__34060 = cljs.core.next(arglist__34060);
var z = cljs.core.first(arglist__34060);
var args = cljs.core.rest(arglist__34060);
return G__34058__delegate(x,y,z,args);
});
G__34058.cljs$core$IFn$_invoke$arity$variadic = G__34058__delegate;
return G__34058;
})()
;
cljs$core$every_pred_$_ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_ep3__0.call(this);
case 1:
return cljs$core$every_pred_$_ep3__1.call(this,x);
case 2:
return cljs$core$every_pred_$_ep3__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_ep3__3.call(this,x,y,z);
default:
var G__34061 = null;
if (arguments.length > 3) {
var G__34062__i = 0, G__34062__a = new Array(arguments.length -  3);
while (G__34062__i < G__34062__a.length) {G__34062__a[G__34062__i] = arguments[G__34062__i + 3]; ++G__34062__i;}
G__34061 = new cljs.core.IndexedSeq(G__34062__a,0);
}
return cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34061);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_ep3.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_ep3.cljs$lang$applyTo = cljs$core$every_pred_$_ep3__4.cljs$lang$applyTo;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_ep3__0;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_ep3__1;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_ep3__2;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_ep3__3;
cljs$core$every_pred_$_ep3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_ep3;
})()
});
var cljs$core$every_pred__4 = (function() { 
var G__34063__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$every_pred_$_epn = null;
var cljs$core$every_pred_$_epn__0 = (function (){
return true;
});
var cljs$core$every_pred_$_epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33660_SHARP_){
var G__34039 = x;
return (p1__33660_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33660_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34039) : p1__33660_SHARP_.call(null,G__34039));
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33661_SHARP_){
var and__24171__auto__ = (function (){var G__34041 = x;
return (p1__33661_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33661_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34041) : p1__33661_SHARP_.call(null,G__34041));
})();
if(cljs.core.truth_(and__24171__auto__)){
var G__34042 = y;
return (p1__33661_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33661_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34042) : p1__33661_SHARP_.call(null,G__34042));
} else {
return and__24171__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33662_SHARP_){
var and__24171__auto__ = (function (){var G__34044 = x;
return (p1__33662_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33662_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34044) : p1__33662_SHARP_.call(null,G__34044));
})();
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__34046 = y;
return (p1__33662_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33662_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34046) : p1__33662_SHARP_.call(null,G__34046));
})();
if(cljs.core.truth_(and__24171__auto____$1)){
var G__34047 = z;
return (p1__33662_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__33662_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34047) : p1__33662_SHARP_.call(null,G__34047));
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$every_pred_$_epn__4 = (function() { 
var G__34064__delegate = function (x,y,z,args){
return cljs.core.boolean$((cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__33663_SHARP_){
return cljs.core.every_QMARK_(p1__33663_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__34064 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34065__i = 0, G__34065__a = new Array(arguments.length -  3);
while (G__34065__i < G__34065__a.length) {G__34065__a[G__34065__i] = arguments[G__34065__i + 3]; ++G__34065__i;}
  args = new cljs.core.IndexedSeq(G__34065__a,0);
} 
return G__34064__delegate.call(this,x,y,z,args);};
G__34064.cljs$lang$maxFixedArity = 3;
G__34064.cljs$lang$applyTo = (function (arglist__34066){
var x = cljs.core.first(arglist__34066);
arglist__34066 = cljs.core.next(arglist__34066);
var y = cljs.core.first(arglist__34066);
arglist__34066 = cljs.core.next(arglist__34066);
var z = cljs.core.first(arglist__34066);
var args = cljs.core.rest(arglist__34066);
return G__34064__delegate(x,y,z,args);
});
G__34064.cljs$core$IFn$_invoke$arity$variadic = G__34064__delegate;
return G__34064;
})()
;
cljs$core$every_pred_$_epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$every_pred_$_epn__0.call(this);
case 1:
return cljs$core$every_pred_$_epn__1.call(this,x);
case 2:
return cljs$core$every_pred_$_epn__2.call(this,x,y);
case 3:
return cljs$core$every_pred_$_epn__3.call(this,x,y,z);
default:
var G__34067 = null;
if (arguments.length > 3) {
var G__34068__i = 0, G__34068__a = new Array(arguments.length -  3);
while (G__34068__i < G__34068__a.length) {G__34068__a[G__34068__i] = arguments[G__34068__i + 3]; ++G__34068__i;}
G__34067 = new cljs.core.IndexedSeq(G__34068__a,0);
}
return cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34067);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred_$_epn.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred_$_epn.cljs$lang$applyTo = cljs$core$every_pred_$_epn__4.cljs$lang$applyTo;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$0 = cljs$core$every_pred_$_epn__0;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred_$_epn__1;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred_$_epn__2;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred_$_epn__3;
cljs$core$every_pred_$_epn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred_$_epn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred_$_epn;
})()
;})(ps__$1))
};
var G__34063 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__34069__i = 0, G__34069__a = new Array(arguments.length -  3);
while (G__34069__i < G__34069__a.length) {G__34069__a[G__34069__i] = arguments[G__34069__i + 3]; ++G__34069__i;}
  ps = new cljs.core.IndexedSeq(G__34069__a,0);
} 
return G__34063__delegate.call(this,p1,p2,p3,ps);};
G__34063.cljs$lang$maxFixedArity = 3;
G__34063.cljs$lang$applyTo = (function (arglist__34070){
var p1 = cljs.core.first(arglist__34070);
arglist__34070 = cljs.core.next(arglist__34070);
var p2 = cljs.core.first(arglist__34070);
arglist__34070 = cljs.core.next(arglist__34070);
var p3 = cljs.core.first(arglist__34070);
var ps = cljs.core.rest(arglist__34070);
return G__34063__delegate(p1,p2,p3,ps);
});
G__34063.cljs$core$IFn$_invoke$arity$variadic = G__34063__delegate;
return G__34063;
})()
;
cljs$core$every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$every_pred__1.call(this,p1);
case 2:
return cljs$core$every_pred__2.call(this,p1,p2);
case 3:
return cljs$core$every_pred__3.call(this,p1,p2,p3);
default:
var G__34071 = null;
if (arguments.length > 3) {
var G__34072__i = 0, G__34072__a = new Array(arguments.length -  3);
while (G__34072__i < G__34072__a.length) {G__34072__a[G__34072__i] = arguments[G__34072__i + 3]; ++G__34072__i;}
G__34071 = new cljs.core.IndexedSeq(G__34072__a,0);
}
return cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__34071);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$every_pred.cljs$lang$maxFixedArity = 3;
cljs$core$every_pred.cljs$lang$applyTo = cljs$core$every_pred__4.cljs$lang$applyTo;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$1 = cljs$core$every_pred__1;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$2 = cljs$core$every_pred__2;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$3 = cljs$core$every_pred__3;
cljs$core$every_pred.cljs$core$IFn$_invoke$arity$variadic = cljs$core$every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$every_pred;
})()
;
/**
 * Takes a set of predicates and returns a function f that returns the first logical true value
 * returned by one of its composing predicates against any of its arguments, else it returns
 * logical false. Note that f is short-circuiting in that it will stop execution on the first
 * argument that triggers a logical true result against the original predicates.
 * @param {...*} var_args
 */
cljs.core.some_fn = (function() {
var cljs$core$some_fn = null;
var cljs$core$some_fn__1 = (function (p){
return (function() {
var cljs$core$some_fn_$_sp1 = null;
var cljs$core$some_fn_$_sp1__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp1__1 = (function (x){
var G__34278 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34278) : p.call(null,G__34278));
});
var cljs$core$some_fn_$_sp1__2 = (function (x,y){
var or__24183__auto__ = (function (){var G__34280 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34280) : p.call(null,G__34280));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var G__34281 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34281) : p.call(null,G__34281));
}
});
var cljs$core$some_fn_$_sp1__3 = (function (x,y,z){
var or__24183__auto__ = (function (){var G__34283 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34283) : p.call(null,G__34283));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (function (){var G__34285 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34285) : p.call(null,G__34285));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var G__34286 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__34286) : p.call(null,G__34286));
}
}
});
var cljs$core$some_fn_$_sp1__4 = (function() { 
var G__34447__delegate = function (x,y,z,args){
var or__24183__auto__ = cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__34447 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34448__i = 0, G__34448__a = new Array(arguments.length -  3);
while (G__34448__i < G__34448__a.length) {G__34448__a[G__34448__i] = arguments[G__34448__i + 3]; ++G__34448__i;}
  args = new cljs.core.IndexedSeq(G__34448__a,0);
} 
return G__34447__delegate.call(this,x,y,z,args);};
G__34447.cljs$lang$maxFixedArity = 3;
G__34447.cljs$lang$applyTo = (function (arglist__34449){
var x = cljs.core.first(arglist__34449);
arglist__34449 = cljs.core.next(arglist__34449);
var y = cljs.core.first(arglist__34449);
arglist__34449 = cljs.core.next(arglist__34449);
var z = cljs.core.first(arglist__34449);
var args = cljs.core.rest(arglist__34449);
return G__34447__delegate(x,y,z,args);
});
G__34447.cljs$core$IFn$_invoke$arity$variadic = G__34447__delegate;
return G__34447;
})()
;
cljs$core$some_fn_$_sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp1__0.call(this);
case 1:
return cljs$core$some_fn_$_sp1__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp1__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp1__3.call(this,x,y,z);
default:
var G__34450 = null;
if (arguments.length > 3) {
var G__34451__i = 0, G__34451__a = new Array(arguments.length -  3);
while (G__34451__i < G__34451__a.length) {G__34451__a[G__34451__i] = arguments[G__34451__i + 3]; ++G__34451__i;}
G__34450 = new cljs.core.IndexedSeq(G__34451__a,0);
}
return cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34450);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp1.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp1.cljs$lang$applyTo = cljs$core$some_fn_$_sp1__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp1__0;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp1__1;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp1__2;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp1__3;
cljs$core$some_fn_$_sp1.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp1;
})()
});
var cljs$core$some_fn__2 = (function (p1,p2){
return (function() {
var cljs$core$some_fn_$_sp2 = null;
var cljs$core$some_fn_$_sp2__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp2__1 = (function (x){
var or__24183__auto__ = (function (){var G__34318 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34318) : p1.call(null,G__34318));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var G__34319 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34319) : p2.call(null,G__34319));
}
});
var cljs$core$some_fn_$_sp2__2 = (function (x,y){
var or__24183__auto__ = (function (){var G__34321 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34321) : p1.call(null,G__34321));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (function (){var G__34323 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34323) : p1.call(null,G__34323));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var or__24183__auto____$2 = (function (){var G__34325 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34325) : p2.call(null,G__34325));
})();
if(cljs.core.truth_(or__24183__auto____$2)){
return or__24183__auto____$2;
} else {
var G__34326 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34326) : p2.call(null,G__34326));
}
}
}
});
var cljs$core$some_fn_$_sp2__3 = (function (x,y,z){
var or__24183__auto__ = (function (){var G__34328 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34328) : p1.call(null,G__34328));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (function (){var G__34330 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34330) : p1.call(null,G__34330));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var or__24183__auto____$2 = (function (){var G__34332 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34332) : p1.call(null,G__34332));
})();
if(cljs.core.truth_(or__24183__auto____$2)){
return or__24183__auto____$2;
} else {
var or__24183__auto____$3 = (function (){var G__34334 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34334) : p2.call(null,G__34334));
})();
if(cljs.core.truth_(or__24183__auto____$3)){
return or__24183__auto____$3;
} else {
var or__24183__auto____$4 = (function (){var G__34336 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34336) : p2.call(null,G__34336));
})();
if(cljs.core.truth_(or__24183__auto____$4)){
return or__24183__auto____$4;
} else {
var G__34337 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34337) : p2.call(null,G__34337));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp2__4 = (function() { 
var G__34452__delegate = function (x,y,z,args){
var or__24183__auto__ = cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return cljs.core.some(((function (or__24183__auto__){
return (function (p1__34073_SHARP_){
var or__24183__auto____$1 = (function (){var G__34339 = p1__34073_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34339) : p1.call(null,G__34339));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var G__34340 = p1__34073_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34340) : p2.call(null,G__34340));
}
});})(or__24183__auto__))
,args);
}
};
var G__34452 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34453__i = 0, G__34453__a = new Array(arguments.length -  3);
while (G__34453__i < G__34453__a.length) {G__34453__a[G__34453__i] = arguments[G__34453__i + 3]; ++G__34453__i;}
  args = new cljs.core.IndexedSeq(G__34453__a,0);
} 
return G__34452__delegate.call(this,x,y,z,args);};
G__34452.cljs$lang$maxFixedArity = 3;
G__34452.cljs$lang$applyTo = (function (arglist__34454){
var x = cljs.core.first(arglist__34454);
arglist__34454 = cljs.core.next(arglist__34454);
var y = cljs.core.first(arglist__34454);
arglist__34454 = cljs.core.next(arglist__34454);
var z = cljs.core.first(arglist__34454);
var args = cljs.core.rest(arglist__34454);
return G__34452__delegate(x,y,z,args);
});
G__34452.cljs$core$IFn$_invoke$arity$variadic = G__34452__delegate;
return G__34452;
})()
;
cljs$core$some_fn_$_sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp2__0.call(this);
case 1:
return cljs$core$some_fn_$_sp2__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp2__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp2__3.call(this,x,y,z);
default:
var G__34455 = null;
if (arguments.length > 3) {
var G__34456__i = 0, G__34456__a = new Array(arguments.length -  3);
while (G__34456__i < G__34456__a.length) {G__34456__a[G__34456__i] = arguments[G__34456__i + 3]; ++G__34456__i;}
G__34455 = new cljs.core.IndexedSeq(G__34456__a,0);
}
return cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp2.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp2.cljs$lang$applyTo = cljs$core$some_fn_$_sp2__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp2__0;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp2__1;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp2__2;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp2__3;
cljs$core$some_fn_$_sp2.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp2;
})()
});
var cljs$core$some_fn__3 = (function (p1,p2,p3){
return (function() {
var cljs$core$some_fn_$_sp3 = null;
var cljs$core$some_fn_$_sp3__0 = (function (){
return null;
});
var cljs$core$some_fn_$_sp3__1 = (function (x){
var or__24183__auto__ = (function (){var G__34386 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34386) : p1.call(null,G__34386));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (function (){var G__34388 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34388) : p2.call(null,G__34388));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var G__34389 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34389) : p3.call(null,G__34389));
}
}
});
var cljs$core$some_fn_$_sp3__2 = (function (x,y){
var or__24183__auto__ = (function (){var G__34391 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34391) : p1.call(null,G__34391));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (function (){var G__34393 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34393) : p2.call(null,G__34393));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var or__24183__auto____$2 = (function (){var G__34395 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34395) : p3.call(null,G__34395));
})();
if(cljs.core.truth_(or__24183__auto____$2)){
return or__24183__auto____$2;
} else {
var or__24183__auto____$3 = (function (){var G__34397 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34397) : p1.call(null,G__34397));
})();
if(cljs.core.truth_(or__24183__auto____$3)){
return or__24183__auto____$3;
} else {
var or__24183__auto____$4 = (function (){var G__34399 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34399) : p2.call(null,G__34399));
})();
if(cljs.core.truth_(or__24183__auto____$4)){
return or__24183__auto____$4;
} else {
var G__34400 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34400) : p3.call(null,G__34400));
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__3 = (function (x,y,z){
var or__24183__auto__ = (function (){var G__34402 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34402) : p1.call(null,G__34402));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (function (){var G__34404 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34404) : p2.call(null,G__34404));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var or__24183__auto____$2 = (function (){var G__34406 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34406) : p3.call(null,G__34406));
})();
if(cljs.core.truth_(or__24183__auto____$2)){
return or__24183__auto____$2;
} else {
var or__24183__auto____$3 = (function (){var G__34408 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34408) : p1.call(null,G__34408));
})();
if(cljs.core.truth_(or__24183__auto____$3)){
return or__24183__auto____$3;
} else {
var or__24183__auto____$4 = (function (){var G__34410 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34410) : p2.call(null,G__34410));
})();
if(cljs.core.truth_(or__24183__auto____$4)){
return or__24183__auto____$4;
} else {
var or__24183__auto____$5 = (function (){var G__34412 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34412) : p3.call(null,G__34412));
})();
if(cljs.core.truth_(or__24183__auto____$5)){
return or__24183__auto____$5;
} else {
var or__24183__auto____$6 = (function (){var G__34414 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34414) : p1.call(null,G__34414));
})();
if(cljs.core.truth_(or__24183__auto____$6)){
return or__24183__auto____$6;
} else {
var or__24183__auto____$7 = (function (){var G__34416 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34416) : p2.call(null,G__34416));
})();
if(cljs.core.truth_(or__24183__auto____$7)){
return or__24183__auto____$7;
} else {
var G__34417 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34417) : p3.call(null,G__34417));
}
}
}
}
}
}
}
}
});
var cljs$core$some_fn_$_sp3__4 = (function() { 
var G__34457__delegate = function (x,y,z,args){
var or__24183__auto__ = cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return cljs.core.some(((function (or__24183__auto__){
return (function (p1__34074_SHARP_){
var or__24183__auto____$1 = (function (){var G__34419 = p1__34074_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__34419) : p1.call(null,G__34419));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var or__24183__auto____$2 = (function (){var G__34421 = p1__34074_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__34421) : p2.call(null,G__34421));
})();
if(cljs.core.truth_(or__24183__auto____$2)){
return or__24183__auto____$2;
} else {
var G__34422 = p1__34074_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__34422) : p3.call(null,G__34422));
}
}
});})(or__24183__auto__))
,args);
}
};
var G__34457 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34458__i = 0, G__34458__a = new Array(arguments.length -  3);
while (G__34458__i < G__34458__a.length) {G__34458__a[G__34458__i] = arguments[G__34458__i + 3]; ++G__34458__i;}
  args = new cljs.core.IndexedSeq(G__34458__a,0);
} 
return G__34457__delegate.call(this,x,y,z,args);};
G__34457.cljs$lang$maxFixedArity = 3;
G__34457.cljs$lang$applyTo = (function (arglist__34459){
var x = cljs.core.first(arglist__34459);
arglist__34459 = cljs.core.next(arglist__34459);
var y = cljs.core.first(arglist__34459);
arglist__34459 = cljs.core.next(arglist__34459);
var z = cljs.core.first(arglist__34459);
var args = cljs.core.rest(arglist__34459);
return G__34457__delegate(x,y,z,args);
});
G__34457.cljs$core$IFn$_invoke$arity$variadic = G__34457__delegate;
return G__34457;
})()
;
cljs$core$some_fn_$_sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_sp3__0.call(this);
case 1:
return cljs$core$some_fn_$_sp3__1.call(this,x);
case 2:
return cljs$core$some_fn_$_sp3__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_sp3__3.call(this,x,y,z);
default:
var G__34460 = null;
if (arguments.length > 3) {
var G__34461__i = 0, G__34461__a = new Array(arguments.length -  3);
while (G__34461__i < G__34461__a.length) {G__34461__a[G__34461__i] = arguments[G__34461__i + 3]; ++G__34461__i;}
G__34460 = new cljs.core.IndexedSeq(G__34461__a,0);
}
return cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34460);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_sp3.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_sp3.cljs$lang$applyTo = cljs$core$some_fn_$_sp3__4.cljs$lang$applyTo;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_sp3__0;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_sp3__1;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_sp3__2;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_sp3__3;
cljs$core$some_fn_$_sp3.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_sp3;
})()
});
var cljs$core$some_fn__4 = (function() { 
var G__34462__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var cljs$core$some_fn_$_spn = null;
var cljs$core$some_fn_$_spn__0 = (function (){
return null;
});
var cljs$core$some_fn_$_spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__34075_SHARP_){
var G__34438 = x;
return (p1__34075_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34075_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34438) : p1__34075_SHARP_.call(null,G__34438));
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__34076_SHARP_){
var or__24183__auto__ = (function (){var G__34440 = x;
return (p1__34076_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34076_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34440) : p1__34076_SHARP_.call(null,G__34440));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var G__34441 = y;
return (p1__34076_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34076_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34441) : p1__34076_SHARP_.call(null,G__34441));
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__34077_SHARP_){
var or__24183__auto__ = (function (){var G__34443 = x;
return (p1__34077_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34077_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34443) : p1__34077_SHARP_.call(null,G__34443));
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (function (){var G__34445 = y;
return (p1__34077_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34077_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34445) : p1__34077_SHARP_.call(null,G__34445));
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var G__34446 = z;
return (p1__34077_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__34077_SHARP_.cljs$core$IFn$_invoke$arity$1(G__34446) : p1__34077_SHARP_.call(null,G__34446));
}
}
});})(ps__$1))
,ps__$1);
});
var cljs$core$some_fn_$_spn__4 = (function() { 
var G__34463__delegate = function (x,y,z,args){
var or__24183__auto__ = cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return cljs.core.some(((function (or__24183__auto__,ps__$1){
return (function (p1__34078_SHARP_){
return cljs.core.some(p1__34078_SHARP_,args);
});})(or__24183__auto__,ps__$1))
,ps__$1);
}
};
var G__34463 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__34464__i = 0, G__34464__a = new Array(arguments.length -  3);
while (G__34464__i < G__34464__a.length) {G__34464__a[G__34464__i] = arguments[G__34464__i + 3]; ++G__34464__i;}
  args = new cljs.core.IndexedSeq(G__34464__a,0);
} 
return G__34463__delegate.call(this,x,y,z,args);};
G__34463.cljs$lang$maxFixedArity = 3;
G__34463.cljs$lang$applyTo = (function (arglist__34465){
var x = cljs.core.first(arglist__34465);
arglist__34465 = cljs.core.next(arglist__34465);
var y = cljs.core.first(arglist__34465);
arglist__34465 = cljs.core.next(arglist__34465);
var z = cljs.core.first(arglist__34465);
var args = cljs.core.rest(arglist__34465);
return G__34463__delegate(x,y,z,args);
});
G__34463.cljs$core$IFn$_invoke$arity$variadic = G__34463__delegate;
return G__34463;
})()
;
cljs$core$some_fn_$_spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return cljs$core$some_fn_$_spn__0.call(this);
case 1:
return cljs$core$some_fn_$_spn__1.call(this,x);
case 2:
return cljs$core$some_fn_$_spn__2.call(this,x,y);
case 3:
return cljs$core$some_fn_$_spn__3.call(this,x,y,z);
default:
var G__34466 = null;
if (arguments.length > 3) {
var G__34467__i = 0, G__34467__a = new Array(arguments.length -  3);
while (G__34467__i < G__34467__a.length) {G__34467__a[G__34467__i] = arguments[G__34467__i + 3]; ++G__34467__i;}
G__34466 = new cljs.core.IndexedSeq(G__34467__a,0);
}
return cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__34466);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn_$_spn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn_$_spn.cljs$lang$applyTo = cljs$core$some_fn_$_spn__4.cljs$lang$applyTo;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$0 = cljs$core$some_fn_$_spn__0;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn_$_spn__1;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn_$_spn__2;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn_$_spn__3;
cljs$core$some_fn_$_spn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn_$_spn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn_$_spn;
})()
;})(ps__$1))
};
var G__34462 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__34468__i = 0, G__34468__a = new Array(arguments.length -  3);
while (G__34468__i < G__34468__a.length) {G__34468__a[G__34468__i] = arguments[G__34468__i + 3]; ++G__34468__i;}
  ps = new cljs.core.IndexedSeq(G__34468__a,0);
} 
return G__34462__delegate.call(this,p1,p2,p3,ps);};
G__34462.cljs$lang$maxFixedArity = 3;
G__34462.cljs$lang$applyTo = (function (arglist__34469){
var p1 = cljs.core.first(arglist__34469);
arglist__34469 = cljs.core.next(arglist__34469);
var p2 = cljs.core.first(arglist__34469);
arglist__34469 = cljs.core.next(arglist__34469);
var p3 = cljs.core.first(arglist__34469);
var ps = cljs.core.rest(arglist__34469);
return G__34462__delegate(p1,p2,p3,ps);
});
G__34462.cljs$core$IFn$_invoke$arity$variadic = G__34462__delegate;
return G__34462;
})()
;
cljs$core$some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return cljs$core$some_fn__1.call(this,p1);
case 2:
return cljs$core$some_fn__2.call(this,p1,p2);
case 3:
return cljs$core$some_fn__3.call(this,p1,p2,p3);
default:
var G__34470 = null;
if (arguments.length > 3) {
var G__34471__i = 0, G__34471__a = new Array(arguments.length -  3);
while (G__34471__i < G__34471__a.length) {G__34471__a[G__34471__i] = arguments[G__34471__i + 3]; ++G__34471__i;}
G__34470 = new cljs.core.IndexedSeq(G__34471__a,0);
}
return cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__34470);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$some_fn.cljs$lang$maxFixedArity = 3;
cljs$core$some_fn.cljs$lang$applyTo = cljs$core$some_fn__4.cljs$lang$applyTo;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$1 = cljs$core$some_fn__1;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$2 = cljs$core$some_fn__2;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$3 = cljs$core$some_fn__3;
cljs$core$some_fn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$some_fn;
})()
;
/**
 * Returns a lazy sequence consisting of the result of applying f to
 * the set of first items of each coll, followed by applying f to the
 * set of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments. Returns a transducer when
 * no collection is provided.
 * @param {...*} var_args
 */
cljs.core.map = (function() {
var cljs$core$map = null;
var cljs$core$map__1 = (function (f){
return (function (rf){
return (function() {
var G__34526 = null;
var G__34526__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34526__1 = (function (result){
var G__34512 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34512) : rf.call(null,G__34512));
});
var G__34526__2 = (function (result,input){
var G__34513 = result;
var G__34514 = (function (){var G__34515 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34515) : f.call(null,G__34515));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34513,G__34514) : rf.call(null,G__34513,G__34514));
});
var G__34526__3 = (function() { 
var G__34527__delegate = function (result,input,inputs){
var G__34516 = result;
var G__34517 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34516,G__34517) : rf.call(null,G__34516,G__34517));
};
var G__34527 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__34528__i = 0, G__34528__a = new Array(arguments.length -  2);
while (G__34528__i < G__34528__a.length) {G__34528__a[G__34528__i] = arguments[G__34528__i + 2]; ++G__34528__i;}
  inputs = new cljs.core.IndexedSeq(G__34528__a,0);
} 
return G__34527__delegate.call(this,result,input,inputs);};
G__34527.cljs$lang$maxFixedArity = 2;
G__34527.cljs$lang$applyTo = (function (arglist__34529){
var result = cljs.core.first(arglist__34529);
arglist__34529 = cljs.core.next(arglist__34529);
var input = cljs.core.first(arglist__34529);
var inputs = cljs.core.rest(arglist__34529);
return G__34527__delegate(result,input,inputs);
});
G__34527.cljs$core$IFn$_invoke$arity$variadic = G__34527__delegate;
return G__34527;
})()
;
G__34526 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__34526__0.call(this);
case 1:
return G__34526__1.call(this,result);
case 2:
return G__34526__2.call(this,result,input);
default:
var G__34530 = null;
if (arguments.length > 2) {
var G__34531__i = 0, G__34531__a = new Array(arguments.length -  2);
while (G__34531__i < G__34531__a.length) {G__34531__a[G__34531__i] = arguments[G__34531__i + 2]; ++G__34531__i;}
G__34530 = new cljs.core.IndexedSeq(G__34531__a,0);
}
return G__34526__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__34530);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34526.cljs$lang$maxFixedArity = 2;
G__34526.cljs$lang$applyTo = G__34526__3.cljs$lang$applyTo;
G__34526.cljs$core$IFn$_invoke$arity$0 = G__34526__0;
G__34526.cljs$core$IFn$_invoke$arity$1 = G__34526__1;
G__34526.cljs$core$IFn$_invoke$arity$2 = G__34526__2;
G__34526.cljs$core$IFn$_invoke$arity$variadic = G__34526__3.cljs$core$IFn$_invoke$arity$variadic;
return G__34526;
})()
});
});
var cljs$core$map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25068__auto___34532 = size;
var i_34533 = (0);
while(true){
if((i_34533 < n__25068__auto___34532)){
cljs.core.chunk_append(b,(function (){var G__34518 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34533);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34518) : f.call(null,G__34518));
})());

var G__34534 = (i_34533 + (1));
i_34533 = G__34534;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__34519 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34519) : f.call(null,G__34519));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var cljs$core$map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__34520 = cljs.core.first(s1);
var G__34521 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34520,G__34521) : f.call(null,G__34520,G__34521));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__34522 = cljs.core.first(s1);
var G__34523 = cljs.core.first(s2);
var G__34524 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34522,G__34523,G__34524) : f.call(null,G__34522,G__34523,G__34524));
})(),cljs$core$map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var cljs$core$map__5 = (function() { 
var G__34535__delegate = function (f,c1,c2,c3,colls){
var step = (function cljs$core$map_$_step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs$core$map_$_step(cljs$core$map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return cljs$core$map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__34472_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__34472_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__34535 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__34536__i = 0, G__34536__a = new Array(arguments.length -  4);
while (G__34536__i < G__34536__a.length) {G__34536__a[G__34536__i] = arguments[G__34536__i + 4]; ++G__34536__i;}
  colls = new cljs.core.IndexedSeq(G__34536__a,0);
} 
return G__34535__delegate.call(this,f,c1,c2,c3,colls);};
G__34535.cljs$lang$maxFixedArity = 4;
G__34535.cljs$lang$applyTo = (function (arglist__34537){
var f = cljs.core.first(arglist__34537);
arglist__34537 = cljs.core.next(arglist__34537);
var c1 = cljs.core.first(arglist__34537);
arglist__34537 = cljs.core.next(arglist__34537);
var c2 = cljs.core.first(arglist__34537);
arglist__34537 = cljs.core.next(arglist__34537);
var c3 = cljs.core.first(arglist__34537);
var colls = cljs.core.rest(arglist__34537);
return G__34535__delegate(f,c1,c2,c3,colls);
});
G__34535.cljs$core$IFn$_invoke$arity$variadic = G__34535__delegate;
return G__34535;
})()
;
cljs$core$map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$map__1.call(this,f);
case 2:
return cljs$core$map__2.call(this,f,c1);
case 3:
return cljs$core$map__3.call(this,f,c1,c2);
case 4:
return cljs$core$map__4.call(this,f,c1,c2,c3);
default:
var G__34538 = null;
if (arguments.length > 4) {
var G__34539__i = 0, G__34539__a = new Array(arguments.length -  4);
while (G__34539__i < G__34539__a.length) {G__34539__a[G__34539__i] = arguments[G__34539__i + 4]; ++G__34539__i;}
G__34538 = new cljs.core.IndexedSeq(G__34539__a,0);
}
return cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__34538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$map.cljs$lang$maxFixedArity = 4;
cljs$core$map.cljs$lang$applyTo = cljs$core$map__5.cljs$lang$applyTo;
cljs$core$map.cljs$core$IFn$_invoke$arity$1 = cljs$core$map__1;
cljs$core$map.cljs$core$IFn$_invoke$arity$2 = cljs$core$map__2;
cljs$core$map.cljs$core$IFn$_invoke$arity$3 = cljs$core$map__3;
cljs$core$map.cljs$core$IFn$_invoke$arity$4 = cljs$core$map__4;
cljs$core$map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$map__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$map;
})()
;
/**
 * Returns a lazy sequence of the first n items in coll, or all items if
 * there are fewer than n.  Returns a stateful transducer when
 * no collection is provided.
 */
cljs.core.take = (function() {
var cljs$core$take = null;
var cljs$core$take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__34548 = null;
var G__34548__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34548__1 = (function (result){
var G__34545 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34545) : rf.call(null,G__34545));
});
var G__34548__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__34546 = result;
var G__34547 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34546,G__34547) : rf.call(null,G__34546,G__34547));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__34548 = function(result,input){
switch(arguments.length){
case 0:
return G__34548__0.call(this);
case 1:
return G__34548__1.call(this,result);
case 2:
return G__34548__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34548.cljs$core$IFn$_invoke$arity$0 = G__34548__0;
G__34548.cljs$core$IFn$_invoke$arity$1 = G__34548__1;
G__34548.cljs$core$IFn$_invoke$arity$2 = G__34548__2;
return G__34548;
})()
;})(na))
});
});
var cljs$core$take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take__1.call(this,n);
case 2:
return cljs$core$take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take.cljs$core$IFn$_invoke$arity$1 = cljs$core$take__1;
cljs$core$take.cljs$core$IFn$_invoke$arity$2 = cljs$core$take__2;
return cljs$core$take;
})()
;
/**
 * Returns a lazy sequence of all but the first n items in coll.
 * Returns a stateful transducer when no collection is provided.
 */
cljs.core.drop = (function() {
var cljs$core$drop = null;
var cljs$core$drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__34555 = null;
var G__34555__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34555__1 = (function (result){
var G__34552 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34552) : rf.call(null,G__34552));
});
var G__34555__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__34553 = result;
var G__34554 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34553,G__34554) : rf.call(null,G__34553,G__34554));
}
});
G__34555 = function(result,input){
switch(arguments.length){
case 0:
return G__34555__0.call(this);
case 1:
return G__34555__1.call(this,result);
case 2:
return G__34555__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34555.cljs$core$IFn$_invoke$arity$0 = G__34555__0;
G__34555.cljs$core$IFn$_invoke$arity$1 = G__34555__1;
G__34555.cljs$core$IFn$_invoke$arity$2 = G__34555__2;
return G__34555;
})()
;})(na))
});
});
var cljs$core$drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__34556 = (n__$1 - (1));
var G__34557 = cljs.core.rest(s);
n__$1 = G__34556;
coll__$1 = G__34557;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
cljs$core$drop = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$drop__1.call(this,n);
case 2:
return cljs$core$drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop__1;
cljs$core$drop.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop__2;
return cljs$core$drop;
})()
;
/**
 * Return a lazy sequence of all but the last n (default 1) items in coll
 */
cljs.core.drop_last = (function() {
var cljs$core$drop_last = null;
var cljs$core$drop_last__1 = (function (s){
return cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var cljs$core$drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
cljs$core$drop_last = function(n,s){
switch(arguments.length){
case 1:
return cljs$core$drop_last__1.call(this,n);
case 2:
return cljs$core$drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_last__1;
cljs$core$drop_last.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_last__2;
return cljs$core$drop_last;
})()
;
/**
 * Returns a seq of the last n items in coll.  Depending on the type
 * of coll may be no better than linear time.  For vectors, see also subvec.
 */
cljs.core.take_last = (function cljs$core$take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__34560 = cljs.core.next(s);
var G__34561 = cljs.core.next(lead);
s = G__34560;
lead = G__34561;
continue;
} else {
return s;
}
break;
}
});
/**
 * Returns a lazy sequence of the items in coll starting from the
 * first item for which (pred item) returns logical false.  Returns a
 * stateful transducer when no collection is provided.
 */
cljs.core.drop_while = (function() {
var cljs$core$drop_while = null;
var cljs$core$drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__34574 = null;
var G__34574__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34574__1 = (function (result){
var G__34568 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34568) : rf.call(null,G__34568));
});
var G__34574__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__24171__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__24171__auto__)){
var G__34569 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34569) : pred.call(null,G__34569));
} else {
return and__24171__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__34570 = result;
var G__34571 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34570,G__34571) : rf.call(null,G__34570,G__34571));
}
});
G__34574 = function(result,input){
switch(arguments.length){
case 0:
return G__34574__0.call(this);
case 1:
return G__34574__1.call(this,result);
case 2:
return G__34574__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34574.cljs$core$IFn$_invoke$arity$0 = G__34574__0;
G__34574.cljs$core$IFn$_invoke$arity$1 = G__34574__1;
G__34574.cljs$core$IFn$_invoke$arity$2 = G__34574__2;
return G__34574;
})()
;})(da))
});
});
var cljs$core$drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__24171__auto__ = s;
if(and__24171__auto__){
var G__34573 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__34573) : pred__$1.call(null,G__34573));
} else {
return and__24171__auto__;
}
})())){
var G__34575 = pred__$1;
var G__34576 = cljs.core.rest(s);
pred__$1 = G__34575;
coll__$1 = G__34576;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
cljs$core$drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$drop_while__1.call(this,pred);
case 2:
return cljs$core$drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$drop_while__1;
cljs$core$drop_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$drop_while__2;
return cljs$core$drop_while;
})()
;
/**
 * Returns a lazy (infinite!) sequence of repetitions of the items in coll.
 */
cljs.core.cycle = (function cljs$core$cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cljs$core$cycle(s));
} else {
return null;
}
}),null,null));
});
/**
 * Returns a vector of [(take n coll) (drop n coll)]
 */
cljs.core.split_at = (function cljs$core$split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
 * Returns a lazy (infinite!, or length n if supplied) sequence of xs.
 */
cljs.core.repeat = (function() {
var cljs$core$repeat = null;
var cljs$core$repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var cljs$core$repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeat.cljs$core$IFn$_invoke$arity$1(x));
});
cljs$core$repeat = function(n,x){
switch(arguments.length){
case 1:
return cljs$core$repeat__1.call(this,n);
case 2:
return cljs$core$repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeat.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeat__1;
cljs$core$repeat.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeat__2;
return cljs$core$repeat;
})()
;
/**
 * Returns a lazy seq of n xs.
 */
cljs.core.replicate = (function cljs$core$replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
 * Takes a function of no args, presumably with side effects, and
 * returns an infinite (or length n if supplied) lazy sequence of calls
 * to it
 */
cljs.core.repeatedly = (function() {
var cljs$core$repeatedly = null;
var cljs$core$repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var cljs$core$repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
cljs$core$repeatedly = function(n,f){
switch(arguments.length){
case 1:
return cljs$core$repeatedly__1.call(this,n);
case 2:
return cljs$core$repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$1 = cljs$core$repeatedly__1;
cljs$core$repeatedly.cljs$core$IFn$_invoke$arity$2 = cljs$core$repeatedly__2;
return cljs$core$repeatedly;
})()
;
/**
 * Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
 */
cljs.core.iterate = (function cljs$core$iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return cljs$core$iterate(f,(function (){var G__34585 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34585) : f.call(null,G__34585));
})());
}),null,null)));
});
/**
 * Returns a lazy seq of the first item in each coll, then the second etc.
 * @param {...*} var_args
 */
cljs.core.interleave = (function() {
var cljs$core$interleave = null;
var cljs$core$interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),cljs$core$interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var cljs$core$interleave__3 = (function() { 
var G__34588__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs$core$interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__34588 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__34589__i = 0, G__34589__a = new Array(arguments.length -  2);
while (G__34589__i < G__34589__a.length) {G__34589__a[G__34589__i] = arguments[G__34589__i + 2]; ++G__34589__i;}
  colls = new cljs.core.IndexedSeq(G__34589__a,0);
} 
return G__34588__delegate.call(this,c1,c2,colls);};
G__34588.cljs$lang$maxFixedArity = 2;
G__34588.cljs$lang$applyTo = (function (arglist__34590){
var c1 = cljs.core.first(arglist__34590);
arglist__34590 = cljs.core.next(arglist__34590);
var c2 = cljs.core.first(arglist__34590);
var colls = cljs.core.rest(arglist__34590);
return G__34588__delegate(c1,c2,colls);
});
G__34588.cljs$core$IFn$_invoke$arity$variadic = G__34588__delegate;
return G__34588;
})()
;
cljs$core$interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$interleave__2.call(this,c1,c2);
default:
var G__34591 = null;
if (arguments.length > 2) {
var G__34592__i = 0, G__34592__a = new Array(arguments.length -  2);
while (G__34592__i < G__34592__a.length) {G__34592__a[G__34592__i] = arguments[G__34592__i + 2]; ++G__34592__i;}
G__34591 = new cljs.core.IndexedSeq(G__34592__a,0);
}
return cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__34591);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interleave.cljs$lang$maxFixedArity = 2;
cljs$core$interleave.cljs$lang$applyTo = cljs$core$interleave__3.cljs$lang$applyTo;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$2 = cljs$core$interleave__2;
cljs$core$interleave.cljs$core$IFn$_invoke$arity$variadic = cljs$core$interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$interleave;
})()
;
/**
 * Returns a lazy seq of the elements of coll separated by sep
 */
cljs.core.interpose = (function() {
var cljs$core$interpose = null;
var cljs$core$interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__34607 = null;
var G__34607__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34607__1 = (function (result){
var G__34600 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34600) : rf.call(null,G__34600));
});
var G__34607__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__34601 = result;
var G__34602 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34601,G__34602) : rf.call(null,G__34601,G__34602));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__34603 = sepr;
var G__34604 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34603,G__34604) : rf.call(null,G__34603,G__34604));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__34605 = result;
var G__34606 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34605,G__34606) : rf.call(null,G__34605,G__34606));
}
});
G__34607 = function(result,input){
switch(arguments.length){
case 0:
return G__34607__0.call(this);
case 1:
return G__34607__1.call(this,result);
case 2:
return G__34607__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34607.cljs$core$IFn$_invoke$arity$0 = G__34607__0;
G__34607.cljs$core$IFn$_invoke$arity$1 = G__34607__1;
G__34607.cljs$core$IFn$_invoke$arity$2 = G__34607__2;
return G__34607;
})()
;})(started))
});
});
var cljs$core$interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
cljs$core$interpose = function(sep,coll){
switch(arguments.length){
case 1:
return cljs$core$interpose__1.call(this,sep);
case 2:
return cljs$core$interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$interpose.cljs$core$IFn$_invoke$arity$1 = cljs$core$interpose__1;
cljs$core$interpose.cljs$core$IFn$_invoke$arity$2 = cljs$core$interpose__2;
return cljs$core$interpose;
})()
;
/**
 * Take a collection of collections, and return a lazy seq
 * of items from the inner collection
 */
cljs.core.flatten1 = (function cljs$core$flatten1(colls){
var cat = (function cljs$core$flatten1_$_cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cljs$core$flatten1_$_cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cljs$core$flatten1_$_cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
 * Returns the result of applying concat to the result of applying map
 * to f and colls.  Thus function f should return a collection. Returns
 * a transducer when no collections are provided
 * @param {...*} var_args
 */
cljs.core.mapcat = (function() {
var cljs$core$mapcat = null;
var cljs$core$mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var cljs$core$mapcat__2 = (function() { 
var G__34616__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__34616 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__34617__i = 0, G__34617__a = new Array(arguments.length -  1);
while (G__34617__i < G__34617__a.length) {G__34617__a[G__34617__i] = arguments[G__34617__i + 1]; ++G__34617__i;}
  colls = new cljs.core.IndexedSeq(G__34617__a,0);
} 
return G__34616__delegate.call(this,f,colls);};
G__34616.cljs$lang$maxFixedArity = 1;
G__34616.cljs$lang$applyTo = (function (arglist__34618){
var f = cljs.core.first(arglist__34618);
var colls = cljs.core.rest(arglist__34618);
return G__34616__delegate(f,colls);
});
G__34616.cljs$core$IFn$_invoke$arity$variadic = G__34616__delegate;
return G__34616;
})()
;
cljs$core$mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return cljs$core$mapcat__1.call(this,f);
default:
var G__34619 = null;
if (arguments.length > 1) {
var G__34620__i = 0, G__34620__a = new Array(arguments.length -  1);
while (G__34620__i < G__34620__a.length) {G__34620__a[G__34620__i] = arguments[G__34620__i + 1]; ++G__34620__i;}
G__34619 = new cljs.core.IndexedSeq(G__34620__a,0);
}
return cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__34619);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapcat.cljs$lang$maxFixedArity = 1;
cljs$core$mapcat.cljs$lang$applyTo = cljs$core$mapcat__2.cljs$lang$applyTo;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$1 = cljs$core$mapcat__1;
cljs$core$mapcat.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapcat;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.filter = (function() {
var cljs$core$filter = null;
var cljs$core$filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__34639 = null;
var G__34639__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__34639__1 = (function (result){
var G__34633 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__34633) : rf.call(null,G__34633));
});
var G__34639__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__34634 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34634) : pred.call(null,G__34634));
})())){
var G__34635 = result;
var G__34636 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__34635,G__34636) : rf.call(null,G__34635,G__34636));
} else {
return result;
}
});
G__34639 = function(result,input){
switch(arguments.length){
case 0:
return G__34639__0.call(this);
case 1:
return G__34639__1.call(this,result);
case 2:
return G__34639__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34639.cljs$core$IFn$_invoke$arity$0 = G__34639__0;
G__34639.cljs$core$IFn$_invoke$arity$1 = G__34639__1;
G__34639.cljs$core$IFn$_invoke$arity$2 = G__34639__2;
return G__34639;
})()
});
});
var cljs$core$filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__25068__auto___34640 = size;
var i_34641 = (0);
while(true){
if((i_34641 < n__25068__auto___34640)){
if(cljs.core.truth_((function (){var G__34637 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34641);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34637) : pred.call(null,G__34637));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_34641));
} else {
}

var G__34642 = (i_34641 + (1));
i_34641 = G__34642;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__34638 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34638) : pred.call(null,G__34638));
})())){
return cljs.core.cons(f,cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return cljs$core$filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
cljs$core$filter = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$filter__1.call(this,pred);
case 2:
return cljs$core$filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$filter.cljs$core$IFn$_invoke$arity$1 = cljs$core$filter__1;
cljs$core$filter.cljs$core$IFn$_invoke$arity$2 = cljs$core$filter__2;
return cljs$core$filter;
})()
;
/**
 * Returns a lazy sequence of the items in coll for which
 * (pred item) returns false. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.remove = (function() {
var cljs$core$remove = null;
var cljs$core$remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var cljs$core$remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
cljs$core$remove = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$remove__1.call(this,pred);
case 2:
return cljs$core$remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$remove.cljs$core$IFn$_invoke$arity$1 = cljs$core$remove__1;
cljs$core$remove.cljs$core$IFn$_invoke$arity$2 = cljs$core$remove__2;
return cljs$core$remove;
})()
;
/**
 * Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
 * branch? must be a fn of one arg that returns true if passed a node
 * that can have children (but may not).  children must be a fn of one
 * arg that returns a sequence of the children. Will only be called on
 * nodes for which branch? returns true. Root is the root node of the
 * tree.
 */
cljs.core.tree_seq = (function cljs$core$tree_seq(branch_QMARK_,children,root){
var walk = (function cljs$core$tree_seq_$_walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__34649 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__34649) : branch_QMARK_.call(null,G__34649));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(cljs$core$tree_seq_$_walk,cljs.core.array_seq([(function (){var G__34650 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__34650) : children.call(null,G__34650));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
 * Takes any nested combination of sequential things (lists, vectors,
 * etc.) and returns their contents as a single, flat sequence.
 * (flatten nil) returns nil.
 */
cljs.core.flatten = (function cljs$core$flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__34651_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__34651_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
 * Returns a new coll consisting of to-coll with all of the items of
 * from-coll conjoined. A transducer may be supplied.
 */
cljs.core.into = (function() {
var cljs$core$into = null;
var cljs$core$into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__34654 = to;
if(G__34654){
var bit__24850__auto__ = (G__34654.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24850__auto__) || (G__34654.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var cljs$core$into__3 = (function (to,xform,from){
if((function (){var G__34655 = to;
if(G__34655){
var bit__24850__auto__ = (G__34655.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__24850__auto__) || (G__34655.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
cljs$core$into = function(to,xform,from){
switch(arguments.length){
case 2:
return cljs$core$into__2.call(this,to,xform);
case 3:
return cljs$core$into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$into.cljs$core$IFn$_invoke$arity$2 = cljs$core$into__2;
cljs$core$into.cljs$core$IFn$_invoke$arity$3 = cljs$core$into__3;
return cljs$core$into;
})()
;
/**
 * Returns a vector consisting of the result of applying f to the
 * set of first items of each coll, followed by applying f to the set
 * of second items in each coll, until any one of the colls is
 * exhausted.  Any remaining items in other colls are ignored. Function
 * f should accept number-of-colls arguments.
 * @param {...*} var_args
 */
cljs.core.mapv = (function() {
var cljs$core$mapv = null;
var cljs$core$mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__34657 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34657) : f.call(null,G__34657));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var cljs$core$mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var cljs$core$mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var cljs$core$mapv__5 = (function() { 
var G__34658__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__34658 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__34659__i = 0, G__34659__a = new Array(arguments.length -  4);
while (G__34659__i < G__34659__a.length) {G__34659__a[G__34659__i] = arguments[G__34659__i + 4]; ++G__34659__i;}
  colls = new cljs.core.IndexedSeq(G__34659__a,0);
} 
return G__34658__delegate.call(this,f,c1,c2,c3,colls);};
G__34658.cljs$lang$maxFixedArity = 4;
G__34658.cljs$lang$applyTo = (function (arglist__34660){
var f = cljs.core.first(arglist__34660);
arglist__34660 = cljs.core.next(arglist__34660);
var c1 = cljs.core.first(arglist__34660);
arglist__34660 = cljs.core.next(arglist__34660);
var c2 = cljs.core.first(arglist__34660);
arglist__34660 = cljs.core.next(arglist__34660);
var c3 = cljs.core.first(arglist__34660);
var colls = cljs.core.rest(arglist__34660);
return G__34658__delegate(f,c1,c2,c3,colls);
});
G__34658.cljs$core$IFn$_invoke$arity$variadic = G__34658__delegate;
return G__34658;
})()
;
cljs$core$mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return cljs$core$mapv__2.call(this,f,c1);
case 3:
return cljs$core$mapv__3.call(this,f,c1,c2);
case 4:
return cljs$core$mapv__4.call(this,f,c1,c2,c3);
default:
var G__34661 = null;
if (arguments.length > 4) {
var G__34662__i = 0, G__34662__a = new Array(arguments.length -  4);
while (G__34662__i < G__34662__a.length) {G__34662__a[G__34662__i] = arguments[G__34662__i + 4]; ++G__34662__i;}
G__34661 = new cljs.core.IndexedSeq(G__34662__a,0);
}
return cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__34661);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$mapv.cljs$lang$maxFixedArity = 4;
cljs$core$mapv.cljs$lang$applyTo = cljs$core$mapv__5.cljs$lang$applyTo;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$2 = cljs$core$mapv__2;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$3 = cljs$core$mapv__3;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$4 = cljs$core$mapv__4;
cljs$core$mapv.cljs$core$IFn$_invoke$arity$variadic = cljs$core$mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$mapv;
})()
;
/**
 * Returns a vector of the items in coll for which
 * (pred item) returns true. pred must be free of side-effects.
 */
cljs.core.filterv = (function cljs$core$filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__34664 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__34664) : pred.call(null,G__34664));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
 * Returns a lazy sequence of lists of n items each, at offsets step
 * apart. If step is not supplied, defaults to n, i.e. the partitions
 * do not overlap. If a pad collection is supplied, use its elements as
 * necessary to complete last partition up to n items. In case there are
 * not enough padding elements, return a partition with less than n items.
 */
cljs.core.partition = (function() {
var cljs$core$partition = null;
var cljs$core$partition__2 = (function (n,coll){
return cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var cljs$core$partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,cljs$core$partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
cljs$core$partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return cljs$core$partition__2.call(this,n,step);
case 3:
return cljs$core$partition__3.call(this,n,step,pad);
case 4:
return cljs$core$partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition__2;
cljs$core$partition.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition__3;
cljs$core$partition.cljs$core$IFn$_invoke$arity$4 = cljs$core$partition__4;
return cljs$core$partition;
})()
;
/**
 * Returns the value in a nested associative structure,
 * where ks is a sequence of keys. Returns nil if the key is not present,
 * or the not-found value if supplied.
 */
cljs.core.get_in = (function() {
var cljs$core$get_in = null;
var cljs$core$get_in__2 = (function (m,ks){
return cljs$core$get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var cljs$core$get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__34679 = m__$1;
if(G__34679){
var bit__24857__auto__ = (G__34679.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__24857__auto__) || (G__34679.cljs$core$ILookup$)){
return true;
} else {
if((!G__34679.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__34679);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__34679);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__34680 = sentinel;
var G__34681 = m__$2;
var G__34682 = cljs.core.next(ks__$1);
sentinel = G__34680;
m__$1 = G__34681;
ks__$1 = G__34682;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
cljs$core$get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return cljs$core$get_in__2.call(this,m,ks);
case 3:
return cljs$core$get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$get_in.cljs$core$IFn$_invoke$arity$2 = cljs$core$get_in__2;
cljs$core$get_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$get_in__3;
return cljs$core$get_in;
})()
;
/**
 * Associates a value in a nested associative structure, where ks is a
 * sequence of keys and v is the new value and returns a new nested structure.
 * If any levels do not exist, hash-maps will be created.
 */
cljs.core.assoc_in = (function cljs$core$assoc_in(m,p__34683,v){
var vec__34688 = p__34683;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34688,(0),null);
var ks = cljs.core.nthnext(vec__34688,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
 * 'Updates' a value in a nested associative structure, where ks is a
 * sequence of keys and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * nested structure.  If any levels do not exist, hash-maps will be
 * created.
 * @param {...*} var_args
 */
cljs.core.update_in = (function() {
var cljs$core$update_in = null;
var cljs$core$update_in__3 = (function (m,p__34689,f){
var vec__34727 = p__34689;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34727,(0),null);
var ks = cljs.core.nthnext(vec__34727,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34728 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34728) : f.call(null,G__34728));
})());
}
});
var cljs$core$update_in__4 = (function (m,p__34690,f,a){
var vec__34729 = p__34690;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34729,(0),null);
var ks = cljs.core.nthnext(vec__34729,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34730 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34731 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34730,G__34731) : f.call(null,G__34730,G__34731));
})());
}
});
var cljs$core$update_in__5 = (function (m,p__34691,f,a,b){
var vec__34732 = p__34691;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34732,(0),null);
var ks = cljs.core.nthnext(vec__34732,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34733 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34734 = a;
var G__34735 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34733,G__34734,G__34735) : f.call(null,G__34733,G__34734,G__34735));
})());
}
});
var cljs$core$update_in__6 = (function (m,p__34692,f,a,b,c){
var vec__34736 = p__34692;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34736,(0),null);
var ks = cljs.core.nthnext(vec__34736,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs$core$update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34737 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34738 = a;
var G__34739 = b;
var G__34740 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34737,G__34738,G__34739,G__34740) : f.call(null,G__34737,G__34738,G__34739,G__34740));
})());
}
});
var cljs$core$update_in__7 = (function() { 
var G__34742__delegate = function (m,p__34693,f,a,b,c,args){
var vec__34741 = p__34693;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34741,(0),null);
var ks = cljs.core.nthnext(vec__34741,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs$core$update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__34742 = function (m,p__34693,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__34743__i = 0, G__34743__a = new Array(arguments.length -  6);
while (G__34743__i < G__34743__a.length) {G__34743__a[G__34743__i] = arguments[G__34743__i + 6]; ++G__34743__i;}
  args = new cljs.core.IndexedSeq(G__34743__a,0);
} 
return G__34742__delegate.call(this,m,p__34693,f,a,b,c,args);};
G__34742.cljs$lang$maxFixedArity = 6;
G__34742.cljs$lang$applyTo = (function (arglist__34744){
var m = cljs.core.first(arglist__34744);
arglist__34744 = cljs.core.next(arglist__34744);
var p__34693 = cljs.core.first(arglist__34744);
arglist__34744 = cljs.core.next(arglist__34744);
var f = cljs.core.first(arglist__34744);
arglist__34744 = cljs.core.next(arglist__34744);
var a = cljs.core.first(arglist__34744);
arglist__34744 = cljs.core.next(arglist__34744);
var b = cljs.core.first(arglist__34744);
arglist__34744 = cljs.core.next(arglist__34744);
var c = cljs.core.first(arglist__34744);
var args = cljs.core.rest(arglist__34744);
return G__34742__delegate(m,p__34693,f,a,b,c,args);
});
G__34742.cljs$core$IFn$_invoke$arity$variadic = G__34742__delegate;
return G__34742;
})()
;
cljs$core$update_in = function(m,p__34693,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return cljs$core$update_in__3.call(this,m,p__34693,f);
case 4:
return cljs$core$update_in__4.call(this,m,p__34693,f,a);
case 5:
return cljs$core$update_in__5.call(this,m,p__34693,f,a,b);
case 6:
return cljs$core$update_in__6.call(this,m,p__34693,f,a,b,c);
default:
var G__34745 = null;
if (arguments.length > 6) {
var G__34746__i = 0, G__34746__a = new Array(arguments.length -  6);
while (G__34746__i < G__34746__a.length) {G__34746__a[G__34746__i] = arguments[G__34746__i + 6]; ++G__34746__i;}
G__34745 = new cljs.core.IndexedSeq(G__34746__a,0);
}
return cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__34693,f,a,b,c, G__34745);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update_in.cljs$lang$maxFixedArity = 6;
cljs$core$update_in.cljs$lang$applyTo = cljs$core$update_in__7.cljs$lang$applyTo;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$3 = cljs$core$update_in__3;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$4 = cljs$core$update_in__4;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$5 = cljs$core$update_in__5;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$6 = cljs$core$update_in__6;
cljs$core$update_in.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update_in;
})()
;
/**
 * 'Updates' a value in an associative structure, where k is a
 * key and f is a function that will take the old value
 * and any supplied args and return the new value, and returns a new
 * structure.  If the key does not exist, nil is passed as the old value.
 * @param {...*} var_args
 */
cljs.core.update = (function() {
var cljs$core$update = null;
var cljs$core$update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34757 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34757) : f.call(null,G__34757));
})());
});
var cljs$core$update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34758 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34759 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34758,G__34759) : f.call(null,G__34758,G__34759));
})());
});
var cljs$core$update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34760 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34761 = x;
var G__34762 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34760,G__34761,G__34762) : f.call(null,G__34760,G__34761,G__34762));
})());
});
var cljs$core$update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__34763 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__34764 = x;
var G__34765 = y;
var G__34766 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__34763,G__34764,G__34765,G__34766) : f.call(null,G__34763,G__34764,G__34765,G__34766));
})());
});
var cljs$core$update__7 = (function() { 
var G__34767__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__34767 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__34768__i = 0, G__34768__a = new Array(arguments.length -  6);
while (G__34768__i < G__34768__a.length) {G__34768__a[G__34768__i] = arguments[G__34768__i + 6]; ++G__34768__i;}
  more = new cljs.core.IndexedSeq(G__34768__a,0);
} 
return G__34767__delegate.call(this,m,k,f,x,y,z,more);};
G__34767.cljs$lang$maxFixedArity = 6;
G__34767.cljs$lang$applyTo = (function (arglist__34769){
var m = cljs.core.first(arglist__34769);
arglist__34769 = cljs.core.next(arglist__34769);
var k = cljs.core.first(arglist__34769);
arglist__34769 = cljs.core.next(arglist__34769);
var f = cljs.core.first(arglist__34769);
arglist__34769 = cljs.core.next(arglist__34769);
var x = cljs.core.first(arglist__34769);
arglist__34769 = cljs.core.next(arglist__34769);
var y = cljs.core.first(arglist__34769);
arglist__34769 = cljs.core.next(arglist__34769);
var z = cljs.core.first(arglist__34769);
var more = cljs.core.rest(arglist__34769);
return G__34767__delegate(m,k,f,x,y,z,more);
});
G__34767.cljs$core$IFn$_invoke$arity$variadic = G__34767__delegate;
return G__34767;
})()
;
cljs$core$update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return cljs$core$update__3.call(this,m,k,f);
case 4:
return cljs$core$update__4.call(this,m,k,f,x);
case 5:
return cljs$core$update__5.call(this,m,k,f,x,y);
case 6:
return cljs$core$update__6.call(this,m,k,f,x,y,z);
default:
var G__34770 = null;
if (arguments.length > 6) {
var G__34771__i = 0, G__34771__a = new Array(arguments.length -  6);
while (G__34771__i < G__34771__a.length) {G__34771__a[G__34771__i] = arguments[G__34771__i + 6]; ++G__34771__i;}
G__34770 = new cljs.core.IndexedSeq(G__34771__a,0);
}
return cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__34770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$update.cljs$lang$maxFixedArity = 6;
cljs$core$update.cljs$lang$applyTo = cljs$core$update__7.cljs$lang$applyTo;
cljs$core$update.cljs$core$IFn$_invoke$arity$3 = cljs$core$update__3;
cljs$core$update.cljs$core$IFn$_invoke$arity$4 = cljs$core$update__4;
cljs$core$update.cljs$core$IFn$_invoke$arity$5 = cljs$core$update__5;
cljs$core$update.cljs$core$IFn$_invoke$arity$6 = cljs$core$update__6;
cljs$core$update.cljs$core$IFn$_invoke$arity$variadic = cljs$core$update__7.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function cljs$core$__GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function cljs$core$pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function cljs$core$pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function cljs$core$pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function cljs$core$pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function cljs$core$tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function cljs$core$new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__34772 = (ll - (5));
var G__34773 = r;
ll = G__34772;
ret = G__34773;
continue;
}
break;
}
});
cljs.core.push_tail = (function cljs$core$push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = cljs$core$push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function cljs$core$vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function cljs$core$first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__34778 = cljs.core.pv_aget(node,(0));
var G__34779 = (level - (5));
node = G__34778;
level = G__34779;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function cljs$core$unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__34780 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__34781 = (level - (5));
node = G__34780;
level = G__34781;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function cljs$core$array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function cljs$core$do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,cljs$core$do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function cljs$core$pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function cljs$core$__GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function cljs$core$ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__34791 = init__$2;
var G__34792 = (j + i);
var G__34793 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34791,G__34792,G__34793) : f.call(null,G__34791,G__34792,G__34793));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__34804 = (j + (1));
var G__34805 = init__$3;
j = G__34804;
init__$2 = G__34805;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34794 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34794) : cljs.core.deref.call(null,G__34794));
} else {
var G__34806 = (i + len);
var G__34807 = init__$2;
i = G__34806;
init__$1 = G__34807;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__34795 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__34795) : cljs.core.tv_editable_root.call(null,G__34795));
})(),(function (){var G__34796 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__34796) : cljs.core.tv_editable_tail.call(null,G__34796));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__34797 = init__$2;
var G__34798 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34797,G__34798) : f.call(null,G__34797,G__34798));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__34808 = (j + (1));
var G__34809 = init__$3;
j = G__34808;
init__$2 = G__34809;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34799 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34799) : cljs.core.deref.call(null,G__34799));
} else {
var G__34810 = (i + len);
var G__34811 = init__$2;
i = G__34810;
init__$1 = G__34811;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__34800 = coll__$1;
var G__34801 = cljs.core.first_array_for_longvec(coll__$1);
var G__34802 = (0);
var G__34803 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34800,G__34801,G__34802,G__34803) : cljs.core.chunked_seq.call(null,G__34800,G__34801,G__34802,G__34803));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__25068__auto___34812 = len;
var i_34813 = (0);
while(true){
if((i_34813 < n__25068__auto___34812)){
(new_tail[i_34813] = (self__.tail[i_34813]));

var G__34814 = (i_34813 + (1));
i_34813 = G__34814;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__34815 = null;
var G__34815__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__34815__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__34815 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34815__2.call(this,self__,k);
case 3:
return G__34815__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34815.cljs$core$IFn$_invoke$arity$2 = G__34815__2;
G__34815.cljs$core$IFn$_invoke$arity$3 = G__34815__3;
return G__34815;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args34790){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34790)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function cljs$core$__GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__34816 = (i + (1));
var G__34817 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__34816;
out = G__34817;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Creates a new vector containing the contents of coll. JavaScript arrays
 * will be aliased and should not be modified.
 */
cljs.core.vec = (function cljs$core$vec(coll){
if(cljs.core.array_QMARK_(coll)){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
 * Creates a new vector containing the args.
 * @param {...*} var_args
 */
cljs.core.vector = (function() { 
var cljs$core$vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var cljs$core$vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34818__i = 0, G__34818__a = new Array(arguments.length -  0);
while (G__34818__i < G__34818__a.length) {G__34818__a[G__34818__i] = arguments[G__34818__i + 0]; ++G__34818__i;}
  args = new cljs.core.IndexedSeq(G__34818__a,0);
} 
return cljs$core$vector__delegate.call(this,args);};
cljs$core$vector.cljs$lang$maxFixedArity = 0;
cljs$core$vector.cljs$lang$applyTo = (function (arglist__34819){
var args = cljs.core.seq(arglist__34819);
return cljs$core$vector__delegate(args);
});
cljs$core$vector.cljs$core$IFn$_invoke$arity$variadic = cljs$core$vector__delegate;
return cljs$core$vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__34820 = self__.vec;
var G__34821 = self__.node;
var G__34822 = self__.i;
var G__34823 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34820,G__34821,G__34822,G__34823) : cljs.core.chunked_seq.call(null,G__34820,G__34821,G__34822,G__34823));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__34824 = self__.vec;
var G__34825 = (self__.i + self__.off);
var G__34826 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34824,G__34825,G__34826) : cljs.core.subvec.call(null,G__34824,G__34825,G__34826));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__34827 = self__.vec;
var G__34828 = (self__.i + self__.off);
var G__34829 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__34827,G__34828,G__34829) : cljs.core.subvec.call(null,G__34827,G__34828,G__34829));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__34830 = self__.vec;
var G__34831 = self__.node;
var G__34832 = self__.i;
var G__34833 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34830,G__34831,G__34832,G__34833) : cljs.core.chunked_seq.call(null,G__34830,G__34831,G__34832,G__34833));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__34834 = self__.vec;
var G__34835 = cljs.core.unchecked_array_for(self__.vec,end);
var G__34836 = end;
var G__34837 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34834,G__34835,G__34836,G__34837) : cljs.core.chunked_seq.call(null,G__34834,G__34835,G__34836,G__34837));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__34838 = self__.vec;
var G__34839 = self__.node;
var G__34840 = self__.i;
var G__34841 = self__.off;
var G__34842 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__34838,G__34839,G__34840,G__34841,G__34842) : cljs.core.chunked_seq.call(null,G__34838,G__34839,G__34840,G__34841,G__34842));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__34843 = self__.vec;
var G__34844 = cljs.core.unchecked_array_for(self__.vec,end);
var G__34845 = end;
var G__34846 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__34843,G__34844,G__34845,G__34846) : cljs.core.chunked_seq.call(null,G__34843,G__34844,G__34845,G__34846));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function cljs$core$__GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.chunked_seq = (function() {
var cljs$core$chunked_seq = null;
var cljs$core$chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var cljs$core$chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var cljs$core$chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
cljs$core$chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return cljs$core$chunked_seq__3.call(this,vec,node,i);
case 4:
return cljs$core$chunked_seq__4.call(this,vec,node,i,off);
case 5:
return cljs$core$chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$chunked_seq__3;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$chunked_seq__4;
cljs$core$chunked_seq.cljs$core$IFn$_invoke$arity$5 = cljs$core$chunked_seq__5;
return cljs$core$chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167666463;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var i = self__.start;
var j = (0);
var init__$1 = init;
while(true){
if((i < self__.end)){
var init__$2 = (function (){var G__34848 = init__$1;
var G__34849 = j;
var G__34850 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34848,G__34849,G__34850) : f.call(null,G__34848,G__34849,G__34850));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34851 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34851) : cljs.core.deref.call(null,G__34851));
} else {
var G__34873 = (i + (1));
var G__34874 = (j + (1));
var G__34875 = init__$2;
i = G__34873;
j = G__34874;
init__$1 = G__34875;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__34852 = self__.meta;
var G__34853 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__34854 = self__.start;
var G__34855 = (function (){var x__24495__auto__ = self__.end;
var y__24496__auto__ = (v_pos + (1));
return ((x__24495__auto__ > y__24496__auto__) ? x__24495__auto__ : y__24496__auto__);
})();
var G__34856 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34852,G__34853,G__34854,G__34855,G__34856) : cljs.core.build_subvec.call(null,G__34852,G__34853,G__34854,G__34855,G__34856));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__34857 = self__.meta;
var G__34858 = self__.v;
var G__34859 = self__.start;
var G__34860 = (self__.end - (1));
var G__34861 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34857,G__34858,G__34859,G__34860,G__34861) : cljs.core.build_subvec.call(null,G__34857,G__34858,G__34859,G__34860,G__34861));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function cljs$core$subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return cljs$core$subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__34863 = meta__$1;
var G__34864 = self__.v;
var G__34865 = self__.start;
var G__34866 = self__.end;
var G__34867 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34863,G__34864,G__34865,G__34866,G__34867) : cljs.core.build_subvec.call(null,G__34863,G__34864,G__34865,G__34866,G__34867));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__34868 = self__.meta;
var G__34869 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__34870 = self__.start;
var G__34871 = (self__.end + (1));
var G__34872 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__34868,G__34869,G__34870,G__34871,G__34872) : cljs.core.build_subvec.call(null,G__34868,G__34869,G__34870,G__34871,G__34872));
});

cljs.core.Subvec.prototype.call = (function() {
var G__34876 = null;
var G__34876__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__34876__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__34876 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34876__2.call(this,self__,k);
case 3:
return G__34876__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34876.cljs$core$IFn$_invoke$arity$2 = G__34876__2;
G__34876.cljs$core$IFn$_invoke$arity$3 = G__34876__3;
return G__34876;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args34847){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34847)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function cljs$core$__GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.build_subvec = (function cljs$core$build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__34877 = meta;
var G__34878 = v.v;
var G__34879 = (v.start + start);
var G__34880 = (v.start + end);
var G__34881 = __hash;
meta = G__34877;
v = G__34878;
start = G__34879;
end = G__34880;
__hash = G__34881;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
 * Returns a persistent vector of the items in vector from
 * start (inclusive) to end (exclusive).  If end is not supplied,
 * defaults to (count vector). This operation is O(1) and very fast, as
 * the resulting vector shares structure with the original and no
 * trimming is done.
 */
cljs.core.subvec = (function() {
var cljs$core$subvec = null;
var cljs$core$subvec__2 = (function (v,start){
return cljs$core$subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var cljs$core$subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
cljs$core$subvec = function(v,start,end){
switch(arguments.length){
case 2:
return cljs$core$subvec__2.call(this,v,start);
case 3:
return cljs$core$subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subvec.cljs$core$IFn$_invoke$arity$2 = cljs$core$subvec__2;
cljs$core$subvec.cljs$core$IFn$_invoke$arity$3 = cljs$core$subvec__3;
return cljs$core$subvec;
})()
;
cljs.core.tv_ensure_editable = (function cljs$core$tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function cljs$core$tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj34888 = {};
return obj34888;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function cljs$core$tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function cljs$core$tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return cljs$core$tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function cljs$core$tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = cljs$core$tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function cljs$core$unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__34896 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__34897 = (level - (5));
node = G__34896;
level = G__34897;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__34901 = null;
var G__34901__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34901__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34901 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34901__2.call(this,self__,k);
case 3:
return G__34901__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34901.cljs$core$IFn$_invoke$arity$2 = G__34901__2;
G__34901.cljs$core$IFn$_invoke$arity$3 = G__34901__3;
return G__34901;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args34898){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34898)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function cljs$core$go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,cljs$core$go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function cljs$core$__GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function cljs$core$__GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__24183__auto__ = self__.front;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24183__auto__ = self__.rear;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function cljs$core$__GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function cljs$core$__GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
 * Assumes y is a map. Returns true if x equals y, otherwise returns
 * false.
 */
cljs.core.equiv_map = (function cljs$core$equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function cljs$core$scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__34902 = (i + incr);
i = G__34902;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function cljs$core$obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function cljs$core$obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__34903 = (i + (1));
var G__34904 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__34903;
out = G__34904;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function cljs$core$obj_clone(obj,ks){
var new_obj = (function (){var obj34908 = {};
return obj34908;
})();
var l = ks.length;
var i_34909 = (0);
while(true){
if((i_34909 < l)){
var k_34910 = (ks[i_34909]);
(new_obj[k_34910] = (obj[k_34910]));

var G__34911 = (i_34909 + (1));
i_34909 = G__34911;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24171__auto__ = (function (){var G__34915 = k;
return goog.isString(G__34915);
})();
if(cljs.core.truth_(and__24171__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24171__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__34916 = init__$1;
var G__34917 = k;
var G__34918 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34916,G__34917,G__34918) : f.call(null,G__34916,G__34917,G__34918));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34919 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34919) : cljs.core.deref.call(null,G__34919));
} else {
var G__34925 = cljs.core.rest(keys__$1);
var G__34926 = init__$2;
keys__$1 = G__34925;
init__$1 = G__34926;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24171__auto__ = (function (){var G__34921 = k;
return goog.isString(G__34921);
})();
if(cljs.core.truth_(and__24171__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24171__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__34922 = k;
return goog.isString(G__34922);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__24171__auto__ = (function (){var G__34924 = k;
return goog.isString(G__34924);
})();
if(cljs.core.truth_(and__24171__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__24171__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__34912_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__34912_SHARP_,(self__.strobj[p1__34912_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__34927 = null;
var G__34927__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34927__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34927 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34927__2.call(this,self__,k);
case 3:
return G__34927__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34927.cljs$core$IFn$_invoke$arity$2 = G__34927__2;
G__34927.cljs$core$IFn$_invoke$arity$3 = G__34927__3;
return G__34927;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args34913){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34913)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function cljs$core$__GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj34929 = {};
return obj34929;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__34930 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34930,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34930,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function cljs$core$__GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function cljs$core$es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function cljs$core$__GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function cljs$core$es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function cljs$core$array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__34931 = (i + (2));
i = G__34931;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function cljs$core$array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__34932 = (i + (2));
i = G__34932;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function cljs$core$array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__34933 = (i + (2));
i = G__34933;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function cljs$core$array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__34934 = (i + (2));
i = G__34934;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function cljs$core$array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__34935 = (i + (2));
i = G__34935;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function cljs$core$array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__24183__auto__ = (function (){var G__34939 = k;
return goog.isString(G__34939);
})();
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function cljs$core$array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_34940 = (0);
while(true){
if((i_34940 < l)){
(narr[i_34940] = (arr[i_34940]));

var G__34941 = (i_34940 + (1));
i_34940 = G__34941;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function cljs$core$__GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.persistent_array_map_seq = (function cljs$core$persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function cljs$core$__GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34943 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__34943) : cljs.core.keys.call(null,G__34943));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__34944 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__34944) : cljs.core.vals.call(null,G__34944));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__34945 = cljs.core.seq(coll);
var chunk__34946 = null;
var count__34947 = (0);
var i__34948 = (0);
while(true){
if((i__34948 < count__34947)){
var vec__34949 = chunk__34946.cljs$core$IIndexed$_nth$arity$2(null,i__34948);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34949,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34949,(1),null);
var G__34950_34963 = v;
var G__34951_34964 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34950_34963,G__34951_34964) : f.call(null,G__34950_34963,G__34951_34964));

var G__34965 = seq__34945;
var G__34966 = chunk__34946;
var G__34967 = count__34947;
var G__34968 = (i__34948 + (1));
seq__34945 = G__34965;
chunk__34946 = G__34966;
count__34947 = G__34967;
i__34948 = G__34968;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__34945);
if(temp__4126__auto__){
var seq__34945__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__34945__$1)){
var c__24968__auto__ = cljs.core.chunk_first(seq__34945__$1);
var G__34969 = cljs.core.chunk_rest(seq__34945__$1);
var G__34970 = c__24968__auto__;
var G__34971 = cljs.core.count(c__24968__auto__);
var G__34972 = (0);
seq__34945 = G__34969;
chunk__34946 = G__34970;
count__34947 = G__34971;
i__34948 = G__34972;
continue;
} else {
var vec__34952 = cljs.core.first(seq__34945__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34952,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34952,(1),null);
var G__34953_34973 = v;
var G__34954_34974 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__34953_34973,G__34954_34974) : f.call(null,G__34953_34973,G__34954_34974));

var G__34975 = cljs.core.next(seq__34945__$1);
var G__34976 = null;
var G__34977 = (0);
var G__34978 = (0);
seq__34945 = G__34975;
chunk__34946 = G__34976;
count__34947 = G__34977;
i__34948 = G__34978;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__34955 = init__$1;
var G__34956 = (self__.arr[i]);
var G__34957 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__34955,G__34956,G__34957) : f.call(null,G__34955,G__34956,G__34957));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__34958 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34958) : cljs.core.deref.call(null,G__34958));
} else {
var G__34979 = (i + (2));
var G__34980 = init__$2;
i = G__34979;
init__$1 = G__34980;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__34959 = other;
if(G__34959){
var bit__24850__auto__ = (G__34959.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__24850__auto__) || (G__34959.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__34981 = (i + (2));
i = G__34981;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj34961 = {};
return obj34961;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__34982 = (s + (2));
var G__34983 = d;
s = G__34982;
d = G__34983;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__34984 = (s + (2));
var G__34985 = (d + (2));
s = G__34984;
d = G__34985;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__34962 = cljs.core.aclone(self__.arr);
(G__34962[(idx + (1))] = v);

return G__34962;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__34986 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__34987 = cljs.core.next(es);
ret = G__34986;
es = G__34987;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__34988 = null;
var G__34988__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__34988__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__34988 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__34988__2.call(this,self__,k);
case 3:
return G__34988__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__34988.cljs$core$IFn$_invoke$arity$2 = G__34988__2;
G__34988.cljs$core$IFn$_invoke$arity$3 = G__34988__3;
return G__34988;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args34942){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34942)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function cljs$core$__GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__34989 = (i + (2));
var G__34990 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__34989;
ret = G__34990;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__34991_34999 = self__.arr;
G__34991_34999.pop();

G__34991_34999.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__34992 = self__.len;
var G__34993 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__34992,G__34993) : cljs.core.array__GT_transient_hash_map.call(null,G__34992,G__34993));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__34994 = o;
if(G__34994){
var bit__24857__auto__ = (G__34994.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24857__auto__) || (G__34994.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__34994.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34994);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__34994);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__34995 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34995) : cljs.core.key.call(null,G__34995));
})(),(function (){var G__34996 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34996) : cljs.core.val.call(null,G__34996));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__35000 = cljs.core.next(es);
var G__35001 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__34997 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__34997) : cljs.core.key.call(null,G__34997));
})(),(function (){var G__34998 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__34998) : cljs.core.val.call(null,G__34998));
})());
es = G__35000;
tcoll__$2 = G__35001;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function cljs$core$__GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function cljs$core$array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__35002 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__35003 = (i + (2));
out = G__35002;
i = G__35003;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function cljs$core$__GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function cljs$core$key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function cljs$core$mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var cljs$core$clone_and_set = null;
var cljs$core$clone_and_set__3 = (function (arr,i,a){
var G__35006 = cljs.core.aclone(arr);
(G__35006[i] = a);

return G__35006;
});
var cljs$core$clone_and_set__5 = (function (arr,i,a,j,b){
var G__35007 = cljs.core.aclone(arr);
(G__35007[i] = a);

(G__35007[j] = b);

return G__35007;
});
cljs$core$clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return cljs$core$clone_and_set__3.call(this,arr,i,a);
case 5:
return cljs$core$clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$3 = cljs$core$clone_and_set__3;
cljs$core$clone_and_set.cljs$core$IFn$_invoke$arity$5 = cljs$core$clone_and_set__5;
return cljs$core$clone_and_set;
})()
;
cljs.core.remove_pair = (function cljs$core$remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function cljs$core$bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function cljs$core$bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var cljs$core$edit_and_set = null;
var cljs$core$edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var cljs$core$edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
cljs$core$edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return cljs$core$edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return cljs$core$edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$4 = cljs$core$edit_and_set__4;
cljs$core$edit_and_set.cljs$core$IFn$_invoke$arity$6 = cljs$core$edit_and_set__6;
return cljs$core$edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function cljs$core$inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__35012 = init__$1;
var G__35013 = k;
var G__35014 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35012,G__35013,G__35014) : f.call(null,G__35012,G__35013,G__35014));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35015 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35015) : cljs.core.deref.call(null,G__35015));
} else {
var G__35016 = (i + (2));
var G__35017 = init__$2;
i = G__35016;
init__$1 = G__35017;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35018 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__35018) : cljs.core.create_inode_seq.call(null,G__35018));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_35032 = (0);
var j_35033 = (0);
while(true){
if((i_35032 < (32))){
if((((self__.bitmap >>> i_35032) & (1)) === (0))){
var G__35034 = (i_35032 + (1));
var G__35035 = j_35033;
i_35032 = G__35034;
j_35033 = G__35035;
continue;
} else {
(nodes[i_35032] = ((!(((self__.arr[j_35033]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_35033])),(self__.arr[j_35033]),(self__.arr[(j_35033 + (1))]),added_leaf_QMARK_):(self__.arr[(j_35033 + (1))])));

var G__35036 = (i_35032 + (1));
var G__35037 = (j_35033 + (2));
i_35032 = G__35036;
j_35033 = G__35037;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__35019 = edit__$1;
var G__35020 = (shift + (5));
var G__35021 = key_or_nil;
var G__35022 = val_or_node;
var G__35023 = hash;
var G__35024 = key;
var G__35025 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__35019,G__35020,G__35021,G__35022,G__35023,G__35024,G__35025) : cljs.core.create_node.call(null,G__35019,G__35020,G__35021,G__35022,G__35023,G__35024,G__35025));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_35038 = (0);
var j_35039 = (0);
while(true){
if((i_35038 < (32))){
if((((self__.bitmap >>> i_35038) & (1)) === (0))){
var G__35040 = (i_35038 + (1));
var G__35041 = j_35039;
i_35038 = G__35040;
j_35039 = G__35041;
continue;
} else {
(nodes[i_35038] = ((!(((self__.arr[j_35039]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_35039])),(self__.arr[j_35039]),(self__.arr[(j_35039 + (1))]),added_leaf_QMARK_):(self__.arr[(j_35039 + (1))])));

var G__35042 = (i_35038 + (1));
var G__35043 = (j_35039 + (2));
i_35038 = G__35042;
j_35039 = G__35043;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__35026 = (shift + (5));
var G__35027 = key_or_nil;
var G__35028 = val_or_node;
var G__35029 = hash;
var G__35030 = key;
var G__35031 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__35026,G__35027,G__35028,G__35029,G__35030,G__35031) : cljs.core.create_node.call(null,G__35026,G__35027,G__35028,G__35029,G__35030,G__35031));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function cljs$core$__GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function cljs$core$pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__35044 = (i + (1));
var G__35045 = (j + (2));
var G__35046 = (bitmap | ((1) << i));
i = G__35044;
j = G__35045;
bitmap = G__35046;
continue;
} else {
var G__35047 = (i + (1));
var G__35048 = j;
var G__35049 = bitmap;
i = G__35047;
j = G__35048;
bitmap = G__35049;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35050 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__35050) : cljs.core.create_array_node_seq.call(null,G__35050));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35051 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35051) : cljs.core.deref.call(null,G__35051));
} else {
var G__35052 = (i + (1));
var G__35053 = init__$2;
i = G__35052;
init__$1 = G__35053;
continue;
}
} else {
var G__35054 = (i + (1));
var G__35055 = init__$1;
i = G__35054;
init__$1 = G__35055;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function cljs$core$__GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function cljs$core$hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__35056 = (i + (2));
i = G__35056;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__35057 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__35057) : cljs.core.create_inode_seq.call(null,G__35057));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function cljs$core$__GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var cljs$core$create_node = null;
var cljs$core$create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var cljs$core$create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
cljs$core$create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return cljs$core$create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return cljs$core$create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_node.cljs$core$IFn$_invoke$arity$6 = cljs$core$create_node__6;
cljs$core$create_node.cljs$core$IFn$_invoke$arity$7 = cljs$core$create_node__7;
return cljs$core$create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__35058 = self__.nodes;
var G__35059 = (self__.i + (2));
var G__35060 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__35058,G__35059,G__35060) : cljs.core.create_inode_seq.call(null,G__35058,G__35059,G__35060));
} else {
var G__35061 = self__.nodes;
var G__35062 = self__.i;
var G__35063 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__35061,G__35062,G__35063) : cljs.core.create_inode_seq.call(null,G__35061,G__35062,G__35063));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function cljs$core$__GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.create_inode_seq = (function() {
var cljs$core$create_inode_seq = null;
var cljs$core$create_inode_seq__1 = (function (nodes){
return cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var cljs$core$create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__35067 = (j + (2));
j = G__35067;
continue;
}
} else {
var G__35068 = (j + (2));
j = G__35068;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
cljs$core$create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_inode_seq__1.call(this,nodes);
case 3:
return cljs$core$create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_inode_seq__1;
cljs$core$create_inode_seq.cljs$core$IFn$_invoke$arity$3 = cljs$core$create_inode_seq__3;
return cljs$core$create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__35069 = null;
var G__35070 = self__.nodes;
var G__35071 = self__.i;
var G__35072 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__35069,G__35070,G__35071,G__35072) : cljs.core.create_array_node_seq.call(null,G__35069,G__35070,G__35071,G__35072));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function cljs$core$__GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var cljs$core$create_array_node_seq = null;
var cljs$core$create_array_node_seq__1 = (function (nodes){
return cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var cljs$core$create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__35077 = (j + (1));
j = G__35077;
continue;
}
} else {
var G__35078 = (j + (1));
j = G__35078;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
cljs$core$create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return cljs$core$create_array_node_seq__1.call(this,meta);
case 4:
return cljs$core$create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = cljs$core$create_array_node_seq__1;
cljs$core$create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = cljs$core$create_array_node_seq__4;
return cljs$core$create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35080 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35080) : cljs.core.keys.call(null,G__35080));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35081 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35081) : cljs.core.vals.call(null,G__35081));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35082 = cljs.core.seq(coll);
var chunk__35083 = null;
var count__35084 = (0);
var i__35085 = (0);
while(true){
if((i__35085 < count__35084)){
var vec__35086 = chunk__35083.cljs$core$IIndexed$_nth$arity$2(null,i__35085);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35086,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35086,(1),null);
var G__35087_35098 = v;
var G__35088_35099 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35087_35098,G__35088_35099) : f.call(null,G__35087_35098,G__35088_35099));

var G__35100 = seq__35082;
var G__35101 = chunk__35083;
var G__35102 = count__35084;
var G__35103 = (i__35085 + (1));
seq__35082 = G__35100;
chunk__35083 = G__35101;
count__35084 = G__35102;
i__35085 = G__35103;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35082);
if(temp__4126__auto__){
var seq__35082__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35082__$1)){
var c__24968__auto__ = cljs.core.chunk_first(seq__35082__$1);
var G__35104 = cljs.core.chunk_rest(seq__35082__$1);
var G__35105 = c__24968__auto__;
var G__35106 = cljs.core.count(c__24968__auto__);
var G__35107 = (0);
seq__35082 = G__35104;
chunk__35083 = G__35105;
count__35084 = G__35106;
i__35085 = G__35107;
continue;
} else {
var vec__35089 = cljs.core.first(seq__35082__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35089,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35089,(1),null);
var G__35090_35108 = v;
var G__35091_35109 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35090_35108,G__35091_35109) : f.call(null,G__35090_35108,G__35091_35109));

var G__35110 = cljs.core.next(seq__35082__$1);
var G__35111 = null;
var G__35112 = (0);
var G__35113 = (0);
seq__35082 = G__35110;
chunk__35083 = G__35111;
count__35084 = G__35112;
i__35085 = G__35113;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__35092 = init;
var G__35093 = null;
var G__35094 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35092,G__35093,G__35094) : f.call(null,G__35092,G__35093,G__35094));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__35095 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35095) : cljs.core.deref.call(null,G__35095));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj35097 = {};
return obj35097;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__35114 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__35115 = cljs.core.next(es);
ret = G__35114;
es = G__35115;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__35116 = null;
var G__35116__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35116__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35116 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35116__2.call(this,self__,k);
case 3:
return G__35116__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35116.cljs$core$IFn$_invoke$arity$2 = G__35116__2;
G__35116.cljs$core$IFn$_invoke$arity$3 = G__35116__3;
return G__35116;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args35079){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35079)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function cljs$core$__GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__35117 = (i + (2));
var G__35118 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__35117;
ret = G__35118;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__35119 = (i + (1));
var G__35120 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__35119;
out = G__35120;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__35121 = o;
if(G__35121){
var bit__24857__auto__ = (G__35121.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__24857__auto__) || (G__35121.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__35121.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35121);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__35121);
}
})()){
return tcoll.assoc_BANG_((function (){var G__35122 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35122) : cljs.core.key.call(null,G__35122));
})(),(function (){var G__35123 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35123) : cljs.core.val.call(null,G__35123));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__35126 = cljs.core.next(es);
var G__35127 = tcoll__$1.assoc_BANG_((function (){var G__35124 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35124) : cljs.core.key.call(null,G__35124));
})(),(function (){var G__35125 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__35125) : cljs.core.val.call(null,G__35125));
})());
es = G__35126;
tcoll__$1 = G__35127;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function cljs$core$__GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function cljs$core$tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__35128 = ((ascending_QMARK_)?t.left:t.right);
var G__35129 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__35128;
stack__$1 = G__35129;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function cljs$core$__GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.create_tree_map_seq = (function cljs$core$create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function cljs$core$balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function cljs$core$balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function cljs$core$balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function cljs$core$balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function cljs$core$tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?cljs$core$tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__35142 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35142) : cljs.core.deref.call(null,G__35142));
} else {
var init__$2 = (function (){var G__35143 = init__$1;
var G__35144 = node.key;
var G__35145 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35143,G__35144,G__35145) : f.call(null,G__35143,G__35144,G__35145));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__35146 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35146) : cljs.core.deref.call(null,G__35146));
} else {
var init__$3 = ((!((node.right == null)))?cljs$core$tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__35147 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35147) : cljs.core.deref.call(null,G__35147));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__35149 = null;
var G__35149__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35149__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35149 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35149__2.call(this,self__,k);
case 3:
return G__35149__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35149.cljs$core$IFn$_invoke$arity$2 = G__35149__2;
G__35149.cljs$core$IFn$_invoke$arity$3 = G__35149__3;
return G__35149;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args35148){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35148)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function cljs$core$__GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__35151 = null;
var G__35151__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35151__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35151 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35151__2.call(this,self__,k);
case 3:
return G__35151__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35151.cljs$core$IFn$_invoke$arity$2 = G__35151__2;
G__35151.cljs$core$IFn$_invoke$arity$3 = G__35151__3;
return G__35151;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args35150){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35150)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function cljs$core$__GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.tree_map_add = (function cljs$core$tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__35164 = k;
var G__35165 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35164,G__35165) : comp.call(null,G__35164,G__35165));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = cljs$core$tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = cljs$core$tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function cljs$core$tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,cljs$core$tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,cljs$core$tree_map_append(left,right.left),right.right,null));
} else {
var app = cljs$core$tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function cljs$core$tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__35184 = k;
var G__35185 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35184,G__35185) : comp.call(null,G__35184,G__35185));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = cljs$core$tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = cljs$core$tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function cljs$core$tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__35196 = k;
var G__35197 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35196,G__35197) : comp.call(null,G__35196,G__35197));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,cljs$core$tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,cljs$core$tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35199 = cljs.core.seq(coll);
var chunk__35200 = null;
var count__35201 = (0);
var i__35202 = (0);
while(true){
if((i__35202 < count__35201)){
var vec__35203 = chunk__35200.cljs$core$IIndexed$_nth$arity$2(null,i__35202);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35203,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35203,(1),null);
var G__35204_35216 = v;
var G__35205_35217 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35204_35216,G__35205_35217) : f.call(null,G__35204_35216,G__35205_35217));

var G__35218 = seq__35199;
var G__35219 = chunk__35200;
var G__35220 = count__35201;
var G__35221 = (i__35202 + (1));
seq__35199 = G__35218;
chunk__35200 = G__35219;
count__35201 = G__35220;
i__35202 = G__35221;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35199);
if(temp__4126__auto__){
var seq__35199__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35199__$1)){
var c__24968__auto__ = cljs.core.chunk_first(seq__35199__$1);
var G__35222 = cljs.core.chunk_rest(seq__35199__$1);
var G__35223 = c__24968__auto__;
var G__35224 = cljs.core.count(c__24968__auto__);
var G__35225 = (0);
seq__35199 = G__35222;
chunk__35200 = G__35223;
count__35201 = G__35224;
i__35202 = G__35225;
continue;
} else {
var vec__35206 = cljs.core.first(seq__35199__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35206,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35206,(1),null);
var G__35207_35226 = v;
var G__35208_35227 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35207_35226,G__35208_35227) : f.call(null,G__35207_35226,G__35208_35227));

var G__35228 = cljs.core.next(seq__35199__$1);
var G__35229 = null;
var G__35230 = (0);
var G__35231 = (0);
seq__35199 = G__35228;
chunk__35200 = G__35229;
count__35201 = G__35230;
i__35202 = G__35231;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35209 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__35209) : cljs.core.keys.call(null,G__35209));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__35210 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__35210) : cljs.core.vals.call(null,G__35210));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__35211 = k;
var G__35212 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__35211,G__35212) : self__.comp.call(null,G__35211,G__35212));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__35232 = t.left;
t = G__35232;
continue;
} else {
var G__35233 = t.right;
t = G__35233;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__35234 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__35235 = cljs.core.next(es);
ret = G__35234;
es = G__35235;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__35236 = null;
var G__35236__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35236__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35236 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35236__2.call(this,self__,k);
case 3:
return G__35236__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35236.cljs$core$IFn$_invoke$arity$2 = G__35236__2;
G__35236.cljs$core$IFn$_invoke$arity$3 = G__35236__3;
return G__35236;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args35198){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35198)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__35213 = k;
var G__35214 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__35213,G__35214) : self__.comp.call(null,G__35213,G__35214));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__35237 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__35238 = t.left;
stack = G__35237;
t = G__35238;
continue;
} else {
var G__35239 = stack;
var G__35240 = t.right;
stack = G__35239;
t = G__35240;
continue;
}
} else {
if((c > (0))){
var G__35241 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__35242 = t.right;
stack = G__35241;
t = G__35242;
continue;
} else {
var G__35243 = stack;
var G__35244 = t.left;
stack = G__35243;
t = G__35244;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__35215 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__35215) : cljs.core.key.call(null,G__35215));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function cljs$core$__GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * keyval => key val
 * Returns a new hash map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.hash_map = (function() { 
var cljs$core$hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__35245 = cljs.core.nnext(in$);
var G__35246 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__35245;
out = G__35246;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var cljs$core$hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35247__i = 0, G__35247__a = new Array(arguments.length -  0);
while (G__35247__i < G__35247__a.length) {G__35247__a[G__35247__i] = arguments[G__35247__i + 0]; ++G__35247__i;}
  keyvals = new cljs.core.IndexedSeq(G__35247__a,0);
} 
return cljs$core$hash_map__delegate.call(this,keyvals);};
cljs$core$hash_map.cljs$lang$maxFixedArity = 0;
cljs$core$hash_map.cljs$lang$applyTo = (function (arglist__35248){
var keyvals = cljs.core.seq(arglist__35248);
return cljs$core$hash_map__delegate(keyvals);
});
cljs$core$hash_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_map__delegate;
return cljs$core$hash_map;
})()
;
/**
 * keyval => key val
 * Returns a new array map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.array_map = (function() { 
var cljs$core$array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var cljs$core$array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35249__i = 0, G__35249__a = new Array(arguments.length -  0);
while (G__35249__i < G__35249__a.length) {G__35249__a[G__35249__i] = arguments[G__35249__i + 0]; ++G__35249__i;}
  keyvals = new cljs.core.IndexedSeq(G__35249__a,0);
} 
return cljs$core$array_map__delegate.call(this,keyvals);};
cljs$core$array_map.cljs$lang$maxFixedArity = 0;
cljs$core$array_map.cljs$lang$applyTo = (function (arglist__35250){
var keyvals = cljs.core.seq(arglist__35250);
return cljs$core$array_map__delegate(keyvals);
});
cljs$core$array_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$array_map__delegate;
return cljs$core$array_map;
})()
;
/**
 * keyval => key val
 * Returns a new object map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.obj_map = (function() { 
var cljs$core$obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj35254 = {};
return obj35254;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__35255 = cljs.core.nnext(kvs);
kvs = G__35255;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var cljs$core$obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35256__i = 0, G__35256__a = new Array(arguments.length -  0);
while (G__35256__i < G__35256__a.length) {G__35256__a[G__35256__i] = arguments[G__35256__i + 0]; ++G__35256__i;}
  keyvals = new cljs.core.IndexedSeq(G__35256__a,0);
} 
return cljs$core$obj_map__delegate.call(this,keyvals);};
cljs$core$obj_map.cljs$lang$maxFixedArity = 0;
cljs$core$obj_map.cljs$lang$applyTo = (function (arglist__35257){
var keyvals = cljs.core.seq(arglist__35257);
return cljs$core$obj_map__delegate(keyvals);
});
cljs$core$obj_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$obj_map__delegate;
return cljs$core$obj_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings.
 * @param {...*} var_args
 */
cljs.core.sorted_map = (function() { 
var cljs$core$sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__35258 = cljs.core.nnext(in$);
var G__35259 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__35258;
out = G__35259;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__35260__i = 0, G__35260__a = new Array(arguments.length -  0);
while (G__35260__i < G__35260__a.length) {G__35260__a[G__35260__i] = arguments[G__35260__i + 0]; ++G__35260__i;}
  keyvals = new cljs.core.IndexedSeq(G__35260__a,0);
} 
return cljs$core$sorted_map__delegate.call(this,keyvals);};
cljs$core$sorted_map.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_map.cljs$lang$applyTo = (function (arglist__35261){
var keyvals = cljs.core.seq(arglist__35261);
return cljs$core$sorted_map__delegate(keyvals);
});
cljs$core$sorted_map.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map__delegate;
return cljs$core$sorted_map;
})()
;
/**
 * keyval => key val
 * Returns a new sorted map with supplied mappings, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_map_by = (function() { 
var cljs$core$sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__35262 = cljs.core.nnext(in$);
var G__35263 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__35262;
out = G__35263;
continue;
} else {
return out;
}
break;
}
};
var cljs$core$sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__35264__i = 0, G__35264__a = new Array(arguments.length -  1);
while (G__35264__i < G__35264__a.length) {G__35264__a[G__35264__i] = arguments[G__35264__i + 1]; ++G__35264__i;}
  keyvals = new cljs.core.IndexedSeq(G__35264__a,0);
} 
return cljs$core$sorted_map_by__delegate.call(this,comparator,keyvals);};
cljs$core$sorted_map_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_map_by.cljs$lang$applyTo = (function (arglist__35265){
var comparator = cljs.core.first(arglist__35265);
var keyvals = cljs.core.rest(arglist__35265);
return cljs$core$sorted_map_by__delegate(comparator,keyvals);
});
cljs$core$sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_map_by__delegate;
return cljs$core$sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35266 = self__.mseq;
if(G__35266){
var bit__24857__auto__ = (G__35266.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24857__auto__) || (G__35266.cljs$core$INext$)){
return true;
} else {
if((!G__35266.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35266);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35266);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35267 = self__.mseq;
if(G__35267){
var bit__24857__auto__ = (G__35267.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24857__auto__) || (G__35267.cljs$core$INext$)){
return true;
} else {
if((!G__35267.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35267);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function cljs$core$__GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Returns a sequence of the map's keys.
 */
cljs.core.keys = (function cljs$core$keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the key of the map entry.
 */
cljs.core.key = (function cljs$core$key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35268 = self__.mseq;
if(G__35268){
var bit__24857__auto__ = (G__35268.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24857__auto__) || (G__35268.cljs$core$INext$)){
return true;
} else {
if((!G__35268.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35268);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35268);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__35269 = self__.mseq;
if(G__35269){
var bit__24857__auto__ = (G__35269.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__24857__auto__) || (G__35269.cljs$core$INext$)){
return true;
} else {
if((!G__35269.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35269);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__35269);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function cljs$core$__GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Returns a sequence of the map's values.
 */
cljs.core.vals = (function cljs$core$vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
 * Returns the value in the map entry.
 */
cljs.core.val = (function cljs$core$val(map_entry){
return cljs.core._val(map_entry);
});
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping from
 * the latter (left-to-right) will be the mapping in the result.
 * @param {...*} var_args
 */
cljs.core.merge = (function() { 
var cljs$core$merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__35270_SHARP_,p2__35271_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__24183__auto__ = p1__35270_SHARP_;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__35271_SHARP_);
}),maps);
} else {
return null;
}
};
var cljs$core$merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__35272__i = 0, G__35272__a = new Array(arguments.length -  0);
while (G__35272__i < G__35272__a.length) {G__35272__a[G__35272__i] = arguments[G__35272__i + 0]; ++G__35272__i;}
  maps = new cljs.core.IndexedSeq(G__35272__a,0);
} 
return cljs$core$merge__delegate.call(this,maps);};
cljs$core$merge.cljs$lang$maxFixedArity = 0;
cljs$core$merge.cljs$lang$applyTo = (function (arglist__35273){
var maps = cljs.core.seq(arglist__35273);
return cljs$core$merge__delegate(maps);
});
cljs$core$merge.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge__delegate;
return cljs$core$merge;
})()
;
/**
 * Returns a map that consists of the rest of the maps conj-ed onto
 * the first.  If a key occurs in more than one map, the mapping(s)
 * from the latter (left-to-right) will be combined with the mapping in
 * the result by calling (f val-in-result val-in-latter).
 * @param {...*} var_args
 */
cljs.core.merge_with = (function() { 
var cljs$core$merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__35276 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__35277 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35276,G__35277) : f.call(null,G__35276,G__35277));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__24183__auto__ = m1;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var cljs$core$merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__35278__i = 0, G__35278__a = new Array(arguments.length -  1);
while (G__35278__i < G__35278__a.length) {G__35278__a[G__35278__i] = arguments[G__35278__i + 1]; ++G__35278__i;}
  maps = new cljs.core.IndexedSeq(G__35278__a,0);
} 
return cljs$core$merge_with__delegate.call(this,f,maps);};
cljs$core$merge_with.cljs$lang$maxFixedArity = 1;
cljs$core$merge_with.cljs$lang$applyTo = (function (arglist__35279){
var f = cljs.core.first(arglist__35279);
var maps = cljs.core.rest(arglist__35279);
return cljs$core$merge_with__delegate(f,maps);
});
cljs$core$merge_with.cljs$core$IFn$_invoke$arity$variadic = cljs$core$merge_with__delegate;
return cljs$core$merge_with;
})()
;
/**
 * Returns a map containing only those entries in map whose key is in keys
 */
cljs.core.select_keys = (function cljs$core$select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$cljs$core_SLASH_not_DASH_found);
var G__35280 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$cljs$core_SLASH_not_DASH_found))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__35281 = cljs.core.next(keys);
ret = G__35280;
keys = G__35281;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35284 = cljs.core.seq(coll);
var chunk__35285 = null;
var count__35286 = (0);
var i__35287 = (0);
while(true){
if((i__35287 < count__35286)){
var vec__35288 = chunk__35285.cljs$core$IIndexed$_nth$arity$2(null,i__35287);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35288,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35288,(1),null);
var G__35289_35294 = v;
var G__35290_35295 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35289_35294,G__35290_35295) : f.call(null,G__35289_35294,G__35290_35295));

var G__35296 = seq__35284;
var G__35297 = chunk__35285;
var G__35298 = count__35286;
var G__35299 = (i__35287 + (1));
seq__35284 = G__35296;
chunk__35285 = G__35297;
count__35286 = G__35298;
i__35287 = G__35299;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35284);
if(temp__4126__auto__){
var seq__35284__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35284__$1)){
var c__24968__auto__ = cljs.core.chunk_first(seq__35284__$1);
var G__35300 = cljs.core.chunk_rest(seq__35284__$1);
var G__35301 = c__24968__auto__;
var G__35302 = cljs.core.count(c__24968__auto__);
var G__35303 = (0);
seq__35284 = G__35300;
chunk__35285 = G__35301;
count__35286 = G__35302;
i__35287 = G__35303;
continue;
} else {
var vec__35291 = cljs.core.first(seq__35284__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35291,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35291,(1),null);
var G__35292_35304 = v;
var G__35293_35305 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35292_35304,G__35293_35305) : f.call(null,G__35292_35304,G__35293_35305));

var G__35306 = cljs.core.next(seq__35284__$1);
var G__35307 = null;
var G__35308 = (0);
var G__35309 = (0);
seq__35284 = G__35306;
chunk__35285 = G__35307;
count__35286 = G__35308;
i__35287 = G__35309;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__35282_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__35282_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__35310 = null;
var G__35310__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35310__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35310 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35310__2.call(this,self__,k);
case 3:
return G__35310__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35310.cljs$core$IFn$_invoke$arity$2 = G__35310__2;
G__35310.cljs$core$IFn$_invoke$arity$3 = G__35310__3;
return G__35310;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args35283){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35283)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function cljs$core$__GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__35311 = (i + (1));
var G__35312 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__35311;
out = G__35312;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__35313 = (i + (1));
var G__35314 = cljs.core._conj_BANG_(out,(items[i]));
i = G__35313;
out = G__35314;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__35316 = null;
var G__35316__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__35316__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__35316 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35316__2.call(this,self__,k);
case 3:
return G__35316__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35316.cljs$core$IFn$_invoke$arity$2 = G__35316__2;
G__35316.cljs$core$IFn$_invoke$arity$3 = G__35316__3;
return G__35316;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args35315){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35315)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function cljs$core$__GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__35319 = cljs.core.seq(coll);
var chunk__35320 = null;
var count__35321 = (0);
var i__35322 = (0);
while(true){
if((i__35322 < count__35321)){
var vec__35323 = chunk__35320.cljs$core$IIndexed$_nth$arity$2(null,i__35322);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35323,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35323,(1),null);
var G__35324_35329 = v;
var G__35325_35330 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35324_35329,G__35325_35330) : f.call(null,G__35324_35329,G__35325_35330));

var G__35331 = seq__35319;
var G__35332 = chunk__35320;
var G__35333 = count__35321;
var G__35334 = (i__35322 + (1));
seq__35319 = G__35331;
chunk__35320 = G__35332;
count__35321 = G__35333;
i__35322 = G__35334;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35319);
if(temp__4126__auto__){
var seq__35319__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35319__$1)){
var c__24968__auto__ = cljs.core.chunk_first(seq__35319__$1);
var G__35335 = cljs.core.chunk_rest(seq__35319__$1);
var G__35336 = c__24968__auto__;
var G__35337 = cljs.core.count(c__24968__auto__);
var G__35338 = (0);
seq__35319 = G__35335;
chunk__35320 = G__35336;
count__35321 = G__35337;
i__35322 = G__35338;
continue;
} else {
var vec__35326 = cljs.core.first(seq__35319__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35326,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35326,(1),null);
var G__35327_35339 = v;
var G__35328_35340 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35327_35339,G__35328_35340) : f.call(null,G__35327_35339,G__35328_35340));

var G__35341 = cljs.core.next(seq__35319__$1);
var G__35342 = null;
var G__35343 = (0);
var G__35344 = (0);
seq__35319 = G__35341;
chunk__35320 = G__35342;
count__35321 = G__35343;
i__35322 = G__35344;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__35317_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__35317_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__35345 = null;
var G__35345__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__35345__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__35345 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__35345__2.call(this,self__,k);
case 3:
return G__35345__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35345.cljs$core$IFn$_invoke$arity$2 = G__35345__2;
G__35345.cljs$core$IFn$_invoke$arity$3 = G__35345__3;
return G__35345;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args35318){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args35318)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function cljs$core$__GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
cljs.core.set_from_indexed_seq = (function cljs$core$set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__25062__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__25062__auto__.length)){
var G__35346 = (i + (1));
var G__35347 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__35346;
res = G__35347;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
 * Returns a set of the distinct elements of coll.
 */
cljs.core.set = (function cljs$core$set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__35348 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__35349 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__35348;
out = G__35349;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
 * Returns a new hash set with supplied keys.  Any equal keys are
 * handled as if by repeated uses of conj.
 * @param {...*} var_args
 */
cljs.core.hash_set = (function() {
var cljs$core$hash_set = null;
var cljs$core$hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var cljs$core$hash_set__1 = (function() { 
var G__35350__delegate = function (keys){
return cljs.core.set(keys);
};
var G__35350 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__35351__i = 0, G__35351__a = new Array(arguments.length -  0);
while (G__35351__i < G__35351__a.length) {G__35351__a[G__35351__i] = arguments[G__35351__i + 0]; ++G__35351__i;}
  keys = new cljs.core.IndexedSeq(G__35351__a,0);
} 
return G__35350__delegate.call(this,keys);};
G__35350.cljs$lang$maxFixedArity = 0;
G__35350.cljs$lang$applyTo = (function (arglist__35352){
var keys = cljs.core.seq(arglist__35352);
return G__35350__delegate(keys);
});
G__35350.cljs$core$IFn$_invoke$arity$variadic = G__35350__delegate;
return G__35350;
})()
;
cljs$core$hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return cljs$core$hash_set__0.call(this);
default:
var G__35353 = null;
if (arguments.length > 0) {
var G__35354__i = 0, G__35354__a = new Array(arguments.length -  0);
while (G__35354__i < G__35354__a.length) {G__35354__a[G__35354__i] = arguments[G__35354__i + 0]; ++G__35354__i;}
G__35353 = new cljs.core.IndexedSeq(G__35354__a,0);
}
return cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__35353);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$hash_set.cljs$lang$maxFixedArity = 0;
cljs$core$hash_set.cljs$lang$applyTo = cljs$core$hash_set__1.cljs$lang$applyTo;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$0 = cljs$core$hash_set__0;
cljs$core$hash_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$hash_set;
})()
;
/**
 * Returns a new sorted set with supplied keys.
 * @param {...*} var_args
 */
cljs.core.sorted_set = (function() { 
var cljs$core$sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var cljs$core$sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__35355__i = 0, G__35355__a = new Array(arguments.length -  0);
while (G__35355__i < G__35355__a.length) {G__35355__a[G__35355__i] = arguments[G__35355__i + 0]; ++G__35355__i;}
  keys = new cljs.core.IndexedSeq(G__35355__a,0);
} 
return cljs$core$sorted_set__delegate.call(this,keys);};
cljs$core$sorted_set.cljs$lang$maxFixedArity = 0;
cljs$core$sorted_set.cljs$lang$applyTo = (function (arglist__35356){
var keys = cljs.core.seq(arglist__35356);
return cljs$core$sorted_set__delegate(keys);
});
cljs$core$sorted_set.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set__delegate;
return cljs$core$sorted_set;
})()
;
/**
 * Returns a new sorted set with supplied keys, using the supplied comparator.
 * @param {...*} var_args
 */
cljs.core.sorted_set_by = (function() { 
var cljs$core$sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var cljs$core$sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__35357__i = 0, G__35357__a = new Array(arguments.length -  1);
while (G__35357__i < G__35357__a.length) {G__35357__a[G__35357__i] = arguments[G__35357__i + 1]; ++G__35357__i;}
  keys = new cljs.core.IndexedSeq(G__35357__a,0);
} 
return cljs$core$sorted_set_by__delegate.call(this,comparator,keys);};
cljs$core$sorted_set_by.cljs$lang$maxFixedArity = 1;
cljs$core$sorted_set_by.cljs$lang$applyTo = (function (arglist__35358){
var comparator = cljs.core.first(arglist__35358);
var keys = cljs.core.rest(arglist__35358);
return cljs$core$sorted_set_by__delegate(comparator,keys);
});
cljs$core$sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = cljs$core$sorted_set_by__delegate;
return cljs$core$sorted_set_by;
})()
;
/**
 * Given a map of replacement pairs and a vector/collection, returns a
 * vector/seq with any elements = a key in smap replaced with the
 * corresponding val in smap.  Returns a transducer when no collection
 * is provided.
 */
cljs.core.replace = (function() {
var cljs$core$replace = null;
var cljs$core$replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__35359_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__35359_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__35359_SHARP_;
}
}));
});
var cljs$core$replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__35360_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__35360_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__35360_SHARP_;
}
}),coll);
}
});
cljs$core$replace = function(smap,coll){
switch(arguments.length){
case 1:
return cljs$core$replace__1.call(this,smap);
case 2:
return cljs$core$replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$replace.cljs$core$IFn$_invoke$arity$1 = cljs$core$replace__1;
cljs$core$replace.cljs$core$IFn$_invoke$arity$2 = cljs$core$replace__2;
return cljs$core$replace;
})()
;
/**
 * Returns a lazy sequence of the elements of coll with duplicates removed
 */
cljs.core.distinct = (function() {
var cljs$core$distinct = null;
var cljs$core$distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__35381 = null;
var G__35381__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35381__1 = (function (result){
var G__35371 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35371) : rf.call(null,G__35371));
});
var G__35381__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__35372 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35372) : cljs.core.deref.call(null,G__35372));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__35373 = result;
var G__35374 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35373,G__35374) : rf.call(null,G__35373,G__35374));
}
});
G__35381 = function(result,input){
switch(arguments.length){
case 0:
return G__35381__0.call(this);
case 1:
return G__35381__1.call(this,result);
case 2:
return G__35381__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35381.cljs$core$IFn$_invoke$arity$0 = G__35381__0;
G__35381.cljs$core$IFn$_invoke$arity$1 = G__35381__1;
G__35381.cljs$core$IFn$_invoke$arity$2 = G__35381__2;
return G__35381;
})()
;})(seen))
});
});
var cljs$core$distinct__1 = (function (coll){
var step = (function cljs$core$distinct_$_step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__35379,seen__$1){
while(true){
var vec__35380 = p__35379;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35380,(0),null);
var xs__$1 = vec__35380;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__35382 = cljs.core.rest(s);
var G__35383 = seen__$1;
p__35379 = G__35382;
seen__$1 = G__35383;
continue;
} else {
return cljs.core.cons(f,cljs$core$distinct_$_step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
cljs$core$distinct = function(coll){
switch(arguments.length){
case 0:
return cljs$core$distinct__0.call(this);
case 1:
return cljs$core$distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$distinct.cljs$core$IFn$_invoke$arity$0 = cljs$core$distinct__0;
cljs$core$distinct.cljs$core$IFn$_invoke$arity$1 = cljs$core$distinct__1;
return cljs$core$distinct;
})()
;
/**
 * Return a seq of all but the last item in coll, in linear time
 */
cljs.core.butlast = (function cljs$core$butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__35384 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__35385 = cljs.core.next(s__$1);
ret = G__35384;
s__$1 = G__35385;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
 * Returns the name String of a string, symbol or keyword.
 */
cljs.core.name = (function cljs$core$name(x){
if((function (){var G__35387 = x;
if(G__35387){
var bit__24850__auto__ = (G__35387.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__24850__auto__) || (G__35387.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
 * Returns a map with the keys mapped to the corresponding vals.
 */
cljs.core.zipmap = (function cljs$core$zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__35388 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__35389 = cljs.core.next(ks);
var G__35390 = cljs.core.next(vs);
map = G__35388;
ks = G__35389;
vs = G__35390;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
 * Returns the x for which (k x), a number, is greatest.
 * @param {...*} var_args
 */
cljs.core.max_key = (function() {
var cljs$core$max_key = null;
var cljs$core$max_key__2 = (function (k,x){
return x;
});
var cljs$core$max_key__3 = (function (k,x,y){
if(((function (){var G__35401 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35401) : k.call(null,G__35401));
})() > (function (){var G__35402 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35402) : k.call(null,G__35402));
})())){
return x;
} else {
return y;
}
});
var cljs$core$max_key__4 = (function() { 
var G__35403__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35391_SHARP_,p2__35392_SHARP_){
return cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,p1__35391_SHARP_,p2__35392_SHARP_);
}),cljs$core$max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__35403 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__35404__i = 0, G__35404__a = new Array(arguments.length -  3);
while (G__35404__i < G__35404__a.length) {G__35404__a[G__35404__i] = arguments[G__35404__i + 3]; ++G__35404__i;}
  more = new cljs.core.IndexedSeq(G__35404__a,0);
} 
return G__35403__delegate.call(this,k,x,y,more);};
G__35403.cljs$lang$maxFixedArity = 3;
G__35403.cljs$lang$applyTo = (function (arglist__35405){
var k = cljs.core.first(arglist__35405);
arglist__35405 = cljs.core.next(arglist__35405);
var x = cljs.core.first(arglist__35405);
arglist__35405 = cljs.core.next(arglist__35405);
var y = cljs.core.first(arglist__35405);
var more = cljs.core.rest(arglist__35405);
return G__35403__delegate(k,x,y,more);
});
G__35403.cljs$core$IFn$_invoke$arity$variadic = G__35403__delegate;
return G__35403;
})()
;
cljs$core$max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$max_key__2.call(this,k,x);
case 3:
return cljs$core$max_key__3.call(this,k,x,y);
default:
var G__35406 = null;
if (arguments.length > 3) {
var G__35407__i = 0, G__35407__a = new Array(arguments.length -  3);
while (G__35407__i < G__35407__a.length) {G__35407__a[G__35407__i] = arguments[G__35407__i + 3]; ++G__35407__i;}
G__35406 = new cljs.core.IndexedSeq(G__35407__a,0);
}
return cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__35406);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$max_key.cljs$lang$maxFixedArity = 3;
cljs$core$max_key.cljs$lang$applyTo = cljs$core$max_key__4.cljs$lang$applyTo;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$max_key__2;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$max_key__3;
cljs$core$max_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$max_key;
})()
;
/**
 * Returns the x for which (k x), a number, is least.
 * @param {...*} var_args
 */
cljs.core.min_key = (function() {
var cljs$core$min_key = null;
var cljs$core$min_key__2 = (function (k,x){
return x;
});
var cljs$core$min_key__3 = (function (k,x,y){
if(((function (){var G__35418 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35418) : k.call(null,G__35418));
})() < (function (){var G__35419 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__35419) : k.call(null,G__35419));
})())){
return x;
} else {
return y;
}
});
var cljs$core$min_key__4 = (function() { 
var G__35420__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35408_SHARP_,p2__35409_SHARP_){
return cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,p1__35408_SHARP_,p2__35409_SHARP_);
}),cljs$core$min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__35420 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__35421__i = 0, G__35421__a = new Array(arguments.length -  3);
while (G__35421__i < G__35421__a.length) {G__35421__a[G__35421__i] = arguments[G__35421__i + 3]; ++G__35421__i;}
  more = new cljs.core.IndexedSeq(G__35421__a,0);
} 
return G__35420__delegate.call(this,k,x,y,more);};
G__35420.cljs$lang$maxFixedArity = 3;
G__35420.cljs$lang$applyTo = (function (arglist__35422){
var k = cljs.core.first(arglist__35422);
arglist__35422 = cljs.core.next(arglist__35422);
var x = cljs.core.first(arglist__35422);
arglist__35422 = cljs.core.next(arglist__35422);
var y = cljs.core.first(arglist__35422);
var more = cljs.core.rest(arglist__35422);
return G__35420__delegate(k,x,y,more);
});
G__35420.cljs$core$IFn$_invoke$arity$variadic = G__35420__delegate;
return G__35420;
})()
;
cljs$core$min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return cljs$core$min_key__2.call(this,k,x);
case 3:
return cljs$core$min_key__3.call(this,k,x,y);
default:
var G__35423 = null;
if (arguments.length > 3) {
var G__35424__i = 0, G__35424__a = new Array(arguments.length -  3);
while (G__35424__i < G__35424__a.length) {G__35424__a[G__35424__i] = arguments[G__35424__i + 3]; ++G__35424__i;}
G__35423 = new cljs.core.IndexedSeq(G__35424__a,0);
}
return cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__35423);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$min_key.cljs$lang$maxFixedArity = 3;
cljs$core$min_key.cljs$lang$applyTo = cljs$core$min_key__4.cljs$lang$applyTo;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$2 = cljs$core$min_key__2;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$3 = cljs$core$min_key__3;
cljs$core$min_key.cljs$core$IFn$_invoke$arity$variadic = cljs$core$min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function cljs$core$__GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function cljs$core$array_list(){
return (new cljs.core.ArrayList([]));
});
/**
 * Returns a lazy sequence of lists like partition, but may include
 * partitions with fewer than n items at the end.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_all = (function() {
var cljs$core$partition_all = null;
var cljs$core$partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__35441 = null;
var G__35441__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35441__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__35436 = result;
var G__35437 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35436,G__35437) : rf.call(null,G__35436,G__35437));
})());
})());
var G__35438 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35438) : rf.call(null,G__35438));
});
var G__35441__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__35439 = result;
var G__35440 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35439,G__35440) : rf.call(null,G__35439,G__35440));
} else {
return result;
}
});
G__35441 = function(result,input){
switch(arguments.length){
case 0:
return G__35441__0.call(this);
case 1:
return G__35441__1.call(this,result);
case 2:
return G__35441__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35441.cljs$core$IFn$_invoke$arity$0 = G__35441__0;
G__35441.cljs$core$IFn$_invoke$arity$1 = G__35441__1;
G__35441.cljs$core$IFn$_invoke$arity$2 = G__35441__2;
return G__35441;
})()
;})(a))
});
});
var cljs$core$partition_all__2 = (function (n,coll){
return cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var cljs$core$partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_all__1.call(this,n);
case 2:
return cljs$core$partition_all__2.call(this,n,step);
case 3:
return cljs$core$partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_all__1;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_all__2;
cljs$core$partition_all.cljs$core$IFn$_invoke$arity$3 = cljs$core$partition_all__3;
return cljs$core$partition_all;
})()
;
/**
 * Returns a lazy sequence of successive items from coll while
 * (pred item) returns true. pred must be free of side-effects.
 * Returns a transducer when no collection is provided.
 */
cljs.core.take_while = (function() {
var cljs$core$take_while = null;
var cljs$core$take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__35454 = null;
var G__35454__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35454__1 = (function (result){
var G__35449 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35449) : rf.call(null,G__35449));
});
var G__35454__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__35450 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35450) : pred.call(null,G__35450));
})())){
var G__35451 = result;
var G__35452 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35451,G__35452) : rf.call(null,G__35451,G__35452));
} else {
return cljs.core.reduced(result);
}
});
G__35454 = function(result,input){
switch(arguments.length){
case 0:
return G__35454__0.call(this);
case 1:
return G__35454__1.call(this,result);
case 2:
return G__35454__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35454.cljs$core$IFn$_invoke$arity$0 = G__35454__0;
G__35454.cljs$core$IFn$_invoke$arity$1 = G__35454__1;
G__35454.cljs$core$IFn$_invoke$arity$2 = G__35454__2;
return G__35454;
})()
});
});
var cljs$core$take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__35453 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__35453) : pred.call(null,G__35453));
})())){
return cljs.core.cons(cljs.core.first(s),cljs$core$take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
cljs$core$take_while = function(pred,coll){
switch(arguments.length){
case 1:
return cljs$core$take_while__1.call(this,pred);
case 2:
return cljs$core$take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_while.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_while__1;
cljs$core$take_while.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_while__2;
return cljs$core$take_while;
})()
;
cljs.core.mk_bound_fn = (function cljs$core$mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__35459 = (function (){var G__35461 = cljs.core._entry_key(sc,e);
var G__35462 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__35461,G__35462) : comp.call(null,G__35461,G__35462));
})();
var G__35460 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__35459,G__35460) : test.call(null,G__35459,G__35460));
});
});
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.subseq = (function() {
var cljs$core$subseq = null;
var cljs$core$subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35466 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35466,(0),null);
var s = vec__35466;
if(cljs.core.truth_((function (){var G__35467 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__35467) : include.call(null,G__35467));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var cljs$core$subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35468 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35468,(0),null);
var s = vec__35468;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$subseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$subseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$subseq__3;
cljs$core$subseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$subseq__5;
return cljs$core$subseq;
})()
;
/**
 * sc must be a sorted collection, test(s) one of <, <=, > or
 * >=. Returns a reverse seq of those entries with keys ek for
 * which (test (.. sc comparator (compare ek key)) 0) is true
 */
cljs.core.rsubseq = (function() {
var cljs$core$rsubseq = null;
var cljs$core$rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35472 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35472,(0),null);
var s = vec__35472;
if(cljs.core.truth_((function (){var G__35473 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__35473) : include.call(null,G__35473));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var cljs$core$rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__35474 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35474,(0),null);
var s = vec__35474;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
cljs$core$rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return cljs$core$rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return cljs$core$rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$3 = cljs$core$rsubseq__3;
cljs$core$rsubseq.cljs$core$IFn$_invoke$arity$5 = cljs$core$rsubseq__5;
return cljs$core$rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function cljs$core$__GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__35475 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__35475) : Math.ceil.call(null,G__35475));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__24599__auto__ = self__.__hash;
if(!((h__24599__auto__ == null))){
return h__24599__auto__;
} else {
var h__24599__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__24599__auto____$1;

return h__24599__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__35476 = ret;
var G__35477 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35476,G__35477) : f.call(null,G__35476,G__35477));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__35478 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35478) : cljs.core.deref.call(null,G__35478));
} else {
var G__35479 = (i + self__.step);
var G__35480 = ret__$1;
i = G__35479;
ret = G__35480;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function cljs$core$__GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Returns a lazy seq of nums from start (inclusive) to end
 * (exclusive), by step, where start defaults to 0, step to 1,
 * and end to infinity.
 */
cljs.core.range = (function() {
var cljs$core$range = null;
var cljs$core$range__0 = (function (){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var cljs$core$range__1 = (function (end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var cljs$core$range__2 = (function (start,end){
return cljs$core$range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var cljs$core$range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
cljs$core$range = function(start,end,step){
switch(arguments.length){
case 0:
return cljs$core$range__0.call(this);
case 1:
return cljs$core$range__1.call(this,start);
case 2:
return cljs$core$range__2.call(this,start,end);
case 3:
return cljs$core$range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$range.cljs$core$IFn$_invoke$arity$0 = cljs$core$range__0;
cljs$core$range.cljs$core$IFn$_invoke$arity$1 = cljs$core$range__1;
cljs$core$range.cljs$core$IFn$_invoke$arity$2 = cljs$core$range__2;
cljs$core$range.cljs$core$IFn$_invoke$arity$3 = cljs$core$range__3;
return cljs$core$range;
})()
;
/**
 * Returns a lazy seq of every nth item in coll.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.take_nth = (function() {
var cljs$core$take_nth = null;
var cljs$core$take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__35498 = null;
var G__35498__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35498__1 = (function (result){
var G__35495 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35495) : rf.call(null,G__35495));
});
var G__35498__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__35496 = result;
var G__35497 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35496,G__35497) : rf.call(null,G__35496,G__35497));
} else {
return result;
}
});
G__35498 = function(result,input){
switch(arguments.length){
case 0:
return G__35498__0.call(this);
case 1:
return G__35498__1.call(this,result);
case 2:
return G__35498__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35498.cljs$core$IFn$_invoke$arity$0 = G__35498__0;
G__35498.cljs$core$IFn$_invoke$arity$1 = G__35498__1;
G__35498.cljs$core$IFn$_invoke$arity$2 = G__35498__2;
return G__35498;
})()
;})(ia))
});
});
var cljs$core$take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
cljs$core$take_nth = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$take_nth__1.call(this,n);
case 2:
return cljs$core$take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$1 = cljs$core$take_nth__1;
cljs$core$take_nth.cljs$core$IFn$_invoke$arity$2 = cljs$core$take_nth__2;
return cljs$core$take_nth;
})()
;
/**
 * Returns a vector of [(take-while pred coll) (drop-while pred coll)]
 */
cljs.core.split_with = (function cljs$core$split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
 * Applies f to each value in coll, splitting it each time f returns a
 * new value.  Returns a lazy seq of partitions.  Returns a stateful
 * transducer when no collection is provided.
 */
cljs.core.partition_by = (function() {
var cljs$core$partition_by = null;
var cljs$core$partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$cljs$core_SLASH_none);
return ((function (a,pa){
return (function() {
var G__35520 = null;
var G__35520__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35520__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__35511 = result;
var G__35512 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35511,G__35512) : rf.call(null,G__35511,G__35512));
})());
})());
var G__35513 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35513) : rf.call(null,G__35513));
});
var G__35520__2 = (function (result,input){
var pval = (function (){var G__35514 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35514) : cljs.core.deref.call(null,G__35514));
})();
var val = (function (){var G__35515 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35515) : f.call(null,G__35515));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$cljs$core_SLASH_none)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__35516 = result;
var G__35517 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35516,G__35517) : rf.call(null,G__35516,G__35517));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__35520 = function(result,input){
switch(arguments.length){
case 0:
return G__35520__0.call(this);
case 1:
return G__35520__1.call(this,result);
case 2:
return G__35520__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35520.cljs$core$IFn$_invoke$arity$0 = G__35520__0;
G__35520.cljs$core$IFn$_invoke$arity$1 = G__35520__1;
G__35520.cljs$core$IFn$_invoke$arity$2 = G__35520__2;
return G__35520;
})()
;})(a,pa))
});
});
var cljs$core$partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__35518 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35518) : f.call(null,G__35518));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__35499_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__35519 = p1__35499_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35519) : f.call(null,G__35519));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
cljs$core$partition_by = function(f,coll){
switch(arguments.length){
case 1:
return cljs$core$partition_by__1.call(this,f);
case 2:
return cljs$core$partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$1 = cljs$core$partition_by__1;
cljs$core$partition_by.cljs$core$IFn$_invoke$arity$2 = cljs$core$partition_by__2;
return cljs$core$partition_by;
})()
;
/**
 * Returns a map from distinct items in coll to the number of times
 * they appear.
 */
cljs.core.frequencies = (function cljs$core$frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Returns a lazy seq of the intermediate values of the reduction (as
 * per reduce) of coll by f, starting with init.
 */
cljs.core.reductions = (function() {
var cljs$core$reductions = null;
var cljs$core$reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var cljs$core$reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs$core$reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__35529 = init;
var G__35530 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35529,G__35530) : f.call(null,G__35529,G__35530));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
cljs$core$reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return cljs$core$reductions__2.call(this,f,init);
case 3:
return cljs$core$reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$reductions.cljs$core$IFn$_invoke$arity$2 = cljs$core$reductions__2;
cljs$core$reductions.cljs$core$IFn$_invoke$arity$3 = cljs$core$reductions__3;
return cljs$core$reductions;
})()
;
/**
 * Takes a set of functions and returns a fn that is the juxtaposition
 * of those fns.  The returned fn takes a variable number of args, and
 * returns a vector containing the result of applying each fn to the
 * args (left-to-right).
 * ((juxt a b c) x) => [(a x) (b x) (c x)]
 * @param {...*} var_args
 */
cljs.core.juxt = (function() {
var cljs$core$juxt = null;
var cljs$core$juxt__1 = (function (f){
return (function() {
var G__35625 = null;
var G__35625__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__35625__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35583 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35583) : f.call(null,G__35583));
})()],null));
});
var G__35625__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35584 = x;
var G__35585 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35584,G__35585) : f.call(null,G__35584,G__35585));
})()],null));
});
var G__35625__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35586 = x;
var G__35587 = y;
var G__35588 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35586,G__35587,G__35588) : f.call(null,G__35586,G__35587,G__35588));
})()],null));
});
var G__35625__4 = (function() { 
var G__35626__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__35626 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35627__i = 0, G__35627__a = new Array(arguments.length -  3);
while (G__35627__i < G__35627__a.length) {G__35627__a[G__35627__i] = arguments[G__35627__i + 3]; ++G__35627__i;}
  args = new cljs.core.IndexedSeq(G__35627__a,0);
} 
return G__35626__delegate.call(this,x,y,z,args);};
G__35626.cljs$lang$maxFixedArity = 3;
G__35626.cljs$lang$applyTo = (function (arglist__35628){
var x = cljs.core.first(arglist__35628);
arglist__35628 = cljs.core.next(arglist__35628);
var y = cljs.core.first(arglist__35628);
arglist__35628 = cljs.core.next(arglist__35628);
var z = cljs.core.first(arglist__35628);
var args = cljs.core.rest(arglist__35628);
return G__35626__delegate(x,y,z,args);
});
G__35626.cljs$core$IFn$_invoke$arity$variadic = G__35626__delegate;
return G__35626;
})()
;
G__35625 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35625__0.call(this);
case 1:
return G__35625__1.call(this,x);
case 2:
return G__35625__2.call(this,x,y);
case 3:
return G__35625__3.call(this,x,y,z);
default:
var G__35629 = null;
if (arguments.length > 3) {
var G__35630__i = 0, G__35630__a = new Array(arguments.length -  3);
while (G__35630__i < G__35630__a.length) {G__35630__a[G__35630__i] = arguments[G__35630__i + 3]; ++G__35630__i;}
G__35629 = new cljs.core.IndexedSeq(G__35630__a,0);
}
return G__35625__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35629);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35625.cljs$lang$maxFixedArity = 3;
G__35625.cljs$lang$applyTo = G__35625__4.cljs$lang$applyTo;
G__35625.cljs$core$IFn$_invoke$arity$0 = G__35625__0;
G__35625.cljs$core$IFn$_invoke$arity$1 = G__35625__1;
G__35625.cljs$core$IFn$_invoke$arity$2 = G__35625__2;
G__35625.cljs$core$IFn$_invoke$arity$3 = G__35625__3;
G__35625.cljs$core$IFn$_invoke$arity$variadic = G__35625__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35625;
})()
});
var cljs$core$juxt__2 = (function (f,g){
return (function() {
var G__35631 = null;
var G__35631__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__35631__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35589 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35589) : f.call(null,G__35589));
})(),(function (){var G__35590 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__35590) : g.call(null,G__35590));
})()],null));
});
var G__35631__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35591 = x;
var G__35592 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35591,G__35592) : f.call(null,G__35591,G__35592));
})(),(function (){var G__35593 = x;
var G__35594 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__35593,G__35594) : g.call(null,G__35593,G__35594));
})()],null));
});
var G__35631__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35595 = x;
var G__35596 = y;
var G__35597 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35595,G__35596,G__35597) : f.call(null,G__35595,G__35596,G__35597));
})(),(function (){var G__35598 = x;
var G__35599 = y;
var G__35600 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__35598,G__35599,G__35600) : g.call(null,G__35598,G__35599,G__35600));
})()],null));
});
var G__35631__4 = (function() { 
var G__35632__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__35632 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35633__i = 0, G__35633__a = new Array(arguments.length -  3);
while (G__35633__i < G__35633__a.length) {G__35633__a[G__35633__i] = arguments[G__35633__i + 3]; ++G__35633__i;}
  args = new cljs.core.IndexedSeq(G__35633__a,0);
} 
return G__35632__delegate.call(this,x,y,z,args);};
G__35632.cljs$lang$maxFixedArity = 3;
G__35632.cljs$lang$applyTo = (function (arglist__35634){
var x = cljs.core.first(arglist__35634);
arglist__35634 = cljs.core.next(arglist__35634);
var y = cljs.core.first(arglist__35634);
arglist__35634 = cljs.core.next(arglist__35634);
var z = cljs.core.first(arglist__35634);
var args = cljs.core.rest(arglist__35634);
return G__35632__delegate(x,y,z,args);
});
G__35632.cljs$core$IFn$_invoke$arity$variadic = G__35632__delegate;
return G__35632;
})()
;
G__35631 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35631__0.call(this);
case 1:
return G__35631__1.call(this,x);
case 2:
return G__35631__2.call(this,x,y);
case 3:
return G__35631__3.call(this,x,y,z);
default:
var G__35635 = null;
if (arguments.length > 3) {
var G__35636__i = 0, G__35636__a = new Array(arguments.length -  3);
while (G__35636__i < G__35636__a.length) {G__35636__a[G__35636__i] = arguments[G__35636__i + 3]; ++G__35636__i;}
G__35635 = new cljs.core.IndexedSeq(G__35636__a,0);
}
return G__35631__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35635);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35631.cljs$lang$maxFixedArity = 3;
G__35631.cljs$lang$applyTo = G__35631__4.cljs$lang$applyTo;
G__35631.cljs$core$IFn$_invoke$arity$0 = G__35631__0;
G__35631.cljs$core$IFn$_invoke$arity$1 = G__35631__1;
G__35631.cljs$core$IFn$_invoke$arity$2 = G__35631__2;
G__35631.cljs$core$IFn$_invoke$arity$3 = G__35631__3;
G__35631.cljs$core$IFn$_invoke$arity$variadic = G__35631__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35631;
})()
});
var cljs$core$juxt__3 = (function (f,g,h){
return (function() {
var G__35637 = null;
var G__35637__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__35637__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35601 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__35601) : f.call(null,G__35601));
})(),(function (){var G__35602 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__35602) : g.call(null,G__35602));
})(),(function (){var G__35603 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__35603) : h.call(null,G__35603));
})()],null));
});
var G__35637__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35604 = x;
var G__35605 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__35604,G__35605) : f.call(null,G__35604,G__35605));
})(),(function (){var G__35606 = x;
var G__35607 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__35606,G__35607) : g.call(null,G__35606,G__35607));
})(),(function (){var G__35608 = x;
var G__35609 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__35608,G__35609) : h.call(null,G__35608,G__35609));
})()],null));
});
var G__35637__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__35610 = x;
var G__35611 = y;
var G__35612 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__35610,G__35611,G__35612) : f.call(null,G__35610,G__35611,G__35612));
})(),(function (){var G__35613 = x;
var G__35614 = y;
var G__35615 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__35613,G__35614,G__35615) : g.call(null,G__35613,G__35614,G__35615));
})(),(function (){var G__35616 = x;
var G__35617 = y;
var G__35618 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__35616,G__35617,G__35618) : h.call(null,G__35616,G__35617,G__35618));
})()],null));
});
var G__35637__4 = (function() { 
var G__35638__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__35638 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35639__i = 0, G__35639__a = new Array(arguments.length -  3);
while (G__35639__i < G__35639__a.length) {G__35639__a[G__35639__i] = arguments[G__35639__i + 3]; ++G__35639__i;}
  args = new cljs.core.IndexedSeq(G__35639__a,0);
} 
return G__35638__delegate.call(this,x,y,z,args);};
G__35638.cljs$lang$maxFixedArity = 3;
G__35638.cljs$lang$applyTo = (function (arglist__35640){
var x = cljs.core.first(arglist__35640);
arglist__35640 = cljs.core.next(arglist__35640);
var y = cljs.core.first(arglist__35640);
arglist__35640 = cljs.core.next(arglist__35640);
var z = cljs.core.first(arglist__35640);
var args = cljs.core.rest(arglist__35640);
return G__35638__delegate(x,y,z,args);
});
G__35638.cljs$core$IFn$_invoke$arity$variadic = G__35638__delegate;
return G__35638;
})()
;
G__35637 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35637__0.call(this);
case 1:
return G__35637__1.call(this,x);
case 2:
return G__35637__2.call(this,x,y);
case 3:
return G__35637__3.call(this,x,y,z);
default:
var G__35641 = null;
if (arguments.length > 3) {
var G__35642__i = 0, G__35642__a = new Array(arguments.length -  3);
while (G__35642__i < G__35642__a.length) {G__35642__a[G__35642__i] = arguments[G__35642__i + 3]; ++G__35642__i;}
G__35641 = new cljs.core.IndexedSeq(G__35642__a,0);
}
return G__35637__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35641);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35637.cljs$lang$maxFixedArity = 3;
G__35637.cljs$lang$applyTo = G__35637__4.cljs$lang$applyTo;
G__35637.cljs$core$IFn$_invoke$arity$0 = G__35637__0;
G__35637.cljs$core$IFn$_invoke$arity$1 = G__35637__1;
G__35637.cljs$core$IFn$_invoke$arity$2 = G__35637__2;
G__35637.cljs$core$IFn$_invoke$arity$3 = G__35637__3;
G__35637.cljs$core$IFn$_invoke$arity$variadic = G__35637__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35637;
})()
});
var cljs$core$juxt__4 = (function() { 
var G__35643__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__35644 = null;
var G__35644__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35531_SHARP_,p2__35532_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35531_SHARP_,(function (){return (p2__35532_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__35532_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__35532_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35644__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35533_SHARP_,p2__35534_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35533_SHARP_,(function (){var G__35619 = x;
return (p2__35534_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__35534_SHARP_.cljs$core$IFn$_invoke$arity$1(G__35619) : p2__35534_SHARP_.call(null,G__35619));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35644__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35535_SHARP_,p2__35536_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35535_SHARP_,(function (){var G__35620 = x;
var G__35621 = y;
return (p2__35536_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__35536_SHARP_.cljs$core$IFn$_invoke$arity$2(G__35620,G__35621) : p2__35536_SHARP_.call(null,G__35620,G__35621));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35644__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35537_SHARP_,p2__35538_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35537_SHARP_,(function (){var G__35622 = x;
var G__35623 = y;
var G__35624 = z;
return (p2__35538_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__35538_SHARP_.cljs$core$IFn$_invoke$arity$3(G__35622,G__35623,G__35624) : p2__35538_SHARP_.call(null,G__35622,G__35623,G__35624));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__35644__4 = (function() { 
var G__35645__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__35539_SHARP_,p2__35540_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__35539_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__35540_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__35645 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__35646__i = 0, G__35646__a = new Array(arguments.length -  3);
while (G__35646__i < G__35646__a.length) {G__35646__a[G__35646__i] = arguments[G__35646__i + 3]; ++G__35646__i;}
  args = new cljs.core.IndexedSeq(G__35646__a,0);
} 
return G__35645__delegate.call(this,x,y,z,args);};
G__35645.cljs$lang$maxFixedArity = 3;
G__35645.cljs$lang$applyTo = (function (arglist__35647){
var x = cljs.core.first(arglist__35647);
arglist__35647 = cljs.core.next(arglist__35647);
var y = cljs.core.first(arglist__35647);
arglist__35647 = cljs.core.next(arglist__35647);
var z = cljs.core.first(arglist__35647);
var args = cljs.core.rest(arglist__35647);
return G__35645__delegate(x,y,z,args);
});
G__35645.cljs$core$IFn$_invoke$arity$variadic = G__35645__delegate;
return G__35645;
})()
;
G__35644 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__35644__0.call(this);
case 1:
return G__35644__1.call(this,x);
case 2:
return G__35644__2.call(this,x,y);
case 3:
return G__35644__3.call(this,x,y,z);
default:
var G__35648 = null;
if (arguments.length > 3) {
var G__35649__i = 0, G__35649__a = new Array(arguments.length -  3);
while (G__35649__i < G__35649__a.length) {G__35649__a[G__35649__i] = arguments[G__35649__i + 3]; ++G__35649__i;}
G__35648 = new cljs.core.IndexedSeq(G__35649__a,0);
}
return G__35644__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__35648);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35644.cljs$lang$maxFixedArity = 3;
G__35644.cljs$lang$applyTo = G__35644__4.cljs$lang$applyTo;
G__35644.cljs$core$IFn$_invoke$arity$0 = G__35644__0;
G__35644.cljs$core$IFn$_invoke$arity$1 = G__35644__1;
G__35644.cljs$core$IFn$_invoke$arity$2 = G__35644__2;
G__35644.cljs$core$IFn$_invoke$arity$3 = G__35644__3;
G__35644.cljs$core$IFn$_invoke$arity$variadic = G__35644__4.cljs$core$IFn$_invoke$arity$variadic;
return G__35644;
})()
;})(fs__$1))
};
var G__35643 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__35650__i = 0, G__35650__a = new Array(arguments.length -  3);
while (G__35650__i < G__35650__a.length) {G__35650__a[G__35650__i] = arguments[G__35650__i + 3]; ++G__35650__i;}
  fs = new cljs.core.IndexedSeq(G__35650__a,0);
} 
return G__35643__delegate.call(this,f,g,h,fs);};
G__35643.cljs$lang$maxFixedArity = 3;
G__35643.cljs$lang$applyTo = (function (arglist__35651){
var f = cljs.core.first(arglist__35651);
arglist__35651 = cljs.core.next(arglist__35651);
var g = cljs.core.first(arglist__35651);
arglist__35651 = cljs.core.next(arglist__35651);
var h = cljs.core.first(arglist__35651);
var fs = cljs.core.rest(arglist__35651);
return G__35643__delegate(f,g,h,fs);
});
G__35643.cljs$core$IFn$_invoke$arity$variadic = G__35643__delegate;
return G__35643;
})()
;
cljs$core$juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return cljs$core$juxt__1.call(this,f);
case 2:
return cljs$core$juxt__2.call(this,f,g);
case 3:
return cljs$core$juxt__3.call(this,f,g,h);
default:
var G__35652 = null;
if (arguments.length > 3) {
var G__35653__i = 0, G__35653__a = new Array(arguments.length -  3);
while (G__35653__i < G__35653__a.length) {G__35653__a[G__35653__i] = arguments[G__35653__i + 3]; ++G__35653__i;}
G__35652 = new cljs.core.IndexedSeq(G__35653__a,0);
}
return cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__35652);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$juxt.cljs$lang$maxFixedArity = 3;
cljs$core$juxt.cljs$lang$applyTo = cljs$core$juxt__4.cljs$lang$applyTo;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$1 = cljs$core$juxt__1;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$2 = cljs$core$juxt__2;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$3 = cljs$core$juxt__3;
cljs$core$juxt.cljs$core$IFn$_invoke$arity$variadic = cljs$core$juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$juxt;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. dorun can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, does not retain the head and returns nil.
 */
cljs.core.dorun = (function() {
var cljs$core$dorun = null;
var cljs$core$dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__35654 = cljs.core.next(coll);
coll = G__35654;
continue;
} else {
return null;
}
break;
}
});
var cljs$core$dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__35655 = (n - (1));
var G__35656 = cljs.core.next(coll);
n = G__35655;
coll = G__35656;
continue;
} else {
return null;
}
break;
}
});
cljs$core$dorun = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$dorun__1.call(this,n);
case 2:
return cljs$core$dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dorun.cljs$core$IFn$_invoke$arity$1 = cljs$core$dorun__1;
cljs$core$dorun.cljs$core$IFn$_invoke$arity$2 = cljs$core$dorun__2;
return cljs$core$dorun;
})()
;
/**
 * When lazy sequences are produced via functions that have side
 * effects, any effects other than those needed to produce the first
 * element in the seq do not occur until the seq is consumed. doall can
 * be used to force any effects. Walks through the successive nexts of
 * the seq, retains the head and returns it, thus causing the entire
 * seq to reside in memory at one time.
 */
cljs.core.doall = (function() {
var cljs$core$doall = null;
var cljs$core$doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var cljs$core$doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
cljs$core$doall = function(n,coll){
switch(arguments.length){
case 1:
return cljs$core$doall__1.call(this,n);
case 2:
return cljs$core$doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$doall.cljs$core$IFn$_invoke$arity$1 = cljs$core$doall__1;
cljs$core$doall.cljs$core$IFn$_invoke$arity$2 = cljs$core$doall__2;
return cljs$core$doall;
})()
;
/**
 * Returns true if x is a JavaScript RegExp instance.
 */
cljs.core.regexp_QMARK_ = (function cljs$core$regexp_QMARK_(x){
return (x instanceof RegExp);
});
/**
 * Returns the result of (re-find re s) if re fully matches s.
 */
cljs.core.re_matches = (function cljs$core$re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
 * Returns the first regex match, if any, of s to re, using
 * re.exec(s). Returns a vector, containing first the matching
 * substring, then any capturing groups if the regular expression contains
 * capturing groups.
 */
cljs.core.re_find = (function cljs$core$re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
 * Returns a lazy sequence of successive matches of re in s.
 */
cljs.core.re_seq = (function cljs$core$re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?cljs$core$re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
 * Returns an instance of RegExp which has compiled the provided string.
 */
cljs.core.re_pattern = (function cljs$core$re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__35660 = cljs.core.re_find(/^\(\?([idmsux]*)\)/,s);
var prefix = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35660,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35660,(1),null);
var pattern = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,cljs.core.count(prefix));
return (new RegExp(pattern,(function (){var or__24183__auto__ = flags;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return "";
}
})()));
}
});
cljs.core.pr_sequential_writer = (function cljs$core$pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_35668 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__24183__auto__ = cljs.core.constant$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__35669_35675 = cljs.core.first(coll);
var G__35670_35676 = writer;
var G__35671_35677 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35669_35675,G__35670_35676,G__35671_35677) : print_one.call(null,G__35669_35675,G__35670_35676,G__35671_35677));
} else {
}

var coll_35678__$1 = cljs.core.next(coll);
var n_35679 = (cljs.core.constant$keyword$print_DASH_length.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_35678__$1) && (((n_35679 == null)) || (!((n_35679 === (0)))))){
cljs.core._write(writer,sep);

var G__35672_35680 = cljs.core.first(coll_35678__$1);
var G__35673_35681 = writer;
var G__35674_35682 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35672_35680,G__35673_35681,G__35674_35682) : print_one.call(null,G__35672_35680,G__35673_35681,G__35674_35682));

var G__35683 = cljs.core.next(coll_35678__$1);
var G__35684 = (n_35679 - (1));
coll_35678__$1 = G__35683;
n_35679 = G__35684;
continue;
} else {
if((cljs.core.seq(coll_35678__$1)) && ((n_35679 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__24183__auto__ = cljs.core.constant$keyword$more_DASH_marker.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_35668;
}});
/**
 * @param {...*} var_args
 */
cljs.core.write_all = (function() { 
var cljs$core$write_all__delegate = function (writer,ss){
var seq__35689 = cljs.core.seq(ss);
var chunk__35690 = null;
var count__35691 = (0);
var i__35692 = (0);
while(true){
if((i__35692 < count__35691)){
var s = chunk__35690.cljs$core$IIndexed$_nth$arity$2(null,i__35692);
cljs.core._write(writer,s);

var G__35693 = seq__35689;
var G__35694 = chunk__35690;
var G__35695 = count__35691;
var G__35696 = (i__35692 + (1));
seq__35689 = G__35693;
chunk__35690 = G__35694;
count__35691 = G__35695;
i__35692 = G__35696;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35689);
if(temp__4126__auto__){
var seq__35689__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35689__$1)){
var c__24968__auto__ = cljs.core.chunk_first(seq__35689__$1);
var G__35697 = cljs.core.chunk_rest(seq__35689__$1);
var G__35698 = c__24968__auto__;
var G__35699 = cljs.core.count(c__24968__auto__);
var G__35700 = (0);
seq__35689 = G__35697;
chunk__35690 = G__35698;
count__35691 = G__35699;
i__35692 = G__35700;
continue;
} else {
var s = cljs.core.first(seq__35689__$1);
cljs.core._write(writer,s);

var G__35701 = cljs.core.next(seq__35689__$1);
var G__35702 = null;
var G__35703 = (0);
var G__35704 = (0);
seq__35689 = G__35701;
chunk__35690 = G__35702;
count__35691 = G__35703;
i__35692 = G__35704;
continue;
}
} else {
return null;
}
}
break;
}
};
var cljs$core$write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__35705__i = 0, G__35705__a = new Array(arguments.length -  1);
while (G__35705__i < G__35705__a.length) {G__35705__a[G__35705__i] = arguments[G__35705__i + 1]; ++G__35705__i;}
  ss = new cljs.core.IndexedSeq(G__35705__a,0);
} 
return cljs$core$write_all__delegate.call(this,writer,ss);};
cljs$core$write_all.cljs$lang$maxFixedArity = 1;
cljs$core$write_all.cljs$lang$applyTo = (function (arglist__35706){
var writer = cljs.core.first(arglist__35706);
var ss = cljs.core.rest(arglist__35706);
return cljs$core$write_all__delegate(writer,ss);
});
cljs$core$write_all.cljs$core$IFn$_invoke$arity$variadic = cljs$core$write_all__delegate;
return cljs$core$write_all;
})()
;
cljs.core.string_print = (function cljs$core$string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function cljs$core$flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj35708 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj35708;
})();
cljs.core.quote_string = (function cljs$core$quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__35711 = "[\\\\\"\b\f\n\r\t]";
var G__35712 = "g";
return RegExp(G__35711,G__35712);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function cljs$core$pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__24171__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$meta);
if(cljs.core.truth_(and__24171__auto__)){
var and__24171__auto____$1 = (function (){var G__35726 = obj;
if(G__35726){
var bit__24857__auto__ = (G__35726.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__24857__auto__) || (G__35726.cljs$core$IMeta$)){
return true;
} else {
if((!G__35726.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35726);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__35726);
}
})();
if(and__24171__auto____$1){
return cljs.core.meta(obj);
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__35727_35737 = cljs.core.meta(obj);
var G__35728_35738 = writer;
var G__35729_35739 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__35727_35737,G__35728_35738,G__35729_35739) : cljs.core.pr_writer.call(null,G__35727_35737,G__35728_35738,G__35729_35739));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__35730 = obj;
if(G__35730){
var bit__24850__auto__ = (G__35730.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24850__auto__) || (G__35730.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__35731 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__35732 = cljs.core.pr_writer;
var G__35733 = writer;
var G__35734 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__35731,G__35732,G__35733,G__35734) : cljs.core.print_map.call(null,G__35731,G__35732,G__35733,G__35734));
} else {
if(cljs.core.array_QMARK_(obj)){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__35735 = obj;
return goog.isString(G__35735);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$readably.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__35740 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__35740;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__35736 = obj;
if(G__35736){
var bit__24857__auto__ = (G__35736.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__24857__auto__) || (G__35736.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__35736.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__35736);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__35736);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
 * Prefer this to pr-seq, because it makes the printing function
 * configurable, allowing efficient implementations such as appending
 * to a StringBuffer.
 */
cljs.core.pr_writer = (function cljs$core$pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$alt_DASH_impl.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__35744 = obj;
var G__35745 = writer;
var G__35746 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$fallback_DASH_impl,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__35744,G__35745,G__35746) : alt_impl.call(null,G__35744,G__35745,G__35746));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function cljs$core$pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__35751 = cljs.core.seq(cljs.core.next(objs));
var chunk__35752 = null;
var count__35753 = (0);
var i__35754 = (0);
while(true){
if((i__35754 < count__35753)){
var obj = chunk__35752.cljs$core$IIndexed$_nth$arity$2(null,i__35754);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__35755 = seq__35751;
var G__35756 = chunk__35752;
var G__35757 = count__35753;
var G__35758 = (i__35754 + (1));
seq__35751 = G__35755;
chunk__35752 = G__35756;
count__35753 = G__35757;
i__35754 = G__35758;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__35751);
if(temp__4126__auto__){
var seq__35751__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__35751__$1)){
var c__24968__auto__ = cljs.core.chunk_first(seq__35751__$1);
var G__35759 = cljs.core.chunk_rest(seq__35751__$1);
var G__35760 = c__24968__auto__;
var G__35761 = cljs.core.count(c__24968__auto__);
var G__35762 = (0);
seq__35751 = G__35759;
chunk__35752 = G__35760;
count__35753 = G__35761;
i__35754 = G__35762;
continue;
} else {
var obj = cljs.core.first(seq__35751__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__35763 = cljs.core.next(seq__35751__$1);
var G__35764 = null;
var G__35765 = (0);
var G__35766 = (0);
seq__35751 = G__35763;
chunk__35752 = G__35764;
count__35753 = G__35765;
i__35754 = G__35766;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function cljs$core$pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
 * Prints a sequence of objects to a string, observing all the
 * options given in opts
 */
cljs.core.pr_str_with_opts = (function cljs$core$pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
 * Same as pr-str-with-opts followed by (newline)
 */
cljs.core.prn_str_with_opts = (function cljs$core$prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
 * Prints a sequence of objects using string-print, observing all
 * the options given in opts
 */
cljs.core.pr_with_opts = (function cljs$core$pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function cljs$core$newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$flush_DASH_on_DASH_newline))){
return cljs.core.flush();
} else {
return null;
}
});
/**
 * pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
 * @param {...*} var_args
 */
cljs.core.pr_str = (function() { 
var cljs$core$pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35767__i = 0, G__35767__a = new Array(arguments.length -  0);
while (G__35767__i < G__35767__a.length) {G__35767__a[G__35767__i] = arguments[G__35767__i + 0]; ++G__35767__i;}
  objs = new cljs.core.IndexedSeq(G__35767__a,0);
} 
return cljs$core$pr_str__delegate.call(this,objs);};
cljs$core$pr_str.cljs$lang$maxFixedArity = 0;
cljs$core$pr_str.cljs$lang$applyTo = (function (arglist__35768){
var objs = cljs.core.seq(arglist__35768);
return cljs$core$pr_str__delegate(objs);
});
cljs$core$pr_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr_str__delegate;
return cljs$core$pr_str;
})()
;
/**
 * Same as pr-str followed by (newline)
 * @param {...*} var_args
 */
cljs.core.prn_str = (function() { 
var cljs$core$prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35769__i = 0, G__35769__a = new Array(arguments.length -  0);
while (G__35769__i < G__35769__a.length) {G__35769__a[G__35769__i] = arguments[G__35769__i + 0]; ++G__35769__i;}
  objs = new cljs.core.IndexedSeq(G__35769__a,0);
} 
return cljs$core$prn_str__delegate.call(this,objs);};
cljs$core$prn_str.cljs$lang$maxFixedArity = 0;
cljs$core$prn_str.cljs$lang$applyTo = (function (arglist__35770){
var objs = cljs.core.seq(arglist__35770);
return cljs$core$prn_str__delegate(objs);
});
cljs$core$prn_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn_str__delegate;
return cljs$core$prn_str;
})()
;
/**
 * Prints the object(s) using string-print.  Prints the
 * object(s), separated by spaces if there is more than one.
 * By default, pr and prn print in a way that objects can be
 * read by the reader
 * @param {...*} var_args
 */
cljs.core.pr = (function() { 
var cljs$core$pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var cljs$core$pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35771__i = 0, G__35771__a = new Array(arguments.length -  0);
while (G__35771__i < G__35771__a.length) {G__35771__a[G__35771__i] = arguments[G__35771__i + 0]; ++G__35771__i;}
  objs = new cljs.core.IndexedSeq(G__35771__a,0);
} 
return cljs$core$pr__delegate.call(this,objs);};
cljs$core$pr.cljs$lang$maxFixedArity = 0;
cljs$core$pr.cljs$lang$applyTo = (function (arglist__35772){
var objs = cljs.core.seq(arglist__35772);
return cljs$core$pr__delegate(objs);
});
cljs$core$pr.cljs$core$IFn$_invoke$arity$variadic = cljs$core$pr__delegate;
return cljs$core$pr;
})()
;
/**
 * Prints the object(s) using string-print.
 * print and println produce output for human consumption.
 * @param {...*} var_args
 */
cljs.core.print = (function() { 
var cljs$core$cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35773__i = 0, G__35773__a = new Array(arguments.length -  0);
while (G__35773__i < G__35773__a.length) {G__35773__a[G__35773__i] = arguments[G__35773__i + 0]; ++G__35773__i;}
  objs = new cljs.core.IndexedSeq(G__35773__a,0);
} 
return cljs$core$cljs_core_print__delegate.call(this,objs);};
cljs$core$cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs$core$cljs_core_print.cljs$lang$applyTo = (function (arglist__35774){
var objs = cljs.core.seq(arglist__35774);
return cljs$core$cljs_core_print__delegate(objs);
});
cljs$core$cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs$core$cljs_core_print__delegate;
return cljs$core$cljs_core_print;
})()
;
/**
 * print to a string, returning it
 * @param {...*} var_args
 */
cljs.core.print_str = (function() { 
var cljs$core$print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35775__i = 0, G__35775__a = new Array(arguments.length -  0);
while (G__35775__i < G__35775__a.length) {G__35775__a[G__35775__i] = arguments[G__35775__i + 0]; ++G__35775__i;}
  objs = new cljs.core.IndexedSeq(G__35775__a,0);
} 
return cljs$core$print_str__delegate.call(this,objs);};
cljs$core$print_str.cljs$lang$maxFixedArity = 0;
cljs$core$print_str.cljs$lang$applyTo = (function (arglist__35776){
var objs = cljs.core.seq(arglist__35776);
return cljs$core$print_str__delegate(objs);
});
cljs$core$print_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$print_str__delegate;
return cljs$core$print_str;
})()
;
/**
 * Same as print followed by (newline)
 * @param {...*} var_args
 */
cljs.core.println = (function() { 
var cljs$core$println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35777__i = 0, G__35777__a = new Array(arguments.length -  0);
while (G__35777__i < G__35777__a.length) {G__35777__a[G__35777__i] = arguments[G__35777__i + 0]; ++G__35777__i;}
  objs = new cljs.core.IndexedSeq(G__35777__a,0);
} 
return cljs$core$println__delegate.call(this,objs);};
cljs$core$println.cljs$lang$maxFixedArity = 0;
cljs$core$println.cljs$lang$applyTo = (function (arglist__35778){
var objs = cljs.core.seq(arglist__35778);
return cljs$core$println__delegate(objs);
});
cljs$core$println.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println__delegate;
return cljs$core$println;
})()
;
/**
 * println to a string, returning it
 * @param {...*} var_args
 */
cljs.core.println_str = (function() { 
var cljs$core$println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$readably,false));
};
var cljs$core$println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35779__i = 0, G__35779__a = new Array(arguments.length -  0);
while (G__35779__i < G__35779__a.length) {G__35779__a[G__35779__i] = arguments[G__35779__i + 0]; ++G__35779__i;}
  objs = new cljs.core.IndexedSeq(G__35779__a,0);
} 
return cljs$core$println_str__delegate.call(this,objs);};
cljs$core$println_str.cljs$lang$maxFixedArity = 0;
cljs$core$println_str.cljs$lang$applyTo = (function (arglist__35780){
var objs = cljs.core.seq(arglist__35780);
return cljs$core$println_str__delegate(objs);
});
cljs$core$println_str.cljs$core$IFn$_invoke$arity$variadic = cljs$core$println_str__delegate;
return cljs$core$println_str;
})()
;
/**
 * Same as pr followed by (newline).
 * @param {...*} var_args
 */
cljs.core.prn = (function() { 
var cljs$core$prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var cljs$core$prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__35781__i = 0, G__35781__a = new Array(arguments.length -  0);
while (G__35781__i < G__35781__a.length) {G__35781__a[G__35781__i] = arguments[G__35781__i + 0]; ++G__35781__i;}
  objs = new cljs.core.IndexedSeq(G__35781__a,0);
} 
return cljs$core$prn__delegate.call(this,objs);};
cljs$core$prn.cljs$lang$maxFixedArity = 0;
cljs$core$prn.cljs$lang$applyTo = (function (arglist__35782){
var objs = cljs.core.seq(arglist__35782);
return cljs$core$prn__delegate(objs);
});
cljs$core$prn.cljs$core$IFn$_invoke$arity$variadic = cljs$core$prn__delegate;
return cljs$core$prn;
})()
;
cljs.core.print_map = (function cljs$core$print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__35789_35795 = cljs.core.key(e);
var G__35790_35796 = w;
var G__35791_35797 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35789_35795,G__35790_35796,G__35791_35797) : print_one.call(null,G__35789_35795,G__35790_35796,G__35791_35797));

cljs.core._write(w," ");

var G__35792 = cljs.core.val(e);
var G__35793 = w;
var G__35794 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__35792,G__35793,G__35794) : print_one.call(null,G__35792,G__35793,G__35794));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
 * Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
 * 
 * (apply f its-current-meta args)
 * 
 * f must be free of side-effects
 * @param {...*} var_args
 */
cljs.core.alter_meta_BANG_ = (function() { 
var cljs$core$alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var cljs$core$alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__35798__i = 0, G__35798__a = new Array(arguments.length -  2);
while (G__35798__i < G__35798__a.length) {G__35798__a[G__35798__i] = arguments[G__35798__i + 2]; ++G__35798__i;}
  args = new cljs.core.IndexedSeq(G__35798__a,0);
} 
return cljs$core$alter_meta_BANG___delegate.call(this,iref,f,args);};
cljs$core$alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
cljs$core$alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__35799){
var iref = cljs.core.first(arglist__35799);
arglist__35799 = cljs.core.next(arglist__35799);
var f = cljs.core.first(arglist__35799);
var args = cljs.core.rest(arglist__35799);
return cljs$core$alter_meta_BANG___delegate(iref,f,args);
});
cljs$core$alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$alter_meta_BANG___delegate;
return cljs$core$alter_meta_BANG_;
})()
;
/**
 * Atomically resets the metadata for an atom
 */
cljs.core.reset_meta_BANG_ = (function cljs$core$reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
 * Alpha - subject to change.
 * 
 * Adds a watch function to an atom reference. The watch fn must be a
 * fn of 4 args: a key, the reference, its old-state, its
 * new-state. Whenever the reference's state might have been changed,
 * any registered watches will have their functions called. The watch
 * fn will be called synchronously. Note that an atom's state
 * may have changed again prior to the fn call, so use old/new-state
 * rather than derefing the reference. Keys must be unique per
 * reference, and can be used to remove the watch with remove-watch,
 * but are otherwise considered opaque by the watch mechanism.  Bear in
 * mind that regardless of the result or action of the watch fns the
 * atom's value will change.  Example:
 * 
 * (def a (atom 0))
 * (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
 * (swap! a inc)
 * ;; Assertion Error
 * (deref a)
 * ;=> 1
 */
cljs.core.add_watch = (function cljs$core$add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
 * Alpha - subject to change.
 * 
 * Removes a watch (set by add-watch) from a reference
 */
cljs.core.remove_watch = (function cljs$core$remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
 * Returns a new symbol with a unique name. If a prefix string is
 * supplied, the name is prefix# where # is some unique number. If
 * prefix is not supplied, the prefix is 'G__'.
 */
cljs.core.gensym = (function() {
var cljs$core$gensym = null;
var cljs$core$gensym__0 = (function (){
return cljs$core$gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var cljs$core$gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__35802 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35802) : cljs.core.atom.call(null,G__35802));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
cljs$core$gensym = function(prefix_string){
switch(arguments.length){
case 0:
return cljs$core$gensym__0.call(this);
case 1:
return cljs$core$gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$gensym.cljs$core$IFn$_invoke$arity$0 = cljs$core$gensym__0;
cljs$core$gensym.cljs$core$IFn$_invoke$arity$1 = cljs$core$gensym__1;
return cljs$core$gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function cljs$core$__GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
 * returns true if x is a Delay created with delay
 */
cljs.core.delay_QMARK_ = (function cljs$core$delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
 * If x is a Delay, returns the (possibly cached) value of its expression, else returns x
 */
cljs.core.force = (function cljs$core$force(x){
if(cljs.core.delay_QMARK_(x)){
var G__35804 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35804) : cljs.core.deref.call(null,G__35804));
} else {
return x;
}
});
/**
 * Returns true if a value has been produced for a promise, delay, future or lazy sequence.
 */
cljs.core.realized_QMARK_ = (function cljs$core$realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function cljs$core$preserving_reduced(rf){
return (function (p1__35805_SHARP_,p2__35806_SHARP_){
var ret = (function (){var G__35809 = p1__35805_SHARP_;
var G__35810 = p2__35806_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35809,G__35810) : rf.call(null,G__35809,G__35810));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
 * A transducer which concatenates the contents of each input, which must be a
 * collection, into the reduction.
 */
cljs.core.cat = (function cljs$core$cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__35813 = null;
var G__35813__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35813__1 = (function (result){
var G__35812 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35812) : rf.call(null,G__35812));
});
var G__35813__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__35813 = function(result,input){
switch(arguments.length){
case 0:
return G__35813__0.call(this);
case 1:
return G__35813__1.call(this,result);
case 2:
return G__35813__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35813.cljs$core$IFn$_invoke$arity$0 = G__35813__0;
G__35813.cljs$core$IFn$_invoke$arity$1 = G__35813__1;
G__35813.cljs$core$IFn$_invoke$arity$2 = G__35813__2;
return G__35813;
})()
;})(rf1))
});
/**
 * Returns a lazy sequence removing consecutive duplicates in coll.
 * Returns a transducer when no collection is provided.
 */
cljs.core.dedupe = (function() {
var cljs$core$dedupe = null;
var cljs$core$dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$cljs$core_SLASH_none);
return ((function (pa){
return (function() {
var G__35822 = null;
var G__35822__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__35822__1 = (function (result){
var G__35818 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__35818) : rf.call(null,G__35818));
});
var G__35822__2 = (function (result,input){
var prior = (function (){var G__35819 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35819) : cljs.core.deref.call(null,G__35819));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__35820 = result;
var G__35821 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__35820,G__35821) : rf.call(null,G__35820,G__35821));
}
});
G__35822 = function(result,input){
switch(arguments.length){
case 0:
return G__35822__0.call(this);
case 1:
return G__35822__1.call(this,result);
case 2:
return G__35822__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35822.cljs$core$IFn$_invoke$arity$0 = G__35822__0;
G__35822.cljs$core$IFn$_invoke$arity$1 = G__35822__1;
G__35822.cljs$core$IFn$_invoke$arity$2 = G__35822__2;
return G__35822;
})()
;})(pa))
});
});
var cljs$core$dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
cljs$core$dedupe = function(coll){
switch(arguments.length){
case 0:
return cljs$core$dedupe__0.call(this);
case 1:
return cljs$core$dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$0 = cljs$core$dedupe__0;
cljs$core$dedupe.cljs$core$IFn$_invoke$arity$1 = cljs$core$dedupe__1;
return cljs$core$dedupe;
})()
;
/**
 * Returns items from coll with random probability of prob (0.0 -
 * 1.0).  Returns a transducer when no collection is provided.
 */
cljs.core.random_sample = (function() {
var cljs$core$random_sample = null;
var cljs$core$random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var cljs$core$random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
cljs$core$random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return cljs$core$random_sample__1.call(this,prob);
case 2:
return cljs$core$random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$1 = cljs$core$random_sample__1;
cljs$core$random_sample.cljs$core$IFn$_invoke$arity$2 = cljs$core$random_sample__2;
return cljs$core$random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function cljs$core$__GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__25159__auto__ = this;
return cljs.core.es6_iterator(this__25159__auto__);
}));
/**
 * Returns a reducible/iterable/seqable application of
 * the transducer to the items in coll. Note that these applications
 * will be performed every time iterator/seq/reduce is called.
 */
cljs.core.eduction = (function cljs$core$eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
 * Runs the supplied procedure (via reduce), for purposes of side
 * effects, on successive items in the collection. Returns nil
 */
cljs.core.run_BANG_ = (function cljs$core$run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__35824_SHARP_,p2__35823_SHARP_){
var G__35826 = p2__35823_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__35826) : proc.call(null,G__35826));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj35828 = {};
return obj35828;
})();

/**
 * Recursively transforms clj values to JavaScript
 */
cljs.core._clj__GT_js = (function cljs$core$_clj__GT_js(x){
if((function (){var and__24171__auto__ = x;
if(and__24171__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__24171__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__24819__auto__ = (((x == null))?null:x);
return (function (){var or__24183__auto__ = (cljs.core._clj__GT_js[(function (){var G__35832 = x__24819__auto__;
return goog.typeOf(G__35832);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

/**
 * Transforms map keys to valid JavaScript keys. Arbitrary keys are
 * encoded to their string representation via (pr-str x)
 */
cljs.core._key__GT_js = (function cljs$core$_key__GT_js(x){
if((function (){var and__24171__auto__ = x;
if(and__24171__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__24171__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__24819__auto__ = (((x == null))?null:x);
return (function (){var or__24183__auto__ = (cljs.core._key__GT_js[(function (){var G__35836 = x__24819__auto__;
return goog.typeOf(G__35836);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function cljs$core$key__GT_js(k){
if((function (){var G__35839 = k;
if(G__35839){
var bit__24857__auto__ = null;
if(cljs.core.truth_((function (){var or__24183__auto__ = bit__24857__auto__;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return G__35839.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__35839.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35839);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35839);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__35840 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__35840) : cljs.core.clj__GT_js.call(null,G__35840));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
 * Recursively transforms ClojureScript values to JavaScript.
 * sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
 * Maps become Objects. Arbitrary keys are encoded to by key->js.
 */
cljs.core.clj__GT_js = (function cljs$core$clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__35856 = x;
if(G__35856){
var bit__24857__auto__ = null;
if(cljs.core.truth_((function (){var or__24183__auto__ = bit__24857__auto__;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return G__35856.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__35856.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35856);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__35856);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj35858 = {};
return obj35858;
})();
var seq__35859_35869 = cljs.core.seq(x);
var chunk__35860_35870 = null;
var count__35861_35871 = (0);
var i__35862_35872 = (0);
while(true){
if((i__35862_35872 < count__35861_35871)){
var vec__35863_35873 = chunk__35860_35870.cljs$core$IIndexed$_nth$arity$2(null,i__35862_35872);
var k_35874 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35863_35873,(0),null);
var v_35875 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35863_35873,(1),null);
(m[cljs.core.key__GT_js(k_35874)] = cljs$core$clj__GT_js(v_35875));

var G__35876 = seq__35859_35869;
var G__35877 = chunk__35860_35870;
var G__35878 = count__35861_35871;
var G__35879 = (i__35862_35872 + (1));
seq__35859_35869 = G__35876;
chunk__35860_35870 = G__35877;
count__35861_35871 = G__35878;
i__35862_35872 = G__35879;
continue;
} else {
var temp__4126__auto___35880 = cljs.core.seq(seq__35859_35869);
if(temp__4126__auto___35880){
var seq__35859_35881__$1 = temp__4126__auto___35880;
if(cljs.core.chunked_seq_QMARK_(seq__35859_35881__$1)){
var c__24968__auto___35882 = cljs.core.chunk_first(seq__35859_35881__$1);
var G__35883 = cljs.core.chunk_rest(seq__35859_35881__$1);
var G__35884 = c__24968__auto___35882;
var G__35885 = cljs.core.count(c__24968__auto___35882);
var G__35886 = (0);
seq__35859_35869 = G__35883;
chunk__35860_35870 = G__35884;
count__35861_35871 = G__35885;
i__35862_35872 = G__35886;
continue;
} else {
var vec__35864_35887 = cljs.core.first(seq__35859_35881__$1);
var k_35888 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35864_35887,(0),null);
var v_35889 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__35864_35887,(1),null);
(m[cljs.core.key__GT_js(k_35888)] = cljs$core$clj__GT_js(v_35889));

var G__35890 = cljs.core.next(seq__35859_35881__$1);
var G__35891 = null;
var G__35892 = (0);
var G__35893 = (0);
seq__35859_35869 = G__35890;
chunk__35860_35870 = G__35891;
count__35861_35871 = G__35892;
i__35862_35872 = G__35893;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__35865_35894 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$clj__GT_js,x));
var chunk__35866_35895 = null;
var count__35867_35896 = (0);
var i__35868_35897 = (0);
while(true){
if((i__35868_35897 < count__35867_35896)){
var x_35898__$1 = chunk__35866_35895.cljs$core$IIndexed$_nth$arity$2(null,i__35868_35897);
arr.push(x_35898__$1);

var G__35899 = seq__35865_35894;
var G__35900 = chunk__35866_35895;
var G__35901 = count__35867_35896;
var G__35902 = (i__35868_35897 + (1));
seq__35865_35894 = G__35899;
chunk__35866_35895 = G__35900;
count__35867_35896 = G__35901;
i__35868_35897 = G__35902;
continue;
} else {
var temp__4126__auto___35903 = cljs.core.seq(seq__35865_35894);
if(temp__4126__auto___35903){
var seq__35865_35904__$1 = temp__4126__auto___35903;
if(cljs.core.chunked_seq_QMARK_(seq__35865_35904__$1)){
var c__24968__auto___35905 = cljs.core.chunk_first(seq__35865_35904__$1);
var G__35906 = cljs.core.chunk_rest(seq__35865_35904__$1);
var G__35907 = c__24968__auto___35905;
var G__35908 = cljs.core.count(c__24968__auto___35905);
var G__35909 = (0);
seq__35865_35894 = G__35906;
chunk__35866_35895 = G__35907;
count__35867_35896 = G__35908;
i__35868_35897 = G__35909;
continue;
} else {
var x_35910__$1 = cljs.core.first(seq__35865_35904__$1);
arr.push(x_35910__$1);

var G__35911 = cljs.core.next(seq__35865_35904__$1);
var G__35912 = null;
var G__35913 = (0);
var G__35914 = (0);
seq__35865_35894 = G__35911;
chunk__35866_35895 = G__35912;
count__35867_35896 = G__35913;
i__35868_35897 = G__35914;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj35916 = {};
return obj35916;
})();

/**
 * Transforms JavaScript values to Clojure
 */
cljs.core._js__GT_clj = (function cljs$core$_js__GT_clj(x,options){
if((function (){var and__24171__auto__ = x;
if(and__24171__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__24171__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__24819__auto__ = (((x == null))?null:x);
return (function (){var or__24183__auto__ = (cljs.core._js__GT_clj[(function (){var G__35920 = x__24819__auto__;
return goog.typeOf(G__35920);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
 * Recursively transforms JavaScript arrays into ClojureScript
 * vectors, and JavaScript objects into ClojureScript maps.  With
 * option ':keywordize-keys true' will convert object fields from
 * strings to keywords.
 * @param {...*} var_args
 */
cljs.core.js__GT_clj = (function() {
var cljs$core$js__GT_clj = null;
var cljs$core$js__GT_clj__1 = (function (x){
return cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$keywordize_DASH_keys,false], null)], 0));
});
var cljs$core$js__GT_clj__2 = (function() { 
var G__35977__delegate = function (x,opts){
var map__35950 = opts;
var map__35950__$1 = ((cljs.core.seq_QMARK_(map__35950))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__35950):map__35950);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__35950__$1,cljs.core.constant$keyword$keywordize_DASH_keys);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__35950,map__35950__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn(x__$1){
if((function (){var G__35966 = x__$1;
if(G__35966){
var bit__24857__auto__ = null;
if(cljs.core.truth_((function (){var or__24183__auto__ = bit__24857__auto__;
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return G__35966.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__35966.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__35966);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__35966);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if(cljs.core.array_QMARK_(x__$1)){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs$core$js__GT_clj_$_thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__24937__auto__ = ((function (map__35950,map__35950__$1,keywordize_keys,keyfn){
return (function cljs$core$js__GT_clj_$_thisfn_$_iter__35967(s__35968){
return (new cljs.core.LazySeq(null,((function (map__35950,map__35950__$1,keywordize_keys,keyfn){
return (function (){
var s__35968__$1 = s__35968;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__35968__$1);
if(temp__4126__auto__){
var s__35968__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__35968__$2)){
var c__24935__auto__ = cljs.core.chunk_first(s__35968__$2);
var size__24936__auto__ = cljs.core.count(c__24935__auto__);
var b__35970 = cljs.core.chunk_buffer(size__24936__auto__);
if((function (){var i__35969 = (0);
while(true){
if((i__35969 < size__24936__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__24935__auto__,i__35969);
cljs.core.chunk_append(b__35970,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__35975 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35975) : keyfn.call(null,G__35975));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null));

var G__35978 = (i__35969 + (1));
i__35969 = G__35978;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__35970),cljs$core$js__GT_clj_$_thisfn_$_iter__35967(cljs.core.chunk_rest(s__35968__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__35970),null);
}
} else {
var k = cljs.core.first(s__35968__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__35976 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__35976) : keyfn.call(null,G__35976));
})(),cljs$core$js__GT_clj_$_thisfn((x__$1[k]))], null),cljs$core$js__GT_clj_$_thisfn_$_iter__35967(cljs.core.rest(s__35968__$2)));
}
} else {
return null;
}
break;
}
});})(map__35950,map__35950__$1,keywordize_keys,keyfn))
,null,null));
});})(map__35950,map__35950__$1,keywordize_keys,keyfn))
;
return iter__24937__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__35950,map__35950__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__35977 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__35979__i = 0, G__35979__a = new Array(arguments.length -  1);
while (G__35979__i < G__35979__a.length) {G__35979__a[G__35979__i] = arguments[G__35979__i + 1]; ++G__35979__i;}
  opts = new cljs.core.IndexedSeq(G__35979__a,0);
} 
return G__35977__delegate.call(this,x,opts);};
G__35977.cljs$lang$maxFixedArity = 1;
G__35977.cljs$lang$applyTo = (function (arglist__35980){
var x = cljs.core.first(arglist__35980);
var opts = cljs.core.rest(arglist__35980);
return G__35977__delegate(x,opts);
});
G__35977.cljs$core$IFn$_invoke$arity$variadic = G__35977__delegate;
return G__35977;
})()
;
cljs$core$js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return cljs$core$js__GT_clj__1.call(this,x);
default:
var G__35981 = null;
if (arguments.length > 1) {
var G__35982__i = 0, G__35982__a = new Array(arguments.length -  1);
while (G__35982__i < G__35982__a.length) {G__35982__a[G__35982__i] = arguments[G__35982__i + 1]; ++G__35982__i;}
G__35981 = new cljs.core.IndexedSeq(G__35982__a,0);
}
return cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__35981);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$js__GT_clj.cljs$lang$maxFixedArity = 1;
cljs$core$js__GT_clj.cljs$lang$applyTo = cljs$core$js__GT_clj__2.cljs$lang$applyTo;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$1 = cljs$core$js__GT_clj__1;
cljs$core$js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = cljs$core$js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$js__GT_clj;
})()
;
/**
 * Returns a memoized version of a referentially transparent function. The
 * memoized version of the function keeps a cache of the mapping from arguments
 * to results and, when calls with the same arguments are repeated often, has
 * higher performance at the expense of higher memory use.
 */
cljs.core.memoize = (function cljs$core$memoize(f){
var mem = (function (){var G__35985 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__35985) : cljs.core.atom.call(null,G__35985));
})();
return ((function (mem){
return (function() { 
var G__35987__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__35986 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__35986) : cljs.core.deref.call(null,G__35986));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__35987 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__35988__i = 0, G__35988__a = new Array(arguments.length -  0);
while (G__35988__i < G__35988__a.length) {G__35988__a[G__35988__i] = arguments[G__35988__i + 0]; ++G__35988__i;}
  args = new cljs.core.IndexedSeq(G__35988__a,0);
} 
return G__35987__delegate.call(this,args);};
G__35987.cljs$lang$maxFixedArity = 0;
G__35987.cljs$lang$applyTo = (function (arglist__35989){
var args = cljs.core.seq(arglist__35989);
return G__35987__delegate(args);
});
G__35987.cljs$core$IFn$_invoke$arity$variadic = G__35987__delegate;
return G__35987;
})()
;
;})(mem))
});
/**
 * trampoline can be used to convert algorithms requiring mutual
 * recursion without stack consumption. Calls f with supplied args, if
 * any. If f returns a fn, calls that fn with no arguments, and
 * continues to repeat, until the return value is not a fn, then
 * returns that non-fn value. Note that if you want to return a fn as a
 * final value, you must wrap it in some data structure and unpack it
 * after trampoline returns.
 * @param {...*} var_args
 */
cljs.core.trampoline = (function() {
var cljs$core$trampoline = null;
var cljs$core$trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__35991 = ret;
f = G__35991;
continue;
} else {
return ret;
}
break;
}
});
var cljs$core$trampoline__2 = (function() { 
var G__35992__delegate = function (f,args){
return cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__35992 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__35993__i = 0, G__35993__a = new Array(arguments.length -  1);
while (G__35993__i < G__35993__a.length) {G__35993__a[G__35993__i] = arguments[G__35993__i + 1]; ++G__35993__i;}
  args = new cljs.core.IndexedSeq(G__35993__a,0);
} 
return G__35992__delegate.call(this,f,args);};
G__35992.cljs$lang$maxFixedArity = 1;
G__35992.cljs$lang$applyTo = (function (arglist__35994){
var f = cljs.core.first(arglist__35994);
var args = cljs.core.rest(arglist__35994);
return G__35992__delegate(f,args);
});
G__35992.cljs$core$IFn$_invoke$arity$variadic = G__35992__delegate;
return G__35992;
})()
;
cljs$core$trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return cljs$core$trampoline__1.call(this,f);
default:
var G__35995 = null;
if (arguments.length > 1) {
var G__35996__i = 0, G__35996__a = new Array(arguments.length -  1);
while (G__35996__i < G__35996__a.length) {G__35996__a[G__35996__i] = arguments[G__35996__i + 1]; ++G__35996__i;}
G__35995 = new cljs.core.IndexedSeq(G__35996__a,0);
}
return cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__35995);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$trampoline.cljs$lang$maxFixedArity = 1;
cljs$core$trampoline.cljs$lang$applyTo = cljs$core$trampoline__2.cljs$lang$applyTo;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$1 = cljs$core$trampoline__1;
cljs$core$trampoline.cljs$core$IFn$_invoke$arity$variadic = cljs$core$trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return cljs$core$trampoline;
})()
;
/**
 * Returns a random floating point number between 0 (inclusive) and
 * n (default 1) (exclusive).
 */
cljs.core.rand = (function() {
var cljs$core$rand = null;
var cljs$core$rand__0 = (function (){
return cljs$core$rand.cljs$core$IFn$_invoke$arity$1((1));
});
var cljs$core$rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
cljs$core$rand = function(n){
switch(arguments.length){
case 0:
return cljs$core$rand__0.call(this);
case 1:
return cljs$core$rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$rand.cljs$core$IFn$_invoke$arity$0 = cljs$core$rand__0;
cljs$core$rand.cljs$core$IFn$_invoke$arity$1 = cljs$core$rand__1;
return cljs$core$rand;
})()
;
/**
 * Returns a random integer between 0 (inclusive) and n (exclusive).
 */
cljs.core.rand_int = (function cljs$core$rand_int(n){
var G__35999 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__35999) : Math.floor.call(null,G__35999));
});
/**
 * Return a random element of the (sequential) collection. Will have
 * the same performance characteristics as nth for the given
 * collection.
 */
cljs.core.rand_nth = (function cljs$core$rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
 * Returns a map of the elements of coll keyed by the result of
 * f on each element. The value at each key will be a vector of the
 * corresponding elements, in the order they appeared in coll.
 */
cljs.core.group_by = (function cljs$core$group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__36001 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__36001) : f.call(null,G__36001));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
 * Creates a hierarchy object for use with derive, isa? etc.
 */
cljs.core.make_hierarchy = (function cljs$core$make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$parents,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$descendants,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$ancestors,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function cljs$core$get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__36003 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__36003) : cljs.core.atom.call(null,G__36003));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
 * @param {...*} var_args
 */
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var cljs$core$swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var cljs$core$swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__36004__i = 0, G__36004__a = new Array(arguments.length -  1);
while (G__36004__i < G__36004__a.length) {G__36004__a[G__36004__i] = arguments[G__36004__i + 1]; ++G__36004__i;}
  args = new cljs.core.IndexedSeq(G__36004__a,0);
} 
return cljs$core$swap_global_hierarchy_BANG___delegate.call(this,f,args);};
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
cljs$core$swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__36005){
var f = cljs.core.first(arglist__36005);
var args = cljs.core.rest(arglist__36005);
return cljs$core$swap_global_hierarchy_BANG___delegate(f,args);
});
cljs$core$swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = cljs$core$swap_global_hierarchy_BANG___delegate;
return cljs$core$swap_global_hierarchy_BANG_;
})()
;
/**
 * Returns true if (= child parent), or child is directly or indirectly derived from
 * parent, either via a JavaScript type inheritance relationship or a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy
 */
cljs.core.isa_QMARK_ = (function() {
var cljs$core$isa_QMARK_ = null;
var cljs$core$isa_QMARK___2 = (function (child,parent){
return cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__36070 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36070) : cljs.core.deref.call(null,G__36070));
})(),child,parent);
});
var cljs$core$isa_QMARK___3 = (function (h,child,parent){
var or__24183__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
var and__24171__auto__ = cljs.core.vector_QMARK_(parent);
if(and__24171__auto__){
var and__24171__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__24171__auto____$1){
var and__24171__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__24171__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__36095 = cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__36093 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__36093) : child.call(null,G__36093));
})(),(function (){var G__36094 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__36094) : parent.call(null,G__36094));
})());
var G__36096 = (i + (1));
ret = G__36095;
i = G__36096;
continue;
}
break;
}
} else {
return and__24171__auto____$2;
}
} else {
return and__24171__auto____$1;
}
} else {
return and__24171__auto__;
}
}
}
});
cljs$core$isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return cljs$core$isa_QMARK___2.call(this,h,child);
case 3:
return cljs$core$isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = cljs$core$isa_QMARK___2;
cljs$core$isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = cljs$core$isa_QMARK___3;
return cljs$core$isa_QMARK_;
})()
;
/**
 * Returns the immediate parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.parents = (function() {
var cljs$core$parents = null;
var cljs$core$parents__1 = (function (tag){
return cljs$core$parents.cljs$core$IFn$_invoke$arity$2((function (){var G__36100 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36100) : cljs.core.deref.call(null,G__36100));
})(),tag);
});
var cljs$core$parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$parents = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$parents__1.call(this,h);
case 2:
return cljs$core$parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$parents.cljs$core$IFn$_invoke$arity$1 = cljs$core$parents__1;
cljs$core$parents.cljs$core$IFn$_invoke$arity$2 = cljs$core$parents__2;
return cljs$core$parents;
})()
;
/**
 * Returns the immediate and indirect parents of tag, either via a JavaScript type
 * inheritance relationship or a relationship established via derive. h
 * must be a hierarchy obtained from make-hierarchy, if not supplied
 * defaults to the global hierarchy
 */
cljs.core.ancestors = (function() {
var cljs$core$ancestors = null;
var cljs$core$ancestors__1 = (function (tag){
return cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__36104 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36104) : cljs.core.deref.call(null,G__36104));
})(),tag);
});
var cljs$core$ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$ancestors = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$ancestors__1.call(this,h);
case 2:
return cljs$core$ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$1 = cljs$core$ancestors__1;
cljs$core$ancestors.cljs$core$IFn$_invoke$arity$2 = cljs$core$ancestors__2;
return cljs$core$ancestors;
})()
;
/**
 * Returns the immediate and indirect children of tag, through a
 * relationship established via derive. h must be a hierarchy obtained
 * from make-hierarchy, if not supplied defaults to the global
 * hierarchy. Note: does not work on JavaScript type inheritance
 * relationships.
 */
cljs.core.descendants = (function() {
var cljs$core$descendants = null;
var cljs$core$descendants__1 = (function (tag){
return cljs$core$descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__36108 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36108) : cljs.core.deref.call(null,G__36108));
})(),tag);
});
var cljs$core$descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h),tag));
});
cljs$core$descendants = function(h,tag){
switch(arguments.length){
case 1:
return cljs$core$descendants__1.call(this,h);
case 2:
return cljs$core$descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$descendants.cljs$core$IFn$_invoke$arity$1 = cljs$core$descendants__1;
cljs$core$descendants.cljs$core$IFn$_invoke$arity$2 = cljs$core$descendants__2;
return cljs$core$descendants;
})()
;
/**
 * Establishes a parent/child relationship between parent and
 * tag. Parent must be a namespace-qualified symbol or keyword and
 * child can be either a namespace-qualified symbol or keyword or a
 * class. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.derive = (function() {
var cljs$core$derive = null;
var cljs$core$derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__36117 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__36117) : targets.call(null,G__36117));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__36118 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__36118) : sources.call(null,G__36118));
})()));
});})(tp,td,ta))
;
var or__24183__auto__ = ((cljs.core.contains_QMARK_((function (){var G__36122 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__36122) : tp.call(null,G__36122));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__36123 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__36123) : ta.call(null,G__36123));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__36124 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__36124) : ta.call(null,G__36124));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$parents,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$ancestors,tf(cljs.core.constant$keyword$ancestors.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$descendants,tf(cljs.core.constant$keyword$descendants.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return h;
}
});
cljs$core$derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$derive__2.call(this,h,tag);
case 3:
return cljs$core$derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$derive.cljs$core$IFn$_invoke$arity$2 = cljs$core$derive__2;
cljs$core$derive.cljs$core$IFn$_invoke$arity$3 = cljs$core$derive__3;
return cljs$core$derive;
})()
;
/**
 * Removes a parent/child relationship between parent and
 * tag. h must be a hierarchy obtained from make-hierarchy, if not
 * supplied defaults to, and modifies, the global hierarchy.
 */
cljs.core.underive = (function() {
var cljs$core$underive = null;
var cljs$core$underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(cljs$core$underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var cljs$core$underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$parents.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__36131 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36131) : parentMap.call(null,G__36131));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__36132 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36132) : parentMap.call(null,G__36132));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__36125_SHARP_){
return cljs.core.cons(cljs.core.first(p1__36125_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__36125_SHARP_),cljs.core.second(p1__36125_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__36133 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__36133) : parentMap.call(null,G__36133));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__36126_SHARP_,p2__36127_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__36126_SHARP_,p2__36127_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
cljs$core$underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return cljs$core$underive__2.call(this,h,tag);
case 3:
return cljs$core$underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$underive.cljs$core$IFn$_invoke$arity$2 = cljs$core$underive__2;
cljs$core$underive.cljs$core$IFn$_invoke$arity$3 = cljs$core$underive__3;
return cljs$core$underive;
})()
;
cljs.core.reset_cache = (function cljs$core$reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__36136 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36136) : cljs.core.deref.call(null,G__36136));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__36137 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36137) : cljs.core.deref.call(null,G__36137));
}));
});
cljs.core.prefers_STAR_ = (function cljs$core$prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__36153 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36153) : cljs.core.deref.call(null,G__36153));
})().call(null,x);
var or__24183__auto__ = (cljs.core.truth_((function (){var and__24171__auto__ = xprefs;
if(cljs.core.truth_(and__24171__auto__)){
var G__36155 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__36155) : xprefs.call(null,G__36155));
} else {
return and__24171__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__36156 = cljs.core.rest(ps);
ps = G__36156;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24183__auto____$1)){
return or__24183__auto____$1;
} else {
var or__24183__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(cljs$core$prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__36157 = cljs.core.rest(ps);
ps = G__36157;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__24183__auto____$2)){
return or__24183__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function cljs$core$dominates(x,y,prefer_table){
var or__24183__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__24183__auto__)){
return or__24183__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__36171){
var vec__36172 = p__36171;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36172,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__36172,(1),null);
var e = vec__36172;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__36173 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36173) : cljs.core.deref.call(null,G__36173));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__24183__auto__ = (be == null);
if(or__24183__auto__){
return or__24183__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__36174 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36174) : cljs.core.deref.call(null,G__36174));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__36175 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36175) : cljs.core.deref.call(null,G__36175));
})(),(function (){var G__36176 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36176) : cljs.core.deref.call(null,G__36176));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return cljs$core$find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj36178 = {};
return obj36178;
})();

cljs.core._reset = (function cljs$core$_reset(mf){
if((function (){var and__24171__auto__ = mf;
if(and__24171__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__24171__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__24819__auto__ = (((mf == null))?null:mf);
return (function (){var or__24183__auto__ = (cljs.core._reset[(function (){var G__36182 = x__24819__auto__;
return goog.typeOf(G__36182);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._reset["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function cljs$core$_add_method(mf,dispatch_val,method){
if((function (){var and__24171__auto__ = mf;
if(and__24171__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__24171__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__24819__auto__ = (((mf == null))?null:mf);
return (function (){var or__24183__auto__ = (cljs.core._add_method[(function (){var G__36186 = x__24819__auto__;
return goog.typeOf(G__36186);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._add_method["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function cljs$core$_remove_method(mf,dispatch_val){
if((function (){var and__24171__auto__ = mf;
if(and__24171__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__24171__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__24819__auto__ = (((mf == null))?null:mf);
return (function (){var or__24183__auto__ = (cljs.core._remove_method[(function (){var G__36190 = x__24819__auto__;
return goog.typeOf(G__36190);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._remove_method["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function cljs$core$_prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__24171__auto__ = mf;
if(and__24171__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__24171__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__24819__auto__ = (((mf == null))?null:mf);
return (function (){var or__24183__auto__ = (cljs.core._prefer_method[(function (){var G__36194 = x__24819__auto__;
return goog.typeOf(G__36194);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function cljs$core$_get_method(mf,dispatch_val){
if((function (){var and__24171__auto__ = mf;
if(and__24171__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__24171__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__24819__auto__ = (((mf == null))?null:mf);
return (function (){var or__24183__auto__ = (cljs.core._get_method[(function (){var G__36198 = x__24819__auto__;
return goog.typeOf(G__36198);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._get_method["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function cljs$core$_methods(mf){
if((function (){var and__24171__auto__ = mf;
if(and__24171__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__24171__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__24819__auto__ = (((mf == null))?null:mf);
return (function (){var or__24183__auto__ = (cljs.core._methods[(function (){var G__36202 = x__24819__auto__;
return goog.typeOf(G__36202);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._methods["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function cljs$core$_prefers(mf){
if((function (){var and__24171__auto__ = mf;
if(and__24171__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__24171__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__24819__auto__ = (((mf == null))?null:mf);
return (function (){var or__24183__auto__ = (cljs.core._prefers[(function (){var G__36206 = x__24819__auto__;
return goog.typeOf(G__36206);
})()]);
if(or__24183__auto__){
return or__24183__auto__;
} else {
var or__24183__auto____$1 = (cljs.core._prefers["_"]);
if(or__24183__auto____$1){
return or__24183__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function cljs$core$throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__36208 = this$__$1;
return goog.getUid(G__36208);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__36209 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36209) : cljs.core.deref.call(null,G__36209));
})(),(function (){var G__36210 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36210) : cljs.core.deref.call(null,G__36210));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__36211 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36211) : cljs.core.deref.call(null,G__36211));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__36212 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36212) : cljs.core.deref.call(null,G__36212));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__36213 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36213) : cljs.core.deref.call(null,G__36213));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__36214 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__36214) : cljs.core.deref.call(null,G__36214));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__37055 = null;
var G__37055__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__37055__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36215 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__36215) : self__.dispatch_fn.call(null,G__36215));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36216 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__36216) : target_fn.call(null,G__36216));
});
var G__37055__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36217 = a;
var G__36218 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__36217,G__36218) : self__.dispatch_fn.call(null,G__36217,G__36218));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36219 = a;
var G__36220 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__36219,G__36220) : target_fn.call(null,G__36219,G__36220));
});
var G__37055__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36221 = a;
var G__36222 = b;
var G__36223 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__36221,G__36222,G__36223) : self__.dispatch_fn.call(null,G__36221,G__36222,G__36223));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36224 = a;
var G__36225 = b;
var G__36226 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__36224,G__36225,G__36226) : target_fn.call(null,G__36224,G__36225,G__36226));
});
var G__37055__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36227 = a;
var G__36228 = b;
var G__36229 = c;
var G__36230 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__36227,G__36228,G__36229,G__36230) : self__.dispatch_fn.call(null,G__36227,G__36228,G__36229,G__36230));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36231 = a;
var G__36232 = b;
var G__36233 = c;
var G__36234 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__36231,G__36232,G__36233,G__36234) : target_fn.call(null,G__36231,G__36232,G__36233,G__36234));
});
var G__37055__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36235 = a;
var G__36236 = b;
var G__36237 = c;
var G__36238 = d;
var G__36239 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__36235,G__36236,G__36237,G__36238,G__36239) : self__.dispatch_fn.call(null,G__36235,G__36236,G__36237,G__36238,G__36239));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36240 = a;
var G__36241 = b;
var G__36242 = c;
var G__36243 = d;
var G__36244 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__36240,G__36241,G__36242,G__36243,G__36244) : target_fn.call(null,G__36240,G__36241,G__36242,G__36243,G__36244));
});
var G__37055__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36245 = a;
var G__36246 = b;
var G__36247 = c;
var G__36248 = d;
var G__36249 = e;
var G__36250 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__36245,G__36246,G__36247,G__36248,G__36249,G__36250) : self__.dispatch_fn.call(null,G__36245,G__36246,G__36247,G__36248,G__36249,G__36250));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36251 = a;
var G__36252 = b;
var G__36253 = c;
var G__36254 = d;
var G__36255 = e;
var G__36256 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__36251,G__36252,G__36253,G__36254,G__36255,G__36256) : target_fn.call(null,G__36251,G__36252,G__36253,G__36254,G__36255,G__36256));
});
var G__37055__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36257 = a;
var G__36258 = b;
var G__36259 = c;
var G__36260 = d;
var G__36261 = e;
var G__36262 = f;
var G__36263 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__36257,G__36258,G__36259,G__36260,G__36261,G__36262,G__36263) : self__.dispatch_fn.call(null,G__36257,G__36258,G__36259,G__36260,G__36261,G__36262,G__36263));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36264 = a;
var G__36265 = b;
var G__36266 = c;
var G__36267 = d;
var G__36268 = e;
var G__36269 = f;
var G__36270 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__36264,G__36265,G__36266,G__36267,G__36268,G__36269,G__36270) : target_fn.call(null,G__36264,G__36265,G__36266,G__36267,G__36268,G__36269,G__36270));
});
var G__37055__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36271 = a;
var G__36272 = b;
var G__36273 = c;
var G__36274 = d;
var G__36275 = e;
var G__36276 = f;
var G__36277 = g;
var G__36278 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__36271,G__36272,G__36273,G__36274,G__36275,G__36276,G__36277,G__36278) : self__.dispatch_fn.call(null,G__36271,G__36272,G__36273,G__36274,G__36275,G__36276,G__36277,G__36278));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36279 = a;
var G__36280 = b;
var G__36281 = c;
var G__36282 = d;
var G__36283 = e;
var G__36284 = f;
var G__36285 = g;
var G__36286 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__36279,G__36280,G__36281,G__36282,G__36283,G__36284,G__36285,G__36286) : target_fn.call(null,G__36279,G__36280,G__36281,G__36282,G__36283,G__36284,G__36285,G__36286));
});
var G__37055__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36287 = a;
var G__36288 = b;
var G__36289 = c;
var G__36290 = d;
var G__36291 = e;
var G__36292 = f;
var G__36293 = g;
var G__36294 = h;
var G__36295 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__36287,G__36288,G__36289,G__36290,G__36291,G__36292,G__36293,G__36294,G__36295) : self__.dispatch_fn.call(null,G__36287,G__36288,G__36289,G__36290,G__36291,G__36292,G__36293,G__36294,G__36295));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36296 = a;
var G__36297 = b;
var G__36298 = c;
var G__36299 = d;
var G__36300 = e;
var G__36301 = f;
var G__36302 = g;
var G__36303 = h;
var G__36304 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__36296,G__36297,G__36298,G__36299,G__36300,G__36301,G__36302,G__36303,G__36304) : target_fn.call(null,G__36296,G__36297,G__36298,G__36299,G__36300,G__36301,G__36302,G__36303,G__36304));
});
var G__37055__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36305 = a;
var G__36306 = b;
var G__36307 = c;
var G__36308 = d;
var G__36309 = e;
var G__36310 = f;
var G__36311 = g;
var G__36312 = h;
var G__36313 = i;
var G__36314 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__36305,G__36306,G__36307,G__36308,G__36309,G__36310,G__36311,G__36312,G__36313,G__36314) : self__.dispatch_fn.call(null,G__36305,G__36306,G__36307,G__36308,G__36309,G__36310,G__36311,G__36312,G__36313,G__36314));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36315 = a;
var G__36316 = b;
var G__36317 = c;
var G__36318 = d;
var G__36319 = e;
var G__36320 = f;
var G__36321 = g;
var G__36322 = h;
var G__36323 = i;
var G__36324 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__36315,G__36316,G__36317,G__36318,G__36319,G__36320,G__36321,G__36322,G__36323,G__36324) : target_fn.call(null,G__36315,G__36316,G__36317,G__36318,G__36319,G__36320,G__36321,G__36322,G__36323,G__36324));
});
var G__37055__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36325 = a;
var G__36326 = b;
var G__36327 = c;
var G__36328 = d;
var G__36329 = e;
var G__36330 = f;
var G__36331 = g;
var G__36332 = h;
var G__36333 = i;
var G__36334 = j;
var G__36335 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__36325,G__36326,G__36327,G__36328,G__36329,G__36330,G__36331,G__36332,G__36333,G__36334,G__36335) : self__.dispatch_fn.call(null,G__36325,G__36326,G__36327,G__36328,G__36329,G__36330,G__36331,G__36332,G__36333,G__36334,G__36335));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36336 = a;
var G__36337 = b;
var G__36338 = c;
var G__36339 = d;
var G__36340 = e;
var G__36341 = f;
var G__36342 = g;
var G__36343 = h;
var G__36344 = i;
var G__36345 = j;
var G__36346 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__36336,G__36337,G__36338,G__36339,G__36340,G__36341,G__36342,G__36343,G__36344,G__36345,G__36346) : target_fn.call(null,G__36336,G__36337,G__36338,G__36339,G__36340,G__36341,G__36342,G__36343,G__36344,G__36345,G__36346));
});
var G__37055__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36347 = a;
var G__36348 = b;
var G__36349 = c;
var G__36350 = d;
var G__36351 = e;
var G__36352 = f;
var G__36353 = g;
var G__36354 = h;
var G__36355 = i;
var G__36356 = j;
var G__36357 = k;
var G__36358 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__36347,G__36348,G__36349,G__36350,G__36351,G__36352,G__36353,G__36354,G__36355,G__36356,G__36357,G__36358) : self__.dispatch_fn.call(null,G__36347,G__36348,G__36349,G__36350,G__36351,G__36352,G__36353,G__36354,G__36355,G__36356,G__36357,G__36358));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36359 = a;
var G__36360 = b;
var G__36361 = c;
var G__36362 = d;
var G__36363 = e;
var G__36364 = f;
var G__36365 = g;
var G__36366 = h;
var G__36367 = i;
var G__36368 = j;
var G__36369 = k;
var G__36370 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__36359,G__36360,G__36361,G__36362,G__36363,G__36364,G__36365,G__36366,G__36367,G__36368,G__36369,G__36370) : target_fn.call(null,G__36359,G__36360,G__36361,G__36362,G__36363,G__36364,G__36365,G__36366,G__36367,G__36368,G__36369,G__36370));
});
var G__37055__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36371 = a;
var G__36372 = b;
var G__36373 = c;
var G__36374 = d;
var G__36375 = e;
var G__36376 = f;
var G__36377 = g;
var G__36378 = h;
var G__36379 = i;
var G__36380 = j;
var G__36381 = k;
var G__36382 = l;
var G__36383 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__36371,G__36372,G__36373,G__36374,G__36375,G__36376,G__36377,G__36378,G__36379,G__36380,G__36381,G__36382,G__36383) : self__.dispatch_fn.call(null,G__36371,G__36372,G__36373,G__36374,G__36375,G__36376,G__36377,G__36378,G__36379,G__36380,G__36381,G__36382,G__36383));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36384 = a;
var G__36385 = b;
var G__36386 = c;
var G__36387 = d;
var G__36388 = e;
var G__36389 = f;
var G__36390 = g;
var G__36391 = h;
var G__36392 = i;
var G__36393 = j;
var G__36394 = k;
var G__36395 = l;
var G__36396 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__36384,G__36385,G__36386,G__36387,G__36388,G__36389,G__36390,G__36391,G__36392,G__36393,G__36394,G__36395,G__36396) : target_fn.call(null,G__36384,G__36385,G__36386,G__36387,G__36388,G__36389,G__36390,G__36391,G__36392,G__36393,G__36394,G__36395,G__36396));
});
var G__37055__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36397 = a;
var G__36398 = b;
var G__36399 = c;
var G__36400 = d;
var G__36401 = e;
var G__36402 = f;
var G__36403 = g;
var G__36404 = h;
var G__36405 = i;
var G__36406 = j;
var G__36407 = k;
var G__36408 = l;
var G__36409 = m;
var G__36410 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__36397,G__36398,G__36399,G__36400,G__36401,G__36402,G__36403,G__36404,G__36405,G__36406,G__36407,G__36408,G__36409,G__36410) : self__.dispatch_fn.call(null,G__36397,G__36398,G__36399,G__36400,G__36401,G__36402,G__36403,G__36404,G__36405,G__36406,G__36407,G__36408,G__36409,G__36410));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36411 = a;
var G__36412 = b;
var G__36413 = c;
var G__36414 = d;
var G__36415 = e;
var G__36416 = f;
var G__36417 = g;
var G__36418 = h;
var G__36419 = i;
var G__36420 = j;
var G__36421 = k;
var G__36422 = l;
var G__36423 = m;
var G__36424 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__36411,G__36412,G__36413,G__36414,G__36415,G__36416,G__36417,G__36418,G__36419,G__36420,G__36421,G__36422,G__36423,G__36424) : target_fn.call(null,G__36411,G__36412,G__36413,G__36414,G__36415,G__36416,G__36417,G__36418,G__36419,G__36420,G__36421,G__36422,G__36423,G__36424));
});
var G__37055__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36425 = a;
var G__36426 = b;
var G__36427 = c;
var G__36428 = d;
var G__36429 = e;
var G__36430 = f;
var G__36431 = g;
var G__36432 = h;
var G__36433 = i;
var G__36434 = j;
var G__36435 = k;
var G__36436 = l;
var G__36437 = m;
var G__36438 = n;
var G__36439 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__36425,G__36426,G__36427,G__36428,G__36429,G__36430,G__36431,G__36432,G__36433,G__36434,G__36435,G__36436,G__36437,G__36438,G__36439) : self__.dispatch_fn.call(null,G__36425,G__36426,G__36427,G__36428,G__36429,G__36430,G__36431,G__36432,G__36433,G__36434,G__36435,G__36436,G__36437,G__36438,G__36439));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36440 = a;
var G__36441 = b;
var G__36442 = c;
var G__36443 = d;
var G__36444 = e;
var G__36445 = f;
var G__36446 = g;
var G__36447 = h;
var G__36448 = i;
var G__36449 = j;
var G__36450 = k;
var G__36451 = l;
var G__36452 = m;
var G__36453 = n;
var G__36454 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__36440,G__36441,G__36442,G__36443,G__36444,G__36445,G__36446,G__36447,G__36448,G__36449,G__36450,G__36451,G__36452,G__36453,G__36454) : target_fn.call(null,G__36440,G__36441,G__36442,G__36443,G__36444,G__36445,G__36446,G__36447,G__36448,G__36449,G__36450,G__36451,G__36452,G__36453,G__36454));
});
var G__37055__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36455 = a;
var G__36456 = b;
var G__36457 = c;
var G__36458 = d;
var G__36459 = e;
var G__36460 = f;
var G__36461 = g;
var G__36462 = h;
var G__36463 = i;
var G__36464 = j;
var G__36465 = k;
var G__36466 = l;
var G__36467 = m;
var G__36468 = n;
var G__36469 = o;
var G__36470 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__36455,G__36456,G__36457,G__36458,G__36459,G__36460,G__36461,G__36462,G__36463,G__36464,G__36465,G__36466,G__36467,G__36468,G__36469,G__36470) : self__.dispatch_fn.call(null,G__36455,G__36456,G__36457,G__36458,G__36459,G__36460,G__36461,G__36462,G__36463,G__36464,G__36465,G__36466,G__36467,G__36468,G__36469,G__36470));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36471 = a;
var G__36472 = b;
var G__36473 = c;
var G__36474 = d;
var G__36475 = e;
var G__36476 = f;
var G__36477 = g;
var G__36478 = h;
var G__36479 = i;
var G__36480 = j;
var G__36481 = k;
var G__36482 = l;
var G__36483 = m;
var G__36484 = n;
var G__36485 = o;
var G__36486 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__36471,G__36472,G__36473,G__36474,G__36475,G__36476,G__36477,G__36478,G__36479,G__36480,G__36481,G__36482,G__36483,G__36484,G__36485,G__36486) : target_fn.call(null,G__36471,G__36472,G__36473,G__36474,G__36475,G__36476,G__36477,G__36478,G__36479,G__36480,G__36481,G__36482,G__36483,G__36484,G__36485,G__36486));
});
var G__37055__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36487 = a;
var G__36488 = b;
var G__36489 = c;
var G__36490 = d;
var G__36491 = e;
var G__36492 = f;
var G__36493 = g;
var G__36494 = h;
var G__36495 = i;
var G__36496 = j;
var G__36497 = k;
var G__36498 = l;
var G__36499 = m;
var G__36500 = n;
var G__36501 = o;
var G__36502 = p;
var G__36503 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__36487,G__36488,G__36489,G__36490,G__36491,G__36492,G__36493,G__36494,G__36495,G__36496,G__36497,G__36498,G__36499,G__36500,G__36501,G__36502,G__36503) : self__.dispatch_fn.call(null,G__36487,G__36488,G__36489,G__36490,G__36491,G__36492,G__36493,G__36494,G__36495,G__36496,G__36497,G__36498,G__36499,G__36500,G__36501,G__36502,G__36503));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36504 = a;
var G__36505 = b;
var G__36506 = c;
var G__36507 = d;
var G__36508 = e;
var G__36509 = f;
var G__36510 = g;
var G__36511 = h;
var G__36512 = i;
var G__36513 = j;
var G__36514 = k;
var G__36515 = l;
var G__36516 = m;
var G__36517 = n;
var G__36518 = o;
var G__36519 = p;
var G__36520 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__36504,G__36505,G__36506,G__36507,G__36508,G__36509,G__36510,G__36511,G__36512,G__36513,G__36514,G__36515,G__36516,G__36517,G__36518,G__36519,G__36520) : target_fn.call(null,G__36504,G__36505,G__36506,G__36507,G__36508,G__36509,G__36510,G__36511,G__36512,G__36513,G__36514,G__36515,G__36516,G__36517,G__36518,G__36519,G__36520));
});
var G__37055__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36521 = a;
var G__36522 = b;
var G__36523 = c;
var G__36524 = d;
var G__36525 = e;
var G__36526 = f;
var G__36527 = g;
var G__36528 = h;
var G__36529 = i;
var G__36530 = j;
var G__36531 = k;
var G__36532 = l;
var G__36533 = m;
var G__36534 = n;
var G__36535 = o;
var G__36536 = p;
var G__36537 = q;
var G__36538 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__36521,G__36522,G__36523,G__36524,G__36525,G__36526,G__36527,G__36528,G__36529,G__36530,G__36531,G__36532,G__36533,G__36534,G__36535,G__36536,G__36537,G__36538) : self__.dispatch_fn.call(null,G__36521,G__36522,G__36523,G__36524,G__36525,G__36526,G__36527,G__36528,G__36529,G__36530,G__36531,G__36532,G__36533,G__36534,G__36535,G__36536,G__36537,G__36538));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36539 = a;
var G__36540 = b;
var G__36541 = c;
var G__36542 = d;
var G__36543 = e;
var G__36544 = f;
var G__36545 = g;
var G__36546 = h;
var G__36547 = i;
var G__36548 = j;
var G__36549 = k;
var G__36550 = l;
var G__36551 = m;
var G__36552 = n;
var G__36553 = o;
var G__36554 = p;
var G__36555 = q;
var G__36556 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__36539,G__36540,G__36541,G__36542,G__36543,G__36544,G__36545,G__36546,G__36547,G__36548,G__36549,G__36550,G__36551,G__36552,G__36553,G__36554,G__36555,G__36556) : target_fn.call(null,G__36539,G__36540,G__36541,G__36542,G__36543,G__36544,G__36545,G__36546,G__36547,G__36548,G__36549,G__36550,G__36551,G__36552,G__36553,G__36554,G__36555,G__36556));
});
var G__37055__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36557 = a;
var G__36558 = b;
var G__36559 = c;
var G__36560 = d;
var G__36561 = e;
var G__36562 = f;
var G__36563 = g;
var G__36564 = h;
var G__36565 = i;
var G__36566 = j;
var G__36567 = k;
var G__36568 = l;
var G__36569 = m;
var G__36570 = n;
var G__36571 = o;
var G__36572 = p;
var G__36573 = q;
var G__36574 = r;
var G__36575 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__36557,G__36558,G__36559,G__36560,G__36561,G__36562,G__36563,G__36564,G__36565,G__36566,G__36567,G__36568,G__36569,G__36570,G__36571,G__36572,G__36573,G__36574,G__36575) : self__.dispatch_fn.call(null,G__36557,G__36558,G__36559,G__36560,G__36561,G__36562,G__36563,G__36564,G__36565,G__36566,G__36567,G__36568,G__36569,G__36570,G__36571,G__36572,G__36573,G__36574,G__36575));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36576 = a;
var G__36577 = b;
var G__36578 = c;
var G__36579 = d;
var G__36580 = e;
var G__36581 = f;
var G__36582 = g;
var G__36583 = h;
var G__36584 = i;
var G__36585 = j;
var G__36586 = k;
var G__36587 = l;
var G__36588 = m;
var G__36589 = n;
var G__36590 = o;
var G__36591 = p;
var G__36592 = q;
var G__36593 = r;
var G__36594 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__36576,G__36577,G__36578,G__36579,G__36580,G__36581,G__36582,G__36583,G__36584,G__36585,G__36586,G__36587,G__36588,G__36589,G__36590,G__36591,G__36592,G__36593,G__36594) : target_fn.call(null,G__36576,G__36577,G__36578,G__36579,G__36580,G__36581,G__36582,G__36583,G__36584,G__36585,G__36586,G__36587,G__36588,G__36589,G__36590,G__36591,G__36592,G__36593,G__36594));
});
var G__37055__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__36595 = a;
var G__36596 = b;
var G__36597 = c;
var G__36598 = d;
var G__36599 = e;
var G__36600 = f;
var G__36601 = g;
var G__36602 = h;
var G__36603 = i;
var G__36604 = j;
var G__36605 = k;
var G__36606 = l;
var G__36607 = m;
var G__36608 = n;
var G__36609 = o;
var G__36610 = p;
var G__36611 = q;
var G__36612 = r;
var G__36613 = s;
var G__36614 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__36595,G__36596,G__36597,G__36598,G__36599,G__36600,G__36601,G__36602,G__36603,G__36604,G__36605,G__36606,G__36607,G__36608,G__36609,G__36610,G__36611,G__36612,G__36613,G__36614) : self__.dispatch_fn.call(null,G__36595,G__36596,G__36597,G__36598,G__36599,G__36600,G__36601,G__36602,G__36603,G__36604,G__36605,G__36606,G__36607,G__36608,G__36609,G__36610,G__36611,G__36612,G__36613,G__36614));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36615 = a;
var G__36616 = b;
var G__36617 = c;
var G__36618 = d;
var G__36619 = e;
var G__36620 = f;
var G__36621 = g;
var G__36622 = h;
var G__36623 = i;
var G__36624 = j;
var G__36625 = k;
var G__36626 = l;
var G__36627 = m;
var G__36628 = n;
var G__36629 = o;
var G__36630 = p;
var G__36631 = q;
var G__36632 = r;
var G__36633 = s;
var G__36634 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__36615,G__36616,G__36617,G__36618,G__36619,G__36620,G__36621,G__36622,G__36623,G__36624,G__36625,G__36626,G__36627,G__36628,G__36629,G__36630,G__36631,G__36632,G__36633,G__36634) : target_fn.call(null,G__36615,G__36616,G__36617,G__36618,G__36619,G__36620,G__36621,G__36622,G__36623,G__36624,G__36625,G__36626,G__36627,G__36628,G__36629,G__36630,G__36631,G__36632,G__36633,G__36634));
});
var G__37055__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__37055 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__37055__1.call(this,self__);
case 2:
return G__37055__2.call(this,self__,a);
case 3:
return G__37055__3.call(this,self__,a,b);
case 4:
return G__37055__4.call(this,self__,a,b,c);
case 5:
return G__37055__5.call(this,self__,a,b,c,d);
case 6:
return G__37055__6.call(this,self__,a,b,c,d,e);
case 7:
return G__37055__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__37055__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__37055__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__37055__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__37055__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__37055__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__37055__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__37055__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__37055__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__37055__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__37055__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__37055__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__37055__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__37055__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__37055__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__37055__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__37055.cljs$core$IFn$_invoke$arity$1 = G__37055__1;
G__37055.cljs$core$IFn$_invoke$arity$2 = G__37055__2;
G__37055.cljs$core$IFn$_invoke$arity$3 = G__37055__3;
G__37055.cljs$core$IFn$_invoke$arity$4 = G__37055__4;
G__37055.cljs$core$IFn$_invoke$arity$5 = G__37055__5;
G__37055.cljs$core$IFn$_invoke$arity$6 = G__37055__6;
G__37055.cljs$core$IFn$_invoke$arity$7 = G__37055__7;
G__37055.cljs$core$IFn$_invoke$arity$8 = G__37055__8;
G__37055.cljs$core$IFn$_invoke$arity$9 = G__37055__9;
G__37055.cljs$core$IFn$_invoke$arity$10 = G__37055__10;
G__37055.cljs$core$IFn$_invoke$arity$11 = G__37055__11;
G__37055.cljs$core$IFn$_invoke$arity$12 = G__37055__12;
G__37055.cljs$core$IFn$_invoke$arity$13 = G__37055__13;
G__37055.cljs$core$IFn$_invoke$arity$14 = G__37055__14;
G__37055.cljs$core$IFn$_invoke$arity$15 = G__37055__15;
G__37055.cljs$core$IFn$_invoke$arity$16 = G__37055__16;
G__37055.cljs$core$IFn$_invoke$arity$17 = G__37055__17;
G__37055.cljs$core$IFn$_invoke$arity$18 = G__37055__18;
G__37055.cljs$core$IFn$_invoke$arity$19 = G__37055__19;
G__37055.cljs$core$IFn$_invoke$arity$20 = G__37055__20;
G__37055.cljs$core$IFn$_invoke$arity$21 = G__37055__21;
G__37055.cljs$core$IFn$_invoke$arity$22 = G__37055__22;
return G__37055;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args36207){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args36207)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36635 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__36635) : self__.dispatch_fn.call(null,G__36635));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36636 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__36636) : target_fn.call(null,G__36636));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36637 = a;
var G__36638 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__36637,G__36638) : self__.dispatch_fn.call(null,G__36637,G__36638));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36639 = a;
var G__36640 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__36639,G__36640) : target_fn.call(null,G__36639,G__36640));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36641 = a;
var G__36642 = b;
var G__36643 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__36641,G__36642,G__36643) : self__.dispatch_fn.call(null,G__36641,G__36642,G__36643));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36644 = a;
var G__36645 = b;
var G__36646 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__36644,G__36645,G__36646) : target_fn.call(null,G__36644,G__36645,G__36646));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36647 = a;
var G__36648 = b;
var G__36649 = c;
var G__36650 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__36647,G__36648,G__36649,G__36650) : self__.dispatch_fn.call(null,G__36647,G__36648,G__36649,G__36650));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36651 = a;
var G__36652 = b;
var G__36653 = c;
var G__36654 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__36651,G__36652,G__36653,G__36654) : target_fn.call(null,G__36651,G__36652,G__36653,G__36654));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36655 = a;
var G__36656 = b;
var G__36657 = c;
var G__36658 = d;
var G__36659 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__36655,G__36656,G__36657,G__36658,G__36659) : self__.dispatch_fn.call(null,G__36655,G__36656,G__36657,G__36658,G__36659));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36660 = a;
var G__36661 = b;
var G__36662 = c;
var G__36663 = d;
var G__36664 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__36660,G__36661,G__36662,G__36663,G__36664) : target_fn.call(null,G__36660,G__36661,G__36662,G__36663,G__36664));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36665 = a;
var G__36666 = b;
var G__36667 = c;
var G__36668 = d;
var G__36669 = e;
var G__36670 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__36665,G__36666,G__36667,G__36668,G__36669,G__36670) : self__.dispatch_fn.call(null,G__36665,G__36666,G__36667,G__36668,G__36669,G__36670));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36671 = a;
var G__36672 = b;
var G__36673 = c;
var G__36674 = d;
var G__36675 = e;
var G__36676 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__36671,G__36672,G__36673,G__36674,G__36675,G__36676) : target_fn.call(null,G__36671,G__36672,G__36673,G__36674,G__36675,G__36676));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36677 = a;
var G__36678 = b;
var G__36679 = c;
var G__36680 = d;
var G__36681 = e;
var G__36682 = f;
var G__36683 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__36677,G__36678,G__36679,G__36680,G__36681,G__36682,G__36683) : self__.dispatch_fn.call(null,G__36677,G__36678,G__36679,G__36680,G__36681,G__36682,G__36683));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36684 = a;
var G__36685 = b;
var G__36686 = c;
var G__36687 = d;
var G__36688 = e;
var G__36689 = f;
var G__36690 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__36684,G__36685,G__36686,G__36687,G__36688,G__36689,G__36690) : target_fn.call(null,G__36684,G__36685,G__36686,G__36687,G__36688,G__36689,G__36690));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36691 = a;
var G__36692 = b;
var G__36693 = c;
var G__36694 = d;
var G__36695 = e;
var G__36696 = f;
var G__36697 = g;
var G__36698 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__36691,G__36692,G__36693,G__36694,G__36695,G__36696,G__36697,G__36698) : self__.dispatch_fn.call(null,G__36691,G__36692,G__36693,G__36694,G__36695,G__36696,G__36697,G__36698));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36699 = a;
var G__36700 = b;
var G__36701 = c;
var G__36702 = d;
var G__36703 = e;
var G__36704 = f;
var G__36705 = g;
var G__36706 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__36699,G__36700,G__36701,G__36702,G__36703,G__36704,G__36705,G__36706) : target_fn.call(null,G__36699,G__36700,G__36701,G__36702,G__36703,G__36704,G__36705,G__36706));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36707 = a;
var G__36708 = b;
var G__36709 = c;
var G__36710 = d;
var G__36711 = e;
var G__36712 = f;
var G__36713 = g;
var G__36714 = h;
var G__36715 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__36707,G__36708,G__36709,G__36710,G__36711,G__36712,G__36713,G__36714,G__36715) : self__.dispatch_fn.call(null,G__36707,G__36708,G__36709,G__36710,G__36711,G__36712,G__36713,G__36714,G__36715));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36716 = a;
var G__36717 = b;
var G__36718 = c;
var G__36719 = d;
var G__36720 = e;
var G__36721 = f;
var G__36722 = g;
var G__36723 = h;
var G__36724 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__36716,G__36717,G__36718,G__36719,G__36720,G__36721,G__36722,G__36723,G__36724) : target_fn.call(null,G__36716,G__36717,G__36718,G__36719,G__36720,G__36721,G__36722,G__36723,G__36724));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36725 = a;
var G__36726 = b;
var G__36727 = c;
var G__36728 = d;
var G__36729 = e;
var G__36730 = f;
var G__36731 = g;
var G__36732 = h;
var G__36733 = i;
var G__36734 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__36725,G__36726,G__36727,G__36728,G__36729,G__36730,G__36731,G__36732,G__36733,G__36734) : self__.dispatch_fn.call(null,G__36725,G__36726,G__36727,G__36728,G__36729,G__36730,G__36731,G__36732,G__36733,G__36734));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36735 = a;
var G__36736 = b;
var G__36737 = c;
var G__36738 = d;
var G__36739 = e;
var G__36740 = f;
var G__36741 = g;
var G__36742 = h;
var G__36743 = i;
var G__36744 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__36735,G__36736,G__36737,G__36738,G__36739,G__36740,G__36741,G__36742,G__36743,G__36744) : target_fn.call(null,G__36735,G__36736,G__36737,G__36738,G__36739,G__36740,G__36741,G__36742,G__36743,G__36744));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36745 = a;
var G__36746 = b;
var G__36747 = c;
var G__36748 = d;
var G__36749 = e;
var G__36750 = f;
var G__36751 = g;
var G__36752 = h;
var G__36753 = i;
var G__36754 = j;
var G__36755 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__36745,G__36746,G__36747,G__36748,G__36749,G__36750,G__36751,G__36752,G__36753,G__36754,G__36755) : self__.dispatch_fn.call(null,G__36745,G__36746,G__36747,G__36748,G__36749,G__36750,G__36751,G__36752,G__36753,G__36754,G__36755));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36756 = a;
var G__36757 = b;
var G__36758 = c;
var G__36759 = d;
var G__36760 = e;
var G__36761 = f;
var G__36762 = g;
var G__36763 = h;
var G__36764 = i;
var G__36765 = j;
var G__36766 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__36756,G__36757,G__36758,G__36759,G__36760,G__36761,G__36762,G__36763,G__36764,G__36765,G__36766) : target_fn.call(null,G__36756,G__36757,G__36758,G__36759,G__36760,G__36761,G__36762,G__36763,G__36764,G__36765,G__36766));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36767 = a;
var G__36768 = b;
var G__36769 = c;
var G__36770 = d;
var G__36771 = e;
var G__36772 = f;
var G__36773 = g;
var G__36774 = h;
var G__36775 = i;
var G__36776 = j;
var G__36777 = k;
var G__36778 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__36767,G__36768,G__36769,G__36770,G__36771,G__36772,G__36773,G__36774,G__36775,G__36776,G__36777,G__36778) : self__.dispatch_fn.call(null,G__36767,G__36768,G__36769,G__36770,G__36771,G__36772,G__36773,G__36774,G__36775,G__36776,G__36777,G__36778));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36779 = a;
var G__36780 = b;
var G__36781 = c;
var G__36782 = d;
var G__36783 = e;
var G__36784 = f;
var G__36785 = g;
var G__36786 = h;
var G__36787 = i;
var G__36788 = j;
var G__36789 = k;
var G__36790 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__36779,G__36780,G__36781,G__36782,G__36783,G__36784,G__36785,G__36786,G__36787,G__36788,G__36789,G__36790) : target_fn.call(null,G__36779,G__36780,G__36781,G__36782,G__36783,G__36784,G__36785,G__36786,G__36787,G__36788,G__36789,G__36790));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36791 = a;
var G__36792 = b;
var G__36793 = c;
var G__36794 = d;
var G__36795 = e;
var G__36796 = f;
var G__36797 = g;
var G__36798 = h;
var G__36799 = i;
var G__36800 = j;
var G__36801 = k;
var G__36802 = l;
var G__36803 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__36791,G__36792,G__36793,G__36794,G__36795,G__36796,G__36797,G__36798,G__36799,G__36800,G__36801,G__36802,G__36803) : self__.dispatch_fn.call(null,G__36791,G__36792,G__36793,G__36794,G__36795,G__36796,G__36797,G__36798,G__36799,G__36800,G__36801,G__36802,G__36803));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36804 = a;
var G__36805 = b;
var G__36806 = c;
var G__36807 = d;
var G__36808 = e;
var G__36809 = f;
var G__36810 = g;
var G__36811 = h;
var G__36812 = i;
var G__36813 = j;
var G__36814 = k;
var G__36815 = l;
var G__36816 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__36804,G__36805,G__36806,G__36807,G__36808,G__36809,G__36810,G__36811,G__36812,G__36813,G__36814,G__36815,G__36816) : target_fn.call(null,G__36804,G__36805,G__36806,G__36807,G__36808,G__36809,G__36810,G__36811,G__36812,G__36813,G__36814,G__36815,G__36816));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36817 = a;
var G__36818 = b;
var G__36819 = c;
var G__36820 = d;
var G__36821 = e;
var G__36822 = f;
var G__36823 = g;
var G__36824 = h;
var G__36825 = i;
var G__36826 = j;
var G__36827 = k;
var G__36828 = l;
var G__36829 = m;
var G__36830 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__36817,G__36818,G__36819,G__36820,G__36821,G__36822,G__36823,G__36824,G__36825,G__36826,G__36827,G__36828,G__36829,G__36830) : self__.dispatch_fn.call(null,G__36817,G__36818,G__36819,G__36820,G__36821,G__36822,G__36823,G__36824,G__36825,G__36826,G__36827,G__36828,G__36829,G__36830));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36831 = a;
var G__36832 = b;
var G__36833 = c;
var G__36834 = d;
var G__36835 = e;
var G__36836 = f;
var G__36837 = g;
var G__36838 = h;
var G__36839 = i;
var G__36840 = j;
var G__36841 = k;
var G__36842 = l;
var G__36843 = m;
var G__36844 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__36831,G__36832,G__36833,G__36834,G__36835,G__36836,G__36837,G__36838,G__36839,G__36840,G__36841,G__36842,G__36843,G__36844) : target_fn.call(null,G__36831,G__36832,G__36833,G__36834,G__36835,G__36836,G__36837,G__36838,G__36839,G__36840,G__36841,G__36842,G__36843,G__36844));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36845 = a;
var G__36846 = b;
var G__36847 = c;
var G__36848 = d;
var G__36849 = e;
var G__36850 = f;
var G__36851 = g;
var G__36852 = h;
var G__36853 = i;
var G__36854 = j;
var G__36855 = k;
var G__36856 = l;
var G__36857 = m;
var G__36858 = n;
var G__36859 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__36845,G__36846,G__36847,G__36848,G__36849,G__36850,G__36851,G__36852,G__36853,G__36854,G__36855,G__36856,G__36857,G__36858,G__36859) : self__.dispatch_fn.call(null,G__36845,G__36846,G__36847,G__36848,G__36849,G__36850,G__36851,G__36852,G__36853,G__36854,G__36855,G__36856,G__36857,G__36858,G__36859));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36860 = a;
var G__36861 = b;
var G__36862 = c;
var G__36863 = d;
var G__36864 = e;
var G__36865 = f;
var G__36866 = g;
var G__36867 = h;
var G__36868 = i;
var G__36869 = j;
var G__36870 = k;
var G__36871 = l;
var G__36872 = m;
var G__36873 = n;
var G__36874 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__36860,G__36861,G__36862,G__36863,G__36864,G__36865,G__36866,G__36867,G__36868,G__36869,G__36870,G__36871,G__36872,G__36873,G__36874) : target_fn.call(null,G__36860,G__36861,G__36862,G__36863,G__36864,G__36865,G__36866,G__36867,G__36868,G__36869,G__36870,G__36871,G__36872,G__36873,G__36874));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36875 = a;
var G__36876 = b;
var G__36877 = c;
var G__36878 = d;
var G__36879 = e;
var G__36880 = f;
var G__36881 = g;
var G__36882 = h;
var G__36883 = i;
var G__36884 = j;
var G__36885 = k;
var G__36886 = l;
var G__36887 = m;
var G__36888 = n;
var G__36889 = o;
var G__36890 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__36875,G__36876,G__36877,G__36878,G__36879,G__36880,G__36881,G__36882,G__36883,G__36884,G__36885,G__36886,G__36887,G__36888,G__36889,G__36890) : self__.dispatch_fn.call(null,G__36875,G__36876,G__36877,G__36878,G__36879,G__36880,G__36881,G__36882,G__36883,G__36884,G__36885,G__36886,G__36887,G__36888,G__36889,G__36890));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36891 = a;
var G__36892 = b;
var G__36893 = c;
var G__36894 = d;
var G__36895 = e;
var G__36896 = f;
var G__36897 = g;
var G__36898 = h;
var G__36899 = i;
var G__36900 = j;
var G__36901 = k;
var G__36902 = l;
var G__36903 = m;
var G__36904 = n;
var G__36905 = o;
var G__36906 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__36891,G__36892,G__36893,G__36894,G__36895,G__36896,G__36897,G__36898,G__36899,G__36900,G__36901,G__36902,G__36903,G__36904,G__36905,G__36906) : target_fn.call(null,G__36891,G__36892,G__36893,G__36894,G__36895,G__36896,G__36897,G__36898,G__36899,G__36900,G__36901,G__36902,G__36903,G__36904,G__36905,G__36906));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36907 = a;
var G__36908 = b;
var G__36909 = c;
var G__36910 = d;
var G__36911 = e;
var G__36912 = f;
var G__36913 = g;
var G__36914 = h;
var G__36915 = i;
var G__36916 = j;
var G__36917 = k;
var G__36918 = l;
var G__36919 = m;
var G__36920 = n;
var G__36921 = o;
var G__36922 = p;
var G__36923 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__36907,G__36908,G__36909,G__36910,G__36911,G__36912,G__36913,G__36914,G__36915,G__36916,G__36917,G__36918,G__36919,G__36920,G__36921,G__36922,G__36923) : self__.dispatch_fn.call(null,G__36907,G__36908,G__36909,G__36910,G__36911,G__36912,G__36913,G__36914,G__36915,G__36916,G__36917,G__36918,G__36919,G__36920,G__36921,G__36922,G__36923));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36924 = a;
var G__36925 = b;
var G__36926 = c;
var G__36927 = d;
var G__36928 = e;
var G__36929 = f;
var G__36930 = g;
var G__36931 = h;
var G__36932 = i;
var G__36933 = j;
var G__36934 = k;
var G__36935 = l;
var G__36936 = m;
var G__36937 = n;
var G__36938 = o;
var G__36939 = p;
var G__36940 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__36924,G__36925,G__36926,G__36927,G__36928,G__36929,G__36930,G__36931,G__36932,G__36933,G__36934,G__36935,G__36936,G__36937,G__36938,G__36939,G__36940) : target_fn.call(null,G__36924,G__36925,G__36926,G__36927,G__36928,G__36929,G__36930,G__36931,G__36932,G__36933,G__36934,G__36935,G__36936,G__36937,G__36938,G__36939,G__36940));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36941 = a;
var G__36942 = b;
var G__36943 = c;
var G__36944 = d;
var G__36945 = e;
var G__36946 = f;
var G__36947 = g;
var G__36948 = h;
var G__36949 = i;
var G__36950 = j;
var G__36951 = k;
var G__36952 = l;
var G__36953 = m;
var G__36954 = n;
var G__36955 = o;
var G__36956 = p;
var G__36957 = q;
var G__36958 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__36941,G__36942,G__36943,G__36944,G__36945,G__36946,G__36947,G__36948,G__36949,G__36950,G__36951,G__36952,G__36953,G__36954,G__36955,G__36956,G__36957,G__36958) : self__.dispatch_fn.call(null,G__36941,G__36942,G__36943,G__36944,G__36945,G__36946,G__36947,G__36948,G__36949,G__36950,G__36951,G__36952,G__36953,G__36954,G__36955,G__36956,G__36957,G__36958));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36959 = a;
var G__36960 = b;
var G__36961 = c;
var G__36962 = d;
var G__36963 = e;
var G__36964 = f;
var G__36965 = g;
var G__36966 = h;
var G__36967 = i;
var G__36968 = j;
var G__36969 = k;
var G__36970 = l;
var G__36971 = m;
var G__36972 = n;
var G__36973 = o;
var G__36974 = p;
var G__36975 = q;
var G__36976 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__36959,G__36960,G__36961,G__36962,G__36963,G__36964,G__36965,G__36966,G__36967,G__36968,G__36969,G__36970,G__36971,G__36972,G__36973,G__36974,G__36975,G__36976) : target_fn.call(null,G__36959,G__36960,G__36961,G__36962,G__36963,G__36964,G__36965,G__36966,G__36967,G__36968,G__36969,G__36970,G__36971,G__36972,G__36973,G__36974,G__36975,G__36976));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__36977 = a;
var G__36978 = b;
var G__36979 = c;
var G__36980 = d;
var G__36981 = e;
var G__36982 = f;
var G__36983 = g;
var G__36984 = h;
var G__36985 = i;
var G__36986 = j;
var G__36987 = k;
var G__36988 = l;
var G__36989 = m;
var G__36990 = n;
var G__36991 = o;
var G__36992 = p;
var G__36993 = q;
var G__36994 = r;
var G__36995 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__36977,G__36978,G__36979,G__36980,G__36981,G__36982,G__36983,G__36984,G__36985,G__36986,G__36987,G__36988,G__36989,G__36990,G__36991,G__36992,G__36993,G__36994,G__36995) : self__.dispatch_fn.call(null,G__36977,G__36978,G__36979,G__36980,G__36981,G__36982,G__36983,G__36984,G__36985,G__36986,G__36987,G__36988,G__36989,G__36990,G__36991,G__36992,G__36993,G__36994,G__36995));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__36996 = a;
var G__36997 = b;
var G__36998 = c;
var G__36999 = d;
var G__37000 = e;
var G__37001 = f;
var G__37002 = g;
var G__37003 = h;
var G__37004 = i;
var G__37005 = j;
var G__37006 = k;
var G__37007 = l;
var G__37008 = m;
var G__37009 = n;
var G__37010 = o;
var G__37011 = p;
var G__37012 = q;
var G__37013 = r;
var G__37014 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__36996,G__36997,G__36998,G__36999,G__37000,G__37001,G__37002,G__37003,G__37004,G__37005,G__37006,G__37007,G__37008,G__37009,G__37010,G__37011,G__37012,G__37013,G__37014) : target_fn.call(null,G__36996,G__36997,G__36998,G__36999,G__37000,G__37001,G__37002,G__37003,G__37004,G__37005,G__37006,G__37007,G__37008,G__37009,G__37010,G__37011,G__37012,G__37013,G__37014));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__37015 = a;
var G__37016 = b;
var G__37017 = c;
var G__37018 = d;
var G__37019 = e;
var G__37020 = f;
var G__37021 = g;
var G__37022 = h;
var G__37023 = i;
var G__37024 = j;
var G__37025 = k;
var G__37026 = l;
var G__37027 = m;
var G__37028 = n;
var G__37029 = o;
var G__37030 = p;
var G__37031 = q;
var G__37032 = r;
var G__37033 = s;
var G__37034 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__37015,G__37016,G__37017,G__37018,G__37019,G__37020,G__37021,G__37022,G__37023,G__37024,G__37025,G__37026,G__37027,G__37028,G__37029,G__37030,G__37031,G__37032,G__37033,G__37034) : self__.dispatch_fn.call(null,G__37015,G__37016,G__37017,G__37018,G__37019,G__37020,G__37021,G__37022,G__37023,G__37024,G__37025,G__37026,G__37027,G__37028,G__37029,G__37030,G__37031,G__37032,G__37033,G__37034));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__37035 = a;
var G__37036 = b;
var G__37037 = c;
var G__37038 = d;
var G__37039 = e;
var G__37040 = f;
var G__37041 = g;
var G__37042 = h;
var G__37043 = i;
var G__37044 = j;
var G__37045 = k;
var G__37046 = l;
var G__37047 = m;
var G__37048 = n;
var G__37049 = o;
var G__37050 = p;
var G__37051 = q;
var G__37052 = r;
var G__37053 = s;
var G__37054 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__37035,G__37036,G__37037,G__37038,G__37039,G__37040,G__37041,G__37042,G__37043,G__37044,G__37045,G__37046,G__37047,G__37048,G__37049,G__37050,G__37051,G__37052,G__37053,G__37054) : target_fn.call(null,G__37035,G__37036,G__37037,G__37038,G__37039,G__37040,G__37041,G__37042,G__37043,G__37044,G__37045,G__37046,G__37047,G__37048,G__37049,G__37050,G__37051,G__37052,G__37053,G__37054));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function cljs$core$__GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
 * Removes all of the methods of multimethod.
 */
cljs.core.remove_all_methods = (function cljs$core$remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
 * Removes the method of multimethod associated with dispatch-value.
 */
cljs.core.remove_method = (function cljs$core$remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
 * Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
 * when there is a conflict
 */
cljs.core.prefer_method = (function cljs$core$prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
 * Given a multimethod, returns a map of dispatch values -> dispatch fns
 */
cljs.core.methods$ = (function cljs$core$methods(multifn){
return cljs.core._methods(multifn);
});
/**
 * Given a multimethod and a dispatch value, returns the dispatch fn
 * that would apply to that value, or nil if none apply and no default
 */
cljs.core.get_method = (function cljs$core$get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
 * Given a multimethod, returns a map of preferred value -> set of other values
 */
cljs.core.prefers = (function cljs$core$prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 2048;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IComparable$_compare$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
var G__37056 = self__.uuid;
var G__37057 = other.uuid;
return goog.array.defaultCompare(G__37056,G__37057);
});

cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__37058 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__37058);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__24762__auto__,writer__24763__auto__,opt__24764__auto__){
return cljs.core._write(writer__24763__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function cljs$core$__GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});

cljs.core.pr_writer_ex_info = (function cljs$core$pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
 * @constructor
 */
cljs.core.ExceptionInfo = (function cljs$core$ExceptionInfo(message,data,cause){
var e = (new Error());
var this$ = this;
this$.message = message;

this$.data = data;

this$.cause = cause;

this$.name = e.name;

this$.description = e.description;

this$.number = e.number;

this$.fileName = e.fileName;

this$.lineNumber = e.lineNumber;

this$.columnNumber = e.columnNumber;

this$.stack = e.stack;

return this$;
});
cljs.core.ExceptionInfo.prototype.__proto__ = Error.prototype;
cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});
cljs.core.ExceptionInfo.prototype.toString = (function (){
var this$ = this;
return cljs.core.pr_str_STAR_(this$);
});
/**
 * Alpha - subject to change.
 * Create an instance of ExceptionInfo, an Error type that carries a
 * map of additional data.
 */
cljs.core.ex_info = (function() {
var cljs$core$ex_info = null;
var cljs$core$ex_info__2 = (function (msg,data){
return cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var cljs$core$ex_info__3 = (function (msg,data,cause){
return (new cljs.core.ExceptionInfo(msg,data,cause));
});
cljs$core$ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return cljs$core$ex_info__2.call(this,msg,data);
case 3:
return cljs$core$ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$2 = cljs$core$ex_info__2;
cljs$core$ex_info.cljs$core$IFn$_invoke$arity$3 = cljs$core$ex_info__3;
return cljs$core$ex_info;
})()
;
/**
 * Alpha - subject to change.
 * Returns exception data (a map) if ex is an ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_data = (function cljs$core$ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns the message attached to the given Error / ExceptionInfo object.
 * For non-Errors returns nil.
 */
cljs.core.ex_message = (function cljs$core$ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
 * Alpha - subject to change.
 * Returns exception cause (an Error / ExceptionInfo) if ex is an
 * ExceptionInfo.
 * Otherwise returns nil.
 */
cljs.core.ex_cause = (function cljs$core$ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
 * Returns an JavaScript compatible comparator based upon pred.
 */
cljs.core.comparator = (function cljs$core$comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__37066 = x;
var G__37067 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__37066,G__37067) : pred.call(null,G__37066,G__37067));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__37068 = y;
var G__37069 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__37068,G__37069) : pred.call(null,G__37068,G__37069));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function cljs$core$special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
 * test [v] finds fn at key :test in var metadata and calls it,
 * presuming failure will throw exception
 */
cljs.core.test = (function cljs$core$test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$ok;
} else {
return cljs.core.constant$keyword$no_DASH_test;
}
});
