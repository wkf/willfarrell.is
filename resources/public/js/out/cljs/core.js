// Compiled by ClojureScript 0.0-2850 {:static-fns true}
goog.provide('cljs.core');
goog.require('goog.string.StringBuffer');
goog.require('goog.array');
goog.require('goog.object');
goog.require('goog.string');
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2850";
cljs.core._STAR_unchecked_if_STAR_ = false;
if(typeof cljs.core._STAR_print_fn_STAR_ !== 'undefined'){
} else {
/**
* Each runtime environment provides a different way to print output.
* Whatever function *print-fn* is bound to will be passed any
* Strings which should be printed.
*/
cljs.core._STAR_print_fn_STAR_ = (function _STAR_print_fn_STAR_(_){
throw (new Error("No *print-fn* fn set for evaluation environment"));
});
}
/**
* Set *print-fn* to f.
*/
cljs.core.set_print_fn_BANG_ = (function set_print_fn_BANG_(f){
return cljs.core._STAR_print_fn_STAR_ = f;
});
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if(typeof cljs.core._STAR_loaded_libs_STAR_ !== 'undefined'){
} else {
cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = (function pr_opts(){
return new cljs.core.PersistentArrayMap(null, 5, [cljs.core.constant$keyword$1,cljs.core._STAR_flush_on_newline_STAR_,cljs.core.constant$keyword$2,cljs.core._STAR_print_readably_STAR_,cljs.core.constant$keyword$3,cljs.core._STAR_print_meta_STAR_,cljs.core.constant$keyword$4,cljs.core._STAR_print_dup_STAR_,cljs.core.constant$keyword$5,cljs.core._STAR_print_length_STAR_], null);
});
/**
* Set *print-fn* to console.log
*/
cljs.core.enable_console_print_BANG_ = (function enable_console_print_BANG_(){
cljs.core._STAR_print_newline_STAR_ = false;

return cljs.core._STAR_print_fn_STAR_ = (function() { 
var G__29041__delegate = function (args){
return console.log.apply(console,(function (){var G__29040 = args;
return (cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__29040) : cljs.core.into_array.call(null,G__29040));
})());
};
var G__29041 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__29042__i = 0, G__29042__a = new Array(arguments.length -  0);
while (G__29042__i < G__29042__a.length) {G__29042__a[G__29042__i] = arguments[G__29042__i + 0]; ++G__29042__i;}
  args = new cljs.core.IndexedSeq(G__29042__a,0);
} 
return G__29041__delegate.call(this,args);};
G__29041.cljs$lang$maxFixedArity = 0;
G__29041.cljs$lang$applyTo = (function (arglist__29043){
var args = cljs.core.seq(arglist__29043);
return G__29041__delegate(args);
});
G__29041.cljs$core$IFn$_invoke$arity$variadic = G__29041__delegate;
return G__29041;
})()
;
});
/**
* Internal - do not use!
*/
cljs.core.truth_ = (function truth_(x){
return (x != null && x !== false);
});
cljs.core.not_native = null;

/**
* Tests if 2 arguments are the same object
*/
cljs.core.identical_QMARK_ = (function identical_QMARK_(x,y){
return (x === y);
});
/**
* Returns true if x is nil, false otherwise.
*/
cljs.core.nil_QMARK_ = (function nil_QMARK_(x){
return (x == null);
});
cljs.core.array_QMARK_ = (function array_QMARK_(x){
return x instanceof Array;
});
cljs.core.number_QMARK_ = (function number_QMARK_(n){
return typeof n === 'number';
});
/**
* Returns true if x is logical false, false otherwise.
*/
cljs.core.not = (function not(x){
if(cljs.core.truth_(x)){
return false;
} else {
return true;
}
});
/**
* Returns true if x is not nil, false otherwise.
*/
cljs.core.some_QMARK_ = (function some_QMARK_(x){
return !((x == null));
});
cljs.core.object_QMARK_ = (function object_QMARK_(x){
if(!((x == null))){
return (x.constructor === Object);
} else {
return false;
}
});
cljs.core.string_QMARK_ = (function string_QMARK_(x){
var G__29045 = x;
return goog.isString(G__29045);
});
/**
* Internal - do not use!
*/
cljs.core.native_satisfies_QMARK_ = (function native_satisfies_QMARK_(p,x){
var x__$1 = (((x == null))?null:x);
if((p[(function (){var G__29047 = x__$1;
return goog.typeOf(G__29047);
})()])){
return true;
} else {
if((p["_"])){
return true;
} else {
return false;

}
}
});
cljs.core.is_proto_ = (function is_proto_(x){
return (x.constructor.prototype === x);
});
/**
* When compiled for a command-line target, whatever
* function *main-fn* is set to will be called with the command-line
* argv as arguments
*/
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = (function type(x){
if((x == null)){
return null;
} else {
return x.constructor;
}
});
cljs.core.missing_protocol = (function missing_protocol(proto,obj){
var ty = cljs.core.type(obj);
var ty__$1 = (cljs.core.truth_((function (){var and__22952__auto__ = ty;
if(cljs.core.truth_(and__22952__auto__)){
return ty.cljs$lang$type;
} else {
return and__22952__auto__;
}
})())?ty.cljs$lang$ctorStr:(function (){var G__29049 = obj;
return goog.typeOf(G__29049);
})());
return (new Error(["No protocol method ",proto," defined for type ",ty__$1,": ",obj].join("")));
});
cljs.core.type__GT_str = (function type__GT_str(ty){
var temp__4124__auto__ = ty.cljs$lang$ctorStr;
if(cljs.core.truth_(temp__4124__auto__)){
var s = temp__4124__auto__;
return s;
} else {
return [cljs.core.str(ty)].join('');
}
});
cljs.core.load_file = (function load_file(file){
if(cljs.core.truth_(COMPILED)){
return null;
} else {
return goog.importScript_(file);
}
});
if((typeof Symbol !== 'undefined') && (((function (){var G__29051 = Symbol;
return goog.typeOf(G__29051);
})() === "function"))){
cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = (function() {
var make_array = null;
var make_array__1 = (function (size){
return (new Array(size));
});
var make_array__2 = (function (type,size){
return make_array.cljs$core$IFn$_invoke$arity$1(size);
});
make_array = function(type,size){
switch(arguments.length){
case 1:
return make_array__1.call(this,type);
case 2:
return make_array__2.call(this,type,size);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
return make_array;
})()
;
/**
* Returns a javascript array, cloned from the passed in array
*/
cljs.core.aclone = (function aclone(arr){
var len = arr.length;
var new_arr = (new Array(len));
var n__23851__auto___29053 = len;
var i_29054 = (0);
while(true){
if((i_29054 < n__23851__auto___29053)){
(new_arr[i_29054] = (arr[i_29054]));

var G__29055 = (i_29054 + (1));
i_29054 = G__29055;
continue;
} else {
}
break;
}

return new_arr;
});
/**
* Creates a new javascript array.
* @param {...*} var_args
*/
cljs.core.array = (function array(var_args){
var a = (new Array(arguments.length));
var i = (0);
while(true){
if((i < a.length)){
(a[i] = (arguments[i]));

var G__29056 = (i + (1));
i = G__29056;
continue;
} else {
return a;
}
break;
}
});
/**
* Returns the value at the index.
* @param {...*} var_args
*/
cljs.core.aget = (function() {
var aget = null;
var aget__2 = (function (array,i){
return (array[i]);
});
var aget__3 = (function() { 
var G__29065__delegate = function (array,i,idxs){
var G__29062 = aget;
var G__29063 = aget.cljs$core$IFn$_invoke$arity$2(array,i);
var G__29064 = idxs;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__29062,G__29063,G__29064) : cljs.core.apply.call(null,G__29062,G__29063,G__29064));
};
var G__29065 = function (array,i,var_args){
var idxs = null;
if (arguments.length > 2) {
var G__29066__i = 0, G__29066__a = new Array(arguments.length -  2);
while (G__29066__i < G__29066__a.length) {G__29066__a[G__29066__i] = arguments[G__29066__i + 2]; ++G__29066__i;}
  idxs = new cljs.core.IndexedSeq(G__29066__a,0);
} 
return G__29065__delegate.call(this,array,i,idxs);};
G__29065.cljs$lang$maxFixedArity = 2;
G__29065.cljs$lang$applyTo = (function (arglist__29067){
var array = cljs.core.first(arglist__29067);
arglist__29067 = cljs.core.next(arglist__29067);
var i = cljs.core.first(arglist__29067);
var idxs = cljs.core.rest(arglist__29067);
return G__29065__delegate(array,i,idxs);
});
G__29065.cljs$core$IFn$_invoke$arity$variadic = G__29065__delegate;
return G__29065;
})()
;
aget = function(array,i,var_args){
var idxs = var_args;
switch(arguments.length){
case 2:
return aget__2.call(this,array,i);
default:
var G__29068 = null;
if (arguments.length > 2) {
var G__29069__i = 0, G__29069__a = new Array(arguments.length -  2);
while (G__29069__i < G__29069__a.length) {G__29069__a[G__29069__i] = arguments[G__29069__i + 2]; ++G__29069__i;}
G__29068 = new cljs.core.IndexedSeq(G__29069__a,0);
}
return aget__3.cljs$core$IFn$_invoke$arity$variadic(array,i, G__29068);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aget.cljs$lang$maxFixedArity = 2;
aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
return aget;
})()
;
/**
* Sets the value at the index.
* @param {...*} var_args
*/
cljs.core.aset = (function() {
var aset = null;
var aset__3 = (function (array,i,val){
return (array[i] = val);
});
var aset__4 = (function() { 
var G__29078__delegate = function (array,idx,idx2,idxv){
var G__29074 = aset;
var G__29075 = (array[idx]);
var G__29076 = idx2;
var G__29077 = idxv;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__29074,G__29075,G__29076,G__29077) : cljs.core.apply.call(null,G__29074,G__29075,G__29076,G__29077));
};
var G__29078 = function (array,idx,idx2,var_args){
var idxv = null;
if (arguments.length > 3) {
var G__29079__i = 0, G__29079__a = new Array(arguments.length -  3);
while (G__29079__i < G__29079__a.length) {G__29079__a[G__29079__i] = arguments[G__29079__i + 3]; ++G__29079__i;}
  idxv = new cljs.core.IndexedSeq(G__29079__a,0);
} 
return G__29078__delegate.call(this,array,idx,idx2,idxv);};
G__29078.cljs$lang$maxFixedArity = 3;
G__29078.cljs$lang$applyTo = (function (arglist__29080){
var array = cljs.core.first(arglist__29080);
arglist__29080 = cljs.core.next(arglist__29080);
var idx = cljs.core.first(arglist__29080);
arglist__29080 = cljs.core.next(arglist__29080);
var idx2 = cljs.core.first(arglist__29080);
var idxv = cljs.core.rest(arglist__29080);
return G__29078__delegate(array,idx,idx2,idxv);
});
G__29078.cljs$core$IFn$_invoke$arity$variadic = G__29078__delegate;
return G__29078;
})()
;
aset = function(array,idx,idx2,var_args){
var idxv = var_args;
switch(arguments.length){
case 3:
return aset__3.call(this,array,idx,idx2);
default:
var G__29081 = null;
if (arguments.length > 3) {
var G__29082__i = 0, G__29082__a = new Array(arguments.length -  3);
while (G__29082__i < G__29082__a.length) {G__29082__a[G__29082__i] = arguments[G__29082__i + 3]; ++G__29082__i;}
G__29081 = new cljs.core.IndexedSeq(G__29082__a,0);
}
return aset__4.cljs$core$IFn$_invoke$arity$variadic(array,idx,idx2, G__29081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
aset.cljs$lang$maxFixedArity = 3;
aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
return aset;
})()
;
/**
* Returns the length of the array. Works on arrays of all types.
*/
cljs.core.alength = (function alength(array){
return array.length;
});
cljs.core.into_array = (function() {
var into_array = null;
var into_array__1 = (function (aseq){
return into_array.cljs$core$IFn$_invoke$arity$2(null,aseq);
});
var into_array__2 = (function (type,aseq){
var G__29088 = (function (a,x){
a.push(x);

return a;
});
var G__29089 = [];
var G__29090 = aseq;
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__29088,G__29089,G__29090) : cljs.core.reduce.call(null,G__29088,G__29089,G__29090));
});
into_array = function(type,aseq){
switch(arguments.length){
case 1:
return into_array__1.call(this,type);
case 2:
return into_array__2.call(this,type,aseq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
return into_array;
})()
;
/**
* Invoke JavaScript object method via string. Needed when the
* string is not a valid unquoted property name.
* @param {...*} var_args
*/
cljs.core.js_invoke = (function() { 
var js_invoke__delegate = function (obj,s,args){
return (obj[s]).apply(obj,cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
};
var js_invoke = function (obj,s,var_args){
var args = null;
if (arguments.length > 2) {
var G__29091__i = 0, G__29091__a = new Array(arguments.length -  2);
while (G__29091__i < G__29091__a.length) {G__29091__a[G__29091__i] = arguments[G__29091__i + 2]; ++G__29091__i;}
  args = new cljs.core.IndexedSeq(G__29091__a,0);
} 
return js_invoke__delegate.call(this,obj,s,args);};
js_invoke.cljs$lang$maxFixedArity = 2;
js_invoke.cljs$lang$applyTo = (function (arglist__29092){
var obj = cljs.core.first(arglist__29092);
arglist__29092 = cljs.core.next(arglist__29092);
var s = cljs.core.first(arglist__29092);
var args = cljs.core.rest(arglist__29092);
return js_invoke__delegate(obj,s,args);
});
js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
return js_invoke;
})()
;

cljs.core.Fn = (function (){var obj29094 = {};
return obj29094;
})();


cljs.core.IFn = (function (){var obj29096 = {};
return obj29096;
})();

cljs.core._invoke = (function() {
var _invoke = null;
var _invoke__1 = (function (this$){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$1;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$1(this$);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29142 = x__23608__auto__;
return goog.typeOf(G__29142);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$);
}
});
var _invoke__2 = (function (this$,a){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$2;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$2(this$,a);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29144 = x__23608__auto__;
return goog.typeOf(G__29144);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a);
}
});
var _invoke__3 = (function (this$,a,b){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$3;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$3(this$,a,b);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29146 = x__23608__auto__;
return goog.typeOf(G__29146);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b);
}
});
var _invoke__4 = (function (this$,a,b,c){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$4;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$4(this$,a,b,c);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29148 = x__23608__auto__;
return goog.typeOf(G__29148);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c);
}
});
var _invoke__5 = (function (this$,a,b,c,d){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$5;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$5(this$,a,b,c,d);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29150 = x__23608__auto__;
return goog.typeOf(G__29150);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d);
}
});
var _invoke__6 = (function (this$,a,b,c,d,e){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$6;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$6(this$,a,b,c,d,e);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29152 = x__23608__auto__;
return goog.typeOf(G__29152);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e);
}
});
var _invoke__7 = (function (this$,a,b,c,d,e,f){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$7;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$7(this$,a,b,c,d,e,f);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29154 = x__23608__auto__;
return goog.typeOf(G__29154);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f);
}
});
var _invoke__8 = (function (this$,a,b,c,d,e,f,g){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$8;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$8(this$,a,b,c,d,e,f,g);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29156 = x__23608__auto__;
return goog.typeOf(G__29156);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g);
}
});
var _invoke__9 = (function (this$,a,b,c,d,e,f,g,h){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$9;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$9(this$,a,b,c,d,e,f,g,h);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29158 = x__23608__auto__;
return goog.typeOf(G__29158);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h);
}
});
var _invoke__10 = (function (this$,a,b,c,d,e,f,g,h,i){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$10;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$10(this$,a,b,c,d,e,f,g,h,i);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29160 = x__23608__auto__;
return goog.typeOf(G__29160);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i);
}
});
var _invoke__11 = (function (this$,a,b,c,d,e,f,g,h,i,j){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$11;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$11(this$,a,b,c,d,e,f,g,h,i,j);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29162 = x__23608__auto__;
return goog.typeOf(G__29162);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j);
}
});
var _invoke__12 = (function (this$,a,b,c,d,e,f,g,h,i,j,k){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$12;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$12(this$,a,b,c,d,e,f,g,h,i,j,k);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29164 = x__23608__auto__;
return goog.typeOf(G__29164);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k);
}
});
var _invoke__13 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$13;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$13(this$,a,b,c,d,e,f,g,h,i,j,k,l);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29166 = x__23608__auto__;
return goog.typeOf(G__29166);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l);
}
});
var _invoke__14 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$14;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$14(this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29168 = x__23608__auto__;
return goog.typeOf(G__29168);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
}
});
var _invoke__15 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$15;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$15(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29170 = x__23608__auto__;
return goog.typeOf(G__29170);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
}
});
var _invoke__16 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$16;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$16(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29172 = x__23608__auto__;
return goog.typeOf(G__29172);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
}
});
var _invoke__17 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$17;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$17(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29174 = x__23608__auto__;
return goog.typeOf(G__29174);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
}
});
var _invoke__18 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$18;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$18(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29176 = x__23608__auto__;
return goog.typeOf(G__29176);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
}
});
var _invoke__19 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$19;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$19(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29178 = x__23608__auto__;
return goog.typeOf(G__29178);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
}
});
var _invoke__20 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$20;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$20(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29180 = x__23608__auto__;
return goog.typeOf(G__29180);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
}
});
var _invoke__21 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$21;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$21(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29182 = x__23608__auto__;
return goog.typeOf(G__29182);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
}
});
var _invoke__22 = (function (this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IFn$_invoke$arity$22;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IFn$_invoke$arity$22(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._invoke[(function (){var G__29184 = x__23608__auto__;
return goog.typeOf(G__29184);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._invoke["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IFn.-invoke",this$);
}
}
})().call(null,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
});
_invoke = function(this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return _invoke__1.call(this,this$);
case 2:
return _invoke__2.call(this,this$,a);
case 3:
return _invoke__3.call(this,this$,a,b);
case 4:
return _invoke__4.call(this,this$,a,b,c);
case 5:
return _invoke__5.call(this,this$,a,b,c,d);
case 6:
return _invoke__6.call(this,this$,a,b,c,d,e);
case 7:
return _invoke__7.call(this,this$,a,b,c,d,e,f);
case 8:
return _invoke__8.call(this,this$,a,b,c,d,e,f,g);
case 9:
return _invoke__9.call(this,this$,a,b,c,d,e,f,g,h);
case 10:
return _invoke__10.call(this,this$,a,b,c,d,e,f,g,h,i);
case 11:
return _invoke__11.call(this,this$,a,b,c,d,e,f,g,h,i,j);
case 12:
return _invoke__12.call(this,this$,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return _invoke__13.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return _invoke__14.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return _invoke__15.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return _invoke__16.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return _invoke__17.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return _invoke__18.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return _invoke__19.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return _invoke__20.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return _invoke__21.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return _invoke__22.call(this,this$,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
_invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
_invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
_invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
_invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
_invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
_invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
_invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
_invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
_invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
_invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
_invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
_invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
_invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
_invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
_invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
_invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
_invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
_invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
_invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
_invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
_invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
return _invoke;
})()
;


cljs.core.ICloneable = (function (){var obj29186 = {};
return obj29186;
})();

cljs.core._clone = (function _clone(value){
if((function (){var and__22952__auto__ = value;
if(and__22952__auto__){
return value.cljs$core$ICloneable$_clone$arity$1;
} else {
return and__22952__auto__;
}
})()){
return value.cljs$core$ICloneable$_clone$arity$1(value);
} else {
var x__23608__auto__ = (((value == null))?null:value);
return (function (){var or__22964__auto__ = (cljs.core._clone[(function (){var G__29190 = x__23608__auto__;
return goog.typeOf(G__29190);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._clone["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ICloneable.-clone",value);
}
}
})().call(null,value);
}
});


cljs.core.ICounted = (function (){var obj29192 = {};
return obj29192;
})();

cljs.core._count = (function _count(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ICounted$_count$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._count[(function (){var G__29196 = x__23608__auto__;
return goog.typeOf(G__29196);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._count["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ICounted.-count",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IEmptyableCollection = (function (){var obj29198 = {};
return obj29198;
})();

cljs.core._empty = (function _empty(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._empty[(function (){var G__29202 = x__23608__auto__;
return goog.typeOf(G__29202);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._empty["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IEmptyableCollection.-empty",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ICollection = (function (){var obj29204 = {};
return obj29204;
})();

cljs.core._conj = (function _conj(coll,o){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ICollection$_conj$arity$2;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ICollection$_conj$arity$2(coll,o);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._conj[(function (){var G__29208 = x__23608__auto__;
return goog.typeOf(G__29208);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._conj["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ICollection.-conj",coll);
}
}
})().call(null,coll,o);
}
});


cljs.core.IIndexed = (function (){var obj29210 = {};
return obj29210;
})();

cljs.core._nth = (function() {
var _nth = null;
var _nth__2 = (function (coll,n){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IIndexed$_nth$arity$2;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(coll,n);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._nth[(function (){var G__29216 = x__23608__auto__;
return goog.typeOf(G__29216);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._nth["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n);
}
});
var _nth__3 = (function (coll,n,not_found){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IIndexed$_nth$arity$3;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(coll,n,not_found);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._nth[(function (){var G__29218 = x__23608__auto__;
return goog.typeOf(G__29218);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._nth["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IIndexed.-nth",coll);
}
}
})().call(null,coll,n,not_found);
}
});
_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return _nth__2.call(this,coll,n);
case 3:
return _nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
_nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
return _nth;
})()
;


cljs.core.ASeq = (function (){var obj29220 = {};
return obj29220;
})();


cljs.core.ISeq = (function (){var obj29222 = {};
return obj29222;
})();

cljs.core._first = (function _first(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ISeq$_first$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._first[(function (){var G__29226 = x__23608__auto__;
return goog.typeOf(G__29226);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._first["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._rest = (function _rest(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ISeq$_rest$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._rest[(function (){var G__29230 = x__23608__auto__;
return goog.typeOf(G__29230);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._rest["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeq.-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INext = (function (){var obj29232 = {};
return obj29232;
})();

cljs.core._next = (function _next(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$INext$_next$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$INext$_next$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._next[(function (){var G__29236 = x__23608__auto__;
return goog.typeOf(G__29236);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._next["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("INext.-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ILookup = (function (){var obj29238 = {};
return obj29238;
})();

cljs.core._lookup = (function() {
var _lookup = null;
var _lookup__2 = (function (o,k){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$ILookup$_lookup$arity$2;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(o,k);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._lookup[(function (){var G__29244 = x__23608__auto__;
return goog.typeOf(G__29244);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._lookup["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k);
}
});
var _lookup__3 = (function (o,k,not_found){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$ILookup$_lookup$arity$3;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(o,k,not_found);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._lookup[(function (){var G__29246 = x__23608__auto__;
return goog.typeOf(G__29246);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._lookup["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ILookup.-lookup",o);
}
}
})().call(null,o,k,not_found);
}
});
_lookup = function(o,k,not_found){
switch(arguments.length){
case 2:
return _lookup__2.call(this,o,k);
case 3:
return _lookup__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
_lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
return _lookup;
})()
;


cljs.core.IAssociative = (function (){var obj29248 = {};
return obj29248;
})();

cljs.core._contains_key_QMARK_ = (function _contains_key_QMARK_(coll,k){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll,k);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._contains_key_QMARK_[(function (){var G__29252 = x__23608__auto__;
return goog.typeOf(G__29252);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._contains_key_QMARK_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-contains-key?",coll);
}
}
})().call(null,coll,k);
}
});

cljs.core._assoc = (function _assoc(coll,k,v){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IAssociative$_assoc$arity$3;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IAssociative$_assoc$arity$3(coll,k,v);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._assoc[(function (){var G__29256 = x__23608__auto__;
return goog.typeOf(G__29256);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._assoc["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IAssociative.-assoc",coll);
}
}
})().call(null,coll,k,v);
}
});


cljs.core.IMap = (function (){var obj29258 = {};
return obj29258;
})();

cljs.core._dissoc = (function _dissoc(coll,k){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IMap$_dissoc$arity$2;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IMap$_dissoc$arity$2(coll,k);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._dissoc[(function (){var G__29262 = x__23608__auto__;
return goog.typeOf(G__29262);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._dissoc["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMap.-dissoc",coll);
}
}
})().call(null,coll,k);
}
});


cljs.core.IMapEntry = (function (){var obj29264 = {};
return obj29264;
})();

cljs.core._key = (function _key(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IMapEntry$_key$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_key$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._key[(function (){var G__29268 = x__23608__auto__;
return goog.typeOf(G__29268);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._key["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-key",coll);
}
}
})().call(null,coll);
}
});

cljs.core._val = (function _val(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IMapEntry$_val$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IMapEntry$_val$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._val[(function (){var G__29272 = x__23608__auto__;
return goog.typeOf(G__29272);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._val["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMapEntry.-val",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISet = (function (){var obj29274 = {};
return obj29274;
})();

cljs.core._disjoin = (function _disjoin(coll,v){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ISet$_disjoin$arity$2;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ISet$_disjoin$arity$2(coll,v);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._disjoin[(function (){var G__29278 = x__23608__auto__;
return goog.typeOf(G__29278);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._disjoin["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISet.-disjoin",coll);
}
}
})().call(null,coll,v);
}
});


cljs.core.IStack = (function (){var obj29280 = {};
return obj29280;
})();

cljs.core._peek = (function _peek(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IStack$_peek$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IStack$_peek$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._peek[(function (){var G__29284 = x__23608__auto__;
return goog.typeOf(G__29284);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._peek["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-peek",coll);
}
}
})().call(null,coll);
}
});

cljs.core._pop = (function _pop(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IStack$_pop$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IStack$_pop$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._pop[(function (){var G__29288 = x__23608__auto__;
return goog.typeOf(G__29288);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._pop["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IStack.-pop",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IVector = (function (){var obj29290 = {};
return obj29290;
})();

cljs.core._assoc_n = (function _assoc_n(coll,n,val){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IVector$_assoc_n$arity$3;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IVector$_assoc_n$arity$3(coll,n,val);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._assoc_n[(function (){var G__29294 = x__23608__auto__;
return goog.typeOf(G__29294);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._assoc_n["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IVector.-assoc-n",coll);
}
}
})().call(null,coll,n,val);
}
});


cljs.core.IDeref = (function (){var obj29296 = {};
return obj29296;
})();

cljs.core._deref = (function _deref(o){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IDeref$_deref$arity$1;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IDeref$_deref$arity$1(o);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._deref[(function (){var G__29300 = x__23608__auto__;
return goog.typeOf(G__29300);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._deref["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IDeref.-deref",o);
}
}
})().call(null,o);
}
});


cljs.core.IDerefWithTimeout = (function (){var obj29302 = {};
return obj29302;
})();

cljs.core._deref_with_timeout = (function _deref_with_timeout(o,msec,timeout_val){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o,msec,timeout_val);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._deref_with_timeout[(function (){var G__29306 = x__23608__auto__;
return goog.typeOf(G__29306);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._deref_with_timeout["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout",o);
}
}
})().call(null,o,msec,timeout_val);
}
});


cljs.core.IMeta = (function (){var obj29308 = {};
return obj29308;
})();

cljs.core._meta = (function _meta(o){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IMeta$_meta$arity$1;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IMeta$_meta$arity$1(o);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._meta[(function (){var G__29312 = x__23608__auto__;
return goog.typeOf(G__29312);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._meta["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMeta.-meta",o);
}
}
})().call(null,o);
}
});


cljs.core.IWithMeta = (function (){var obj29314 = {};
return obj29314;
})();

cljs.core._with_meta = (function _with_meta(o,meta){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IWithMeta$_with_meta$arity$2;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IWithMeta$_with_meta$arity$2(o,meta);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._with_meta[(function (){var G__29318 = x__23608__auto__;
return goog.typeOf(G__29318);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._with_meta["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IWithMeta.-with-meta",o);
}
}
})().call(null,o,meta);
}
});


cljs.core.IReduce = (function (){var obj29320 = {};
return obj29320;
})();

cljs.core._reduce = (function() {
var _reduce = null;
var _reduce__2 = (function (coll,f){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IReduce$_reduce$arity$2;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(coll,f);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._reduce[(function (){var G__29326 = x__23608__auto__;
return goog.typeOf(G__29326);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._reduce["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f);
}
});
var _reduce__3 = (function (coll,f,start){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IReduce$_reduce$arity$3;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(coll,f,start);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._reduce[(function (){var G__29328 = x__23608__auto__;
return goog.typeOf(G__29328);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._reduce["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IReduce.-reduce",coll);
}
}
})().call(null,coll,f,start);
}
});
_reduce = function(coll,f,start){
switch(arguments.length){
case 2:
return _reduce__2.call(this,coll,f);
case 3:
return _reduce__3.call(this,coll,f,start);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
_reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
return _reduce;
})()
;


cljs.core.IKVReduce = (function (){var obj29330 = {};
return obj29330;
})();

cljs.core._kv_reduce = (function _kv_reduce(coll,f,init){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll,f,init);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._kv_reduce[(function (){var G__29334 = x__23608__auto__;
return goog.typeOf(G__29334);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._kv_reduce["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IKVReduce.-kv-reduce",coll);
}
}
})().call(null,coll,f,init);
}
});


cljs.core.IEquiv = (function (){var obj29336 = {};
return obj29336;
})();

cljs.core._equiv = (function _equiv(o,other){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IEquiv$_equiv$arity$2;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IEquiv$_equiv$arity$2(o,other);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._equiv[(function (){var G__29340 = x__23608__auto__;
return goog.typeOf(G__29340);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._equiv["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IEquiv.-equiv",o);
}
}
})().call(null,o,other);
}
});


cljs.core.IHash = (function (){var obj29342 = {};
return obj29342;
})();

cljs.core._hash = (function _hash(o){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IHash$_hash$arity$1;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(o);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._hash[(function (){var G__29346 = x__23608__auto__;
return goog.typeOf(G__29346);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._hash["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IHash.-hash",o);
}
}
})().call(null,o);
}
});


cljs.core.ISeqable = (function (){var obj29348 = {};
return obj29348;
})();

cljs.core._seq = (function _seq(o){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$ISeqable$_seq$arity$1;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$ISeqable$_seq$arity$1(o);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._seq[(function (){var G__29352 = x__23608__auto__;
return goog.typeOf(G__29352);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._seq["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISeqable.-seq",o);
}
}
})().call(null,o);
}
});


cljs.core.ISequential = (function (){var obj29354 = {};
return obj29354;
})();


cljs.core.IList = (function (){var obj29356 = {};
return obj29356;
})();


cljs.core.IRecord = (function (){var obj29358 = {};
return obj29358;
})();


cljs.core.IReversible = (function (){var obj29360 = {};
return obj29360;
})();

cljs.core._rseq = (function _rseq(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IReversible$_rseq$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IReversible$_rseq$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._rseq[(function (){var G__29364 = x__23608__auto__;
return goog.typeOf(G__29364);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._rseq["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IReversible.-rseq",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ISorted = (function (){var obj29366 = {};
return obj29366;
})();

cljs.core._sorted_seq = (function _sorted_seq(coll,ascending_QMARK_){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ISorted$_sorted_seq$arity$2;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll,ascending_QMARK_);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._sorted_seq[(function (){var G__29370 = x__23608__auto__;
return goog.typeOf(G__29370);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._sorted_seq["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq",coll);
}
}
})().call(null,coll,ascending_QMARK_);
}
});

cljs.core._sorted_seq_from = (function _sorted_seq_from(coll,k,ascending_QMARK_){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll,k,ascending_QMARK_);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._sorted_seq_from[(function (){var G__29374 = x__23608__auto__;
return goog.typeOf(G__29374);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._sorted_seq_from["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-sorted-seq-from",coll);
}
}
})().call(null,coll,k,ascending_QMARK_);
}
});

cljs.core._entry_key = (function _entry_key(coll,entry){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ISorted$_entry_key$arity$2;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ISorted$_entry_key$arity$2(coll,entry);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._entry_key[(function (){var G__29378 = x__23608__auto__;
return goog.typeOf(G__29378);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._entry_key["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-entry-key",coll);
}
}
})().call(null,coll,entry);
}
});

cljs.core._comparator = (function _comparator(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$ISorted$_comparator$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$ISorted$_comparator$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._comparator[(function (){var G__29382 = x__23608__auto__;
return goog.typeOf(G__29382);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._comparator["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISorted.-comparator",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IWriter = (function (){var obj29384 = {};
return obj29384;
})();

cljs.core._write = (function _write(writer,s){
if((function (){var and__22952__auto__ = writer;
if(and__22952__auto__){
return writer.cljs$core$IWriter$_write$arity$2;
} else {
return and__22952__auto__;
}
})()){
return writer.cljs$core$IWriter$_write$arity$2(writer,s);
} else {
var x__23608__auto__ = (((writer == null))?null:writer);
return (function (){var or__22964__auto__ = (cljs.core._write[(function (){var G__29388 = x__23608__auto__;
return goog.typeOf(G__29388);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._write["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-write",writer);
}
}
})().call(null,writer,s);
}
});

cljs.core._flush = (function _flush(writer){
if((function (){var and__22952__auto__ = writer;
if(and__22952__auto__){
return writer.cljs$core$IWriter$_flush$arity$1;
} else {
return and__22952__auto__;
}
})()){
return writer.cljs$core$IWriter$_flush$arity$1(writer);
} else {
var x__23608__auto__ = (((writer == null))?null:writer);
return (function (){var or__22964__auto__ = (cljs.core._flush[(function (){var G__29392 = x__23608__auto__;
return goog.typeOf(G__29392);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._flush["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IWriter.-flush",writer);
}
}
})().call(null,writer);
}
});


cljs.core.IPrintWithWriter = (function (){var obj29394 = {};
return obj29394;
})();

cljs.core._pr_writer = (function _pr_writer(o,writer,opts){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o,writer,opts);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._pr_writer[(function (){var G__29398 = x__23608__auto__;
return goog.typeOf(G__29398);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._pr_writer["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer",o);
}
}
})().call(null,o,writer,opts);
}
});


cljs.core.IPending = (function (){var obj29400 = {};
return obj29400;
})();

cljs.core._realized_QMARK_ = (function _realized_QMARK_(d){
if((function (){var and__22952__auto__ = d;
if(and__22952__auto__){
return d.cljs$core$IPending$_realized_QMARK_$arity$1;
} else {
return and__22952__auto__;
}
})()){
return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
} else {
var x__23608__auto__ = (((d == null))?null:d);
return (function (){var or__22964__auto__ = (cljs.core._realized_QMARK_[(function (){var G__29404 = x__23608__auto__;
return goog.typeOf(G__29404);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._realized_QMARK_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IPending.-realized?",d);
}
}
})().call(null,d);
}
});


cljs.core.IWatchable = (function (){var obj29406 = {};
return obj29406;
})();

cljs.core._notify_watches = (function _notify_watches(this$,oldval,newval){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IWatchable$_notify_watches$arity$3;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$,oldval,newval);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._notify_watches[(function (){var G__29410 = x__23608__auto__;
return goog.typeOf(G__29410);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._notify_watches["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-notify-watches",this$);
}
}
})().call(null,this$,oldval,newval);
}
});

cljs.core._add_watch = (function _add_watch(this$,key,f){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IWatchable$_add_watch$arity$3;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IWatchable$_add_watch$arity$3(this$,key,f);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._add_watch[(function (){var G__29414 = x__23608__auto__;
return goog.typeOf(G__29414);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._add_watch["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-add-watch",this$);
}
}
})().call(null,this$,key,f);
}
});

cljs.core._remove_watch = (function _remove_watch(this$,key){
if((function (){var and__22952__auto__ = this$;
if(and__22952__auto__){
return this$.cljs$core$IWatchable$_remove_watch$arity$2;
} else {
return and__22952__auto__;
}
})()){
return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$,key);
} else {
var x__23608__auto__ = (((this$ == null))?null:this$);
return (function (){var or__22964__auto__ = (cljs.core._remove_watch[(function (){var G__29418 = x__23608__auto__;
return goog.typeOf(G__29418);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._remove_watch["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IWatchable.-remove-watch",this$);
}
}
})().call(null,this$,key);
}
});


cljs.core.IEditableCollection = (function (){var obj29420 = {};
return obj29420;
})();

cljs.core._as_transient = (function _as_transient(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._as_transient[(function (){var G__29424 = x__23608__auto__;
return goog.typeOf(G__29424);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._as_transient["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IEditableCollection.-as-transient",coll);
}
}
})().call(null,coll);
}
});


cljs.core.ITransientCollection = (function (){var obj29426 = {};
return obj29426;
})();

cljs.core._conj_BANG_ = (function _conj_BANG_(tcoll,val){
if((function (){var and__22952__auto__ = tcoll;
if(and__22952__auto__){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
} else {
return and__22952__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll,val);
} else {
var x__23608__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__22964__auto__ = (cljs.core._conj_BANG_[(function (){var G__29430 = x__23608__auto__;
return goog.typeOf(G__29430);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._conj_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-conj!",tcoll);
}
}
})().call(null,tcoll,val);
}
});

cljs.core._persistent_BANG_ = (function _persistent_BANG_(tcoll){
if((function (){var and__22952__auto__ = tcoll;
if(and__22952__auto__){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
} else {
return and__22952__auto__;
}
})()){
return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
} else {
var x__23608__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__22964__auto__ = (cljs.core._persistent_BANG_[(function (){var G__29434 = x__23608__auto__;
return goog.typeOf(G__29434);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._persistent_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientCollection.-persistent!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientAssociative = (function (){var obj29436 = {};
return obj29436;
})();

cljs.core._assoc_BANG_ = (function _assoc_BANG_(tcoll,key,val){
if((function (){var and__22952__auto__ = tcoll;
if(and__22952__auto__){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
} else {
return and__22952__auto__;
}
})()){
return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll,key,val);
} else {
var x__23608__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__22964__auto__ = (cljs.core._assoc_BANG_[(function (){var G__29440 = x__23608__auto__;
return goog.typeOf(G__29440);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._assoc_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientAssociative.-assoc!",tcoll);
}
}
})().call(null,tcoll,key,val);
}
});


cljs.core.ITransientMap = (function (){var obj29442 = {};
return obj29442;
})();

cljs.core._dissoc_BANG_ = (function _dissoc_BANG_(tcoll,key){
if((function (){var and__22952__auto__ = tcoll;
if(and__22952__auto__){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
} else {
return and__22952__auto__;
}
})()){
return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll,key);
} else {
var x__23608__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__22964__auto__ = (cljs.core._dissoc_BANG_[(function (){var G__29446 = x__23608__auto__;
return goog.typeOf(G__29446);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._dissoc_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientMap.-dissoc!",tcoll);
}
}
})().call(null,tcoll,key);
}
});


cljs.core.ITransientVector = (function (){var obj29448 = {};
return obj29448;
})();

cljs.core._assoc_n_BANG_ = (function _assoc_n_BANG_(tcoll,n,val){
if((function (){var and__22952__auto__ = tcoll;
if(and__22952__auto__){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
} else {
return and__22952__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll,n,val);
} else {
var x__23608__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__22964__auto__ = (cljs.core._assoc_n_BANG_[(function (){var G__29452 = x__23608__auto__;
return goog.typeOf(G__29452);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._assoc_n_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-assoc-n!",tcoll);
}
}
})().call(null,tcoll,n,val);
}
});

cljs.core._pop_BANG_ = (function _pop_BANG_(tcoll){
if((function (){var and__22952__auto__ = tcoll;
if(and__22952__auto__){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
} else {
return and__22952__auto__;
}
})()){
return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
} else {
var x__23608__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__22964__auto__ = (cljs.core._pop_BANG_[(function (){var G__29456 = x__23608__auto__;
return goog.typeOf(G__29456);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._pop_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientVector.-pop!",tcoll);
}
}
})().call(null,tcoll);
}
});


cljs.core.ITransientSet = (function (){var obj29458 = {};
return obj29458;
})();

cljs.core._disjoin_BANG_ = (function _disjoin_BANG_(tcoll,v){
if((function (){var and__22952__auto__ = tcoll;
if(and__22952__auto__){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
} else {
return and__22952__auto__;
}
})()){
return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll,v);
} else {
var x__23608__auto__ = (((tcoll == null))?null:tcoll);
return (function (){var or__22964__auto__ = (cljs.core._disjoin_BANG_[(function (){var G__29462 = x__23608__auto__;
return goog.typeOf(G__29462);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._disjoin_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ITransientSet.-disjoin!",tcoll);
}
}
})().call(null,tcoll,v);
}
});


cljs.core.IComparable = (function (){var obj29464 = {};
return obj29464;
})();

cljs.core._compare = (function _compare(x,y){
if((function (){var and__22952__auto__ = x;
if(and__22952__auto__){
return x.cljs$core$IComparable$_compare$arity$2;
} else {
return and__22952__auto__;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(x,y);
} else {
var x__23608__auto__ = (((x == null))?null:x);
return (function (){var or__22964__auto__ = (cljs.core._compare[(function (){var G__29468 = x__23608__auto__;
return goog.typeOf(G__29468);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._compare["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IComparable.-compare",x);
}
}
})().call(null,x,y);
}
});


cljs.core.IChunk = (function (){var obj29470 = {};
return obj29470;
})();

cljs.core._drop_first = (function _drop_first(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IChunk$_drop_first$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._drop_first[(function (){var G__29474 = x__23608__auto__;
return goog.typeOf(G__29474);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._drop_first["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunk.-drop-first",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedSeq = (function (){var obj29476 = {};
return obj29476;
})();

cljs.core._chunked_first = (function _chunked_first(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._chunked_first[(function (){var G__29480 = x__23608__auto__;
return goog.typeOf(G__29480);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._chunked_first["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first",coll);
}
}
})().call(null,coll);
}
});

cljs.core._chunked_rest = (function _chunked_rest(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._chunked_rest[(function (){var G__29484 = x__23608__auto__;
return goog.typeOf(G__29484);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._chunked_rest["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest",coll);
}
}
})().call(null,coll);
}
});


cljs.core.IChunkedNext = (function (){var obj29486 = {};
return obj29486;
})();

cljs.core._chunked_next = (function _chunked_next(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._chunked_next[(function (){var G__29490 = x__23608__auto__;
return goog.typeOf(G__29490);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._chunked_next["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IChunkedNext.-chunked-next",coll);
}
}
})().call(null,coll);
}
});


cljs.core.INamed = (function (){var obj29492 = {};
return obj29492;
})();

cljs.core._name = (function _name(x){
if((function (){var and__22952__auto__ = x;
if(and__22952__auto__){
return x.cljs$core$INamed$_name$arity$1;
} else {
return and__22952__auto__;
}
})()){
return x.cljs$core$INamed$_name$arity$1(x);
} else {
var x__23608__auto__ = (((x == null))?null:x);
return (function (){var or__22964__auto__ = (cljs.core._name[(function (){var G__29496 = x__23608__auto__;
return goog.typeOf(G__29496);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._name["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-name",x);
}
}
})().call(null,x);
}
});

cljs.core._namespace = (function _namespace(x){
if((function (){var and__22952__auto__ = x;
if(and__22952__auto__){
return x.cljs$core$INamed$_namespace$arity$1;
} else {
return and__22952__auto__;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(x);
} else {
var x__23608__auto__ = (((x == null))?null:x);
return (function (){var or__22964__auto__ = (cljs.core._namespace[(function (){var G__29500 = x__23608__auto__;
return goog.typeOf(G__29500);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._namespace["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("INamed.-namespace",x);
}
}
})().call(null,x);
}
});


cljs.core.IAtom = (function (){var obj29502 = {};
return obj29502;
})();


cljs.core.IReset = (function (){var obj29504 = {};
return obj29504;
})();

cljs.core._reset_BANG_ = (function _reset_BANG_(o,new_value){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IReset$_reset_BANG_$arity$2;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IReset$_reset_BANG_$arity$2(o,new_value);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._reset_BANG_[(function (){var G__29508 = x__23608__auto__;
return goog.typeOf(G__29508);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._reset_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IReset.-reset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.ISwap = (function (){var obj29510 = {};
return obj29510;
})();

cljs.core._swap_BANG_ = (function() {
var _swap_BANG_ = null;
var _swap_BANG___2 = (function (o,f){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$2;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$2(o,f);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._swap_BANG_[(function (){var G__29520 = x__23608__auto__;
return goog.typeOf(G__29520);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f);
}
});
var _swap_BANG___3 = (function (o,f,a){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$3;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$3(o,f,a);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._swap_BANG_[(function (){var G__29522 = x__23608__auto__;
return goog.typeOf(G__29522);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a);
}
});
var _swap_BANG___4 = (function (o,f,a,b){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$4;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$4(o,f,a,b);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._swap_BANG_[(function (){var G__29524 = x__23608__auto__;
return goog.typeOf(G__29524);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b);
}
});
var _swap_BANG___5 = (function (o,f,a,b,xs){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$ISwap$_swap_BANG_$arity$5;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$ISwap$_swap_BANG_$arity$5(o,f,a,b,xs);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._swap_BANG_[(function (){var G__29526 = x__23608__auto__;
return goog.typeOf(G__29526);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._swap_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("ISwap.-swap!",o);
}
}
})().call(null,o,f,a,b,xs);
}
});
_swap_BANG_ = function(o,f,a,b,xs){
switch(arguments.length){
case 2:
return _swap_BANG___2.call(this,o,f);
case 3:
return _swap_BANG___3.call(this,o,f,a);
case 4:
return _swap_BANG___4.call(this,o,f,a,b);
case 5:
return _swap_BANG___5.call(this,o,f,a,b,xs);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
_swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
_swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
_swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
return _swap_BANG_;
})()
;


cljs.core.IVolatile = (function (){var obj29528 = {};
return obj29528;
})();

cljs.core._vreset_BANG_ = (function _vreset_BANG_(o,new_value){
if((function (){var and__22952__auto__ = o;
if(and__22952__auto__){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
} else {
return and__22952__auto__;
}
})()){
return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o,new_value);
} else {
var x__23608__auto__ = (((o == null))?null:o);
return (function (){var or__22964__auto__ = (cljs.core._vreset_BANG_[(function (){var G__29532 = x__23608__auto__;
return goog.typeOf(G__29532);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._vreset_BANG_["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IVolatile.-vreset!",o);
}
}
})().call(null,o,new_value);
}
});


cljs.core.IIterable = (function (){var obj29534 = {};
return obj29534;
})();

cljs.core._iterator = (function _iterator(coll){
if((function (){var and__22952__auto__ = coll;
if(and__22952__auto__){
return coll.cljs$core$IIterable$_iterator$arity$1;
} else {
return and__22952__auto__;
}
})()){
return coll.cljs$core$IIterable$_iterator$arity$1(coll);
} else {
var x__23608__auto__ = (((coll == null))?null:coll);
return (function (){var or__22964__auto__ = (cljs.core._iterator[(function (){var G__29538 = x__23608__auto__;
return goog.typeOf(G__29538);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._iterator["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IIterable.-iterator",coll);
}
}
})().call(null,coll);
}
});


/**
* @constructor
*/
cljs.core.StringBufferWriter = (function (sb){
this.sb = sb;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 1073741824;
})
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = (function (_,s){
var self__ = this;
var ___$1 = this;
return self__.sb.append(s);
});

cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return null;
});

cljs.core.StringBufferWriter.cljs$lang$type = true;

cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";

cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/StringBufferWriter");
});

cljs.core.__GT_StringBufferWriter = (function __GT_StringBufferWriter(sb){
return (new cljs.core.StringBufferWriter(sb));
});

/**
* Support so that collections can implement toString without
* loading all the printing machinery.
*/
cljs.core.pr_str_STAR_ = (function pr_str_STAR_(obj){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,cljs.core.pr_opts());

writer.cljs$core$IWriter$_flush$arity$1(null);

return [cljs.core.str(sb)].join('');
});
cljs.core.int_rotate_left = (function int_rotate_left(x,n){
return ((x << n) | (x >>> (- n)));
});
if((typeof Math.imul !== 'undefined') && (!(((function (){var G__29541 = (4294967295);
var G__29542 = (5);
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__29541,G__29542) : Math.imul.call(null,G__29541,G__29542));
})() === (0))))){
cljs.core.imul = (function imul(a,b){
var G__29545 = a;
var G__29546 = b;
return (Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__29545,G__29546) : Math.imul.call(null,G__29545,G__29546));
});
} else {
cljs.core.imul = (function imul(a,b){
var ah = ((a >>> (16)) & (65535));
var al = (a & (65535));
var bh = ((b >>> (16)) & (65535));
var bl = (b & (65535));
return (((al * bl) + ((((ah * bl) + (al * bh)) << (16)) >>> (0))) | (0));
});
}
cljs.core.m3_seed = (0);
cljs.core.m3_C1 = (3432918353);
cljs.core.m3_C2 = (461845907);
cljs.core.m3_mix_K1 = (function m3_mix_K1(k1){
return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1,cljs.core.m3_C1),(15)),cljs.core.m3_C2);
});
cljs.core.m3_mix_H1 = (function m3_mix_H1(h1,k1){
return (cljs.core.imul(cljs.core.int_rotate_left((h1 ^ k1),(13)),(5)) + (3864292196));
});
cljs.core.m3_fmix = (function m3_fmix(h1,len){
var h1__$1 = h1;
var h1__$2 = (h1__$1 ^ len);
var h1__$3 = (h1__$2 ^ (h1__$2 >>> (16)));
var h1__$4 = cljs.core.imul(h1__$3,(2246822507));
var h1__$5 = (h1__$4 ^ (h1__$4 >>> (13)));
var h1__$6 = cljs.core.imul(h1__$5,(3266489909));
var h1__$7 = (h1__$6 ^ (h1__$6 >>> (16)));
return h1__$7;
});
cljs.core.m3_hash_int = (function m3_hash_int(in$){
if((in$ === (0))){
return in$;
} else {
var k1 = cljs.core.m3_mix_K1(in$);
var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed,k1);
return cljs.core.m3_fmix(h1,(4));
}
});
cljs.core.m3_hash_unencoded_chars = (function m3_hash_unencoded_chars(in$){
var h1 = (function (){var i = (1);
var h1 = cljs.core.m3_seed;
while(true){
if((i < in$.length)){
var G__29547 = (i + (2));
var G__29548 = cljs.core.m3_mix_H1(h1,cljs.core.m3_mix_K1((in$.charCodeAt((i - (1))) | (in$.charCodeAt(i) << (16)))));
i = G__29547;
h1 = G__29548;
continue;
} else {
return h1;
}
break;
}
})();
var h1__$1 = ((((in$.length & (1)) === (1)))?(h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt((in$.length - (1))))):h1);
return cljs.core.m3_fmix(h1__$1,cljs.core.imul((2),in$.length));
});



cljs.core.string_hash_cache = (function (){var obj29550 = {};
return obj29550;
})();
cljs.core.string_hash_cache_count = (0);
cljs.core.hash_string_STAR_ = (function hash_string_STAR_(s){
if(!((s == null))){
var len = s.length;
if((len > (0))){
var i = (0);
var hash = (0);
while(true){
if((i < len)){
var G__29551 = (i + (1));
var G__29552 = (cljs.core.imul((31),hash) + s.charCodeAt(i));
i = G__29551;
hash = G__29552;
continue;
} else {
return hash;
}
break;
}
} else {
return (0);
}
} else {
return (0);
}
});
cljs.core.add_to_string_hash_cache = (function add_to_string_hash_cache(k){
var h = cljs.core.hash_string_STAR_(k);
(cljs.core.string_hash_cache[k] = h);

cljs.core.string_hash_cache_count = (cljs.core.string_hash_cache_count + (1));

return h;
});
cljs.core.hash_string = (function hash_string(k){
if((cljs.core.string_hash_cache_count > (255))){
cljs.core.string_hash_cache = (function (){var obj29556 = {};
return obj29556;
})();

cljs.core.string_hash_cache_count = (0);
} else {
}

var h = (cljs.core.string_hash_cache[k]);
if(typeof h === 'number'){
return h;
} else {
return cljs.core.add_to_string_hash_cache(k);
}
});
cljs.core.hash = (function hash(o){
if((function (){var G__29559 = o;
if(G__29559){
var bit__23638__auto__ = (G__29559.cljs$lang$protocol_mask$partition0$ & (4194304));
if((bit__23638__auto__) || (G__29559.cljs$core$IHash$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$IHash$_hash$arity$1(null);
} else {
if(typeof o === 'number'){
return ((function (){var G__29560 = o;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__29560) : Math.floor.call(null,G__29560));
})() % (2147483647));
} else {
if(o === true){
return (1);
} else {
if(o === false){
return (0);
} else {
if(typeof o === 'string'){
return cljs.core.m3_hash_int(cljs.core.hash_string(o));
} else {
if((o instanceof Date)){
return o.valueOf();
} else {
if((o == null)){
return (0);
} else {
return cljs.core._hash(o);

}
}
}
}
}
}
}
});
cljs.core.hash_combine = (function hash_combine(seed,hash){
return (seed ^ (((hash + (2654435769)) + (seed << (6))) + (seed >> (2))));
});
cljs.core.instance_QMARK_ = (function instance_QMARK_(t,o){
return (o instanceof t);
});
cljs.core.symbol_QMARK_ = (function symbol_QMARK_(x){
return (x instanceof cljs.core.Symbol);
});
cljs.core.hash_symbol = (function hash_symbol(sym){
return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name),cljs.core.hash_string(sym.ns));
});
cljs.core.compare_symbols = (function compare_symbols(a,b){
if((a.str === b.str)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__22952__auto__ = cljs.core.not(a.ns);
if(and__22952__auto__){
return b.ns;
} else {
return and__22952__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__29567 = a.ns;
var G__29568 = b.ns;
return goog.array.defaultCompare(G__29567,G__29568);
})();
if(((0) === nsc)){
var G__29569 = a.name;
var G__29570 = b.name;
return goog.array.defaultCompare(G__29569,G__29570);
} else {
return nsc;
}
}
} else {
var G__29571 = a.name;
var G__29572 = b.name;
return goog.array.defaultCompare(G__29571,G__29572);

}
}
}
});

/**
* @constructor
*/
cljs.core.Symbol = (function (ns,name,str,_hash,_meta){
this.ns = ns;
this.name = name;
this.str = str;
this._hash = _hash;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition0$ = 2154168321;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,self__.str);
});

cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = (function (sym){
var self__ = this;
var sym__$1 = this;
var h__23385__auto__ = self__._hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_symbol(sym__$1);
self__._hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Symbol(self__.ns,self__.name,self__.str,self__._hash,new_meta));
});

cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Symbol.prototype.call = (function() {
var G__29574 = null;
var G__29574__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});
var G__29574__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var sym = self____$1;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});
G__29574 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__29574__2.call(this,self__,coll);
case 3:
return G__29574__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29574.cljs$core$IFn$_invoke$arity$2 = G__29574__2;
G__29574.cljs$core$IFn$_invoke$arity$3 = G__29574__3;
return G__29574;
})()
;

cljs.core.Symbol.prototype.apply = (function (self__,args29573){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29573)));
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,null);
});

cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var sym = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll,sym,not_found);
});

cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Symbol)){
return (self__.str === other.str);
} else {
return false;
}
});

cljs.core.Symbol.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.str;
});

cljs.core.Symbol.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Symbol.cljs$lang$type = true;

cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";

cljs.core.Symbol.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Symbol");
});

cljs.core.__GT_Symbol = (function __GT_Symbol(ns,name,str,_hash,_meta){
return (new cljs.core.Symbol(ns,name,str,_hash,_meta));
});

cljs.core.symbol = (function() {
var symbol = null;
var symbol__1 = (function (name){
if((name instanceof cljs.core.Symbol)){
return name;
} else {
return symbol.cljs$core$IFn$_invoke$arity$2(null,name);
}
});
var symbol__2 = (function (ns,name){
var sym_str = ((!((ns == null)))?[cljs.core.str(ns),cljs.core.str("/"),cljs.core.str(name)].join(''):name);
return (new cljs.core.Symbol(ns,name,sym_str,null,null));
});
symbol = function(ns,name){
switch(arguments.length){
case 1:
return symbol__1.call(this,ns);
case 2:
return symbol__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
return symbol;
})()
;

/**
* @constructor
*/
cljs.core.Var = (function (val,sym,_meta){
this.val = val;
this.sym = sym;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 163841;
})
cljs.core.Var.prototype.call = (function() {
var G__29622 = null;
var G__29622__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});
var G__29622__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});
var G__29622__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});
var G__29622__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});
var G__29622__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});
var G__29622__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});
var G__29622__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});
var G__29622__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});
var G__29622__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});
var G__29622__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});
var G__29622__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});
var G__29622__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});
var G__29622__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});
var G__29622__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});
var G__29622__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});
var G__29622__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});
var G__29622__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});
var G__29622__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});
var G__29622__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});
var G__29622__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});
var G__29622__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});
var G__29622__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29578 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__29579 = a;
var G__29580 = b;
var G__29581 = c;
var G__29582 = d;
var G__29583 = e;
var G__29584 = f;
var G__29585 = g;
var G__29586 = h;
var G__29587 = i;
var G__29588 = j;
var G__29589 = k;
var G__29590 = l;
var G__29591 = m;
var G__29592 = n;
var G__29593 = o;
var G__29594 = p;
var G__29595 = q;
var G__29596 = r;
var G__29597 = s;
var G__29598 = t;
var G__29599 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__29578,G__29579,G__29580,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587,G__29588,G__29589,G__29590,G__29591,G__29592,G__29593,G__29594,G__29595,G__29596,G__29597,G__29598,G__29599) : cljs.core.apply.call(null,G__29578,G__29579,G__29580,G__29581,G__29582,G__29583,G__29584,G__29585,G__29586,G__29587,G__29588,G__29589,G__29590,G__29591,G__29592,G__29593,G__29594,G__29595,G__29596,G__29597,G__29598,G__29599));
});
G__29622 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__29622__1.call(this,self__);
case 2:
return G__29622__2.call(this,self__,a);
case 3:
return G__29622__3.call(this,self__,a,b);
case 4:
return G__29622__4.call(this,self__,a,b,c);
case 5:
return G__29622__5.call(this,self__,a,b,c,d);
case 6:
return G__29622__6.call(this,self__,a,b,c,d,e);
case 7:
return G__29622__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__29622__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__29622__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__29622__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__29622__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__29622__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__29622__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__29622__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__29622__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__29622__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__29622__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__29622__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__29622__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__29622__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__29622__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__29622__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__29622.cljs$core$IFn$_invoke$arity$1 = G__29622__1;
G__29622.cljs$core$IFn$_invoke$arity$2 = G__29622__2;
G__29622.cljs$core$IFn$_invoke$arity$3 = G__29622__3;
G__29622.cljs$core$IFn$_invoke$arity$4 = G__29622__4;
G__29622.cljs$core$IFn$_invoke$arity$5 = G__29622__5;
G__29622.cljs$core$IFn$_invoke$arity$6 = G__29622__6;
G__29622.cljs$core$IFn$_invoke$arity$7 = G__29622__7;
G__29622.cljs$core$IFn$_invoke$arity$8 = G__29622__8;
G__29622.cljs$core$IFn$_invoke$arity$9 = G__29622__9;
G__29622.cljs$core$IFn$_invoke$arity$10 = G__29622__10;
G__29622.cljs$core$IFn$_invoke$arity$11 = G__29622__11;
G__29622.cljs$core$IFn$_invoke$arity$12 = G__29622__12;
G__29622.cljs$core$IFn$_invoke$arity$13 = G__29622__13;
G__29622.cljs$core$IFn$_invoke$arity$14 = G__29622__14;
G__29622.cljs$core$IFn$_invoke$arity$15 = G__29622__15;
G__29622.cljs$core$IFn$_invoke$arity$16 = G__29622__16;
G__29622.cljs$core$IFn$_invoke$arity$17 = G__29622__17;
G__29622.cljs$core$IFn$_invoke$arity$18 = G__29622__18;
G__29622.cljs$core$IFn$_invoke$arity$19 = G__29622__19;
G__29622.cljs$core$IFn$_invoke$arity$20 = G__29622__20;
G__29622.cljs$core$IFn$_invoke$arity$21 = G__29622__21;
G__29622.cljs$core$IFn$_invoke$arity$22 = G__29622__22;
return G__29622;
})()
;

cljs.core.Var.prototype.apply = (function (self__,args29577){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29577)));
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
return (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})().call(null,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
});

cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__29600 = (function (){return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
})();
var G__29601 = a;
var G__29602 = b;
var G__29603 = c;
var G__29604 = d;
var G__29605 = e;
var G__29606 = f;
var G__29607 = g;
var G__29608 = h;
var G__29609 = i;
var G__29610 = j;
var G__29611 = k;
var G__29612 = l;
var G__29613 = m;
var G__29614 = n;
var G__29615 = o;
var G__29616 = p;
var G__29617 = q;
var G__29618 = r;
var G__29619 = s;
var G__29620 = t;
var G__29621 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__29600,G__29601,G__29602,G__29603,G__29604,G__29605,G__29606,G__29607,G__29608,G__29609,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616,G__29617,G__29618,G__29619,G__29620,G__29621) : cljs.core.apply.call(null,G__29600,G__29601,G__29602,G__29603,G__29604,G__29605,G__29606,G__29607,G__29608,G__29609,G__29610,G__29611,G__29612,G__29613,G__29614,G__29615,G__29616,G__29617,G__29618,G__29619,G__29620,G__29621));
});

cljs.core.Var.prototype.cljs$core$Fn$ = true;

cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__._meta;
});

cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null));
});

cljs.core.Var.cljs$lang$type = true;

cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";

cljs.core.Var.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Var");
});

cljs.core.__GT_Var = (function __GT_Var(val,sym,_meta){
return (new cljs.core.Var(val,sym,_meta));
});



cljs.core.iterable_QMARK_ = (function iterable_QMARK_(x){
var G__29624 = x;
if(G__29624){
var bit__23645__auto__ = null;
if(cljs.core.truth_((function (){var or__22964__auto__ = bit__23645__auto__;
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return G__29624.cljs$core$IIterable$;
}
})())){
return true;
} else {
if((!G__29624.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__29624);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable,G__29624);
}
});
cljs.core.clone = (function clone(value){
return cljs.core._clone(value);
});
cljs.core.cloneable_QMARK_ = (function cloneable_QMARK_(value){
var G__29626 = value;
if(G__29626){
var bit__23645__auto__ = (G__29626.cljs$lang$protocol_mask$partition1$ & (8192));
if((bit__23645__auto__) || (G__29626.cljs$core$ICloneable$)){
return true;
} else {
if((!G__29626.cljs$lang$protocol_mask$partition1$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__29626);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable,G__29626);
}
});
/**
* Returns a seq on the collection. If the collection is
* empty, returns nil.  (seq nil) returns nil. seq also works on
* Strings.
*/
cljs.core.seq = (function seq(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__29628 = coll;
if(G__29628){
var bit__23638__auto__ = (G__29628.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__23638__auto__) || (G__29628.cljs$core$ISeqable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeqable$_seq$arity$1(null);
} else {
if(coll instanceof Array){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(typeof coll === 'string'){
if((coll.length === (0))){
return null;
} else {
return (new cljs.core.IndexedSeq(coll,(0)));
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,coll)){
return cljs.core._seq(coll);
} else {
throw (new Error([cljs.core.str(coll),cljs.core.str(" is not ISeqable")].join('')));

}
}
}
}
}
});
/**
* Returns the first item in the collection. Calls seq on its
* argument. If coll is nil, returns nil.
*/
cljs.core.first = (function first(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__29630 = coll;
if(G__29630){
var bit__23638__auto__ = (G__29630.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__23638__auto__) || (G__29630.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_first$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if((s == null)){
return null;
} else {
return cljs.core._first(s);
}
}
}
});
/**
* Returns a possibly empty seq of the items after the first. Calls seq on its
* argument.
*/
cljs.core.rest = (function rest(coll){
if(!((coll == null))){
if((function (){var G__29632 = coll;
if(G__29632){
var bit__23638__auto__ = (G__29632.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__23638__auto__) || (G__29632.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ISeq$_rest$arity$1(null);
} else {
var s = cljs.core.seq(coll);
if(s){
return cljs.core._rest(s);
} else {
return cljs.core.List.EMPTY;
}
}
} else {
return cljs.core.List.EMPTY;
}
});
/**
* Returns a seq of the items after the first. Calls seq on its
* argument.  If there are no more items, returns nil
*/
cljs.core.next = (function next(coll){
if((coll == null)){
return null;
} else {
if((function (){var G__29634 = coll;
if(G__29634){
var bit__23638__auto__ = (G__29634.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__23638__auto__) || (G__29634.cljs$core$INext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$INext$_next$arity$1(null);
} else {
return cljs.core.seq(cljs.core.rest(coll));
}
}
});
/**
* Equality. Returns true if x equals y, false if not. Compares
* numbers and collections in a type-independent manner.  Clojure's immutable data
* structures define -equiv (and thus =) as a value, not an identity,
* comparison.
* @param {...*} var_args
*/
cljs.core._EQ_ = (function() {
var _EQ_ = null;
var _EQ___1 = (function (x){
return true;
});
var _EQ___2 = (function (x,y){
if((x == null)){
return (y == null);
} else {
return ((x === y)) || (cljs.core._equiv(x,y));
}
});
var _EQ___3 = (function() { 
var G__29639__delegate = function (x,y,more){
while(true){
if(_EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__29640 = y;
var G__29641 = cljs.core.first(more);
var G__29642 = cljs.core.next(more);
x = G__29640;
y = G__29641;
more = G__29642;
continue;
} else {
return _EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__29639 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__29643__i = 0, G__29643__a = new Array(arguments.length -  2);
while (G__29643__i < G__29643__a.length) {G__29643__a[G__29643__i] = arguments[G__29643__i + 2]; ++G__29643__i;}
  more = new cljs.core.IndexedSeq(G__29643__a,0);
} 
return G__29639__delegate.call(this,x,y,more);};
G__29639.cljs$lang$maxFixedArity = 2;
G__29639.cljs$lang$applyTo = (function (arglist__29644){
var x = cljs.core.first(arglist__29644);
arglist__29644 = cljs.core.next(arglist__29644);
var y = cljs.core.first(arglist__29644);
var more = cljs.core.rest(arglist__29644);
return G__29639__delegate(x,y,more);
});
G__29639.cljs$core$IFn$_invoke$arity$variadic = G__29639__delegate;
return G__29639;
})()
;
_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ___1.call(this,x);
case 2:
return _EQ___2.call(this,x,y);
default:
var G__29645 = null;
if (arguments.length > 2) {
var G__29646__i = 0, G__29646__a = new Array(arguments.length -  2);
while (G__29646__i < G__29646__a.length) {G__29646__a[G__29646__i] = arguments[G__29646__i + 2]; ++G__29646__i;}
G__29645 = new cljs.core.IndexedSeq(G__29646__a,0);
}
return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__29645);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ_.cljs$lang$maxFixedArity = 2;
_EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
_EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
_EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
_EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ_;
})()
;

/**
* @constructor
*/
cljs.core.ES6Iterator = (function (s){
this.s = s;
})
cljs.core.ES6Iterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": x};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6Iterator.cljs$lang$type = true;

cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";

cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ES6Iterator");
});

cljs.core.__GT_ES6Iterator = (function __GT_ES6Iterator(s){
return (new cljs.core.ES6Iterator(s));
});

cljs.core.es6_iterator = (function es6_iterator(coll){
return (new cljs.core.ES6Iterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6IteratorSeq = (function (value,iter,_rest){
this.value = value;
this.iter = iter;
this._rest = _rest;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 8388672;
})
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.value;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if((self__._rest == null)){
self__._rest = (function (){var G__29647 = self__.iter;
return (cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__29647) : cljs.core.es6_iterator_seq.call(null,G__29647));
})();
} else {
}

return self__._rest;
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ES6IteratorSeq.cljs$lang$type = true;

cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";

cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ES6IteratorSeq");
});

cljs.core.__GT_ES6IteratorSeq = (function __GT_ES6IteratorSeq(value,iter,_rest){
return (new cljs.core.ES6IteratorSeq(value,iter,_rest));
});

cljs.core.es6_iterator_seq = (function es6_iterator_seq(iter){
var v = iter.next();
if(cljs.core.truth_(v.done)){
return cljs.core.List.EMPTY;
} else {
return (new cljs.core.ES6IteratorSeq(v.value,iter,null));
}
});
/**
* Mix final collection hash for ordered or unordered collections.
* hash-basis is the combined collection hash, count is the number
* of elements included in the basis. Note this is the hash code
* consistent with =, different from .hashCode.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.mix_collection_hash = (function mix_collection_hash(hash_basis,count){
var h1 = cljs.core.m3_seed;
var k1 = cljs.core.m3_mix_K1(hash_basis);
var h1__$1 = cljs.core.m3_mix_H1(h1,k1);
return cljs.core.m3_fmix(h1__$1,count);
});
/**
* Returns the hash code, consistent with =, for an external ordered
* collection implementing Iterable.
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_ordered_coll = (function hash_ordered_coll(coll){
var n = (0);
var hash_code = (1);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__29648 = (n + (1));
var G__29649 = ((cljs.core.imul((31),hash_code) + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__29650 = cljs.core.next(coll__$1);
n = G__29648;
hash_code = G__29649;
coll__$1 = G__29650;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash((1),(0));
/**
* Returns the hash code, consistent with =, for an external unordered
* collection implementing Iterable. For maps, the iterator should
* return map entries whose hash is computed as
* (hash-ordered-coll [k v]).
* See http://clojure.org/data_structures#hash for full algorithms.
*/
cljs.core.hash_unordered_coll = (function hash_unordered_coll(coll){
var n = (0);
var hash_code = (0);
var coll__$1 = cljs.core.seq(coll);
while(true){
if(!((coll__$1 == null))){
var G__29651 = (n + (1));
var G__29652 = ((hash_code + cljs.core.hash(cljs.core.first(coll__$1))) | (0));
var G__29653 = cljs.core.next(coll__$1);
n = G__29651;
hash_code = G__29652;
coll__$1 = G__29653;
continue;
} else {
return cljs.core.mix_collection_hash(hash_code,n);
}
break;
}
});
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash((0),(0));


(cljs.core.ICounted["null"] = true);

(cljs.core._count["null"] = (function (_){
return (0);
}));
Date.prototype.cljs$core$IEquiv$ = true;

Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var o__$1 = this;
return ((other instanceof Date)) && ((o__$1.toString() === other.toString()));
});
(cljs.core.IEquiv["number"] = true);

(cljs.core._equiv["number"] = (function (x,o){
return (x === o);
}));
(cljs.core.IMeta["function"] = true);

(cljs.core._meta["function"] = (function (_){
return null;
}));

(cljs.core.Fn["function"] = true);
(cljs.core.IHash["_"] = true);

(cljs.core._hash["_"] = (function (o){
var G__29654 = o;
return goog.getUid(G__29654);
}));
/**
* Returns a number one greater than num.
*/
cljs.core.inc = (function inc(x){
return (x + (1));
});

/**
* @constructor
*/
cljs.core.Reduced = (function (val){
this.val = val;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = (function (o){
var self__ = this;
var o__$1 = this;
return self__.val;
});

cljs.core.Reduced.cljs$lang$type = true;

cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";

cljs.core.Reduced.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Reduced");
});

cljs.core.__GT_Reduced = (function __GT_Reduced(val){
return (new cljs.core.Reduced(val));
});

/**
* Wraps x in a way such that a reduce will terminate with the value x
*/
cljs.core.reduced = (function reduced(x){
return (new cljs.core.Reduced(x));
});
/**
* Returns true if x is the result of a call to reduced
*/
cljs.core.reduced_QMARK_ = (function reduced_QMARK_(r){
return (r instanceof cljs.core.Reduced);
});
/**
* If x is already reduced?, returns it, else returns (reduced x)
*/
cljs.core.ensure_reduced = (function ensure_reduced(x){
if(cljs.core.reduced_QMARK_(x)){
return x;
} else {
return cljs.core.reduced(x);
}
});
/**
* If x is reduced?, returns (deref x), else returns x
*/
cljs.core.unreduced = (function unreduced(x){
if(cljs.core.reduced_QMARK_(x)){
var G__29656 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__29656) : cljs.core.deref.call(null,G__29656));
} else {
return x;
}
});
cljs.core.deref = (function deref(o){
return cljs.core._deref(o);
});
/**
* Accepts any collection which satisfies the ICount and IIndexed protocols and
* reduces them without incurring seq initialization
*/
cljs.core.ci_reduce = (function() {
var ci_reduce = null;
var ci_reduce__2 = (function (cicoll,f){
var cnt = cljs.core._count(cicoll);
if((cnt === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,(0));
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__29663 = val;
var G__29664 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29663,G__29664) : f.call(null,G__29663,G__29664));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__29669 = nval;
var G__29670 = (n + (1));
val = G__29669;
n = G__29670;
continue;
}
} else {
return val;
}
break;
}
}
});
var ci_reduce__3 = (function (cicoll,f,val){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__29665 = val__$1;
var G__29666 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29665,G__29666) : f.call(null,G__29665,G__29666));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__29671 = nval;
var G__29672 = (n + (1));
val__$1 = G__29671;
n = G__29672;
continue;
}
} else {
return val__$1;
}
break;
}
});
var ci_reduce__4 = (function (cicoll,f,val,idx){
var cnt = cljs.core._count(cicoll);
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__29667 = val__$1;
var G__29668 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll,n);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29667,G__29668) : f.call(null,G__29667,G__29668));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__29673 = nval;
var G__29674 = (n + (1));
val__$1 = G__29673;
n = G__29674;
continue;
}
} else {
return val__$1;
}
break;
}
});
ci_reduce = function(cicoll,f,val,idx){
switch(arguments.length){
case 2:
return ci_reduce__2.call(this,cicoll,f);
case 3:
return ci_reduce__3.call(this,cicoll,f,val);
case 4:
return ci_reduce__4.call(this,cicoll,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
return ci_reduce;
})()
;
cljs.core.array_reduce = (function() {
var array_reduce = null;
var array_reduce__2 = (function (arr,f){
var cnt = arr.length;
if((arr.length === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var val = (arr[(0)]);
var n = (1);
while(true){
if((n < cnt)){
var nval = (function (){var G__29681 = val;
var G__29682 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29681,G__29682) : f.call(null,G__29681,G__29682));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__29687 = nval;
var G__29688 = (n + (1));
val = G__29687;
n = G__29688;
continue;
}
} else {
return val;
}
break;
}
}
});
var array_reduce__3 = (function (arr,f,val){
var cnt = arr.length;
var val__$1 = val;
var n = (0);
while(true){
if((n < cnt)){
var nval = (function (){var G__29683 = val__$1;
var G__29684 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29683,G__29684) : f.call(null,G__29683,G__29684));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__29689 = nval;
var G__29690 = (n + (1));
val__$1 = G__29689;
n = G__29690;
continue;
}
} else {
return val__$1;
}
break;
}
});
var array_reduce__4 = (function (arr,f,val,idx){
var cnt = arr.length;
var val__$1 = val;
var n = idx;
while(true){
if((n < cnt)){
var nval = (function (){var G__29685 = val__$1;
var G__29686 = (arr[n]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__29685,G__29686) : f.call(null,G__29685,G__29686));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__29691 = nval;
var G__29692 = (n + (1));
val__$1 = G__29691;
n = G__29692;
continue;
}
} else {
return val__$1;
}
break;
}
});
array_reduce = function(arr,f,val,idx){
switch(arguments.length){
case 2:
return array_reduce__2.call(this,arr,f);
case 3:
return array_reduce__3.call(this,arr,f,val);
case 4:
return array_reduce__4.call(this,arr,f,val,idx);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
return array_reduce;
})()
;



/**
* Returns true if coll implements count in constant time
*/
cljs.core.counted_QMARK_ = (function counted_QMARK_(x){
var G__29694 = x;
if(G__29694){
var bit__23645__auto__ = (G__29694.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__23645__auto__) || (G__29694.cljs$core$ICounted$)){
return true;
} else {
if((!G__29694.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__29694);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,G__29694);
}
});
/**
* Returns true if coll implements nth in constant time
*/
cljs.core.indexed_QMARK_ = (function indexed_QMARK_(x){
var G__29696 = x;
if(G__29696){
var bit__23645__auto__ = (G__29696.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__23645__auto__) || (G__29696.cljs$core$IIndexed$)){
return true;
} else {
if((!G__29696.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__29696);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,G__29696);
}
});

/**
* @constructor
*/
cljs.core.IndexedSeqIterator = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.IndexedSeqIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.IndexedSeqIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.IndexedSeqIterator.cljs$lang$type = true;

cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";

cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/IndexedSeqIterator");
});

cljs.core.__GT_IndexedSeqIterator = (function __GT_IndexedSeqIterator(arr,i){
return (new cljs.core.IndexedSeqIterator(arr,i));
});


/**
* @constructor
*/
cljs.core.IndexedSeq = (function (arr,i){
this.arr = arr;
this.i = i;
this.cljs$lang$protocol_mask$partition0$ = 166199550;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.IndexedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.IndexedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
var i__$1 = (n + self__.i);
if((i__$1 < self__.arr.length)){
return (self__.arr[i__$1]);
} else {
return not_found;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.IndexedSeqIterator(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.IndexedSeq(self__.arr,self__.i));
});

cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr.length - self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var c = cljs.core._count(coll__$1);
if((c > (0))){
return (new cljs.core.RSeq(coll__$1,(c - (1)),null));
} else {
return null;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__29697 = coll__$1;
var G__29698 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__29697,G__29698) : cljs.core.equiv_sequential.call(null,G__29697,G__29698));
});

cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.i]),(self__.i + (1)));
});

cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.i);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.arr[self__.i]);
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(((self__.i + (1)) < self__.arr.length)){
return (new cljs.core.IndexedSeq(self__.arr,(self__.i + (1))));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__29699 = o;
var G__29700 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__29699,G__29700) : cljs.core.cons.call(null,G__29699,G__29700));
});

cljs.core.IndexedSeq.cljs$lang$type = true;

cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";

cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/IndexedSeq");
});

cljs.core.__GT_IndexedSeq = (function __GT_IndexedSeq(arr,i){
return (new cljs.core.IndexedSeq(arr,i));
});

(cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.prim_seq = (function() {
var prim_seq = null;
var prim_seq__1 = (function (prim){
return prim_seq.cljs$core$IFn$_invoke$arity$2(prim,(0));
});
var prim_seq__2 = (function (prim,i){
if((i < prim.length)){
return (new cljs.core.IndexedSeq(prim,i));
} else {
return null;
}
});
prim_seq = function(prim,i){
switch(arguments.length){
case 1:
return prim_seq__1.call(this,prim);
case 2:
return prim_seq__2.call(this,prim,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
return prim_seq;
})()
;
cljs.core.array_seq = (function() {
var array_seq = null;
var array_seq__1 = (function (array){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,(0));
});
var array_seq__2 = (function (array,i){
return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array,i);
});
array_seq = function(array,i){
switch(arguments.length){
case 1:
return array_seq__1.call(this,array);
case 2:
return array_seq__2.call(this,array,i);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
return array_seq;
})()
;


/**
* @constructor
*/
cljs.core.RSeq = (function (ci,i,meta){
this.ci = ci;
this.i = i;
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.RSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.RSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,self__.meta));
});

cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return null;
}
});

cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.i + (1));
});

cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
var G__29703 = coll__$1;
var G__29704 = other;
return (cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__29703,G__29704) : cljs.core.equiv_sequential.call(null,G__29703,G__29704));
});

cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__29705 = cljs.core.List.EMPTY;
var G__29706 = self__.meta;
return (cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__29705,G__29706) : cljs.core.with_meta.call(null,G__29705,G__29706));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (col,f){
var self__ = this;
var col__$1 = this;
var G__29707 = f;
var G__29708 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__29707,G__29708) : cljs.core.seq_reduce.call(null,G__29707,G__29708));
});

cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (col,f,start){
var self__ = this;
var col__$1 = this;
var G__29709 = f;
var G__29710 = start;
var G__29711 = col__$1;
return (cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__29709,G__29710,G__29711) : cljs.core.seq_reduce.call(null,G__29709,G__29710,G__29711));
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci,self__.i);
});

cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i > (0))){
return (new cljs.core.RSeq(self__.ci,(self__.i - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.RSeq(self__.ci,self__.i,new_meta));
});

cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__29712 = o;
var G__29713 = coll__$1;
return (cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__29712,G__29713) : cljs.core.cons.call(null,G__29712,G__29713));
});

cljs.core.RSeq.cljs$lang$type = true;

cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";

cljs.core.RSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/RSeq");
});

cljs.core.__GT_RSeq = (function __GT_RSeq(ci,i,meta){
return (new cljs.core.RSeq(ci,i,meta));
});

(cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
/**
* Same as (first (next x))
*/
cljs.core.second = (function second(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (first (first x))
*/
cljs.core.ffirst = (function ffirst(coll){
return cljs.core.first(cljs.core.first(coll));
});
/**
* Same as (next (first x))
*/
cljs.core.nfirst = (function nfirst(coll){
return cljs.core.next(cljs.core.first(coll));
});
/**
* Same as (first (next x))
*/
cljs.core.fnext = (function fnext(coll){
return cljs.core.first(cljs.core.next(coll));
});
/**
* Same as (next (next x))
*/
cljs.core.nnext = (function nnext(coll){
return cljs.core.next(cljs.core.next(coll));
});
/**
* Return the last item in coll, in linear time
*/
cljs.core.last = (function last(s){
while(true){
var sn = cljs.core.next(s);
if(!((sn == null))){
var G__29714 = sn;
s = G__29714;
continue;
} else {
return cljs.core.first(s);
}
break;
}
});
(cljs.core.IEquiv["_"] = true);

(cljs.core._equiv["_"] = (function (x,o){
return (x === o);
}));
/**
* conj[oin]. Returns a new collection with the xs
* 'added'. (conj nil item) returns (item).  The 'addition' may
* happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj = (function() {
var conj = null;
var conj__0 = (function (){
return cljs.core.PersistentVector.EMPTY;
});
var conj__1 = (function (coll){
return coll;
});
var conj__2 = (function (coll,x){
if(!((coll == null))){
return cljs.core._conj(coll,x);
} else {
return cljs.core._conj(cljs.core.List.EMPTY,x);
}
});
var conj__3 = (function() { 
var G__29719__delegate = function (coll,x,xs){
while(true){
if(cljs.core.truth_(xs)){
var G__29720 = conj.cljs$core$IFn$_invoke$arity$2(coll,x);
var G__29721 = cljs.core.first(xs);
var G__29722 = cljs.core.next(xs);
coll = G__29720;
x = G__29721;
xs = G__29722;
continue;
} else {
return conj.cljs$core$IFn$_invoke$arity$2(coll,x);
}
break;
}
};
var G__29719 = function (coll,x,var_args){
var xs = null;
if (arguments.length > 2) {
var G__29723__i = 0, G__29723__a = new Array(arguments.length -  2);
while (G__29723__i < G__29723__a.length) {G__29723__a[G__29723__i] = arguments[G__29723__i + 2]; ++G__29723__i;}
  xs = new cljs.core.IndexedSeq(G__29723__a,0);
} 
return G__29719__delegate.call(this,coll,x,xs);};
G__29719.cljs$lang$maxFixedArity = 2;
G__29719.cljs$lang$applyTo = (function (arglist__29724){
var coll = cljs.core.first(arglist__29724);
arglist__29724 = cljs.core.next(arglist__29724);
var x = cljs.core.first(arglist__29724);
var xs = cljs.core.rest(arglist__29724);
return G__29719__delegate(coll,x,xs);
});
G__29719.cljs$core$IFn$_invoke$arity$variadic = G__29719__delegate;
return G__29719;
})()
;
conj = function(coll,x,var_args){
var xs = var_args;
switch(arguments.length){
case 0:
return conj__0.call(this);
case 1:
return conj__1.call(this,coll);
case 2:
return conj__2.call(this,coll,x);
default:
var G__29725 = null;
if (arguments.length > 2) {
var G__29726__i = 0, G__29726__a = new Array(arguments.length -  2);
while (G__29726__i < G__29726__a.length) {G__29726__a[G__29726__i] = arguments[G__29726__i + 2]; ++G__29726__i;}
G__29725 = new cljs.core.IndexedSeq(G__29726__a,0);
}
return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll,x, G__29725);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj.cljs$lang$maxFixedArity = 2;
conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
return conj;
})()
;
/**
* Returns an empty collection of the same category as coll, or nil
*/
cljs.core.empty = (function empty(coll){
if((coll == null)){
return null;
} else {
return cljs.core._empty(coll);
}
});
cljs.core.accumulating_seq_count = (function accumulating_seq_count(coll){
var s = cljs.core.seq(coll);
var acc = (0);
while(true){
if(cljs.core.counted_QMARK_(s)){
return (acc + cljs.core._count(s));
} else {
var G__29727 = cljs.core.next(s);
var G__29728 = (acc + (1));
s = G__29727;
acc = G__29728;
continue;
}
break;
}
});
/**
* Returns the number of items in the collection. (count nil) returns
* 0.  Also works on strings, arrays, and Maps
*/
cljs.core.count = (function count(coll){
if(!((coll == null))){
if((function (){var G__29730 = coll;
if(G__29730){
var bit__23638__auto__ = (G__29730.cljs$lang$protocol_mask$partition0$ & (2));
if((bit__23638__auto__) || (G__29730.cljs$core$ICounted$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$ICounted$_count$arity$1(null);
} else {
if(coll instanceof Array){
return coll.length;
} else {
if(typeof coll === 'string'){
return coll.length;
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ICounted,coll)){
return cljs.core._count(coll);
} else {
return cljs.core.accumulating_seq_count(coll);

}
}
}
}
} else {
return (0);
}
});
cljs.core.linear_traversal_nth = (function() {
var linear_traversal_nth = null;
var linear_traversal_nth__2 = (function (coll,n){
while(true){
if((coll == null)){
throw (new Error("Index out of bounds"));
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
throw (new Error("Index out of bounds"));
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if(cljs.core.seq(coll)){
var G__29731 = cljs.core.next(coll);
var G__29732 = (n - (1));
coll = G__29731;
n = G__29732;
continue;
} else {
throw (new Error("Index out of bounds"));

}
}
}
}
break;
}
});
var linear_traversal_nth__3 = (function (coll,n,not_found){
while(true){
if((coll == null)){
return not_found;
} else {
if((n === (0))){
if(cljs.core.seq(coll)){
return cljs.core.first(coll);
} else {
return not_found;
}
} else {
if(cljs.core.indexed_QMARK_(coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
if(cljs.core.seq(coll)){
var G__29733 = cljs.core.next(coll);
var G__29734 = (n - (1));
var G__29735 = not_found;
coll = G__29733;
n = G__29734;
not_found = G__29735;
continue;
} else {
return not_found;

}
}
}
}
break;
}
});
linear_traversal_nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return linear_traversal_nth__2.call(this,coll,n);
case 3:
return linear_traversal_nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
return linear_traversal_nth;
})()
;
/**
* Returns the value at the index. get returns nil if index out of
* bounds, nth throws an exception unless not-found is supplied.  nth
* also works for strings, arrays, regex Matchers and Lists, and,
* in O(n) time, for sequences.
*/
cljs.core.nth = (function() {
var nth = null;
var nth__2 = (function (coll,n){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number"));
} else {
if((coll == null)){
return coll;
} else {
if((function (){var G__29740 = coll;
if(G__29740){
var bit__23638__auto__ = (G__29740.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__23638__auto__) || (G__29740.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$2(null,n);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__29741 = coll;
if(G__29741){
var bit__23645__auto__ = (G__29741.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__23645__auto__) || (G__29741.cljs$core$ISeq$)){
return true;
} else {
if((!G__29741.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__29741);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__29741);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
var nth__3 = (function (coll,n,not_found){
if(!(typeof n === 'number')){
throw (new Error("index argument to nth must be a number."));
} else {
if((coll == null)){
return not_found;
} else {
if((function (){var G__29742 = coll;
if(G__29742){
var bit__23638__auto__ = (G__29742.cljs$lang$protocol_mask$partition0$ & (16));
if((bit__23638__auto__) || (G__29742.cljs$core$IIndexed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IIndexed$_nth$arity$3(null,n,not_found);
} else {
if(coll instanceof Array){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(typeof coll === 'string'){
if((n < coll.length)){
return (coll[n]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed,coll)){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll,n);
} else {
if((function (){var G__29743 = coll;
if(G__29743){
var bit__23645__auto__ = (G__29743.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__23645__auto__) || (G__29743.cljs$core$ISeq$)){
return true;
} else {
if((!G__29743.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__29743);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__29743);
}
})()){
return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll,n,not_found);
} else {
throw (new Error([cljs.core.str("nth not supported on this type "),cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join('')));

}
}
}
}
}
}
}
});
nth = function(coll,n,not_found){
switch(arguments.length){
case 2:
return nth__2.call(this,coll,n);
case 3:
return nth__3.call(this,coll,n,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
return nth;
})()
;
/**
* Returns the nth rest of coll, coll when n is 0.
*/
cljs.core.nthrest = (function nthrest(coll,n){
var n__$1 = n;
var xs = coll;
while(true){
if(((n__$1 > (0))) && (cljs.core.seq(xs))){
var G__29744 = (n__$1 - (1));
var G__29745 = cljs.core.rest(xs);
n__$1 = G__29744;
xs = G__29745;
continue;
} else {
return xs;
}
break;
}
});
/**
* Returns the value mapped to key, not-found or nil if key not present.
*/
cljs.core.get = (function() {
var get = null;
var get__2 = (function (o,k){
if((o == null)){
return null;
} else {
if((function (){var G__29748 = o;
if(G__29748){
var bit__23638__auto__ = (G__29748.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__23638__auto__) || (G__29748.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$2(null,k);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return null;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o,k);
} else {
return null;

}
}
}
}
}
});
var get__3 = (function (o,k,not_found){
if(!((o == null))){
if((function (){var G__29749 = o;
if(G__29749){
var bit__23638__auto__ = (G__29749.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__23638__auto__) || (G__29749.cljs$core$ILookup$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return o.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
} else {
if(o instanceof Array){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(typeof o === 'string'){
if((k < o.length)){
return (o[k]);
} else {
return not_found;
}
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,o)){
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o,k,not_found);
} else {
return not_found;

}
}
}
}
} else {
return not_found;
}
});
get = function(o,k,not_found){
switch(arguments.length){
case 2:
return get__2.call(this,o,k);
case 3:
return get__3.call(this,o,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get.cljs$core$IFn$_invoke$arity$2 = get__2;
get.cljs$core$IFn$_invoke$arity$3 = get__3;
return get;
})()
;
/**
* assoc[iate]. When applied to a map, returns a new map of the
* same (hashed/sorted) type, that contains the mapping of key(s) to
* val(s). When applied to a vector, returns a new vector that
* contains val at index.
* @param {...*} var_args
*/
cljs.core.assoc = (function() {
var assoc = null;
var assoc__3 = (function (coll,k,v){
if(!((coll == null))){
return cljs.core._assoc(coll,k,v);
} else {
return cljs.core.PersistentHashMap.fromArrays([k],[v]);
}
});
var assoc__4 = (function() { 
var G__29753__delegate = function (coll,k,v,kvs){
while(true){
var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll,k,v);
if(cljs.core.truth_(kvs)){
var G__29754 = ret;
var G__29755 = cljs.core.first(kvs);
var G__29756 = cljs.core.second(kvs);
var G__29757 = cljs.core.nnext(kvs);
coll = G__29754;
k = G__29755;
v = G__29756;
kvs = G__29757;
continue;
} else {
return ret;
}
break;
}
};
var G__29753 = function (coll,k,v,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__29758__i = 0, G__29758__a = new Array(arguments.length -  3);
while (G__29758__i < G__29758__a.length) {G__29758__a[G__29758__i] = arguments[G__29758__i + 3]; ++G__29758__i;}
  kvs = new cljs.core.IndexedSeq(G__29758__a,0);
} 
return G__29753__delegate.call(this,coll,k,v,kvs);};
G__29753.cljs$lang$maxFixedArity = 3;
G__29753.cljs$lang$applyTo = (function (arglist__29759){
var coll = cljs.core.first(arglist__29759);
arglist__29759 = cljs.core.next(arglist__29759);
var k = cljs.core.first(arglist__29759);
arglist__29759 = cljs.core.next(arglist__29759);
var v = cljs.core.first(arglist__29759);
var kvs = cljs.core.rest(arglist__29759);
return G__29753__delegate(coll,k,v,kvs);
});
G__29753.cljs$core$IFn$_invoke$arity$variadic = G__29753__delegate;
return G__29753;
})()
;
assoc = function(coll,k,v,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc__3.call(this,coll,k,v);
default:
var G__29760 = null;
if (arguments.length > 3) {
var G__29761__i = 0, G__29761__a = new Array(arguments.length -  3);
while (G__29761__i < G__29761__a.length) {G__29761__a[G__29761__i] = arguments[G__29761__i + 3]; ++G__29761__i;}
G__29760 = new cljs.core.IndexedSeq(G__29761__a,0);
}
return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll,k,v, G__29760);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc.cljs$lang$maxFixedArity = 3;
assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
return assoc;
})()
;
/**
* dissoc[iate]. Returns a new map of the same (hashed/sorted) type,
* that does not contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc = (function() {
var dissoc = null;
var dissoc__1 = (function (coll){
return coll;
});
var dissoc__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._dissoc(coll,k);
}
});
var dissoc__3 = (function() { 
var G__29764__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__29765 = ret;
var G__29766 = cljs.core.first(ks);
var G__29767 = cljs.core.next(ks);
coll = G__29765;
k = G__29766;
ks = G__29767;
continue;
} else {
return ret;
}
}
break;
}
};
var G__29764 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__29768__i = 0, G__29768__a = new Array(arguments.length -  2);
while (G__29768__i < G__29768__a.length) {G__29768__a[G__29768__i] = arguments[G__29768__i + 2]; ++G__29768__i;}
  ks = new cljs.core.IndexedSeq(G__29768__a,0);
} 
return G__29764__delegate.call(this,coll,k,ks);};
G__29764.cljs$lang$maxFixedArity = 2;
G__29764.cljs$lang$applyTo = (function (arglist__29769){
var coll = cljs.core.first(arglist__29769);
arglist__29769 = cljs.core.next(arglist__29769);
var k = cljs.core.first(arglist__29769);
var ks = cljs.core.rest(arglist__29769);
return G__29764__delegate(coll,k,ks);
});
G__29764.cljs$core$IFn$_invoke$arity$variadic = G__29764__delegate;
return G__29764;
})()
;
dissoc = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return dissoc__1.call(this,coll);
case 2:
return dissoc__2.call(this,coll,k);
default:
var G__29770 = null;
if (arguments.length > 2) {
var G__29771__i = 0, G__29771__a = new Array(arguments.length -  2);
while (G__29771__i < G__29771__a.length) {G__29771__a[G__29771__i] = arguments[G__29771__i + 2]; ++G__29771__i;}
G__29770 = new cljs.core.IndexedSeq(G__29771__a,0);
}
return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__29770);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc.cljs$lang$maxFixedArity = 2;
dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc;
})()
;
cljs.core.fn_QMARK_ = (function fn_QMARK_(f){
var or__22964__auto__ = (function (){var G__29776 = f;
return goog.isFunction(G__29776);
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var G__29777 = f;
if(G__29777){
var bit__23645__auto__ = null;
if(cljs.core.truth_((function (){var or__22964__auto____$1 = bit__23645__auto__;
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
return G__29777.cljs$core$Fn$;
}
})())){
return true;
} else {
if((!G__29777.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__29777);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.Fn,G__29777);
}
}
});

/**
* @constructor
*/
cljs.core.MetaFn = (function (afn,meta){
this.afn = afn;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393217;
})
cljs.core.MetaFn.prototype.call = (function() {
var G__30243 = null;
var G__30243__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});
var G__30243__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29779 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__29779) : self__.afn.call(null,G__29779));
});
var G__30243__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29780 = a;
var G__29781 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__29780,G__29781) : self__.afn.call(null,G__29780,G__29781));
});
var G__30243__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29782 = a;
var G__29783 = b;
var G__29784 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__29782,G__29783,G__29784) : self__.afn.call(null,G__29782,G__29783,G__29784));
});
var G__30243__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29785 = a;
var G__29786 = b;
var G__29787 = c;
var G__29788 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__29785,G__29786,G__29787,G__29788) : self__.afn.call(null,G__29785,G__29786,G__29787,G__29788));
});
var G__30243__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29789 = a;
var G__29790 = b;
var G__29791 = c;
var G__29792 = d;
var G__29793 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__29789,G__29790,G__29791,G__29792,G__29793) : self__.afn.call(null,G__29789,G__29790,G__29791,G__29792,G__29793));
});
var G__30243__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29794 = a;
var G__29795 = b;
var G__29796 = c;
var G__29797 = d;
var G__29798 = e;
var G__29799 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__29794,G__29795,G__29796,G__29797,G__29798,G__29799) : self__.afn.call(null,G__29794,G__29795,G__29796,G__29797,G__29798,G__29799));
});
var G__30243__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29800 = a;
var G__29801 = b;
var G__29802 = c;
var G__29803 = d;
var G__29804 = e;
var G__29805 = f;
var G__29806 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__29800,G__29801,G__29802,G__29803,G__29804,G__29805,G__29806) : self__.afn.call(null,G__29800,G__29801,G__29802,G__29803,G__29804,G__29805,G__29806));
});
var G__30243__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29807 = a;
var G__29808 = b;
var G__29809 = c;
var G__29810 = d;
var G__29811 = e;
var G__29812 = f;
var G__29813 = g;
var G__29814 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__29807,G__29808,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814) : self__.afn.call(null,G__29807,G__29808,G__29809,G__29810,G__29811,G__29812,G__29813,G__29814));
});
var G__30243__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29815 = a;
var G__29816 = b;
var G__29817 = c;
var G__29818 = d;
var G__29819 = e;
var G__29820 = f;
var G__29821 = g;
var G__29822 = h;
var G__29823 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__29815,G__29816,G__29817,G__29818,G__29819,G__29820,G__29821,G__29822,G__29823) : self__.afn.call(null,G__29815,G__29816,G__29817,G__29818,G__29819,G__29820,G__29821,G__29822,G__29823));
});
var G__30243__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29824 = a;
var G__29825 = b;
var G__29826 = c;
var G__29827 = d;
var G__29828 = e;
var G__29829 = f;
var G__29830 = g;
var G__29831 = h;
var G__29832 = i;
var G__29833 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__29824,G__29825,G__29826,G__29827,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833) : self__.afn.call(null,G__29824,G__29825,G__29826,G__29827,G__29828,G__29829,G__29830,G__29831,G__29832,G__29833));
});
var G__30243__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29834 = a;
var G__29835 = b;
var G__29836 = c;
var G__29837 = d;
var G__29838 = e;
var G__29839 = f;
var G__29840 = g;
var G__29841 = h;
var G__29842 = i;
var G__29843 = j;
var G__29844 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__29834,G__29835,G__29836,G__29837,G__29838,G__29839,G__29840,G__29841,G__29842,G__29843,G__29844) : self__.afn.call(null,G__29834,G__29835,G__29836,G__29837,G__29838,G__29839,G__29840,G__29841,G__29842,G__29843,G__29844));
});
var G__30243__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29845 = a;
var G__29846 = b;
var G__29847 = c;
var G__29848 = d;
var G__29849 = e;
var G__29850 = f;
var G__29851 = g;
var G__29852 = h;
var G__29853 = i;
var G__29854 = j;
var G__29855 = k;
var G__29856 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854,G__29855,G__29856) : self__.afn.call(null,G__29845,G__29846,G__29847,G__29848,G__29849,G__29850,G__29851,G__29852,G__29853,G__29854,G__29855,G__29856));
});
var G__30243__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29857 = a;
var G__29858 = b;
var G__29859 = c;
var G__29860 = d;
var G__29861 = e;
var G__29862 = f;
var G__29863 = g;
var G__29864 = h;
var G__29865 = i;
var G__29866 = j;
var G__29867 = k;
var G__29868 = l;
var G__29869 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__29857,G__29858,G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865,G__29866,G__29867,G__29868,G__29869) : self__.afn.call(null,G__29857,G__29858,G__29859,G__29860,G__29861,G__29862,G__29863,G__29864,G__29865,G__29866,G__29867,G__29868,G__29869));
});
var G__30243__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29870 = a;
var G__29871 = b;
var G__29872 = c;
var G__29873 = d;
var G__29874 = e;
var G__29875 = f;
var G__29876 = g;
var G__29877 = h;
var G__29878 = i;
var G__29879 = j;
var G__29880 = k;
var G__29881 = l;
var G__29882 = m;
var G__29883 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877,G__29878,G__29879,G__29880,G__29881,G__29882,G__29883) : self__.afn.call(null,G__29870,G__29871,G__29872,G__29873,G__29874,G__29875,G__29876,G__29877,G__29878,G__29879,G__29880,G__29881,G__29882,G__29883));
});
var G__30243__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29884 = a;
var G__29885 = b;
var G__29886 = c;
var G__29887 = d;
var G__29888 = e;
var G__29889 = f;
var G__29890 = g;
var G__29891 = h;
var G__29892 = i;
var G__29893 = j;
var G__29894 = k;
var G__29895 = l;
var G__29896 = m;
var G__29897 = n;
var G__29898 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__29884,G__29885,G__29886,G__29887,G__29888,G__29889,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897,G__29898) : self__.afn.call(null,G__29884,G__29885,G__29886,G__29887,G__29888,G__29889,G__29890,G__29891,G__29892,G__29893,G__29894,G__29895,G__29896,G__29897,G__29898));
});
var G__30243__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29899 = a;
var G__29900 = b;
var G__29901 = c;
var G__29902 = d;
var G__29903 = e;
var G__29904 = f;
var G__29905 = g;
var G__29906 = h;
var G__29907 = i;
var G__29908 = j;
var G__29909 = k;
var G__29910 = l;
var G__29911 = m;
var G__29912 = n;
var G__29913 = o;
var G__29914 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__29899,G__29900,G__29901,G__29902,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914) : self__.afn.call(null,G__29899,G__29900,G__29901,G__29902,G__29903,G__29904,G__29905,G__29906,G__29907,G__29908,G__29909,G__29910,G__29911,G__29912,G__29913,G__29914));
});
var G__30243__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29915 = a;
var G__29916 = b;
var G__29917 = c;
var G__29918 = d;
var G__29919 = e;
var G__29920 = f;
var G__29921 = g;
var G__29922 = h;
var G__29923 = i;
var G__29924 = j;
var G__29925 = k;
var G__29926 = l;
var G__29927 = m;
var G__29928 = n;
var G__29929 = o;
var G__29930 = p;
var G__29931 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__29915,G__29916,G__29917,G__29918,G__29919,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928,G__29929,G__29930,G__29931) : self__.afn.call(null,G__29915,G__29916,G__29917,G__29918,G__29919,G__29920,G__29921,G__29922,G__29923,G__29924,G__29925,G__29926,G__29927,G__29928,G__29929,G__29930,G__29931));
});
var G__30243__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29932 = a;
var G__29933 = b;
var G__29934 = c;
var G__29935 = d;
var G__29936 = e;
var G__29937 = f;
var G__29938 = g;
var G__29939 = h;
var G__29940 = i;
var G__29941 = j;
var G__29942 = k;
var G__29943 = l;
var G__29944 = m;
var G__29945 = n;
var G__29946 = o;
var G__29947 = p;
var G__29948 = q;
var G__29949 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__29932,G__29933,G__29934,G__29935,G__29936,G__29937,G__29938,G__29939,G__29940,G__29941,G__29942,G__29943,G__29944,G__29945,G__29946,G__29947,G__29948,G__29949) : self__.afn.call(null,G__29932,G__29933,G__29934,G__29935,G__29936,G__29937,G__29938,G__29939,G__29940,G__29941,G__29942,G__29943,G__29944,G__29945,G__29946,G__29947,G__29948,G__29949));
});
var G__30243__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29950 = a;
var G__29951 = b;
var G__29952 = c;
var G__29953 = d;
var G__29954 = e;
var G__29955 = f;
var G__29956 = g;
var G__29957 = h;
var G__29958 = i;
var G__29959 = j;
var G__29960 = k;
var G__29961 = l;
var G__29962 = m;
var G__29963 = n;
var G__29964 = o;
var G__29965 = p;
var G__29966 = q;
var G__29967 = r;
var G__29968 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__29950,G__29951,G__29952,G__29953,G__29954,G__29955,G__29956,G__29957,G__29958,G__29959,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966,G__29967,G__29968) : self__.afn.call(null,G__29950,G__29951,G__29952,G__29953,G__29954,G__29955,G__29956,G__29957,G__29958,G__29959,G__29960,G__29961,G__29962,G__29963,G__29964,G__29965,G__29966,G__29967,G__29968));
});
var G__30243__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29969 = a;
var G__29970 = b;
var G__29971 = c;
var G__29972 = d;
var G__29973 = e;
var G__29974 = f;
var G__29975 = g;
var G__29976 = h;
var G__29977 = i;
var G__29978 = j;
var G__29979 = k;
var G__29980 = l;
var G__29981 = m;
var G__29982 = n;
var G__29983 = o;
var G__29984 = p;
var G__29985 = q;
var G__29986 = r;
var G__29987 = s;
var G__29988 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__29969,G__29970,G__29971,G__29972,G__29973,G__29974,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988) : self__.afn.call(null,G__29969,G__29970,G__29971,G__29972,G__29973,G__29974,G__29975,G__29976,G__29977,G__29978,G__29979,G__29980,G__29981,G__29982,G__29983,G__29984,G__29985,G__29986,G__29987,G__29988));
});
var G__30243__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var _ = self____$1;
var G__29989 = self__.afn;
var G__29990 = a;
var G__29991 = b;
var G__29992 = c;
var G__29993 = d;
var G__29994 = e;
var G__29995 = f;
var G__29996 = g;
var G__29997 = h;
var G__29998 = i;
var G__29999 = j;
var G__30000 = k;
var G__30001 = l;
var G__30002 = m;
var G__30003 = n;
var G__30004 = o;
var G__30005 = p;
var G__30006 = q;
var G__30007 = r;
var G__30008 = s;
var G__30009 = t;
var G__30010 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__29989,G__29990,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005,G__30006,G__30007,G__30008,G__30009,G__30010) : cljs.core.apply.call(null,G__29989,G__29990,G__29991,G__29992,G__29993,G__29994,G__29995,G__29996,G__29997,G__29998,G__29999,G__30000,G__30001,G__30002,G__30003,G__30004,G__30005,G__30006,G__30007,G__30008,G__30009,G__30010));
});
G__30243 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__30243__1.call(this,self__);
case 2:
return G__30243__2.call(this,self__,a);
case 3:
return G__30243__3.call(this,self__,a,b);
case 4:
return G__30243__4.call(this,self__,a,b,c);
case 5:
return G__30243__5.call(this,self__,a,b,c,d);
case 6:
return G__30243__6.call(this,self__,a,b,c,d,e);
case 7:
return G__30243__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__30243__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__30243__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__30243__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__30243__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__30243__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__30243__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__30243__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__30243__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__30243__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__30243__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__30243__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__30243__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__30243__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__30243__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__30243__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30243.cljs$core$IFn$_invoke$arity$1 = G__30243__1;
G__30243.cljs$core$IFn$_invoke$arity$2 = G__30243__2;
G__30243.cljs$core$IFn$_invoke$arity$3 = G__30243__3;
G__30243.cljs$core$IFn$_invoke$arity$4 = G__30243__4;
G__30243.cljs$core$IFn$_invoke$arity$5 = G__30243__5;
G__30243.cljs$core$IFn$_invoke$arity$6 = G__30243__6;
G__30243.cljs$core$IFn$_invoke$arity$7 = G__30243__7;
G__30243.cljs$core$IFn$_invoke$arity$8 = G__30243__8;
G__30243.cljs$core$IFn$_invoke$arity$9 = G__30243__9;
G__30243.cljs$core$IFn$_invoke$arity$10 = G__30243__10;
G__30243.cljs$core$IFn$_invoke$arity$11 = G__30243__11;
G__30243.cljs$core$IFn$_invoke$arity$12 = G__30243__12;
G__30243.cljs$core$IFn$_invoke$arity$13 = G__30243__13;
G__30243.cljs$core$IFn$_invoke$arity$14 = G__30243__14;
G__30243.cljs$core$IFn$_invoke$arity$15 = G__30243__15;
G__30243.cljs$core$IFn$_invoke$arity$16 = G__30243__16;
G__30243.cljs$core$IFn$_invoke$arity$17 = G__30243__17;
G__30243.cljs$core$IFn$_invoke$arity$18 = G__30243__18;
G__30243.cljs$core$IFn$_invoke$arity$19 = G__30243__19;
G__30243.cljs$core$IFn$_invoke$arity$20 = G__30243__20;
G__30243.cljs$core$IFn$_invoke$arity$21 = G__30243__21;
G__30243.cljs$core$IFn$_invoke$arity$22 = G__30243__22;
return G__30243;
})()
;

cljs.core.MetaFn.prototype.apply = (function (self__,args29778){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args29778)));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var _ = this;
return (self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var _ = this;
var G__30011 = a;
return (self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__30011) : self__.afn.call(null,G__30011));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var _ = this;
var G__30012 = a;
var G__30013 = b;
return (self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__30012,G__30013) : self__.afn.call(null,G__30012,G__30013));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var _ = this;
var G__30014 = a;
var G__30015 = b;
var G__30016 = c;
return (self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__30014,G__30015,G__30016) : self__.afn.call(null,G__30014,G__30015,G__30016));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var _ = this;
var G__30017 = a;
var G__30018 = b;
var G__30019 = c;
var G__30020 = d;
return (self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__30017,G__30018,G__30019,G__30020) : self__.afn.call(null,G__30017,G__30018,G__30019,G__30020));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var _ = this;
var G__30021 = a;
var G__30022 = b;
var G__30023 = c;
var G__30024 = d;
var G__30025 = e;
return (self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__30021,G__30022,G__30023,G__30024,G__30025) : self__.afn.call(null,G__30021,G__30022,G__30023,G__30024,G__30025));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var _ = this;
var G__30026 = a;
var G__30027 = b;
var G__30028 = c;
var G__30029 = d;
var G__30030 = e;
var G__30031 = f;
return (self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__30026,G__30027,G__30028,G__30029,G__30030,G__30031) : self__.afn.call(null,G__30026,G__30027,G__30028,G__30029,G__30030,G__30031));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var _ = this;
var G__30032 = a;
var G__30033 = b;
var G__30034 = c;
var G__30035 = d;
var G__30036 = e;
var G__30037 = f;
var G__30038 = g;
return (self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__30032,G__30033,G__30034,G__30035,G__30036,G__30037,G__30038) : self__.afn.call(null,G__30032,G__30033,G__30034,G__30035,G__30036,G__30037,G__30038));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var _ = this;
var G__30039 = a;
var G__30040 = b;
var G__30041 = c;
var G__30042 = d;
var G__30043 = e;
var G__30044 = f;
var G__30045 = g;
var G__30046 = h;
return (self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__30039,G__30040,G__30041,G__30042,G__30043,G__30044,G__30045,G__30046) : self__.afn.call(null,G__30039,G__30040,G__30041,G__30042,G__30043,G__30044,G__30045,G__30046));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var _ = this;
var G__30047 = a;
var G__30048 = b;
var G__30049 = c;
var G__30050 = d;
var G__30051 = e;
var G__30052 = f;
var G__30053 = g;
var G__30054 = h;
var G__30055 = i;
return (self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__30047,G__30048,G__30049,G__30050,G__30051,G__30052,G__30053,G__30054,G__30055) : self__.afn.call(null,G__30047,G__30048,G__30049,G__30050,G__30051,G__30052,G__30053,G__30054,G__30055));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var _ = this;
var G__30056 = a;
var G__30057 = b;
var G__30058 = c;
var G__30059 = d;
var G__30060 = e;
var G__30061 = f;
var G__30062 = g;
var G__30063 = h;
var G__30064 = i;
var G__30065 = j;
return (self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__30056,G__30057,G__30058,G__30059,G__30060,G__30061,G__30062,G__30063,G__30064,G__30065) : self__.afn.call(null,G__30056,G__30057,G__30058,G__30059,G__30060,G__30061,G__30062,G__30063,G__30064,G__30065));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var _ = this;
var G__30066 = a;
var G__30067 = b;
var G__30068 = c;
var G__30069 = d;
var G__30070 = e;
var G__30071 = f;
var G__30072 = g;
var G__30073 = h;
var G__30074 = i;
var G__30075 = j;
var G__30076 = k;
return (self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__30066,G__30067,G__30068,G__30069,G__30070,G__30071,G__30072,G__30073,G__30074,G__30075,G__30076) : self__.afn.call(null,G__30066,G__30067,G__30068,G__30069,G__30070,G__30071,G__30072,G__30073,G__30074,G__30075,G__30076));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var _ = this;
var G__30077 = a;
var G__30078 = b;
var G__30079 = c;
var G__30080 = d;
var G__30081 = e;
var G__30082 = f;
var G__30083 = g;
var G__30084 = h;
var G__30085 = i;
var G__30086 = j;
var G__30087 = k;
var G__30088 = l;
return (self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__30077,G__30078,G__30079,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086,G__30087,G__30088) : self__.afn.call(null,G__30077,G__30078,G__30079,G__30080,G__30081,G__30082,G__30083,G__30084,G__30085,G__30086,G__30087,G__30088));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var _ = this;
var G__30089 = a;
var G__30090 = b;
var G__30091 = c;
var G__30092 = d;
var G__30093 = e;
var G__30094 = f;
var G__30095 = g;
var G__30096 = h;
var G__30097 = i;
var G__30098 = j;
var G__30099 = k;
var G__30100 = l;
var G__30101 = m;
return (self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__30089,G__30090,G__30091,G__30092,G__30093,G__30094,G__30095,G__30096,G__30097,G__30098,G__30099,G__30100,G__30101) : self__.afn.call(null,G__30089,G__30090,G__30091,G__30092,G__30093,G__30094,G__30095,G__30096,G__30097,G__30098,G__30099,G__30100,G__30101));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var _ = this;
var G__30102 = a;
var G__30103 = b;
var G__30104 = c;
var G__30105 = d;
var G__30106 = e;
var G__30107 = f;
var G__30108 = g;
var G__30109 = h;
var G__30110 = i;
var G__30111 = j;
var G__30112 = k;
var G__30113 = l;
var G__30114 = m;
var G__30115 = n;
return (self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113,G__30114,G__30115) : self__.afn.call(null,G__30102,G__30103,G__30104,G__30105,G__30106,G__30107,G__30108,G__30109,G__30110,G__30111,G__30112,G__30113,G__30114,G__30115));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var _ = this;
var G__30116 = a;
var G__30117 = b;
var G__30118 = c;
var G__30119 = d;
var G__30120 = e;
var G__30121 = f;
var G__30122 = g;
var G__30123 = h;
var G__30124 = i;
var G__30125 = j;
var G__30126 = k;
var G__30127 = l;
var G__30128 = m;
var G__30129 = n;
var G__30130 = o;
return (self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__30116,G__30117,G__30118,G__30119,G__30120,G__30121,G__30122,G__30123,G__30124,G__30125,G__30126,G__30127,G__30128,G__30129,G__30130) : self__.afn.call(null,G__30116,G__30117,G__30118,G__30119,G__30120,G__30121,G__30122,G__30123,G__30124,G__30125,G__30126,G__30127,G__30128,G__30129,G__30130));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var _ = this;
var G__30131 = a;
var G__30132 = b;
var G__30133 = c;
var G__30134 = d;
var G__30135 = e;
var G__30136 = f;
var G__30137 = g;
var G__30138 = h;
var G__30139 = i;
var G__30140 = j;
var G__30141 = k;
var G__30142 = l;
var G__30143 = m;
var G__30144 = n;
var G__30145 = o;
var G__30146 = p;
return (self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__30131,G__30132,G__30133,G__30134,G__30135,G__30136,G__30137,G__30138,G__30139,G__30140,G__30141,G__30142,G__30143,G__30144,G__30145,G__30146) : self__.afn.call(null,G__30131,G__30132,G__30133,G__30134,G__30135,G__30136,G__30137,G__30138,G__30139,G__30140,G__30141,G__30142,G__30143,G__30144,G__30145,G__30146));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var _ = this;
var G__30147 = a;
var G__30148 = b;
var G__30149 = c;
var G__30150 = d;
var G__30151 = e;
var G__30152 = f;
var G__30153 = g;
var G__30154 = h;
var G__30155 = i;
var G__30156 = j;
var G__30157 = k;
var G__30158 = l;
var G__30159 = m;
var G__30160 = n;
var G__30161 = o;
var G__30162 = p;
var G__30163 = q;
return (self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__30147,G__30148,G__30149,G__30150,G__30151,G__30152,G__30153,G__30154,G__30155,G__30156,G__30157,G__30158,G__30159,G__30160,G__30161,G__30162,G__30163) : self__.afn.call(null,G__30147,G__30148,G__30149,G__30150,G__30151,G__30152,G__30153,G__30154,G__30155,G__30156,G__30157,G__30158,G__30159,G__30160,G__30161,G__30162,G__30163));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var _ = this;
var G__30164 = a;
var G__30165 = b;
var G__30166 = c;
var G__30167 = d;
var G__30168 = e;
var G__30169 = f;
var G__30170 = g;
var G__30171 = h;
var G__30172 = i;
var G__30173 = j;
var G__30174 = k;
var G__30175 = l;
var G__30176 = m;
var G__30177 = n;
var G__30178 = o;
var G__30179 = p;
var G__30180 = q;
var G__30181 = r;
return (self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__30164,G__30165,G__30166,G__30167,G__30168,G__30169,G__30170,G__30171,G__30172,G__30173,G__30174,G__30175,G__30176,G__30177,G__30178,G__30179,G__30180,G__30181) : self__.afn.call(null,G__30164,G__30165,G__30166,G__30167,G__30168,G__30169,G__30170,G__30171,G__30172,G__30173,G__30174,G__30175,G__30176,G__30177,G__30178,G__30179,G__30180,G__30181));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var _ = this;
var G__30182 = a;
var G__30183 = b;
var G__30184 = c;
var G__30185 = d;
var G__30186 = e;
var G__30187 = f;
var G__30188 = g;
var G__30189 = h;
var G__30190 = i;
var G__30191 = j;
var G__30192 = k;
var G__30193 = l;
var G__30194 = m;
var G__30195 = n;
var G__30196 = o;
var G__30197 = p;
var G__30198 = q;
var G__30199 = r;
var G__30200 = s;
return (self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__30182,G__30183,G__30184,G__30185,G__30186,G__30187,G__30188,G__30189,G__30190,G__30191,G__30192,G__30193,G__30194,G__30195,G__30196,G__30197,G__30198,G__30199,G__30200) : self__.afn.call(null,G__30182,G__30183,G__30184,G__30185,G__30186,G__30187,G__30188,G__30189,G__30190,G__30191,G__30192,G__30193,G__30194,G__30195,G__30196,G__30197,G__30198,G__30199,G__30200));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var _ = this;
var G__30201 = a;
var G__30202 = b;
var G__30203 = c;
var G__30204 = d;
var G__30205 = e;
var G__30206 = f;
var G__30207 = g;
var G__30208 = h;
var G__30209 = i;
var G__30210 = j;
var G__30211 = k;
var G__30212 = l;
var G__30213 = m;
var G__30214 = n;
var G__30215 = o;
var G__30216 = p;
var G__30217 = q;
var G__30218 = r;
var G__30219 = s;
var G__30220 = t;
return (self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__30201,G__30202,G__30203,G__30204,G__30205,G__30206,G__30207,G__30208,G__30209,G__30210,G__30211,G__30212,G__30213,G__30214,G__30215,G__30216,G__30217,G__30218,G__30219,G__30220) : self__.afn.call(null,G__30201,G__30202,G__30203,G__30204,G__30205,G__30206,G__30207,G__30208,G__30209,G__30210,G__30211,G__30212,G__30213,G__30214,G__30215,G__30216,G__30217,G__30218,G__30219,G__30220));
});

cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var _ = this;
var G__30221 = self__.afn;
var G__30222 = a;
var G__30223 = b;
var G__30224 = c;
var G__30225 = d;
var G__30226 = e;
var G__30227 = f;
var G__30228 = g;
var G__30229 = h;
var G__30230 = i;
var G__30231 = j;
var G__30232 = k;
var G__30233 = l;
var G__30234 = m;
var G__30235 = n;
var G__30236 = o;
var G__30237 = p;
var G__30238 = q;
var G__30239 = r;
var G__30240 = s;
var G__30241 = t;
var G__30242 = rest;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__30221,G__30222,G__30223,G__30224,G__30225,G__30226,G__30227,G__30228,G__30229,G__30230,G__30231,G__30232,G__30233,G__30234,G__30235,G__30236,G__30237,G__30238,G__30239,G__30240,G__30241,G__30242) : cljs.core.apply.call(null,G__30221,G__30222,G__30223,G__30224,G__30225,G__30226,G__30227,G__30228,G__30229,G__30230,G__30231,G__30232,G__30233,G__30234,G__30235,G__30236,G__30237,G__30238,G__30239,G__30240,G__30241,G__30242));
});

cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;

cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_,new_meta){
var self__ = this;
var ___$1 = this;
return (new cljs.core.MetaFn(self__.afn,new_meta));
});

cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.MetaFn.cljs$lang$type = true;

cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";

cljs.core.MetaFn.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/MetaFn");
});

cljs.core.__GT_MetaFn = (function __GT_MetaFn(afn,meta){
return (new cljs.core.MetaFn(afn,meta));
});

/**
* Returns an object of the same type and value as obj, with
* map m as its metadata.
*/
cljs.core.with_meta = (function with_meta(o,meta){
if((cljs.core.fn_QMARK_(o)) && (!((function (){var G__30247 = o;
if(G__30247){
var bit__23645__auto__ = (G__30247.cljs$lang$protocol_mask$partition0$ & (262144));
if((bit__23645__auto__) || (G__30247.cljs$core$IWithMeta$)){
return true;
} else {
if((!G__30247.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__30247);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta,G__30247);
}
})()))){
return (new cljs.core.MetaFn(o,meta));
} else {
if((o == null)){
return null;
} else {
return cljs.core._with_meta(o,meta);
}
}
});
/**
* Returns the metadata of obj, returns nil if there is no metadata.
*/
cljs.core.meta = (function meta(o){
if((function (){var and__22952__auto__ = !((o == null));
if(and__22952__auto__){
var G__30251 = o;
if(G__30251){
var bit__23645__auto__ = (G__30251.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__23645__auto__) || (G__30251.cljs$core$IMeta$)){
return true;
} else {
if((!G__30251.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30251);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__30251);
}
} else {
return and__22952__auto__;
}
})()){
return cljs.core._meta(o);
} else {
return null;
}
});
/**
* For a list or queue, same as first, for a vector, same as, but much
* more efficient than, last. If the collection is empty, returns nil.
*/
cljs.core.peek = (function peek(coll){
if((coll == null)){
return null;
} else {
return cljs.core._peek(coll);
}
});
/**
* For a list or queue, returns a new list/queue without the first
* item, for a vector, returns a new vector without the last item.
* Note - not the same as next/butlast.
*/
cljs.core.pop = (function pop(coll){
if((coll == null)){
return null;
} else {
return cljs.core._pop(coll);
}
});
/**
* disj[oin]. Returns a new set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj = (function() {
var disj = null;
var disj__1 = (function (coll){
return coll;
});
var disj__2 = (function (coll,k){
if((coll == null)){
return null;
} else {
return cljs.core._disjoin(coll,k);
}
});
var disj__3 = (function() { 
var G__30254__delegate = function (coll,k,ks){
while(true){
if((coll == null)){
return null;
} else {
var ret = disj.cljs$core$IFn$_invoke$arity$2(coll,k);
if(cljs.core.truth_(ks)){
var G__30255 = ret;
var G__30256 = cljs.core.first(ks);
var G__30257 = cljs.core.next(ks);
coll = G__30255;
k = G__30256;
ks = G__30257;
continue;
} else {
return ret;
}
}
break;
}
};
var G__30254 = function (coll,k,var_args){
var ks = null;
if (arguments.length > 2) {
var G__30258__i = 0, G__30258__a = new Array(arguments.length -  2);
while (G__30258__i < G__30258__a.length) {G__30258__a[G__30258__i] = arguments[G__30258__i + 2]; ++G__30258__i;}
  ks = new cljs.core.IndexedSeq(G__30258__a,0);
} 
return G__30254__delegate.call(this,coll,k,ks);};
G__30254.cljs$lang$maxFixedArity = 2;
G__30254.cljs$lang$applyTo = (function (arglist__30259){
var coll = cljs.core.first(arglist__30259);
arglist__30259 = cljs.core.next(arglist__30259);
var k = cljs.core.first(arglist__30259);
var ks = cljs.core.rest(arglist__30259);
return G__30254__delegate(coll,k,ks);
});
G__30254.cljs$core$IFn$_invoke$arity$variadic = G__30254__delegate;
return G__30254;
})()
;
disj = function(coll,k,var_args){
var ks = var_args;
switch(arguments.length){
case 1:
return disj__1.call(this,coll);
case 2:
return disj__2.call(this,coll,k);
default:
var G__30260 = null;
if (arguments.length > 2) {
var G__30261__i = 0, G__30261__a = new Array(arguments.length -  2);
while (G__30261__i < G__30261__a.length) {G__30261__a[G__30261__i] = arguments[G__30261__i + 2]; ++G__30261__i;}
G__30260 = new cljs.core.IndexedSeq(G__30261__a,0);
}
return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll,k, G__30260);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj.cljs$lang$maxFixedArity = 2;
disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
return disj;
})()
;
/**
* Returns true if coll has no items - same as (not (seq coll)).
* Please use the idiom (seq x) rather than (not (empty? x))
*/
cljs.core.empty_QMARK_ = (function empty_QMARK_(coll){
return ((coll == null)) || (cljs.core.not(cljs.core.seq(coll)));
});
/**
* Returns true if x satisfies ICollection
*/
cljs.core.coll_QMARK_ = (function coll_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30263 = x;
if(G__30263){
var bit__23645__auto__ = (G__30263.cljs$lang$protocol_mask$partition0$ & (8));
if((bit__23645__auto__) || (G__30263.cljs$core$ICollection$)){
return true;
} else {
if((!G__30263.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__30263);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection,G__30263);
}
}
});
/**
* Returns true if x satisfies ISet
*/
cljs.core.set_QMARK_ = (function set_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30265 = x;
if(G__30265){
var bit__23645__auto__ = (G__30265.cljs$lang$protocol_mask$partition0$ & (4096));
if((bit__23645__auto__) || (G__30265.cljs$core$ISet$)){
return true;
} else {
if((!G__30265.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__30265);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISet,G__30265);
}
}
});
/**
* Returns true if coll implements Associative
*/
cljs.core.associative_QMARK_ = (function associative_QMARK_(x){
var G__30267 = x;
if(G__30267){
var bit__23645__auto__ = (G__30267.cljs$lang$protocol_mask$partition0$ & (512));
if((bit__23645__auto__) || (G__30267.cljs$core$IAssociative$)){
return true;
} else {
if((!G__30267.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__30267);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative,G__30267);
}
});
/**
* Returns true if coll satisfies ISequential
*/
cljs.core.sequential_QMARK_ = (function sequential_QMARK_(x){
var G__30269 = x;
if(G__30269){
var bit__23645__auto__ = (G__30269.cljs$lang$protocol_mask$partition0$ & (16777216));
if((bit__23645__auto__) || (G__30269.cljs$core$ISequential$)){
return true;
} else {
if((!G__30269.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__30269);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential,G__30269);
}
});
/**
* Returns true if coll satisfies ISorted
*/
cljs.core.sorted_QMARK_ = (function sorted_QMARK_(x){
var G__30271 = x;
if(G__30271){
var bit__23645__auto__ = (G__30271.cljs$lang$protocol_mask$partition0$ & (268435456));
if((bit__23645__auto__) || (G__30271.cljs$core$ISorted$)){
return true;
} else {
if((!G__30271.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__30271);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted,G__30271);
}
});
/**
* Returns true if coll satisfies IReduce
*/
cljs.core.reduceable_QMARK_ = (function reduceable_QMARK_(x){
var G__30273 = x;
if(G__30273){
var bit__23645__auto__ = (G__30273.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__23645__auto__) || (G__30273.cljs$core$IReduce$)){
return true;
} else {
if((!G__30273.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__30273);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,G__30273);
}
});
/**
* Return true if x satisfies IMap
*/
cljs.core.map_QMARK_ = (function map_QMARK_(x){
if((x == null)){
return false;
} else {
var G__30275 = x;
if(G__30275){
var bit__23645__auto__ = (G__30275.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__23645__auto__) || (G__30275.cljs$core$IMap$)){
return true;
} else {
if((!G__30275.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__30275);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMap,G__30275);
}
}
});
/**
* Return true if x satisfies IVector
*/
cljs.core.vector_QMARK_ = (function vector_QMARK_(x){
var G__30277 = x;
if(G__30277){
var bit__23645__auto__ = (G__30277.cljs$lang$protocol_mask$partition0$ & (16384));
if((bit__23645__auto__) || (G__30277.cljs$core$IVector$)){
return true;
} else {
if((!G__30277.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__30277);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IVector,G__30277);
}
});

cljs.core.chunked_seq_QMARK_ = (function chunked_seq_QMARK_(x){
var G__30279 = x;
if(G__30279){
var bit__23638__auto__ = (G__30279.cljs$lang$protocol_mask$partition1$ & (512));
if((bit__23638__auto__) || (G__30279.cljs$core$IChunkedSeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
});
/**
* @param {...*} var_args
*/
cljs.core.js_obj = (function() {
var js_obj = null;
var js_obj__0 = (function (){
var obj30285 = {};
return obj30285;
});
var js_obj__1 = (function() { 
var G__30288__delegate = function (keyvals){
var G__30286 = goog.object.create;
var G__30287 = keyvals;
return (cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__30286,G__30287) : cljs.core.apply.call(null,G__30286,G__30287));
};
var G__30288 = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__30289__i = 0, G__30289__a = new Array(arguments.length -  0);
while (G__30289__i < G__30289__a.length) {G__30289__a[G__30289__i] = arguments[G__30289__i + 0]; ++G__30289__i;}
  keyvals = new cljs.core.IndexedSeq(G__30289__a,0);
} 
return G__30288__delegate.call(this,keyvals);};
G__30288.cljs$lang$maxFixedArity = 0;
G__30288.cljs$lang$applyTo = (function (arglist__30290){
var keyvals = cljs.core.seq(arglist__30290);
return G__30288__delegate(keyvals);
});
G__30288.cljs$core$IFn$_invoke$arity$variadic = G__30288__delegate;
return G__30288;
})()
;
js_obj = function(var_args){
var keyvals = var_args;
switch(arguments.length){
case 0:
return js_obj__0.call(this);
default:
var G__30291 = null;
if (arguments.length > 0) {
var G__30292__i = 0, G__30292__a = new Array(arguments.length -  0);
while (G__30292__i < G__30292__a.length) {G__30292__a[G__30292__i] = arguments[G__30292__i + 0]; ++G__30292__i;}
G__30291 = new cljs.core.IndexedSeq(G__30292__a,0);
}
return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__30291);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js_obj.cljs$lang$maxFixedArity = 0;
js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
return js_obj;
})()
;
cljs.core.js_keys = (function js_keys(obj){
var keys = [];
var G__30295_30297 = obj;
var G__30296_30298 = ((function (G__30295_30297,keys){
return (function (val,key,obj__$1){
return keys.push(key);
});})(G__30295_30297,keys))
;
goog.object.forEach(G__30295_30297,G__30296_30298);

return keys;
});
cljs.core.js_delete = (function js_delete(obj,key){
return delete obj[key];
});
cljs.core.array_copy = (function array_copy(from,i,to,j,len){
var i__$1 = i;
var j__$1 = j;
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__30299 = (i__$1 + (1));
var G__30300 = (j__$1 + (1));
var G__30301 = (len__$1 - (1));
i__$1 = G__30299;
j__$1 = G__30300;
len__$1 = G__30301;
continue;
}
break;
}
});
cljs.core.array_copy_downward = (function array_copy_downward(from,i,to,j,len){
var i__$1 = (i + (len - (1)));
var j__$1 = (j + (len - (1)));
var len__$1 = len;
while(true){
if((len__$1 === (0))){
return to;
} else {
(to[j__$1] = (from[i__$1]));

var G__30302 = (i__$1 - (1));
var G__30303 = (j__$1 - (1));
var G__30304 = (len__$1 - (1));
i__$1 = G__30302;
j__$1 = G__30303;
len__$1 = G__30304;
continue;
}
break;
}
});
cljs.core.lookup_sentinel = (function (){var obj30306 = {};
return obj30306;
})();
/**
* Returns true if x is the value false, false otherwise.
*/
cljs.core.false_QMARK_ = (function false_QMARK_(x){
return x === false;
});
/**
* Returns true if x is the value true, false otherwise.
*/
cljs.core.true_QMARK_ = (function true_QMARK_(x){
return x === true;
});
cljs.core.undefined_QMARK_ = (function undefined_QMARK_(x){
return (void 0 === x);
});
/**
* Return true if s satisfies ISeq
*/
cljs.core.seq_QMARK_ = (function seq_QMARK_(s){
if((s == null)){
return false;
} else {
var G__30308 = s;
if(G__30308){
var bit__23645__auto__ = (G__30308.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__23645__auto__) || (G__30308.cljs$core$ISeq$)){
return true;
} else {
if((!G__30308.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30308);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq,G__30308);
}
}
});
/**
* Return true if s satisfies ISeqable
*/
cljs.core.seqable_QMARK_ = (function seqable_QMARK_(s){
var G__30310 = s;
if(G__30310){
var bit__23645__auto__ = (G__30310.cljs$lang$protocol_mask$partition0$ & (8388608));
if((bit__23645__auto__) || (G__30310.cljs$core$ISeqable$)){
return true;
} else {
if((!G__30310.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__30310);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable,G__30310);
}
});
cljs.core.boolean$ = (function boolean$(x){
if(cljs.core.truth_(x)){
return true;
} else {
return false;
}
});
cljs.core.ifn_QMARK_ = (function ifn_QMARK_(f){
var or__22964__auto__ = cljs.core.fn_QMARK_(f);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var G__30314 = f;
if(G__30314){
var bit__23645__auto__ = (G__30314.cljs$lang$protocol_mask$partition0$ & (1));
if((bit__23645__auto__) || (G__30314.cljs$core$IFn$)){
return true;
} else {
if((!G__30314.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__30314);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IFn,G__30314);
}
}
});
/**
* Returns true if n is an integer.
*/
cljs.core.integer_QMARK_ = (function integer_QMARK_(n){
return (typeof n === 'number') && (cljs.core.not((function (){var G__30327 = n;
return isNaN(G__30327);
})())) && (!((n === Infinity))) && (((function (){var G__30328 = n;
return parseFloat(G__30328);
})() === (function (){var G__30329 = n;
var G__30330 = (10);
return parseInt(G__30329,G__30330);
})()));
});
/**
* Returns true if key is present in the given collection, otherwise
* returns false.  Note that for numerically indexed collections like
* vectors and arrays, this tests if the numeric key is within the
* range of indexes. 'contains?' operates constant or logarithmic time;
* it will not perform a linear search for a value.  See also 'some'.
*/
cljs.core.contains_QMARK_ = (function contains_QMARK_(coll,v){
if((cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return false;
} else {
return true;
}
});
/**
* Returns the map entry for key, or nil if key not present.
*/
cljs.core.find = (function find(coll,k){
if((!((coll == null))) && (cljs.core.associative_QMARK_(coll)) && (cljs.core.contains_QMARK_(coll,k))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k,cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,k)], null);
} else {
return null;
}
});
/**
* Returns true if no two of the arguments are =
* @param {...*} var_args
*/
cljs.core.distinct_QMARK_ = (function() {
var distinct_QMARK_ = null;
var distinct_QMARK___1 = (function (x){
return true;
});
var distinct_QMARK___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var distinct_QMARK___3 = (function() { 
var G__30331__delegate = function (x,y,more){
if(!(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y))){
var s = cljs.core.PersistentHashSet.fromArray([x,y], true);
var xs = more;
while(true){
var x__$1 = cljs.core.first(xs);
var etc = cljs.core.next(xs);
if(cljs.core.truth_(xs)){
if(cljs.core.contains_QMARK_(s,x__$1)){
return false;
} else {
var G__30332 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s,x__$1);
var G__30333 = etc;
s = G__30332;
xs = G__30333;
continue;
}
} else {
return true;
}
break;
}
} else {
return false;
}
};
var G__30331 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30334__i = 0, G__30334__a = new Array(arguments.length -  2);
while (G__30334__i < G__30334__a.length) {G__30334__a[G__30334__i] = arguments[G__30334__i + 2]; ++G__30334__i;}
  more = new cljs.core.IndexedSeq(G__30334__a,0);
} 
return G__30331__delegate.call(this,x,y,more);};
G__30331.cljs$lang$maxFixedArity = 2;
G__30331.cljs$lang$applyTo = (function (arglist__30335){
var x = cljs.core.first(arglist__30335);
arglist__30335 = cljs.core.next(arglist__30335);
var y = cljs.core.first(arglist__30335);
var more = cljs.core.rest(arglist__30335);
return G__30331__delegate(x,y,more);
});
G__30331.cljs$core$IFn$_invoke$arity$variadic = G__30331__delegate;
return G__30331;
})()
;
distinct_QMARK_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return distinct_QMARK___1.call(this,x);
case 2:
return distinct_QMARK___2.call(this,x,y);
default:
var G__30336 = null;
if (arguments.length > 2) {
var G__30337__i = 0, G__30337__a = new Array(arguments.length -  2);
while (G__30337__i < G__30337__a.length) {G__30337__a[G__30337__i] = arguments[G__30337__i + 2]; ++G__30337__i;}
G__30336 = new cljs.core.IndexedSeq(G__30337__a,0);
}
return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30336);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct_QMARK_.cljs$lang$maxFixedArity = 2;
distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
return distinct_QMARK_;
})()
;
/**
* Comparator. Returns a negative number, zero, or a positive number
* when x is logically 'less than', 'equal to', or 'greater than'
* y. Uses IComparable if available and google.array.defaultCompare for objects
* of the same type and special-cases nil to be less than any other object.
*/
cljs.core.compare = (function compare(x,y){
if((x === y)){
return (0);
} else {
if((x == null)){
return (-1);
} else {
if((y == null)){
return (1);
} else {
if((cljs.core.type(x) === cljs.core.type(y))){
if((function (){var G__30341 = x;
if(G__30341){
var bit__23638__auto__ = (G__30341.cljs$lang$protocol_mask$partition1$ & (2048));
if((bit__23638__auto__) || (G__30341.cljs$core$IComparable$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$IComparable$_compare$arity$2(null,y);
} else {
var G__30342 = x;
var G__30343 = y;
return goog.array.defaultCompare(G__30342,G__30343);
}
} else {
throw (new Error("compare on non-nil objects of different types"));

}
}
}
}
});
/**
* Compare indexed collection.
*/
cljs.core.compare_indexed = (function() {
var compare_indexed = null;
var compare_indexed__2 = (function (xs,ys){
var xl = cljs.core.count(xs);
var yl = cljs.core.count(ys);
if((xl < yl)){
return (-1);
} else {
if((xl > yl)){
return (1);
} else {
return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs,ys,xl,(0));

}
}
});
var compare_indexed__4 = (function (xs,ys,len,n){
while(true){
var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs,n),cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys,n));
if(((d === (0))) && (((n + (1)) < len))){
var G__30348 = xs;
var G__30349 = ys;
var G__30350 = len;
var G__30351 = (n + (1));
xs = G__30348;
ys = G__30349;
len = G__30350;
n = G__30351;
continue;
} else {
return d;
}
break;
}
});
compare_indexed = function(xs,ys,len,n){
switch(arguments.length){
case 2:
return compare_indexed__2.call(this,xs,ys);
case 4:
return compare_indexed__4.call(this,xs,ys,len,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
return compare_indexed;
})()
;
/**
* Given a fn that might be boolean valued or a comparator,
* return a fn that is a comparator.
*/
cljs.core.fn__GT_comparator = (function fn__GT_comparator(f){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f,cljs.core.compare)){
return cljs.core.compare;
} else {
return (function (x,y){
var r = (function (){var G__30356 = x;
var G__30357 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30356,G__30357) : f.call(null,G__30356,G__30357));
})();
if(typeof r === 'number'){
return r;
} else {
if(cljs.core.truth_(r)){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__30358 = y;
var G__30359 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30358,G__30359) : f.call(null,G__30358,G__30359));
})())){
return (1);
} else {
return (0);
}
}
}
});
}
});
/**
* Returns a sorted sequence of the items in coll. Comp can be
* boolean-valued comparison function, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort = (function() {
var sort = null;
var sort__1 = (function (coll){
return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare,coll);
});
var sort__2 = (function (comp,coll){
if(cljs.core.seq(coll)){
var a = (function (){var G__30365 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__30365) : cljs.core.to_array.call(null,G__30365));
})();
var G__30366_30368 = a;
var G__30367_30369 = cljs.core.fn__GT_comparator(comp);
goog.array.stableSort(G__30366_30368,G__30367_30369);

return cljs.core.seq(a);
} else {
return cljs.core.List.EMPTY;
}
});
sort = function(comp,coll){
switch(arguments.length){
case 1:
return sort__1.call(this,comp);
case 2:
return sort__2.call(this,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
return sort;
})()
;
/**
* Returns a sorted sequence of the items in coll, where the sort
* order is determined by comparing (keyfn item).  Comp can be
* boolean-valued comparison funcion, or a -/0/+ valued comparator.
* Comp defaults to compare.
*/
cljs.core.sort_by = (function() {
var sort_by = null;
var sort_by__2 = (function (keyfn,coll){
return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn,cljs.core.compare,coll);
});
var sort_by__3 = (function (keyfn,comp,coll){
return cljs.core.sort.cljs$core$IFn$_invoke$arity$2((function (x,y){
return cljs.core.fn__GT_comparator(comp).call(null,(function (){var G__30375 = x;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__30375) : keyfn.call(null,G__30375));
})(),(function (){var G__30376 = y;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__30376) : keyfn.call(null,G__30376));
})());
}),coll);
});
sort_by = function(keyfn,comp,coll){
switch(arguments.length){
case 2:
return sort_by__2.call(this,keyfn,comp);
case 3:
return sort_by__3.call(this,keyfn,comp,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
return sort_by;
})()
;
cljs.core.seq_reduce = (function() {
var seq_reduce = null;
var seq_reduce__2 = (function (f,coll){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
var G__30382 = f;
var G__30383 = cljs.core.first(s);
var G__30384 = cljs.core.next(s);
return (cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__30382,G__30383,G__30384) : cljs.core.reduce.call(null,G__30382,G__30383,G__30384));
} else {
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
}
});
var seq_reduce__3 = (function (f,val,coll){
var val__$1 = val;
var coll__$1 = cljs.core.seq(coll);
while(true){
if(coll__$1){
var nval = (function (){var G__30385 = val__$1;
var G__30386 = cljs.core.first(coll__$1);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30385,G__30386) : f.call(null,G__30385,G__30386));
})();
if(cljs.core.reduced_QMARK_(nval)){
return cljs.core.deref(nval);
} else {
var G__30387 = nval;
var G__30388 = cljs.core.next(coll__$1);
val__$1 = G__30387;
coll__$1 = G__30388;
continue;
}
} else {
return val__$1;
}
break;
}
});
seq_reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return seq_reduce__2.call(this,f,val);
case 3:
return seq_reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
return seq_reduce;
})()
;
/**
* Return a random permutation of coll
*/
cljs.core.shuffle = (function shuffle(coll){
var a = (function (){var G__30392 = coll;
return (cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__30392) : cljs.core.to_array.call(null,G__30392));
})();
var G__30393_30395 = a;
goog.array.shuffle(G__30393_30395);

var G__30394 = a;
return (cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__30394) : cljs.core.vec.call(null,G__30394));
});
/**
* f should be a function of 2 arguments. If val is not supplied,
* returns the result of applying f to the first 2 items in coll, then
* applying f to that result and the 3rd item, etc. If coll contains no
* items, f must accept no arguments as well, and reduce returns the
* result of calling f with no arguments.  If coll has only 1 item, it
* is returned and f is not called.  If val is supplied, returns the
* result of applying f to val and the first item in coll, then
* applying f to that result and the 2nd item, etc. If coll contains no
* items, returns val and f is not called.
*/
cljs.core.reduce = (function() {
var reduce = null;
var reduce__2 = (function (f,coll){
if((function (){var G__30398 = coll;
if(G__30398){
var bit__23638__auto__ = (G__30398.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__23638__auto__) || (G__30398.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$2(null,f);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll,f);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll);

}
}
}
}
});
var reduce__3 = (function (f,val,coll){
if((function (){var G__30399 = coll;
if(G__30399){
var bit__23638__auto__ = (G__30399.cljs$lang$protocol_mask$partition0$ & (524288));
if((bit__23638__auto__) || (G__30399.cljs$core$IReduce$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return coll.cljs$core$IReduce$_reduce$arity$3(null,f,val);
} else {
if(coll instanceof Array){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(typeof coll === 'string'){
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
if(cljs.core.native_satisfies_QMARK_(cljs.core.IReduce,coll)){
return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll,f,val);
} else {
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,val,coll);

}
}
}
}
});
reduce = function(f,val,coll){
switch(arguments.length){
case 2:
return reduce__2.call(this,f,val);
case 3:
return reduce__3.call(this,f,val,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
return reduce;
})()
;
/**
* Reduces an associative collection. f should be a function of 3
* arguments. Returns the result of applying f to init, the first key
* and the first value in coll, then applying f to that result and the
* 2nd key and value, etc. If coll contains no entries, returns init
* and f is not called. Note that reduce-kv is supported on vectors,
* where the keys will be the ordinals.
*/
cljs.core.reduce_kv = (function reduce_kv(f,init,coll){
if(!((coll == null))){
return cljs.core._kv_reduce(coll,f,init);
} else {
return init;
}
});
cljs.core.identity = (function identity(x){
return x;
});
cljs.core.completing = (function() {
var completing = null;
var completing__1 = (function (f){
return completing.cljs$core$IFn$_invoke$arity$2(f,cljs.core.identity);
});
var completing__2 = (function (f,cf){
return (function() {
var G__30408 = null;
var G__30408__0 = (function (){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
});
var G__30408__1 = (function (x){
var G__30405 = x;
return (cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__30405) : cf.call(null,G__30405));
});
var G__30408__2 = (function (x,y){
var G__30406 = x;
var G__30407 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30406,G__30407) : f.call(null,G__30406,G__30407));
});
G__30408 = function(x,y){
switch(arguments.length){
case 0:
return G__30408__0.call(this);
case 1:
return G__30408__1.call(this,x);
case 2:
return G__30408__2.call(this,x,y);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30408.cljs$core$IFn$_invoke$arity$0 = G__30408__0;
G__30408.cljs$core$IFn$_invoke$arity$1 = G__30408__1;
G__30408.cljs$core$IFn$_invoke$arity$2 = G__30408__2;
return G__30408;
})()
});
completing = function(f,cf){
switch(arguments.length){
case 1:
return completing__1.call(this,f);
case 2:
return completing__2.call(this,f,cf);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
return completing;
})()
;
/**
* reduce with a transformation of f (xf). If init is not
* supplied, (f) will be called to produce it. f should be a reducing
* step function that accepts both 1 and 2 arguments, if it accepts
* only 2 you can add the arity-1 with 'completing'. Returns the result
* of applying (the transformed) xf to init and the first item in coll,
* then applying xf to that result and the 2nd item, etc. If coll
* contains no items, returns init and f is not called. Note that
* certain transforms may inject or skip items.
*/
cljs.core.transduce = (function() {
var transduce = null;
var transduce__3 = (function (xform,f,coll){
return transduce.cljs$core$IFn$_invoke$arity$4(xform,f,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),coll);
});
var transduce__4 = (function (xform,f,init,coll){
var f__$1 = (function (){var G__30415 = f;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__30415) : xform.call(null,G__30415));
})();
var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1,init,coll);
var G__30416 = ret;
return (f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__30416) : f__$1.call(null,G__30416));
});
transduce = function(xform,f,init,coll){
switch(arguments.length){
case 3:
return transduce__3.call(this,xform,f,init);
case 4:
return transduce__4.call(this,xform,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
return transduce;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core._PLUS_ = (function() {
var _PLUS_ = null;
var _PLUS___0 = (function (){
return (0);
});
var _PLUS___1 = (function (x){
return x;
});
var _PLUS___2 = (function (x,y){
return (x + y);
});
var _PLUS___3 = (function() { 
var G__30417__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_,(x + y),more);
};
var G__30417 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30418__i = 0, G__30418__a = new Array(arguments.length -  2);
while (G__30418__i < G__30418__a.length) {G__30418__a[G__30418__i] = arguments[G__30418__i + 2]; ++G__30418__i;}
  more = new cljs.core.IndexedSeq(G__30418__a,0);
} 
return G__30417__delegate.call(this,x,y,more);};
G__30417.cljs$lang$maxFixedArity = 2;
G__30417.cljs$lang$applyTo = (function (arglist__30419){
var x = cljs.core.first(arglist__30419);
arglist__30419 = cljs.core.next(arglist__30419);
var y = cljs.core.first(arglist__30419);
var more = cljs.core.rest(arglist__30419);
return G__30417__delegate(x,y,more);
});
G__30417.cljs$core$IFn$_invoke$arity$variadic = G__30417__delegate;
return G__30417;
})()
;
_PLUS_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _PLUS___0.call(this);
case 1:
return _PLUS___1.call(this,x);
case 2:
return _PLUS___2.call(this,x,y);
default:
var G__30420 = null;
if (arguments.length > 2) {
var G__30421__i = 0, G__30421__a = new Array(arguments.length -  2);
while (G__30421__i < G__30421__a.length) {G__30421__a[G__30421__i] = arguments[G__30421__i + 2]; ++G__30421__i;}
G__30420 = new cljs.core.IndexedSeq(G__30421__a,0);
}
return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30420);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_PLUS_.cljs$lang$maxFixedArity = 2;
_PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
_PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
_PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
_PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
_PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
return _PLUS_;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core._ = (function() {
var _ = null;
var ___1 = (function (x){
return (- x);
});
var ___2 = (function (x,y){
return (x - y);
});
var ___3 = (function() { 
var G__30422__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_,(x - y),more);
};
var G__30422 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30423__i = 0, G__30423__a = new Array(arguments.length -  2);
while (G__30423__i < G__30423__a.length) {G__30423__a[G__30423__i] = arguments[G__30423__i + 2]; ++G__30423__i;}
  more = new cljs.core.IndexedSeq(G__30423__a,0);
} 
return G__30422__delegate.call(this,x,y,more);};
G__30422.cljs$lang$maxFixedArity = 2;
G__30422.cljs$lang$applyTo = (function (arglist__30424){
var x = cljs.core.first(arglist__30424);
arglist__30424 = cljs.core.next(arglist__30424);
var y = cljs.core.first(arglist__30424);
var more = cljs.core.rest(arglist__30424);
return G__30422__delegate(x,y,more);
});
G__30422.cljs$core$IFn$_invoke$arity$variadic = G__30422__delegate;
return G__30422;
})()
;
_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return ___1.call(this,x);
case 2:
return ___2.call(this,x,y);
default:
var G__30425 = null;
if (arguments.length > 2) {
var G__30426__i = 0, G__30426__a = new Array(arguments.length -  2);
while (G__30426__i < G__30426__a.length) {G__30426__a[G__30426__i] = arguments[G__30426__i + 2]; ++G__30426__i;}
G__30425 = new cljs.core.IndexedSeq(G__30426__a,0);
}
return ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30425);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_.cljs$lang$maxFixedArity = 2;
_.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
_.cljs$core$IFn$_invoke$arity$1 = ___1;
_.cljs$core$IFn$_invoke$arity$2 = ___2;
_.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
return _;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core._STAR_ = (function() {
var _STAR_ = null;
var _STAR___0 = (function (){
return (1);
});
var _STAR___1 = (function (x){
return x;
});
var _STAR___2 = (function (x,y){
return (x * y);
});
var _STAR___3 = (function() { 
var G__30427__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_,(x * y),more);
};
var G__30427 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30428__i = 0, G__30428__a = new Array(arguments.length -  2);
while (G__30428__i < G__30428__a.length) {G__30428__a[G__30428__i] = arguments[G__30428__i + 2]; ++G__30428__i;}
  more = new cljs.core.IndexedSeq(G__30428__a,0);
} 
return G__30427__delegate.call(this,x,y,more);};
G__30427.cljs$lang$maxFixedArity = 2;
G__30427.cljs$lang$applyTo = (function (arglist__30429){
var x = cljs.core.first(arglist__30429);
arglist__30429 = cljs.core.next(arglist__30429);
var y = cljs.core.first(arglist__30429);
var more = cljs.core.rest(arglist__30429);
return G__30427__delegate(x,y,more);
});
G__30427.cljs$core$IFn$_invoke$arity$variadic = G__30427__delegate;
return G__30427;
})()
;
_STAR_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return _STAR___0.call(this);
case 1:
return _STAR___1.call(this,x);
case 2:
return _STAR___2.call(this,x,y);
default:
var G__30430 = null;
if (arguments.length > 2) {
var G__30431__i = 0, G__30431__a = new Array(arguments.length -  2);
while (G__30431__i < G__30431__a.length) {G__30431__a[G__30431__i] = arguments[G__30431__i + 2]; ++G__30431__i;}
G__30430 = new cljs.core.IndexedSeq(G__30431__a,0);
}
return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30430);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_STAR_.cljs$lang$maxFixedArity = 2;
_STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
_STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
_STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
_STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
_STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
return _STAR_;
})()
;
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core._SLASH_ = (function() {
var _SLASH_ = null;
var _SLASH___1 = (function (x){
return _SLASH_.cljs$core$IFn$_invoke$arity$2((1),x);
});
var _SLASH___2 = (function (x,y){
return (x / y);
});
var _SLASH___3 = (function() { 
var G__30436__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_,_SLASH_.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__30436 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30437__i = 0, G__30437__a = new Array(arguments.length -  2);
while (G__30437__i < G__30437__a.length) {G__30437__a[G__30437__i] = arguments[G__30437__i + 2]; ++G__30437__i;}
  more = new cljs.core.IndexedSeq(G__30437__a,0);
} 
return G__30436__delegate.call(this,x,y,more);};
G__30436.cljs$lang$maxFixedArity = 2;
G__30436.cljs$lang$applyTo = (function (arglist__30438){
var x = cljs.core.first(arglist__30438);
arglist__30438 = cljs.core.next(arglist__30438);
var y = cljs.core.first(arglist__30438);
var more = cljs.core.rest(arglist__30438);
return G__30436__delegate(x,y,more);
});
G__30436.cljs$core$IFn$_invoke$arity$variadic = G__30436__delegate;
return G__30436;
})()
;
_SLASH_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _SLASH___1.call(this,x);
case 2:
return _SLASH___2.call(this,x,y);
default:
var G__30439 = null;
if (arguments.length > 2) {
var G__30440__i = 0, G__30440__a = new Array(arguments.length -  2);
while (G__30440__i < G__30440__a.length) {G__30440__a[G__30440__i] = arguments[G__30440__i + 2]; ++G__30440__i;}
G__30439 = new cljs.core.IndexedSeq(G__30440__a,0);
}
return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30439);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_SLASH_.cljs$lang$maxFixedArity = 2;
_SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
_SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
_SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
_SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
return _SLASH_;
})()
;
/**
* Returns non-nil if nums are in monotonically increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT_ = (function() {
var _LT_ = null;
var _LT___1 = (function (x){
return true;
});
var _LT___2 = (function (x,y){
return (x < y);
});
var _LT___3 = (function() { 
var G__30441__delegate = function (x,y,more){
while(true){
if((x < y)){
if(cljs.core.next(more)){
var G__30442 = y;
var G__30443 = cljs.core.first(more);
var G__30444 = cljs.core.next(more);
x = G__30442;
y = G__30443;
more = G__30444;
continue;
} else {
return (y < cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30441 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30445__i = 0, G__30445__a = new Array(arguments.length -  2);
while (G__30445__i < G__30445__a.length) {G__30445__a[G__30445__i] = arguments[G__30445__i + 2]; ++G__30445__i;}
  more = new cljs.core.IndexedSeq(G__30445__a,0);
} 
return G__30441__delegate.call(this,x,y,more);};
G__30441.cljs$lang$maxFixedArity = 2;
G__30441.cljs$lang$applyTo = (function (arglist__30446){
var x = cljs.core.first(arglist__30446);
arglist__30446 = cljs.core.next(arglist__30446);
var y = cljs.core.first(arglist__30446);
var more = cljs.core.rest(arglist__30446);
return G__30441__delegate(x,y,more);
});
G__30441.cljs$core$IFn$_invoke$arity$variadic = G__30441__delegate;
return G__30441;
})()
;
_LT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT___1.call(this,x);
case 2:
return _LT___2.call(this,x,y);
default:
var G__30447 = null;
if (arguments.length > 2) {
var G__30448__i = 0, G__30448__a = new Array(arguments.length -  2);
while (G__30448__i < G__30448__a.length) {G__30448__a[G__30448__i] = arguments[G__30448__i + 2]; ++G__30448__i;}
G__30447 = new cljs.core.IndexedSeq(G__30448__a,0);
}
return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30447);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT_.cljs$lang$maxFixedArity = 2;
_LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
_LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
_LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
_LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._LT__EQ_ = (function() {
var _LT__EQ_ = null;
var _LT__EQ___1 = (function (x){
return true;
});
var _LT__EQ___2 = (function (x,y){
return (x <= y);
});
var _LT__EQ___3 = (function() { 
var G__30449__delegate = function (x,y,more){
while(true){
if((x <= y)){
if(cljs.core.next(more)){
var G__30450 = y;
var G__30451 = cljs.core.first(more);
var G__30452 = cljs.core.next(more);
x = G__30450;
y = G__30451;
more = G__30452;
continue;
} else {
return (y <= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30449 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30453__i = 0, G__30453__a = new Array(arguments.length -  2);
while (G__30453__i < G__30453__a.length) {G__30453__a[G__30453__i] = arguments[G__30453__i + 2]; ++G__30453__i;}
  more = new cljs.core.IndexedSeq(G__30453__a,0);
} 
return G__30449__delegate.call(this,x,y,more);};
G__30449.cljs$lang$maxFixedArity = 2;
G__30449.cljs$lang$applyTo = (function (arglist__30454){
var x = cljs.core.first(arglist__30454);
arglist__30454 = cljs.core.next(arglist__30454);
var y = cljs.core.first(arglist__30454);
var more = cljs.core.rest(arglist__30454);
return G__30449__delegate(x,y,more);
});
G__30449.cljs$core$IFn$_invoke$arity$variadic = G__30449__delegate;
return G__30449;
})()
;
_LT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _LT__EQ___1.call(this,x);
case 2:
return _LT__EQ___2.call(this,x,y);
default:
var G__30455 = null;
if (arguments.length > 2) {
var G__30456__i = 0, G__30456__a = new Array(arguments.length -  2);
while (G__30456__i < G__30456__a.length) {G__30456__a[G__30456__i] = arguments[G__30456__i + 2]; ++G__30456__i;}
G__30455 = new cljs.core.IndexedSeq(G__30456__a,0);
}
return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30455);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_LT__EQ_.cljs$lang$maxFixedArity = 2;
_LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
_LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
_LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
_LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _LT__EQ_;
})()
;
/**
* Returns non-nil if nums are in monotonically decreasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT_ = (function() {
var _GT_ = null;
var _GT___1 = (function (x){
return true;
});
var _GT___2 = (function (x,y){
return (x > y);
});
var _GT___3 = (function() { 
var G__30457__delegate = function (x,y,more){
while(true){
if((x > y)){
if(cljs.core.next(more)){
var G__30458 = y;
var G__30459 = cljs.core.first(more);
var G__30460 = cljs.core.next(more);
x = G__30458;
y = G__30459;
more = G__30460;
continue;
} else {
return (y > cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30457 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30461__i = 0, G__30461__a = new Array(arguments.length -  2);
while (G__30461__i < G__30461__a.length) {G__30461__a[G__30461__i] = arguments[G__30461__i + 2]; ++G__30461__i;}
  more = new cljs.core.IndexedSeq(G__30461__a,0);
} 
return G__30457__delegate.call(this,x,y,more);};
G__30457.cljs$lang$maxFixedArity = 2;
G__30457.cljs$lang$applyTo = (function (arglist__30462){
var x = cljs.core.first(arglist__30462);
arglist__30462 = cljs.core.next(arglist__30462);
var y = cljs.core.first(arglist__30462);
var more = cljs.core.rest(arglist__30462);
return G__30457__delegate(x,y,more);
});
G__30457.cljs$core$IFn$_invoke$arity$variadic = G__30457__delegate;
return G__30457;
})()
;
_GT_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT___1.call(this,x);
case 2:
return _GT___2.call(this,x,y);
default:
var G__30463 = null;
if (arguments.length > 2) {
var G__30464__i = 0, G__30464__a = new Array(arguments.length -  2);
while (G__30464__i < G__30464__a.length) {G__30464__a[G__30464__i] = arguments[G__30464__i + 2]; ++G__30464__i;}
G__30463 = new cljs.core.IndexedSeq(G__30464__a,0);
}
return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30463);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT_.cljs$lang$maxFixedArity = 2;
_GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
_GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
_GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
_GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT_;
})()
;
/**
* Returns non-nil if nums are in monotonically non-increasing order,
* otherwise false.
* @param {...*} var_args
*/
cljs.core._GT__EQ_ = (function() {
var _GT__EQ_ = null;
var _GT__EQ___1 = (function (x){
return true;
});
var _GT__EQ___2 = (function (x,y){
return (x >= y);
});
var _GT__EQ___3 = (function() { 
var G__30465__delegate = function (x,y,more){
while(true){
if((x >= y)){
if(cljs.core.next(more)){
var G__30466 = y;
var G__30467 = cljs.core.first(more);
var G__30468 = cljs.core.next(more);
x = G__30466;
y = G__30467;
more = G__30468;
continue;
} else {
return (y >= cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30465 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30469__i = 0, G__30469__a = new Array(arguments.length -  2);
while (G__30469__i < G__30469__a.length) {G__30469__a[G__30469__i] = arguments[G__30469__i + 2]; ++G__30469__i;}
  more = new cljs.core.IndexedSeq(G__30469__a,0);
} 
return G__30465__delegate.call(this,x,y,more);};
G__30465.cljs$lang$maxFixedArity = 2;
G__30465.cljs$lang$applyTo = (function (arglist__30470){
var x = cljs.core.first(arglist__30470);
arglist__30470 = cljs.core.next(arglist__30470);
var y = cljs.core.first(arglist__30470);
var more = cljs.core.rest(arglist__30470);
return G__30465__delegate(x,y,more);
});
G__30465.cljs$core$IFn$_invoke$arity$variadic = G__30465__delegate;
return G__30465;
})()
;
_GT__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _GT__EQ___1.call(this,x);
case 2:
return _GT__EQ___2.call(this,x,y);
default:
var G__30471 = null;
if (arguments.length > 2) {
var G__30472__i = 0, G__30472__a = new Array(arguments.length -  2);
while (G__30472__i < G__30472__a.length) {G__30472__a[G__30472__i] = arguments[G__30472__i + 2]; ++G__30472__i;}
G__30471 = new cljs.core.IndexedSeq(G__30472__a,0);
}
return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_GT__EQ_.cljs$lang$maxFixedArity = 2;
_GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
_GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
_GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
_GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _GT__EQ_;
})()
;
/**
* Returns a number one less than num.
*/
cljs.core.dec = (function dec(x){
return (x - (1));
});
/**
* Returns the greatest of the nums.
* @param {...*} var_args
*/
cljs.core.max = (function() {
var max = null;
var max__1 = (function (x){
return x;
});
var max__2 = (function (x,y){
var x__23281__auto__ = x;
var y__23282__auto__ = y;
return ((x__23281__auto__ > y__23282__auto__) ? x__23281__auto__ : y__23282__auto__);
});
var max__3 = (function() { 
var G__30473__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max,(function (){var x__23281__auto__ = x;
var y__23282__auto__ = y;
return ((x__23281__auto__ > y__23282__auto__) ? x__23281__auto__ : y__23282__auto__);
})(),more);
};
var G__30473 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30474__i = 0, G__30474__a = new Array(arguments.length -  2);
while (G__30474__i < G__30474__a.length) {G__30474__a[G__30474__i] = arguments[G__30474__i + 2]; ++G__30474__i;}
  more = new cljs.core.IndexedSeq(G__30474__a,0);
} 
return G__30473__delegate.call(this,x,y,more);};
G__30473.cljs$lang$maxFixedArity = 2;
G__30473.cljs$lang$applyTo = (function (arglist__30475){
var x = cljs.core.first(arglist__30475);
arglist__30475 = cljs.core.next(arglist__30475);
var y = cljs.core.first(arglist__30475);
var more = cljs.core.rest(arglist__30475);
return G__30473__delegate(x,y,more);
});
G__30473.cljs$core$IFn$_invoke$arity$variadic = G__30473__delegate;
return G__30473;
})()
;
max = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return max__1.call(this,x);
case 2:
return max__2.call(this,x,y);
default:
var G__30476 = null;
if (arguments.length > 2) {
var G__30477__i = 0, G__30477__a = new Array(arguments.length -  2);
while (G__30477__i < G__30477__a.length) {G__30477__a[G__30477__i] = arguments[G__30477__i + 2]; ++G__30477__i;}
G__30476 = new cljs.core.IndexedSeq(G__30477__a,0);
}
return max__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30476);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max.cljs$lang$maxFixedArity = 2;
max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
max.cljs$core$IFn$_invoke$arity$1 = max__1;
max.cljs$core$IFn$_invoke$arity$2 = max__2;
max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
return max;
})()
;
/**
* Returns the least of the nums.
* @param {...*} var_args
*/
cljs.core.min = (function() {
var min = null;
var min__1 = (function (x){
return x;
});
var min__2 = (function (x,y){
var x__23288__auto__ = x;
var y__23289__auto__ = y;
return ((x__23288__auto__ < y__23289__auto__) ? x__23288__auto__ : y__23289__auto__);
});
var min__3 = (function() { 
var G__30478__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min,(function (){var x__23288__auto__ = x;
var y__23289__auto__ = y;
return ((x__23288__auto__ < y__23289__auto__) ? x__23288__auto__ : y__23289__auto__);
})(),more);
};
var G__30478 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30479__i = 0, G__30479__a = new Array(arguments.length -  2);
while (G__30479__i < G__30479__a.length) {G__30479__a[G__30479__i] = arguments[G__30479__i + 2]; ++G__30479__i;}
  more = new cljs.core.IndexedSeq(G__30479__a,0);
} 
return G__30478__delegate.call(this,x,y,more);};
G__30478.cljs$lang$maxFixedArity = 2;
G__30478.cljs$lang$applyTo = (function (arglist__30480){
var x = cljs.core.first(arglist__30480);
arglist__30480 = cljs.core.next(arglist__30480);
var y = cljs.core.first(arglist__30480);
var more = cljs.core.rest(arglist__30480);
return G__30478__delegate(x,y,more);
});
G__30478.cljs$core$IFn$_invoke$arity$variadic = G__30478__delegate;
return G__30478;
})()
;
min = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return min__1.call(this,x);
case 2:
return min__2.call(this,x,y);
default:
var G__30481 = null;
if (arguments.length > 2) {
var G__30482__i = 0, G__30482__a = new Array(arguments.length -  2);
while (G__30482__i < G__30482__a.length) {G__30482__a[G__30482__i] = arguments[G__30482__i + 2]; ++G__30482__i;}
G__30481 = new cljs.core.IndexedSeq(G__30482__a,0);
}
return min__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30481);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min.cljs$lang$maxFixedArity = 2;
min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
min.cljs$core$IFn$_invoke$arity$1 = min__1;
min.cljs$core$IFn$_invoke$arity$2 = min__2;
min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
return min;
})()
;
cljs.core.byte$ = (function byte$(x){
return x;
});
/**
* Coerce to char
*/
cljs.core.char$ = (function char$(x){
if(typeof x === 'number'){
return String.fromCharCode(x);
} else {
if((typeof x === 'string') && ((x.length === (1)))){
return x;
} else {
throw (new Error("Argument to char must be a character or number"));

}
}
});
cljs.core.short$ = (function short$(x){
return x;
});
cljs.core.float$ = (function float$(x){
return x;
});
cljs.core.double$ = (function double$(x){
return x;
});
cljs.core.unchecked_byte = (function unchecked_byte(x){
return x;
});
cljs.core.unchecked_char = (function unchecked_char(x){
return x;
});
cljs.core.unchecked_short = (function unchecked_short(x){
return x;
});
cljs.core.unchecked_float = (function unchecked_float(x){
return x;
});
cljs.core.unchecked_double = (function unchecked_double(x){
return x;
});
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add = (function() {
var unchecked_add = null;
var unchecked_add__0 = (function (){
return (0);
});
var unchecked_add__1 = (function (x){
return x;
});
var unchecked_add__2 = (function (x,y){
return (x + y);
});
var unchecked_add__3 = (function() { 
var G__30483__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add,(x + y),more);
};
var G__30483 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30484__i = 0, G__30484__a = new Array(arguments.length -  2);
while (G__30484__i < G__30484__a.length) {G__30484__a[G__30484__i] = arguments[G__30484__i + 2]; ++G__30484__i;}
  more = new cljs.core.IndexedSeq(G__30484__a,0);
} 
return G__30483__delegate.call(this,x,y,more);};
G__30483.cljs$lang$maxFixedArity = 2;
G__30483.cljs$lang$applyTo = (function (arglist__30485){
var x = cljs.core.first(arglist__30485);
arglist__30485 = cljs.core.next(arglist__30485);
var y = cljs.core.first(arglist__30485);
var more = cljs.core.rest(arglist__30485);
return G__30483__delegate(x,y,more);
});
G__30483.cljs$core$IFn$_invoke$arity$variadic = G__30483__delegate;
return G__30483;
})()
;
unchecked_add = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add__0.call(this);
case 1:
return unchecked_add__1.call(this,x);
case 2:
return unchecked_add__2.call(this,x,y);
default:
var G__30486 = null;
if (arguments.length > 2) {
var G__30487__i = 0, G__30487__a = new Array(arguments.length -  2);
while (G__30487__i < G__30487__a.length) {G__30487__a[G__30487__i] = arguments[G__30487__i + 2]; ++G__30487__i;}
G__30486 = new cljs.core.IndexedSeq(G__30487__a,0);
}
return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30486);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add.cljs$lang$maxFixedArity = 2;
unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add;
})()
;
/**
* Returns the sum of nums. (+) returns 0.
* @param {...*} var_args
*/
cljs.core.unchecked_add_int = (function() {
var unchecked_add_int = null;
var unchecked_add_int__0 = (function (){
return (0);
});
var unchecked_add_int__1 = (function (x){
return x;
});
var unchecked_add_int__2 = (function (x,y){
return (x + y);
});
var unchecked_add_int__3 = (function() { 
var G__30488__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int,(x + y),more);
};
var G__30488 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30489__i = 0, G__30489__a = new Array(arguments.length -  2);
while (G__30489__i < G__30489__a.length) {G__30489__a[G__30489__i] = arguments[G__30489__i + 2]; ++G__30489__i;}
  more = new cljs.core.IndexedSeq(G__30489__a,0);
} 
return G__30488__delegate.call(this,x,y,more);};
G__30488.cljs$lang$maxFixedArity = 2;
G__30488.cljs$lang$applyTo = (function (arglist__30490){
var x = cljs.core.first(arglist__30490);
arglist__30490 = cljs.core.next(arglist__30490);
var y = cljs.core.first(arglist__30490);
var more = cljs.core.rest(arglist__30490);
return G__30488__delegate(x,y,more);
});
G__30488.cljs$core$IFn$_invoke$arity$variadic = G__30488__delegate;
return G__30488;
})()
;
unchecked_add_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_add_int__0.call(this);
case 1:
return unchecked_add_int__1.call(this,x);
case 2:
return unchecked_add_int__2.call(this,x,y);
default:
var G__30491 = null;
if (arguments.length > 2) {
var G__30492__i = 0, G__30492__a = new Array(arguments.length -  2);
while (G__30492__i < G__30492__a.length) {G__30492__a[G__30492__i] = arguments[G__30492__i + 2]; ++G__30492__i;}
G__30491 = new cljs.core.IndexedSeq(G__30492__a,0);
}
return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_add_int.cljs$lang$maxFixedArity = 2;
unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_add_int;
})()
;
cljs.core.unchecked_dec = (function unchecked_dec(x){
return (x - (1));
});
cljs.core.unchecked_dec_int = (function unchecked_dec_int(x){
return (x - (1));
});
/**
* If no denominators are supplied, returns 1/numerator,
* else returns numerator divided by all of the denominators.
* @param {...*} var_args
*/
cljs.core.unchecked_divide_int = (function() {
var unchecked_divide_int = null;
var unchecked_divide_int__1 = (function (x){
return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2((1),x);
});
var unchecked_divide_int__2 = (function (x,y){
return (x / y);
});
var unchecked_divide_int__3 = (function() { 
var G__30497__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int,unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x,y),more);
};
var G__30497 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30498__i = 0, G__30498__a = new Array(arguments.length -  2);
while (G__30498__i < G__30498__a.length) {G__30498__a[G__30498__i] = arguments[G__30498__i + 2]; ++G__30498__i;}
  more = new cljs.core.IndexedSeq(G__30498__a,0);
} 
return G__30497__delegate.call(this,x,y,more);};
G__30497.cljs$lang$maxFixedArity = 2;
G__30497.cljs$lang$applyTo = (function (arglist__30499){
var x = cljs.core.first(arglist__30499);
arglist__30499 = cljs.core.next(arglist__30499);
var y = cljs.core.first(arglist__30499);
var more = cljs.core.rest(arglist__30499);
return G__30497__delegate(x,y,more);
});
G__30497.cljs$core$IFn$_invoke$arity$variadic = G__30497__delegate;
return G__30497;
})()
;
unchecked_divide_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_divide_int__1.call(this,x);
case 2:
return unchecked_divide_int__2.call(this,x,y);
default:
var G__30500 = null;
if (arguments.length > 2) {
var G__30501__i = 0, G__30501__a = new Array(arguments.length -  2);
while (G__30501__i < G__30501__a.length) {G__30501__a[G__30501__i] = arguments[G__30501__i + 2]; ++G__30501__i;}
G__30500 = new cljs.core.IndexedSeq(G__30501__a,0);
}
return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30500);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_divide_int.cljs$lang$maxFixedArity = 2;
unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_divide_int;
})()
;
cljs.core.unchecked_inc = (function unchecked_inc(x){
return (x + (1));
});
cljs.core.unchecked_inc_int = (function unchecked_inc_int(x){
return (x + (1));
});
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply = (function() {
var unchecked_multiply = null;
var unchecked_multiply__0 = (function (){
return (1);
});
var unchecked_multiply__1 = (function (x){
return x;
});
var unchecked_multiply__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply__3 = (function() { 
var G__30502__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply,(x * y),more);
};
var G__30502 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30503__i = 0, G__30503__a = new Array(arguments.length -  2);
while (G__30503__i < G__30503__a.length) {G__30503__a[G__30503__i] = arguments[G__30503__i + 2]; ++G__30503__i;}
  more = new cljs.core.IndexedSeq(G__30503__a,0);
} 
return G__30502__delegate.call(this,x,y,more);};
G__30502.cljs$lang$maxFixedArity = 2;
G__30502.cljs$lang$applyTo = (function (arglist__30504){
var x = cljs.core.first(arglist__30504);
arglist__30504 = cljs.core.next(arglist__30504);
var y = cljs.core.first(arglist__30504);
var more = cljs.core.rest(arglist__30504);
return G__30502__delegate(x,y,more);
});
G__30502.cljs$core$IFn$_invoke$arity$variadic = G__30502__delegate;
return G__30502;
})()
;
unchecked_multiply = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply__0.call(this);
case 1:
return unchecked_multiply__1.call(this,x);
case 2:
return unchecked_multiply__2.call(this,x,y);
default:
var G__30505 = null;
if (arguments.length > 2) {
var G__30506__i = 0, G__30506__a = new Array(arguments.length -  2);
while (G__30506__i < G__30506__a.length) {G__30506__a[G__30506__i] = arguments[G__30506__i + 2]; ++G__30506__i;}
G__30505 = new cljs.core.IndexedSeq(G__30506__a,0);
}
return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30505);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply.cljs$lang$maxFixedArity = 2;
unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply;
})()
;
/**
* Returns the product of nums. (*) returns 1.
* @param {...*} var_args
*/
cljs.core.unchecked_multiply_int = (function() {
var unchecked_multiply_int = null;
var unchecked_multiply_int__0 = (function (){
return (1);
});
var unchecked_multiply_int__1 = (function (x){
return x;
});
var unchecked_multiply_int__2 = (function (x,y){
return (x * y);
});
var unchecked_multiply_int__3 = (function() { 
var G__30507__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int,(x * y),more);
};
var G__30507 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30508__i = 0, G__30508__a = new Array(arguments.length -  2);
while (G__30508__i < G__30508__a.length) {G__30508__a[G__30508__i] = arguments[G__30508__i + 2]; ++G__30508__i;}
  more = new cljs.core.IndexedSeq(G__30508__a,0);
} 
return G__30507__delegate.call(this,x,y,more);};
G__30507.cljs$lang$maxFixedArity = 2;
G__30507.cljs$lang$applyTo = (function (arglist__30509){
var x = cljs.core.first(arglist__30509);
arglist__30509 = cljs.core.next(arglist__30509);
var y = cljs.core.first(arglist__30509);
var more = cljs.core.rest(arglist__30509);
return G__30507__delegate(x,y,more);
});
G__30507.cljs$core$IFn$_invoke$arity$variadic = G__30507__delegate;
return G__30507;
})()
;
unchecked_multiply_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 0:
return unchecked_multiply_int__0.call(this);
case 1:
return unchecked_multiply_int__1.call(this,x);
case 2:
return unchecked_multiply_int__2.call(this,x,y);
default:
var G__30510 = null;
if (arguments.length > 2) {
var G__30511__i = 0, G__30511__a = new Array(arguments.length -  2);
while (G__30511__i < G__30511__a.length) {G__30511__a[G__30511__i] = arguments[G__30511__i + 2]; ++G__30511__i;}
G__30510 = new cljs.core.IndexedSeq(G__30511__a,0);
}
return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30510);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_multiply_int;
})()
;
cljs.core.unchecked_negate = (function unchecked_negate(x){
return (- x);
});
cljs.core.unchecked_negate_int = (function unchecked_negate_int(x){
return (- x);
});
cljs.core.unchecked_remainder_int = (function unchecked_remainder_int(x,n){
var G__30514 = x;
var G__30515 = n;
return (cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__30514,G__30515) : cljs.core.mod.call(null,G__30514,G__30515));
});
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract = (function() {
var unchecked_subtract = null;
var unchecked_subtract__1 = (function (x){
return (- x);
});
var unchecked_subtract__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract__3 = (function() { 
var G__30516__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract,(x - y),more);
};
var G__30516 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30517__i = 0, G__30517__a = new Array(arguments.length -  2);
while (G__30517__i < G__30517__a.length) {G__30517__a[G__30517__i] = arguments[G__30517__i + 2]; ++G__30517__i;}
  more = new cljs.core.IndexedSeq(G__30517__a,0);
} 
return G__30516__delegate.call(this,x,y,more);};
G__30516.cljs$lang$maxFixedArity = 2;
G__30516.cljs$lang$applyTo = (function (arglist__30518){
var x = cljs.core.first(arglist__30518);
arglist__30518 = cljs.core.next(arglist__30518);
var y = cljs.core.first(arglist__30518);
var more = cljs.core.rest(arglist__30518);
return G__30516__delegate(x,y,more);
});
G__30516.cljs$core$IFn$_invoke$arity$variadic = G__30516__delegate;
return G__30516;
})()
;
unchecked_subtract = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract__1.call(this,x);
case 2:
return unchecked_subtract__2.call(this,x,y);
default:
var G__30519 = null;
if (arguments.length > 2) {
var G__30520__i = 0, G__30520__a = new Array(arguments.length -  2);
while (G__30520__i < G__30520__a.length) {G__30520__a[G__30520__i] = arguments[G__30520__i + 2]; ++G__30520__i;}
G__30519 = new cljs.core.IndexedSeq(G__30520__a,0);
}
return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30519);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract.cljs$lang$maxFixedArity = 2;
unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract;
})()
;
/**
* If no ys are supplied, returns the negation of x, else subtracts
* the ys from x and returns the result.
* @param {...*} var_args
*/
cljs.core.unchecked_subtract_int = (function() {
var unchecked_subtract_int = null;
var unchecked_subtract_int__1 = (function (x){
return (- x);
});
var unchecked_subtract_int__2 = (function (x,y){
return (x - y);
});
var unchecked_subtract_int__3 = (function() { 
var G__30521__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int,(x - y),more);
};
var G__30521 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30522__i = 0, G__30522__a = new Array(arguments.length -  2);
while (G__30522__i < G__30522__a.length) {G__30522__a[G__30522__i] = arguments[G__30522__i + 2]; ++G__30522__i;}
  more = new cljs.core.IndexedSeq(G__30522__a,0);
} 
return G__30521__delegate.call(this,x,y,more);};
G__30521.cljs$lang$maxFixedArity = 2;
G__30521.cljs$lang$applyTo = (function (arglist__30523){
var x = cljs.core.first(arglist__30523);
arglist__30523 = cljs.core.next(arglist__30523);
var y = cljs.core.first(arglist__30523);
var more = cljs.core.rest(arglist__30523);
return G__30521__delegate(x,y,more);
});
G__30521.cljs$core$IFn$_invoke$arity$variadic = G__30521__delegate;
return G__30521;
})()
;
unchecked_subtract_int = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return unchecked_subtract_int__1.call(this,x);
case 2:
return unchecked_subtract_int__2.call(this,x,y);
default:
var G__30524 = null;
if (arguments.length > 2) {
var G__30525__i = 0, G__30525__a = new Array(arguments.length -  2);
while (G__30525__i < G__30525__a.length) {G__30525__a[G__30525__i] = arguments[G__30525__i + 2]; ++G__30525__i;}
G__30524 = new cljs.core.IndexedSeq(G__30525__a,0);
}
return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30524);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
return unchecked_subtract_int;
})()
;
cljs.core.fix = (function fix(q){
if((q >= (0))){
var G__30528 = q;
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__30528) : Math.floor.call(null,G__30528));
} else {
var G__30529 = q;
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__30529) : Math.ceil.call(null,G__30529));
}
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.int$ = (function int$(x){
return (x | (0));
});
/**
* Coerce to int by stripping decimal places.
*/
cljs.core.unchecked_int = (function unchecked_int(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.long$ = (function long$(x){
return cljs.core.fix(x);
});
/**
* Coerce to long by stripping decimal places. Identical to `int'.
*/
cljs.core.unchecked_long = (function unchecked_long(x){
return cljs.core.fix(x);
});
cljs.core.booleans = (function booleans(x){
return x;
});
cljs.core.bytes = (function bytes(x){
return x;
});
cljs.core.chars = (function chars(x){
return x;
});
cljs.core.shorts = (function shorts(x){
return x;
});
cljs.core.ints = (function ints(x){
return x;
});
cljs.core.floats = (function floats(x){
return x;
});
cljs.core.doubles = (function doubles(x){
return x;
});
cljs.core.longs = (function longs(x){
return x;
});
/**
* Modulus of num and div with original javascript behavior. i.e. bug for negative numbers
*/
cljs.core.js_mod = (function js_mod(n,d){
return (n % d);
});
/**
* Modulus of num and div. Truncates toward negative infinity.
*/
cljs.core.mod = (function mod(n,d){
return (((n % d) + d) % d);
});
/**
* quot[ient] of dividing numerator by denominator.
*/
cljs.core.quot = (function quot(n,d){
var rem = (n % d);
return cljs.core.fix(((n - rem) / d));
});
/**
* remainder of dividing numerator by denominator.
*/
cljs.core.rem = (function rem(n,d){
var q = cljs.core.quot(n,d);
return (n - (d * q));
});
/**
* Bitwise exclusive or
* @param {...*} var_args
*/
cljs.core.bit_xor = (function() {
var bit_xor = null;
var bit_xor__2 = (function (x,y){
return (x ^ y);
});
var bit_xor__3 = (function() { 
var G__30530__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor,(x ^ y),more);
};
var G__30530 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30531__i = 0, G__30531__a = new Array(arguments.length -  2);
while (G__30531__i < G__30531__a.length) {G__30531__a[G__30531__i] = arguments[G__30531__i + 2]; ++G__30531__i;}
  more = new cljs.core.IndexedSeq(G__30531__a,0);
} 
return G__30530__delegate.call(this,x,y,more);};
G__30530.cljs$lang$maxFixedArity = 2;
G__30530.cljs$lang$applyTo = (function (arglist__30532){
var x = cljs.core.first(arglist__30532);
arglist__30532 = cljs.core.next(arglist__30532);
var y = cljs.core.first(arglist__30532);
var more = cljs.core.rest(arglist__30532);
return G__30530__delegate(x,y,more);
});
G__30530.cljs$core$IFn$_invoke$arity$variadic = G__30530__delegate;
return G__30530;
})()
;
bit_xor = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_xor__2.call(this,x,y);
default:
var G__30533 = null;
if (arguments.length > 2) {
var G__30534__i = 0, G__30534__a = new Array(arguments.length -  2);
while (G__30534__i < G__30534__a.length) {G__30534__a[G__30534__i] = arguments[G__30534__i + 2]; ++G__30534__i;}
G__30533 = new cljs.core.IndexedSeq(G__30534__a,0);
}
return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30533);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_xor.cljs$lang$maxFixedArity = 2;
bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_xor;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and = (function() {
var bit_and = null;
var bit_and__2 = (function (x,y){
return (x & y);
});
var bit_and__3 = (function() { 
var G__30535__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and,(x & y),more);
};
var G__30535 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30536__i = 0, G__30536__a = new Array(arguments.length -  2);
while (G__30536__i < G__30536__a.length) {G__30536__a[G__30536__i] = arguments[G__30536__i + 2]; ++G__30536__i;}
  more = new cljs.core.IndexedSeq(G__30536__a,0);
} 
return G__30535__delegate.call(this,x,y,more);};
G__30535.cljs$lang$maxFixedArity = 2;
G__30535.cljs$lang$applyTo = (function (arglist__30537){
var x = cljs.core.first(arglist__30537);
arglist__30537 = cljs.core.next(arglist__30537);
var y = cljs.core.first(arglist__30537);
var more = cljs.core.rest(arglist__30537);
return G__30535__delegate(x,y,more);
});
G__30535.cljs$core$IFn$_invoke$arity$variadic = G__30535__delegate;
return G__30535;
})()
;
bit_and = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and__2.call(this,x,y);
default:
var G__30538 = null;
if (arguments.length > 2) {
var G__30539__i = 0, G__30539__a = new Array(arguments.length -  2);
while (G__30539__i < G__30539__a.length) {G__30539__a[G__30539__i] = arguments[G__30539__i + 2]; ++G__30539__i;}
G__30538 = new cljs.core.IndexedSeq(G__30539__a,0);
}
return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30538);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and.cljs$lang$maxFixedArity = 2;
bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and;
})()
;
/**
* Bitwise or
* @param {...*} var_args
*/
cljs.core.bit_or = (function() {
var bit_or = null;
var bit_or__2 = (function (x,y){
return (x | y);
});
var bit_or__3 = (function() { 
var G__30540__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or,(x | y),more);
};
var G__30540 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30541__i = 0, G__30541__a = new Array(arguments.length -  2);
while (G__30541__i < G__30541__a.length) {G__30541__a[G__30541__i] = arguments[G__30541__i + 2]; ++G__30541__i;}
  more = new cljs.core.IndexedSeq(G__30541__a,0);
} 
return G__30540__delegate.call(this,x,y,more);};
G__30540.cljs$lang$maxFixedArity = 2;
G__30540.cljs$lang$applyTo = (function (arglist__30542){
var x = cljs.core.first(arglist__30542);
arglist__30542 = cljs.core.next(arglist__30542);
var y = cljs.core.first(arglist__30542);
var more = cljs.core.rest(arglist__30542);
return G__30540__delegate(x,y,more);
});
G__30540.cljs$core$IFn$_invoke$arity$variadic = G__30540__delegate;
return G__30540;
})()
;
bit_or = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_or__2.call(this,x,y);
default:
var G__30543 = null;
if (arguments.length > 2) {
var G__30544__i = 0, G__30544__a = new Array(arguments.length -  2);
while (G__30544__i < G__30544__a.length) {G__30544__a[G__30544__i] = arguments[G__30544__i + 2]; ++G__30544__i;}
G__30543 = new cljs.core.IndexedSeq(G__30544__a,0);
}
return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30543);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_or.cljs$lang$maxFixedArity = 2;
bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_or;
})()
;
/**
* Bitwise and
* @param {...*} var_args
*/
cljs.core.bit_and_not = (function() {
var bit_and_not = null;
var bit_and_not__2 = (function (x,y){
return (x & ~y);
});
var bit_and_not__3 = (function() { 
var G__30545__delegate = function (x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not,(x & ~y),more);
};
var G__30545 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30546__i = 0, G__30546__a = new Array(arguments.length -  2);
while (G__30546__i < G__30546__a.length) {G__30546__a[G__30546__i] = arguments[G__30546__i + 2]; ++G__30546__i;}
  more = new cljs.core.IndexedSeq(G__30546__a,0);
} 
return G__30545__delegate.call(this,x,y,more);};
G__30545.cljs$lang$maxFixedArity = 2;
G__30545.cljs$lang$applyTo = (function (arglist__30547){
var x = cljs.core.first(arglist__30547);
arglist__30547 = cljs.core.next(arglist__30547);
var y = cljs.core.first(arglist__30547);
var more = cljs.core.rest(arglist__30547);
return G__30545__delegate(x,y,more);
});
G__30545.cljs$core$IFn$_invoke$arity$variadic = G__30545__delegate;
return G__30545;
})()
;
bit_and_not = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return bit_and_not__2.call(this,x,y);
default:
var G__30548 = null;
if (arguments.length > 2) {
var G__30549__i = 0, G__30549__a = new Array(arguments.length -  2);
while (G__30549__i < G__30549__a.length) {G__30549__a[G__30549__i] = arguments[G__30549__i + 2]; ++G__30549__i;}
G__30548 = new cljs.core.IndexedSeq(G__30549__a,0);
}
return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30548);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
bit_and_not.cljs$lang$maxFixedArity = 2;
bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
return bit_and_not;
})()
;
/**
* Clear bit at index n
*/
cljs.core.bit_clear = (function bit_clear(x,n){
return (x & ~(1 << n));
});
/**
* Flip bit at index n
*/
cljs.core.bit_flip = (function bit_flip(x,n){
return (x ^ (1 << n));
});
/**
* Bitwise complement
*/
cljs.core.bit_not = (function bit_not(x){
return (~ x);
});
/**
* Set bit at index n
*/
cljs.core.bit_set = (function bit_set(x,n){
return (x | (1 << n));
});
/**
* Test bit at index n
*/
cljs.core.bit_test = (function bit_test(x,n){
return ((x & (1 << n)) != 0);
});
/**
* Bitwise shift left
*/
cljs.core.bit_shift_left = (function bit_shift_left(x,n){
return (x << n);
});
/**
* Bitwise shift right
*/
cljs.core.bit_shift_right = (function bit_shift_right(x,n){
return (x >> n);
});
/**
* DEPRECATED: Bitwise shift right with zero fill
*/
cljs.core.bit_shift_right_zero_fill = (function bit_shift_right_zero_fill(x,n){
return (x >>> n);
});
/**
* Bitwise shift right with zero fill
*/
cljs.core.unsigned_bit_shift_right = (function unsigned_bit_shift_right(x,n){
return (x >>> n);
});
/**
* Counts the number of bits set in n
*/
cljs.core.bit_count = (function bit_count(v){
var v__$1 = (v - ((v >> (1)) & (1431655765)));
var v__$2 = ((v__$1 & (858993459)) + ((v__$1 >> (2)) & (858993459)));
return ((((v__$2 + (v__$2 >> (4))) & (252645135)) * (16843009)) >> (24));
});
/**
* Returns non-nil if nums all have the equivalent
* value, otherwise false. Behavior on non nums is
* undefined.
* @param {...*} var_args
*/
cljs.core._EQ__EQ_ = (function() {
var _EQ__EQ_ = null;
var _EQ__EQ___1 = (function (x){
return true;
});
var _EQ__EQ___2 = (function (x,y){
return cljs.core._equiv(x,y);
});
var _EQ__EQ___3 = (function() { 
var G__30554__delegate = function (x,y,more){
while(true){
if(_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
if(cljs.core.next(more)){
var G__30555 = y;
var G__30556 = cljs.core.first(more);
var G__30557 = cljs.core.next(more);
x = G__30555;
y = G__30556;
more = G__30557;
continue;
} else {
return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y,cljs.core.first(more));
}
} else {
return false;
}
break;
}
};
var G__30554 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__30558__i = 0, G__30558__a = new Array(arguments.length -  2);
while (G__30558__i < G__30558__a.length) {G__30558__a[G__30558__i] = arguments[G__30558__i + 2]; ++G__30558__i;}
  more = new cljs.core.IndexedSeq(G__30558__a,0);
} 
return G__30554__delegate.call(this,x,y,more);};
G__30554.cljs$lang$maxFixedArity = 2;
G__30554.cljs$lang$applyTo = (function (arglist__30559){
var x = cljs.core.first(arglist__30559);
arglist__30559 = cljs.core.next(arglist__30559);
var y = cljs.core.first(arglist__30559);
var more = cljs.core.rest(arglist__30559);
return G__30554__delegate(x,y,more);
});
G__30554.cljs$core$IFn$_invoke$arity$variadic = G__30554__delegate;
return G__30554;
})()
;
_EQ__EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return _EQ__EQ___1.call(this,x);
case 2:
return _EQ__EQ___2.call(this,x,y);
default:
var G__30560 = null;
if (arguments.length > 2) {
var G__30561__i = 0, G__30561__a = new Array(arguments.length -  2);
while (G__30561__i < G__30561__a.length) {G__30561__a[G__30561__i] = arguments[G__30561__i + 2]; ++G__30561__i;}
G__30560 = new cljs.core.IndexedSeq(G__30561__a,0);
}
return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30560);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
_EQ__EQ_.cljs$lang$maxFixedArity = 2;
_EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
_EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return _EQ__EQ_;
})()
;
/**
* Returns true if num is greater than zero, else false
*/
cljs.core.pos_QMARK_ = (function pos_QMARK_(n){
return (n > (0));
});
cljs.core.zero_QMARK_ = (function zero_QMARK_(n){
return (n === (0));
});
/**
* Returns true if num is less than zero, else false
*/
cljs.core.neg_QMARK_ = (function neg_QMARK_(x){
return (x < (0));
});
/**
* Returns the nth next of coll, (seq coll) when n is 0.
*/
cljs.core.nthnext = (function nthnext(coll,n){
var n__$1 = n;
var xs = cljs.core.seq(coll);
while(true){
if((xs) && ((n__$1 > (0)))){
var G__30562 = (n__$1 - (1));
var G__30563 = cljs.core.next(xs);
n__$1 = G__30562;
xs = G__30563;
continue;
} else {
return xs;
}
break;
}
});
/**
* With no args, returns the empty string. With one arg x, returns
* x.toString().  (str nil) returns the empty string. With more than
* one arg, returns the concatenation of the str values of the args.
* @param {...*} var_args
*/
cljs.core.str = (function() {
var str = null;
var str__0 = (function (){
return "";
});
var str__1 = (function (x){
if((x == null)){
return "";
} else {
var G__30567 = x;
return goog.string.buildString(G__30567);
}
});
var str__2 = (function() { 
var G__30568__delegate = function (x,ys){
var sb = (new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x)));
var more = ys;
while(true){
if(cljs.core.truth_(more)){
var G__30569 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
var G__30570 = cljs.core.next(more);
sb = G__30569;
more = G__30570;
continue;
} else {
return sb.toString();
}
break;
}
};
var G__30568 = function (x,var_args){
var ys = null;
if (arguments.length > 1) {
var G__30571__i = 0, G__30571__a = new Array(arguments.length -  1);
while (G__30571__i < G__30571__a.length) {G__30571__a[G__30571__i] = arguments[G__30571__i + 1]; ++G__30571__i;}
  ys = new cljs.core.IndexedSeq(G__30571__a,0);
} 
return G__30568__delegate.call(this,x,ys);};
G__30568.cljs$lang$maxFixedArity = 1;
G__30568.cljs$lang$applyTo = (function (arglist__30572){
var x = cljs.core.first(arglist__30572);
var ys = cljs.core.rest(arglist__30572);
return G__30568__delegate(x,ys);
});
G__30568.cljs$core$IFn$_invoke$arity$variadic = G__30568__delegate;
return G__30568;
})()
;
str = function(x,var_args){
var ys = var_args;
switch(arguments.length){
case 0:
return str__0.call(this);
case 1:
return str__1.call(this,x);
default:
var G__30573 = null;
if (arguments.length > 1) {
var G__30574__i = 0, G__30574__a = new Array(arguments.length -  1);
while (G__30574__i < G__30574__a.length) {G__30574__a[G__30574__i] = arguments[G__30574__i + 1]; ++G__30574__i;}
G__30573 = new cljs.core.IndexedSeq(G__30574__a,0);
}
return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__30573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
str.cljs$lang$maxFixedArity = 1;
str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
str.cljs$core$IFn$_invoke$arity$0 = str__0;
str.cljs$core$IFn$_invoke$arity$1 = str__1;
str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
return str;
})()
;
/**
* Returns the substring of s beginning at start inclusive, and ending
* at end (defaults to length of string), exclusive.
*/
cljs.core.subs = (function() {
var subs = null;
var subs__2 = (function (s,start){
return s.substring(start);
});
var subs__3 = (function (s,start,end){
return s.substring(start,end);
});
subs = function(s,start,end){
switch(arguments.length){
case 2:
return subs__2.call(this,s,start);
case 3:
return subs__3.call(this,s,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
return subs;
})()
;

/**
* Assumes x is sequential. Returns true if x equals y, otherwise
* returns false.
*/
cljs.core.equiv_sequential = (function equiv_sequential(x,y){
return cljs.core.boolean$(((cljs.core.sequential_QMARK_(y))?(((cljs.core.counted_QMARK_(x)) && (cljs.core.counted_QMARK_(y)) && (!((cljs.core.count(x) === cljs.core.count(y)))))?false:(function (){var xs = cljs.core.seq(x);
var ys = cljs.core.seq(y);
while(true){
if((xs == null)){
return (ys == null);
} else {
if((ys == null)){
return false;
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs),cljs.core.first(ys))){
var G__30575 = cljs.core.next(xs);
var G__30576 = cljs.core.next(ys);
xs = G__30575;
ys = G__30576;
continue;
} else {
return false;

}
}
}
break;
}
})()):null));
});
cljs.core.hash_coll = (function hash_coll(coll){
if(cljs.core.seq(coll)){
var res = cljs.core.hash(cljs.core.first(coll));
var s = cljs.core.next(coll);
while(true){
if((s == null)){
return res;
} else {
var G__30577 = cljs.core.hash_combine(res,cljs.core.hash(cljs.core.first(s)));
var G__30578 = cljs.core.next(s);
res = G__30577;
s = G__30578;
continue;
}
break;
}
} else {
return (0);
}
});

cljs.core.hash_imap = (function hash_imap(m){
var h = (0);
var s = cljs.core.seq(m);
while(true){
if(s){
var e = cljs.core.first(s);
var G__30583 = ((h + (cljs.core.hash((function (){var G__30581 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__30581) : cljs.core.key.call(null,G__30581));
})()) ^ cljs.core.hash((function (){var G__30582 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__30582) : cljs.core.val.call(null,G__30582));
})()))) % (4503599627370496));
var G__30584 = cljs.core.next(s);
h = G__30583;
s = G__30584;
continue;
} else {
return h;
}
break;
}
});
cljs.core.hash_iset = (function hash_iset(s){
var h = (0);
var s__$1 = cljs.core.seq(s);
while(true){
if(s__$1){
var e = cljs.core.first(s__$1);
var G__30585 = ((h + cljs.core.hash(e)) % (4503599627370496));
var G__30586 = cljs.core.next(s__$1);
h = G__30585;
s__$1 = G__30586;
continue;
} else {
return h;
}
break;
}
});


/**
* Takes a JavaScript object and a map of names to functions and
* attaches said functions as methods on the object.  Any references to
* JavaScript's implicit this (via the this-as macro) will resolve to the
* object that the function is attached.
*/
cljs.core.extend_object_BANG_ = (function extend_object_BANG_(obj,fn_map){
var seq__30597_30607 = cljs.core.seq(fn_map);
var chunk__30598_30608 = null;
var count__30599_30609 = (0);
var i__30600_30610 = (0);
while(true){
if((i__30600_30610 < count__30599_30609)){
var vec__30601_30611 = chunk__30598_30608.cljs$core$IIndexed$_nth$arity$2(null,i__30600_30610);
var key_name_30612 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30601_30611,(0),null);
var f_30613 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30601_30611,(1),null);
var str_name_30614 = (function (){var G__30602 = key_name_30612;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__30602) : cljs.core.name.call(null,G__30602));
})();
(obj[str_name_30614] = f_30613);

var G__30615 = seq__30597_30607;
var G__30616 = chunk__30598_30608;
var G__30617 = count__30599_30609;
var G__30618 = (i__30600_30610 + (1));
seq__30597_30607 = G__30615;
chunk__30598_30608 = G__30616;
count__30599_30609 = G__30617;
i__30600_30610 = G__30618;
continue;
} else {
var temp__4126__auto___30619 = cljs.core.seq(seq__30597_30607);
if(temp__4126__auto___30619){
var seq__30597_30620__$1 = temp__4126__auto___30619;
if(cljs.core.chunked_seq_QMARK_(seq__30597_30620__$1)){
var c__23751__auto___30621 = (function (){var G__30603 = seq__30597_30620__$1;
return (cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__30603) : cljs.core.chunk_first.call(null,G__30603));
})();
var G__30622 = (function (){var G__30604 = seq__30597_30620__$1;
return (cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__30604) : cljs.core.chunk_rest.call(null,G__30604));
})();
var G__30623 = c__23751__auto___30621;
var G__30624 = cljs.core.count(c__23751__auto___30621);
var G__30625 = (0);
seq__30597_30607 = G__30622;
chunk__30598_30608 = G__30623;
count__30599_30609 = G__30624;
i__30600_30610 = G__30625;
continue;
} else {
var vec__30605_30626 = cljs.core.first(seq__30597_30620__$1);
var key_name_30627 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30605_30626,(0),null);
var f_30628 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__30605_30626,(1),null);
var str_name_30629 = (function (){var G__30606 = key_name_30627;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__30606) : cljs.core.name.call(null,G__30606));
})();
(obj[str_name_30629] = f_30628);

var G__30630 = cljs.core.next(seq__30597_30620__$1);
var G__30631 = null;
var G__30632 = (0);
var G__30633 = (0);
seq__30597_30607 = G__30630;
chunk__30598_30608 = G__30631;
count__30599_30609 = G__30632;
i__30600_30610 = G__30633;
continue;
}
} else {
}
}
break;
}

return obj;
});

/**
* @constructor
*/
cljs.core.List = (function (meta,first,rest,count,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.count = count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65937646;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.List.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.List.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.List(self__.meta,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return null;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._rest(coll__$1);
});

cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.count === (1))){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(meta__$1,self__.first,self__.rest,self__.count,self__.__hash));
});

cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,coll__$1,(self__.count + (1)),null));
});

cljs.core.List.cljs$lang$type = true;

cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";

cljs.core.List.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/List");
});

cljs.core.__GT_List = (function __GT_List(meta,first,rest,count,__hash){
return (new cljs.core.List(meta,first,rest,count,__hash));
});

(cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));

/**
* @constructor
*/
cljs.core.EmptyList = (function (meta){
this.meta = meta;
this.cljs$lang$protocol_mask$partition0$ = 65937614;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.EmptyList.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.EmptyList.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.EmptyList(self__.meta));
});

cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (0);
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
throw (new Error("Can't pop empty list"));
});

cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.empty_ordered_hash;
});

cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return null;
});

cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.EmptyList(meta__$1));
});

cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.List(self__.meta,o,null,(1),null));
});

cljs.core.EmptyList.cljs$lang$type = true;

cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";

cljs.core.EmptyList.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/EmptyList");
});

cljs.core.__GT_EmptyList = (function __GT_EmptyList(meta){
return (new cljs.core.EmptyList(meta));
});

cljs.core.List.EMPTY = (new cljs.core.EmptyList(null));
(cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.reversible_QMARK_ = (function reversible_QMARK_(coll){
var G__30635 = coll;
if(G__30635){
var bit__23645__auto__ = (G__30635.cljs$lang$protocol_mask$partition0$ & (134217728));
if((bit__23645__auto__) || (G__30635.cljs$core$IReversible$)){
return true;
} else {
if((!G__30635.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__30635);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible,G__30635);
}
});
cljs.core.rseq = (function rseq(coll){
return cljs.core._rseq(coll);
});
/**
* Returns a seq of the items in coll in reverse order. Not lazy.
*/
cljs.core.reverse = (function reverse(coll){
if(cljs.core.reversible_QMARK_(coll)){
return cljs.core.rseq(coll);
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,coll);
}
});
/**
* @param {...*} var_args
*/
cljs.core.list = (function() { 
var list__delegate = function (xs){
var arr = ((((xs instanceof cljs.core.IndexedSeq)) && ((xs.i === (0))))?xs.arr:(function (){var arr = [];
var xs__$1 = xs;
while(true){
if(!((xs__$1 == null))){
arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));

var G__30636 = xs__$1.cljs$core$INext$_next$arity$1(null);
xs__$1 = G__30636;
continue;
} else {
return arr;
}
break;
}
})());
var i = arr.length;
var r = cljs.core.List.EMPTY;
while(true){
if((i > (0))){
var G__30637 = (i - (1));
var G__30638 = r.cljs$core$ICollection$_conj$arity$2(null,(arr[(i - (1))]));
i = G__30637;
r = G__30638;
continue;
} else {
return r;
}
break;
}
};
var list = function (var_args){
var xs = null;
if (arguments.length > 0) {
var G__30639__i = 0, G__30639__a = new Array(arguments.length -  0);
while (G__30639__i < G__30639__a.length) {G__30639__a[G__30639__i] = arguments[G__30639__i + 0]; ++G__30639__i;}
  xs = new cljs.core.IndexedSeq(G__30639__a,0);
} 
return list__delegate.call(this,xs);};
list.cljs$lang$maxFixedArity = 0;
list.cljs$lang$applyTo = (function (arglist__30640){
var xs = cljs.core.seq(arglist__30640);
return list__delegate(xs);
});
list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
return list;
})()
;

/**
* @constructor
*/
cljs.core.Cons = (function (meta,first,rest,__hash){
this.meta = meta;
this.first = first;
this.rest = rest;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 65929452;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Cons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Cons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Cons(self__.meta,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return null;
} else {
return cljs.core.seq(self__.rest);
}
});

cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.first;
});

cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(meta__$1,self__.first,self__.rest,self__.__hash));
});

cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.Cons(null,o,coll__$1,self__.__hash));
});

cljs.core.Cons.cljs$lang$type = true;

cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";

cljs.core.Cons.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Cons");
});

cljs.core.__GT_Cons = (function __GT_Cons(meta,first,rest,__hash){
return (new cljs.core.Cons(meta,first,rest,__hash));
});

(cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
/**
* Returns a new seq where x is the first element and seq is the rest.
*/
cljs.core.cons = (function cons(x,coll){
if((function (){var or__22964__auto__ = (coll == null);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var G__30644 = coll;
if(G__30644){
var bit__23638__auto__ = (G__30644.cljs$lang$protocol_mask$partition0$ & (64));
if((bit__23638__auto__) || (G__30644.cljs$core$ISeq$)){
return true;
} else {
return false;
}
} else {
return false;
}
}
})()){
return (new cljs.core.Cons(null,x,coll,null));
} else {
return (new cljs.core.Cons(null,x,cljs.core.seq(coll),null));
}
});
cljs.core.list_QMARK_ = (function list_QMARK_(x){
var G__30646 = x;
if(G__30646){
var bit__23645__auto__ = (G__30646.cljs$lang$protocol_mask$partition0$ & (33554432));
if((bit__23645__auto__) || (G__30646.cljs$core$IList$)){
return true;
} else {
if((!G__30646.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__30646);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IList,G__30646);
}
});
cljs.core.hash_keyword = (function hash_keyword(k){
return ((cljs.core.hash_symbol(k) + (2654435769)) | (0));
});
cljs.core.compare_keywords = (function compare_keywords(a,b){
if((a.fqn === b.fqn)){
return (0);
} else {
if(cljs.core.truth_((function (){var and__22952__auto__ = cljs.core.not(a.ns);
if(and__22952__auto__){
return b.ns;
} else {
return and__22952__auto__;
}
})())){
return (-1);
} else {
if(cljs.core.truth_(a.ns)){
if(cljs.core.not(b.ns)){
return (1);
} else {
var nsc = (function (){var G__30653 = a.ns;
var G__30654 = b.ns;
return goog.array.defaultCompare(G__30653,G__30654);
})();
if(((0) === nsc)){
var G__30655 = a.name;
var G__30656 = b.name;
return goog.array.defaultCompare(G__30655,G__30656);
} else {
return nsc;
}
}
} else {
var G__30657 = a.name;
var G__30658 = b.name;
return goog.array.defaultCompare(G__30657,G__30658);

}
}
}
});

/**
* @constructor
*/
cljs.core.Keyword = (function (ns,name,fqn,_hash){
this.ns = ns;
this.name = name;
this.fqn = fqn;
this._hash = _hash;
this.cljs$lang$protocol_mask$partition0$ = 2153775105;
this.cljs$lang$protocol_mask$partition1$ = 4096;
})
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (o,writer,_){
var self__ = this;
var o__$1 = this;
return cljs.core._write(writer,[cljs.core.str(":"),cljs.core.str(self__.fqn)].join(''));
});

cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.name;
});

cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.ns;
});

cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var h__23385__auto__ = self__._hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_keyword(this$__$1);
self__._hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.Keyword.prototype.call = (function() {
var G__30660 = null;
var G__30660__2 = (function (self__,coll){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});
var G__30660__3 = (function (self__,coll,not_found){
var self__ = this;
var self____$1 = this;
var kw = self____$1;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});
G__30660 = function(self__,coll,not_found){
switch(arguments.length){
case 2:
return G__30660__2.call(this,self__,coll);
case 3:
return G__30660__3.call(this,self__,coll,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__30660.cljs$core$IFn$_invoke$arity$2 = G__30660__2;
G__30660.cljs$core$IFn$_invoke$arity$3 = G__30660__3;
return G__30660;
})()
;

cljs.core.Keyword.prototype.apply = (function (self__,args30659){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args30659)));
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = (function (coll){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll,kw);
});

cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = (function (coll,not_found){
var self__ = this;
var kw = this;
return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll,kw,not_found);
});

cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
if((other instanceof cljs.core.Keyword)){
return (self__.fqn === other.fqn);
} else {
return false;
}
});

cljs.core.Keyword.prototype.toString = (function (){
var self__ = this;
var _ = this;
return [cljs.core.str(":"),cljs.core.str(self__.fqn)].join('');
});

cljs.core.Keyword.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Keyword.cljs$lang$type = true;

cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";

cljs.core.Keyword.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Keyword");
});

cljs.core.__GT_Keyword = (function __GT_Keyword(ns,name,fqn,_hash){
return (new cljs.core.Keyword(ns,name,fqn,_hash));
});

cljs.core.keyword_QMARK_ = (function keyword_QMARK_(x){
return (x instanceof cljs.core.Keyword);
});
cljs.core.keyword_identical_QMARK_ = (function keyword_identical_QMARK_(x,y){
if((x === y)){
return true;
} else {
if(((x instanceof cljs.core.Keyword)) && ((y instanceof cljs.core.Keyword))){
return (x.fqn === y.fqn);
} else {
return false;
}
}
});
/**
* Returns the namespace String of a symbol or keyword, or nil if not present.
*/
cljs.core.namespace = (function namespace(x){
if((function (){var G__30662 = x;
if(G__30662){
var bit__23638__auto__ = (G__30662.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__23638__auto__) || (G__30662.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_namespace$arity$1(null);
} else {
throw (new Error([cljs.core.str("Doesn't support namespace: "),cljs.core.str(x)].join('')));
}
});
/**
* Returns a Keyword with the given namespace and name.  Do not use :
* in the keyword strings, it will be added automatically.
*/
cljs.core.keyword = (function() {
var keyword = null;
var keyword__1 = (function (name){
if((name instanceof cljs.core.Keyword)){
return name;
} else {
if((name instanceof cljs.core.Symbol)){
return (new cljs.core.Keyword(cljs.core.namespace(name),(function (){var G__30664 = name;
return (cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__30664) : cljs.core.name.call(null,G__30664));
})(),name.str,null));
} else {
if(typeof name === 'string'){
var parts = name.split("/");
if((parts.length === (2))){
return (new cljs.core.Keyword((parts[(0)]),(parts[(1)]),name,null));
} else {
return (new cljs.core.Keyword(null,(parts[(0)]),name,null));
}
} else {
return null;
}
}
}
});
var keyword__2 = (function (ns,name){
return (new cljs.core.Keyword(ns,name,[cljs.core.str((cljs.core.truth_(ns)?[cljs.core.str(ns),cljs.core.str("/")].join(''):null)),cljs.core.str(name)].join(''),null));
});
keyword = function(ns,name){
switch(arguments.length){
case 1:
return keyword__1.call(this,ns);
case 2:
return keyword__2.call(this,ns,name);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
return keyword;
})()
;

/**
* @constructor
*/
cljs.core.LazySeq = (function (meta,fn,s,__hash){
this.meta = meta;
this.fn = fn;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.LazySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.LazySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.LazySeq.prototype.sval = (function (){
var self__ = this;
var coll = this;
if((self__.fn == null)){
return self__.s;
} else {
self__.s = (function (){return (self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null));
})();

self__.fn = null;

return self__.s;
}
});

cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.next(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if((self__.s == null)){
return null;
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
cljs.core._seq(coll__$1);

if(!((self__.s == null))){
return cljs.core.rest(self__.s);
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
coll__$1.sval();

if((self__.s == null)){
return null;
} else {
var ls = self__.s;
while(true){
if((ls instanceof cljs.core.LazySeq)){
var G__30665 = ls.sval();
ls = G__30665;
continue;
} else {
self__.s = ls;

return cljs.core.seq(self__.s);
}
break;
}
}
});

cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.LazySeq(meta__$1,self__.fn,self__.s,self__.__hash));
});

cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.LazySeq.cljs$lang$type = true;

cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";

cljs.core.LazySeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/LazySeq");
});

cljs.core.__GT_LazySeq = (function __GT_LazySeq(meta,fn,s,__hash){
return (new cljs.core.LazySeq(meta,fn,s,__hash));
});

(cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));

/**
* @constructor
*/
cljs.core.ChunkBuffer = (function (buf,end){
this.buf = buf;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2;
})
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.end;
});

cljs.core.ChunkBuffer.prototype.add = (function (o){
var self__ = this;
var _ = this;
(self__.buf[self__.end] = o);

return self__.end = (self__.end + (1));
});

cljs.core.ChunkBuffer.prototype.chunk = (function (o){
var self__ = this;
var _ = this;
var ret = (new cljs.core.ArrayChunk(self__.buf,(0),self__.end));
self__.buf = null;

return ret;
});

cljs.core.ChunkBuffer.cljs$lang$type = true;

cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";

cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ChunkBuffer");
});

cljs.core.__GT_ChunkBuffer = (function __GT_ChunkBuffer(buf,end){
return (new cljs.core.ChunkBuffer(buf,end));
});

cljs.core.chunk_buffer = (function chunk_buffer(capacity){
return (new cljs.core.ChunkBuffer((new Array(capacity)),(0)));
});

/**
* @constructor
*/
cljs.core.ArrayChunk = (function (arr,off,end){
this.arr = arr;
this.off = off;
this.end = end;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 524306;
})
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,(self__.arr[self__.off]),(self__.off + (1)));
});

cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr,f,start,self__.off);
});

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;

cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.off === self__.end)){
throw (new Error("-drop-first of empty chunk"));
} else {
return (new cljs.core.ArrayChunk(self__.arr,(self__.off + (1)),self__.end));
}
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,i){
var self__ = this;
var coll__$1 = this;
return (self__.arr[(self__.off + i)]);
});

cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,i,not_found){
var self__ = this;
var coll__$1 = this;
if(((i >= (0))) && ((i < (self__.end - self__.off)))){
return (self__.arr[(self__.off + i)]);
} else {
return not_found;
}
});

cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (self__.end - self__.off);
});

cljs.core.ArrayChunk.cljs$lang$type = true;

cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";

cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ArrayChunk");
});

cljs.core.__GT_ArrayChunk = (function __GT_ArrayChunk(arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});

cljs.core.array_chunk = (function() {
var array_chunk = null;
var array_chunk__1 = (function (arr){
return (new cljs.core.ArrayChunk(arr,(0),arr.length));
});
var array_chunk__2 = (function (arr,off){
return (new cljs.core.ArrayChunk(arr,off,arr.length));
});
var array_chunk__3 = (function (arr,off,end){
return (new cljs.core.ArrayChunk(arr,off,end));
});
array_chunk = function(arr,off,end){
switch(arguments.length){
case 1:
return array_chunk__1.call(this,arr);
case 2:
return array_chunk__2.call(this,arr,off);
case 3:
return array_chunk__3.call(this,arr,off,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
return array_chunk;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedCons = (function (chunk,more,meta,__hash){
this.chunk = chunk;
this.more = more;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31850732;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedCons.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedCons.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
var more__$1 = cljs.core._seq(self__.more);
if((more__$1 == null)){
return null;
} else {
return more__$1;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk,(0));
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core._count(self__.chunk) > (1))){
return (new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk),self__.more,self__.meta,null));
} else {
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
}
});

cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.chunk;
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return cljs.core.List.EMPTY;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ChunkedCons(self__.chunk,self__.more,m,self__.__hash));
});

cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,this$__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.more == null)){
return null;
} else {
return self__.more;
}
});

cljs.core.ChunkedCons.cljs$lang$type = true;

cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";

cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ChunkedCons");
});

cljs.core.__GT_ChunkedCons = (function __GT_ChunkedCons(chunk,more,meta,__hash){
return (new cljs.core.ChunkedCons(chunk,more,meta,__hash));
});

(cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.chunk_cons = (function chunk_cons(chunk,rest){
if((cljs.core._count(chunk) === (0))){
return rest;
} else {
return (new cljs.core.ChunkedCons(chunk,rest,null,null));
}
});
cljs.core.chunk_append = (function chunk_append(b,x){
return b.add(x);
});
cljs.core.chunk = (function chunk(b){
return b.chunk();
});
cljs.core.chunk_first = (function chunk_first(s){
return cljs.core._chunked_first(s);
});
cljs.core.chunk_rest = (function chunk_rest(s){
return cljs.core._chunked_rest(s);
});
cljs.core.chunk_next = (function chunk_next(s){
if((function (){var G__30667 = s;
if(G__30667){
var bit__23638__auto__ = (G__30667.cljs$lang$protocol_mask$partition1$ & (1024));
if((bit__23638__auto__) || (G__30667.cljs$core$IChunkedNext$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core._chunked_next(s);
} else {
return cljs.core.seq(cljs.core._chunked_rest(s));
}
});
/**
* Naive impl of to-array as a start.
*/
cljs.core.to_array = (function to_array(s){
var ary = [];
var s__$1 = s;
while(true){
if(cljs.core.seq(s__$1)){
ary.push(cljs.core.first(s__$1));

var G__30668 = cljs.core.next(s__$1);
s__$1 = G__30668;
continue;
} else {
return ary;
}
break;
}
});
/**
* Returns a (potentially-ragged) 2-dimensional array
* containing the contents of coll.
*/
cljs.core.to_array_2d = (function to_array_2d(coll){
var ret = (new Array(cljs.core.count(coll)));
var i_30669 = (0);
var xs_30670 = cljs.core.seq(coll);
while(true){
if(xs_30670){
(ret[i_30669] = cljs.core.to_array(cljs.core.first(xs_30670)));

var G__30671 = (i_30669 + (1));
var G__30672 = cljs.core.next(xs_30670);
i_30669 = G__30671;
xs_30670 = G__30672;
continue;
} else {
}
break;
}

return ret;
});
cljs.core.int_array = (function() {
var int_array = null;
var int_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var int_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__30675 = (i + (1));
var G__30676 = cljs.core.next(s__$1);
i = G__30675;
s__$1 = G__30676;
continue;
} else {
return a;
}
break;
}
} else {
var n__23851__auto___30677 = size;
var i_30678 = (0);
while(true){
if((i_30678 < n__23851__auto___30677)){
(a[i_30678] = init_val_or_seq);

var G__30679 = (i_30678 + (1));
i_30678 = G__30679;
continue;
} else {
}
break;
}

return a;
}
});
int_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return int_array__1.call(this,size);
case 2:
return int_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
return int_array;
})()
;
cljs.core.long_array = (function() {
var long_array = null;
var long_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var long_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__30682 = (i + (1));
var G__30683 = cljs.core.next(s__$1);
i = G__30682;
s__$1 = G__30683;
continue;
} else {
return a;
}
break;
}
} else {
var n__23851__auto___30684 = size;
var i_30685 = (0);
while(true){
if((i_30685 < n__23851__auto___30684)){
(a[i_30685] = init_val_or_seq);

var G__30686 = (i_30685 + (1));
i_30685 = G__30686;
continue;
} else {
}
break;
}

return a;
}
});
long_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return long_array__1.call(this,size);
case 2:
return long_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
return long_array;
})()
;
cljs.core.double_array = (function() {
var double_array = null;
var double_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var double_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__30689 = (i + (1));
var G__30690 = cljs.core.next(s__$1);
i = G__30689;
s__$1 = G__30690;
continue;
} else {
return a;
}
break;
}
} else {
var n__23851__auto___30691 = size;
var i_30692 = (0);
while(true){
if((i_30692 < n__23851__auto___30691)){
(a[i_30692] = init_val_or_seq);

var G__30693 = (i_30692 + (1));
i_30692 = G__30693;
continue;
} else {
}
break;
}

return a;
}
});
double_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return double_array__1.call(this,size);
case 2:
return double_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
return double_array;
})()
;
cljs.core.object_array = (function() {
var object_array = null;
var object_array__1 = (function (size_or_seq){
if(typeof size_or_seq === 'number'){
return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq,null);
} else {
return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
}
});
var object_array__2 = (function (size,init_val_or_seq){
var a = (new Array(size));
if(cljs.core.seq_QMARK_(init_val_or_seq)){
var s = cljs.core.seq(init_val_or_seq);
var i = (0);
var s__$1 = s;
while(true){
if((s__$1) && ((i < size))){
(a[i] = cljs.core.first(s__$1));

var G__30696 = (i + (1));
var G__30697 = cljs.core.next(s__$1);
i = G__30696;
s__$1 = G__30697;
continue;
} else {
return a;
}
break;
}
} else {
var n__23851__auto___30698 = size;
var i_30699 = (0);
while(true){
if((i_30699 < n__23851__auto___30698)){
(a[i_30699] = init_val_or_seq);

var G__30700 = (i_30699 + (1));
i_30699 = G__30700;
continue;
} else {
}
break;
}

return a;
}
});
object_array = function(size,init_val_or_seq){
switch(arguments.length){
case 1:
return object_array__1.call(this,size);
case 2:
return object_array__2.call(this,size,init_val_or_seq);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
return object_array;
})()
;
cljs.core.bounded_count = (function bounded_count(s,n){
if(cljs.core.counted_QMARK_(s)){
return cljs.core.count(s);
} else {
var s__$1 = s;
var i = n;
var sum = (0);
while(true){
if(((i > (0))) && (cljs.core.seq(s__$1))){
var G__30701 = cljs.core.next(s__$1);
var G__30702 = (i - (1));
var G__30703 = (sum + (1));
s__$1 = G__30701;
i = G__30702;
sum = G__30703;
continue;
} else {
return sum;
}
break;
}
}
});
cljs.core.spread = (function spread(arglist){
if((arglist == null)){
return null;
} else {
if((cljs.core.next(arglist) == null)){
return cljs.core.seq(cljs.core.first(arglist));
} else {
return cljs.core.cons(cljs.core.first(arglist),spread(cljs.core.next(arglist)));

}
}
});
/**
* Returns a lazy seq representing the concatenation of the elements in the supplied colls.
* @param {...*} var_args
*/
cljs.core.concat = (function() {
var concat = null;
var concat__0 = (function (){
return (new cljs.core.LazySeq(null,(function (){
return null;
}),null,null));
});
var concat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return x;
}),null,null));
});
var concat__2 = (function (x,y){
return (new cljs.core.LazySeq(null,(function (){
var s = cljs.core.seq(x);
if(s){
if(cljs.core.chunked_seq_QMARK_(s)){
return cljs.core.chunk_cons(cljs.core.chunk_first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s),y));
} else {
return cljs.core.cons(cljs.core.first(s),concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s),y));
}
} else {
return y;
}
}),null,null));
});
var concat__3 = (function() { 
var G__30723__delegate = function (x,y,zs){
var cat = (function cat(xys,zs__$1){
return (new cljs.core.LazySeq(null,(function (){
var xys__$1 = cljs.core.seq(xys);
if(xys__$1){
if(cljs.core.chunked_seq_QMARK_(xys__$1)){
return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1),cat(cljs.core.chunk_rest(xys__$1),zs__$1));
} else {
return cljs.core.cons(cljs.core.first(xys__$1),cat(cljs.core.rest(xys__$1),zs__$1));
}
} else {
if(cljs.core.truth_(zs__$1)){
return cat(cljs.core.first(zs__$1),cljs.core.next(zs__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(concat.cljs$core$IFn$_invoke$arity$2(x,y),zs);
};
var G__30723 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__30724__i = 0, G__30724__a = new Array(arguments.length -  2);
while (G__30724__i < G__30724__a.length) {G__30724__a[G__30724__i] = arguments[G__30724__i + 2]; ++G__30724__i;}
  zs = new cljs.core.IndexedSeq(G__30724__a,0);
} 
return G__30723__delegate.call(this,x,y,zs);};
G__30723.cljs$lang$maxFixedArity = 2;
G__30723.cljs$lang$applyTo = (function (arglist__30725){
var x = cljs.core.first(arglist__30725);
arglist__30725 = cljs.core.next(arglist__30725);
var y = cljs.core.first(arglist__30725);
var zs = cljs.core.rest(arglist__30725);
return G__30723__delegate(x,y,zs);
});
G__30723.cljs$core$IFn$_invoke$arity$variadic = G__30723__delegate;
return G__30723;
})()
;
concat = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return concat__0.call(this);
case 1:
return concat__1.call(this,x);
case 2:
return concat__2.call(this,x,y);
default:
var G__30726 = null;
if (arguments.length > 2) {
var G__30727__i = 0, G__30727__a = new Array(arguments.length -  2);
while (G__30727__i < G__30727__a.length) {G__30727__a[G__30727__i] = arguments[G__30727__i + 2]; ++G__30727__i;}
G__30726 = new cljs.core.IndexedSeq(G__30727__a,0);
}
return concat__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__30726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
concat.cljs$lang$maxFixedArity = 2;
concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
return concat;
})()
;
/**
* Creates a new list containing the items prepended to the rest, the
* last of which will be treated as a sequence.
* @param {...*} var_args
*/
cljs.core.list_STAR_ = (function() {
var list_STAR_ = null;
var list_STAR___1 = (function (args){
return cljs.core.seq(args);
});
var list_STAR___2 = (function (a,args){
return cljs.core.cons(a,args);
});
var list_STAR___3 = (function (a,b,args){
return cljs.core.cons(a,cljs.core.cons(b,args));
});
var list_STAR___4 = (function (a,b,c,args){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,args)));
});
var list_STAR___5 = (function() { 
var G__30728__delegate = function (a,b,c,d,more){
return cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(more)))));
};
var G__30728 = function (a,b,c,d,var_args){
var more = null;
if (arguments.length > 4) {
var G__30729__i = 0, G__30729__a = new Array(arguments.length -  4);
while (G__30729__i < G__30729__a.length) {G__30729__a[G__30729__i] = arguments[G__30729__i + 4]; ++G__30729__i;}
  more = new cljs.core.IndexedSeq(G__30729__a,0);
} 
return G__30728__delegate.call(this,a,b,c,d,more);};
G__30728.cljs$lang$maxFixedArity = 4;
G__30728.cljs$lang$applyTo = (function (arglist__30730){
var a = cljs.core.first(arglist__30730);
arglist__30730 = cljs.core.next(arglist__30730);
var b = cljs.core.first(arglist__30730);
arglist__30730 = cljs.core.next(arglist__30730);
var c = cljs.core.first(arglist__30730);
arglist__30730 = cljs.core.next(arglist__30730);
var d = cljs.core.first(arglist__30730);
var more = cljs.core.rest(arglist__30730);
return G__30728__delegate(a,b,c,d,more);
});
G__30728.cljs$core$IFn$_invoke$arity$variadic = G__30728__delegate;
return G__30728;
})()
;
list_STAR_ = function(a,b,c,d,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return list_STAR___1.call(this,a);
case 2:
return list_STAR___2.call(this,a,b);
case 3:
return list_STAR___3.call(this,a,b,c);
case 4:
return list_STAR___4.call(this,a,b,c,d);
default:
var G__30731 = null;
if (arguments.length > 4) {
var G__30732__i = 0, G__30732__a = new Array(arguments.length -  4);
while (G__30732__i < G__30732__a.length) {G__30732__a[G__30732__i] = arguments[G__30732__i + 4]; ++G__30732__i;}
G__30731 = new cljs.core.IndexedSeq(G__30732__a,0);
}
return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a,b,c,d, G__30731);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
list_STAR_.cljs$lang$maxFixedArity = 4;
list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
return list_STAR_;
})()
;
/**
* Returns a new, transient version of the collection, in constant time.
*/
cljs.core.transient$ = (function transient$(coll){
return cljs.core._as_transient(coll);
});
/**
* Returns a new, persistent version of the transient collection, in
* constant time. The transient collection cannot be used after this
* call, any such use will throw an exception.
*/
cljs.core.persistent_BANG_ = (function persistent_BANG_(tcoll){
return cljs.core._persistent_BANG_(tcoll);
});
/**
* Adds x to the transient collection, and return coll. The 'addition'
* may happen at different 'places' depending on the concrete type.
* @param {...*} var_args
*/
cljs.core.conj_BANG_ = (function() {
var conj_BANG_ = null;
var conj_BANG___0 = (function (){
return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
});
var conj_BANG___1 = (function (coll){
return coll;
});
var conj_BANG___2 = (function (tcoll,val){
return cljs.core._conj_BANG_(tcoll,val);
});
var conj_BANG___3 = (function() { 
var G__30733__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._conj_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__30734 = ntcoll;
var G__30735 = cljs.core.first(vals);
var G__30736 = cljs.core.next(vals);
tcoll = G__30734;
val = G__30735;
vals = G__30736;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__30733 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__30737__i = 0, G__30737__a = new Array(arguments.length -  2);
while (G__30737__i < G__30737__a.length) {G__30737__a[G__30737__i] = arguments[G__30737__i + 2]; ++G__30737__i;}
  vals = new cljs.core.IndexedSeq(G__30737__a,0);
} 
return G__30733__delegate.call(this,tcoll,val,vals);};
G__30733.cljs$lang$maxFixedArity = 2;
G__30733.cljs$lang$applyTo = (function (arglist__30738){
var tcoll = cljs.core.first(arglist__30738);
arglist__30738 = cljs.core.next(arglist__30738);
var val = cljs.core.first(arglist__30738);
var vals = cljs.core.rest(arglist__30738);
return G__30733__delegate(tcoll,val,vals);
});
G__30733.cljs$core$IFn$_invoke$arity$variadic = G__30733__delegate;
return G__30733;
})()
;
conj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 0:
return conj_BANG___0.call(this);
case 1:
return conj_BANG___1.call(this,tcoll);
case 2:
return conj_BANG___2.call(this,tcoll,val);
default:
var G__30739 = null;
if (arguments.length > 2) {
var G__30740__i = 0, G__30740__a = new Array(arguments.length -  2);
while (G__30740__i < G__30740__a.length) {G__30740__a[G__30740__i] = arguments[G__30740__i + 2]; ++G__30740__i;}
G__30739 = new cljs.core.IndexedSeq(G__30740__a,0);
}
return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__30739);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
conj_BANG_.cljs$lang$maxFixedArity = 2;
conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return conj_BANG_;
})()
;
/**
* When applied to a transient map, adds mapping of key(s) to
* val(s). When applied to a transient vector, sets the val at index.
* Note - index must be <= (count vector). Returns coll.
* @param {...*} var_args
*/
cljs.core.assoc_BANG_ = (function() {
var assoc_BANG_ = null;
var assoc_BANG___3 = (function (tcoll,key,val){
return cljs.core._assoc_BANG_(tcoll,key,val);
});
var assoc_BANG___4 = (function() { 
var G__30741__delegate = function (tcoll,key,val,kvs){
while(true){
var ntcoll = cljs.core._assoc_BANG_(tcoll,key,val);
if(cljs.core.truth_(kvs)){
var G__30742 = ntcoll;
var G__30743 = cljs.core.first(kvs);
var G__30744 = cljs.core.second(kvs);
var G__30745 = cljs.core.nnext(kvs);
tcoll = G__30742;
key = G__30743;
val = G__30744;
kvs = G__30745;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__30741 = function (tcoll,key,val,var_args){
var kvs = null;
if (arguments.length > 3) {
var G__30746__i = 0, G__30746__a = new Array(arguments.length -  3);
while (G__30746__i < G__30746__a.length) {G__30746__a[G__30746__i] = arguments[G__30746__i + 3]; ++G__30746__i;}
  kvs = new cljs.core.IndexedSeq(G__30746__a,0);
} 
return G__30741__delegate.call(this,tcoll,key,val,kvs);};
G__30741.cljs$lang$maxFixedArity = 3;
G__30741.cljs$lang$applyTo = (function (arglist__30747){
var tcoll = cljs.core.first(arglist__30747);
arglist__30747 = cljs.core.next(arglist__30747);
var key = cljs.core.first(arglist__30747);
arglist__30747 = cljs.core.next(arglist__30747);
var val = cljs.core.first(arglist__30747);
var kvs = cljs.core.rest(arglist__30747);
return G__30741__delegate(tcoll,key,val,kvs);
});
G__30741.cljs$core$IFn$_invoke$arity$variadic = G__30741__delegate;
return G__30741;
})()
;
assoc_BANG_ = function(tcoll,key,val,var_args){
var kvs = var_args;
switch(arguments.length){
case 3:
return assoc_BANG___3.call(this,tcoll,key,val);
default:
var G__30748 = null;
if (arguments.length > 3) {
var G__30749__i = 0, G__30749__a = new Array(arguments.length -  3);
while (G__30749__i < G__30749__a.length) {G__30749__a[G__30749__i] = arguments[G__30749__i + 3]; ++G__30749__i;}
G__30748 = new cljs.core.IndexedSeq(G__30749__a,0);
}
return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll,key,val, G__30748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
assoc_BANG_.cljs$lang$maxFixedArity = 3;
assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
return assoc_BANG_;
})()
;
/**
* Returns a transient map that doesn't contain a mapping for key(s).
* @param {...*} var_args
*/
cljs.core.dissoc_BANG_ = (function() {
var dissoc_BANG_ = null;
var dissoc_BANG___2 = (function (tcoll,key){
return cljs.core._dissoc_BANG_(tcoll,key);
});
var dissoc_BANG___3 = (function() { 
var G__30750__delegate = function (tcoll,key,ks){
while(true){
var ntcoll = cljs.core._dissoc_BANG_(tcoll,key);
if(cljs.core.truth_(ks)){
var G__30751 = ntcoll;
var G__30752 = cljs.core.first(ks);
var G__30753 = cljs.core.next(ks);
tcoll = G__30751;
key = G__30752;
ks = G__30753;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__30750 = function (tcoll,key,var_args){
var ks = null;
if (arguments.length > 2) {
var G__30754__i = 0, G__30754__a = new Array(arguments.length -  2);
while (G__30754__i < G__30754__a.length) {G__30754__a[G__30754__i] = arguments[G__30754__i + 2]; ++G__30754__i;}
  ks = new cljs.core.IndexedSeq(G__30754__a,0);
} 
return G__30750__delegate.call(this,tcoll,key,ks);};
G__30750.cljs$lang$maxFixedArity = 2;
G__30750.cljs$lang$applyTo = (function (arglist__30755){
var tcoll = cljs.core.first(arglist__30755);
arglist__30755 = cljs.core.next(arglist__30755);
var key = cljs.core.first(arglist__30755);
var ks = cljs.core.rest(arglist__30755);
return G__30750__delegate(tcoll,key,ks);
});
G__30750.cljs$core$IFn$_invoke$arity$variadic = G__30750__delegate;
return G__30750;
})()
;
dissoc_BANG_ = function(tcoll,key,var_args){
var ks = var_args;
switch(arguments.length){
case 2:
return dissoc_BANG___2.call(this,tcoll,key);
default:
var G__30756 = null;
if (arguments.length > 2) {
var G__30757__i = 0, G__30757__a = new Array(arguments.length -  2);
while (G__30757__i < G__30757__a.length) {G__30757__a[G__30757__i] = arguments[G__30757__i + 2]; ++G__30757__i;}
G__30756 = new cljs.core.IndexedSeq(G__30757__a,0);
}
return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,key, G__30756);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dissoc_BANG_.cljs$lang$maxFixedArity = 2;
dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return dissoc_BANG_;
})()
;
/**
* Removes the last item from a transient vector. If
* the collection is empty, throws an exception. Returns coll
*/
cljs.core.pop_BANG_ = (function pop_BANG_(tcoll){
return cljs.core._pop_BANG_(tcoll);
});
/**
* disj[oin]. Returns a transient set of the same (hashed/sorted) type, that
* does not contain key(s).
* @param {...*} var_args
*/
cljs.core.disj_BANG_ = (function() {
var disj_BANG_ = null;
var disj_BANG___2 = (function (tcoll,val){
return cljs.core._disjoin_BANG_(tcoll,val);
});
var disj_BANG___3 = (function() { 
var G__30758__delegate = function (tcoll,val,vals){
while(true){
var ntcoll = cljs.core._disjoin_BANG_(tcoll,val);
if(cljs.core.truth_(vals)){
var G__30759 = ntcoll;
var G__30760 = cljs.core.first(vals);
var G__30761 = cljs.core.next(vals);
tcoll = G__30759;
val = G__30760;
vals = G__30761;
continue;
} else {
return ntcoll;
}
break;
}
};
var G__30758 = function (tcoll,val,var_args){
var vals = null;
if (arguments.length > 2) {
var G__30762__i = 0, G__30762__a = new Array(arguments.length -  2);
while (G__30762__i < G__30762__a.length) {G__30762__a[G__30762__i] = arguments[G__30762__i + 2]; ++G__30762__i;}
  vals = new cljs.core.IndexedSeq(G__30762__a,0);
} 
return G__30758__delegate.call(this,tcoll,val,vals);};
G__30758.cljs$lang$maxFixedArity = 2;
G__30758.cljs$lang$applyTo = (function (arglist__30763){
var tcoll = cljs.core.first(arglist__30763);
arglist__30763 = cljs.core.next(arglist__30763);
var val = cljs.core.first(arglist__30763);
var vals = cljs.core.rest(arglist__30763);
return G__30758__delegate(tcoll,val,vals);
});
G__30758.cljs$core$IFn$_invoke$arity$variadic = G__30758__delegate;
return G__30758;
})()
;
disj_BANG_ = function(tcoll,val,var_args){
var vals = var_args;
switch(arguments.length){
case 2:
return disj_BANG___2.call(this,tcoll,val);
default:
var G__30764 = null;
if (arguments.length > 2) {
var G__30765__i = 0, G__30765__a = new Array(arguments.length -  2);
while (G__30765__i < G__30765__a.length) {G__30765__a[G__30765__i] = arguments[G__30765__i + 2]; ++G__30765__i;}
G__30764 = new cljs.core.IndexedSeq(G__30765__a,0);
}
return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll,val, G__30764);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
disj_BANG_.cljs$lang$maxFixedArity = 2;
disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
return disj_BANG_;
})()
;

cljs.core.apply_to = (function apply_to(f,argc,args){
var args__$1 = cljs.core.seq(args);
if((argc === (0))){
return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
} else {
var a23895 = cljs.core._first(args__$1);
var args__$2 = cljs.core._rest(args__$1);
if((argc === (1))){
if(f.cljs$core$IFn$_invoke$arity$1){
return f.cljs$core$IFn$_invoke$arity$1(a23895);
} else {
var G__30976 = a23895;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__30976) : f.call(null,G__30976));
}
} else {
var b23896 = cljs.core._first(args__$2);
var args__$3 = cljs.core._rest(args__$2);
if((argc === (2))){
if(f.cljs$core$IFn$_invoke$arity$2){
return f.cljs$core$IFn$_invoke$arity$2(a23895,b23896);
} else {
var G__30977 = a23895;
var G__30978 = b23896;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__30977,G__30978) : f.call(null,G__30977,G__30978));
}
} else {
var c23897 = cljs.core._first(args__$3);
var args__$4 = cljs.core._rest(args__$3);
if((argc === (3))){
if(f.cljs$core$IFn$_invoke$arity$3){
return f.cljs$core$IFn$_invoke$arity$3(a23895,b23896,c23897);
} else {
var G__30979 = a23895;
var G__30980 = b23896;
var G__30981 = c23897;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__30979,G__30980,G__30981) : f.call(null,G__30979,G__30980,G__30981));
}
} else {
var d23898 = cljs.core._first(args__$4);
var args__$5 = cljs.core._rest(args__$4);
if((argc === (4))){
if(f.cljs$core$IFn$_invoke$arity$4){
return f.cljs$core$IFn$_invoke$arity$4(a23895,b23896,c23897,d23898);
} else {
var G__30982 = a23895;
var G__30983 = b23896;
var G__30984 = c23897;
var G__30985 = d23898;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__30982,G__30983,G__30984,G__30985) : f.call(null,G__30982,G__30983,G__30984,G__30985));
}
} else {
var e23899 = cljs.core._first(args__$5);
var args__$6 = cljs.core._rest(args__$5);
if((argc === (5))){
if(f.cljs$core$IFn$_invoke$arity$5){
return f.cljs$core$IFn$_invoke$arity$5(a23895,b23896,c23897,d23898,e23899);
} else {
var G__30986 = a23895;
var G__30987 = b23896;
var G__30988 = c23897;
var G__30989 = d23898;
var G__30990 = e23899;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__30986,G__30987,G__30988,G__30989,G__30990) : f.call(null,G__30986,G__30987,G__30988,G__30989,G__30990));
}
} else {
var f23900 = cljs.core._first(args__$6);
var args__$7 = cljs.core._rest(args__$6);
if((argc === (6))){
if(f.cljs$core$IFn$_invoke$arity$6){
return f.cljs$core$IFn$_invoke$arity$6(a23895,b23896,c23897,d23898,e23899,f23900);
} else {
var G__30991 = a23895;
var G__30992 = b23896;
var G__30993 = c23897;
var G__30994 = d23898;
var G__30995 = e23899;
var G__30996 = f23900;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__30991,G__30992,G__30993,G__30994,G__30995,G__30996) : f.call(null,G__30991,G__30992,G__30993,G__30994,G__30995,G__30996));
}
} else {
var g23901 = cljs.core._first(args__$7);
var args__$8 = cljs.core._rest(args__$7);
if((argc === (7))){
if(f.cljs$core$IFn$_invoke$arity$7){
return f.cljs$core$IFn$_invoke$arity$7(a23895,b23896,c23897,d23898,e23899,f23900,g23901);
} else {
var G__30997 = a23895;
var G__30998 = b23896;
var G__30999 = c23897;
var G__31000 = d23898;
var G__31001 = e23899;
var G__31002 = f23900;
var G__31003 = g23901;
return (f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__30997,G__30998,G__30999,G__31000,G__31001,G__31002,G__31003) : f.call(null,G__30997,G__30998,G__30999,G__31000,G__31001,G__31002,G__31003));
}
} else {
var h23902 = cljs.core._first(args__$8);
var args__$9 = cljs.core._rest(args__$8);
if((argc === (8))){
if(f.cljs$core$IFn$_invoke$arity$8){
return f.cljs$core$IFn$_invoke$arity$8(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902);
} else {
var G__31004 = a23895;
var G__31005 = b23896;
var G__31006 = c23897;
var G__31007 = d23898;
var G__31008 = e23899;
var G__31009 = f23900;
var G__31010 = g23901;
var G__31011 = h23902;
return (f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__31004,G__31005,G__31006,G__31007,G__31008,G__31009,G__31010,G__31011) : f.call(null,G__31004,G__31005,G__31006,G__31007,G__31008,G__31009,G__31010,G__31011));
}
} else {
var i23903 = cljs.core._first(args__$9);
var args__$10 = cljs.core._rest(args__$9);
if((argc === (9))){
if(f.cljs$core$IFn$_invoke$arity$9){
return f.cljs$core$IFn$_invoke$arity$9(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903);
} else {
var G__31012 = a23895;
var G__31013 = b23896;
var G__31014 = c23897;
var G__31015 = d23898;
var G__31016 = e23899;
var G__31017 = f23900;
var G__31018 = g23901;
var G__31019 = h23902;
var G__31020 = i23903;
return (f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__31012,G__31013,G__31014,G__31015,G__31016,G__31017,G__31018,G__31019,G__31020) : f.call(null,G__31012,G__31013,G__31014,G__31015,G__31016,G__31017,G__31018,G__31019,G__31020));
}
} else {
var j23904 = cljs.core._first(args__$10);
var args__$11 = cljs.core._rest(args__$10);
if((argc === (10))){
if(f.cljs$core$IFn$_invoke$arity$10){
return f.cljs$core$IFn$_invoke$arity$10(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904);
} else {
var G__31021 = a23895;
var G__31022 = b23896;
var G__31023 = c23897;
var G__31024 = d23898;
var G__31025 = e23899;
var G__31026 = f23900;
var G__31027 = g23901;
var G__31028 = h23902;
var G__31029 = i23903;
var G__31030 = j23904;
return (f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__31021,G__31022,G__31023,G__31024,G__31025,G__31026,G__31027,G__31028,G__31029,G__31030) : f.call(null,G__31021,G__31022,G__31023,G__31024,G__31025,G__31026,G__31027,G__31028,G__31029,G__31030));
}
} else {
var k23905 = cljs.core._first(args__$11);
var args__$12 = cljs.core._rest(args__$11);
if((argc === (11))){
if(f.cljs$core$IFn$_invoke$arity$11){
return f.cljs$core$IFn$_invoke$arity$11(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905);
} else {
var G__31031 = a23895;
var G__31032 = b23896;
var G__31033 = c23897;
var G__31034 = d23898;
var G__31035 = e23899;
var G__31036 = f23900;
var G__31037 = g23901;
var G__31038 = h23902;
var G__31039 = i23903;
var G__31040 = j23904;
var G__31041 = k23905;
return (f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__31031,G__31032,G__31033,G__31034,G__31035,G__31036,G__31037,G__31038,G__31039,G__31040,G__31041) : f.call(null,G__31031,G__31032,G__31033,G__31034,G__31035,G__31036,G__31037,G__31038,G__31039,G__31040,G__31041));
}
} else {
var l23906 = cljs.core._first(args__$12);
var args__$13 = cljs.core._rest(args__$12);
if((argc === (12))){
if(f.cljs$core$IFn$_invoke$arity$12){
return f.cljs$core$IFn$_invoke$arity$12(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906);
} else {
var G__31042 = a23895;
var G__31043 = b23896;
var G__31044 = c23897;
var G__31045 = d23898;
var G__31046 = e23899;
var G__31047 = f23900;
var G__31048 = g23901;
var G__31049 = h23902;
var G__31050 = i23903;
var G__31051 = j23904;
var G__31052 = k23905;
var G__31053 = l23906;
return (f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__31042,G__31043,G__31044,G__31045,G__31046,G__31047,G__31048,G__31049,G__31050,G__31051,G__31052,G__31053) : f.call(null,G__31042,G__31043,G__31044,G__31045,G__31046,G__31047,G__31048,G__31049,G__31050,G__31051,G__31052,G__31053));
}
} else {
var m23907 = cljs.core._first(args__$13);
var args__$14 = cljs.core._rest(args__$13);
if((argc === (13))){
if(f.cljs$core$IFn$_invoke$arity$13){
return f.cljs$core$IFn$_invoke$arity$13(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906,m23907);
} else {
var G__31054 = a23895;
var G__31055 = b23896;
var G__31056 = c23897;
var G__31057 = d23898;
var G__31058 = e23899;
var G__31059 = f23900;
var G__31060 = g23901;
var G__31061 = h23902;
var G__31062 = i23903;
var G__31063 = j23904;
var G__31064 = k23905;
var G__31065 = l23906;
var G__31066 = m23907;
return (f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__31054,G__31055,G__31056,G__31057,G__31058,G__31059,G__31060,G__31061,G__31062,G__31063,G__31064,G__31065,G__31066) : f.call(null,G__31054,G__31055,G__31056,G__31057,G__31058,G__31059,G__31060,G__31061,G__31062,G__31063,G__31064,G__31065,G__31066));
}
} else {
var n23908 = cljs.core._first(args__$14);
var args__$15 = cljs.core._rest(args__$14);
if((argc === (14))){
if(f.cljs$core$IFn$_invoke$arity$14){
return f.cljs$core$IFn$_invoke$arity$14(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906,m23907,n23908);
} else {
var G__31067 = a23895;
var G__31068 = b23896;
var G__31069 = c23897;
var G__31070 = d23898;
var G__31071 = e23899;
var G__31072 = f23900;
var G__31073 = g23901;
var G__31074 = h23902;
var G__31075 = i23903;
var G__31076 = j23904;
var G__31077 = k23905;
var G__31078 = l23906;
var G__31079 = m23907;
var G__31080 = n23908;
return (f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__31067,G__31068,G__31069,G__31070,G__31071,G__31072,G__31073,G__31074,G__31075,G__31076,G__31077,G__31078,G__31079,G__31080) : f.call(null,G__31067,G__31068,G__31069,G__31070,G__31071,G__31072,G__31073,G__31074,G__31075,G__31076,G__31077,G__31078,G__31079,G__31080));
}
} else {
var o23909 = cljs.core._first(args__$15);
var args__$16 = cljs.core._rest(args__$15);
if((argc === (15))){
if(f.cljs$core$IFn$_invoke$arity$15){
return f.cljs$core$IFn$_invoke$arity$15(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906,m23907,n23908,o23909);
} else {
var G__31081 = a23895;
var G__31082 = b23896;
var G__31083 = c23897;
var G__31084 = d23898;
var G__31085 = e23899;
var G__31086 = f23900;
var G__31087 = g23901;
var G__31088 = h23902;
var G__31089 = i23903;
var G__31090 = j23904;
var G__31091 = k23905;
var G__31092 = l23906;
var G__31093 = m23907;
var G__31094 = n23908;
var G__31095 = o23909;
return (f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__31081,G__31082,G__31083,G__31084,G__31085,G__31086,G__31087,G__31088,G__31089,G__31090,G__31091,G__31092,G__31093,G__31094,G__31095) : f.call(null,G__31081,G__31082,G__31083,G__31084,G__31085,G__31086,G__31087,G__31088,G__31089,G__31090,G__31091,G__31092,G__31093,G__31094,G__31095));
}
} else {
var p23910 = cljs.core._first(args__$16);
var args__$17 = cljs.core._rest(args__$16);
if((argc === (16))){
if(f.cljs$core$IFn$_invoke$arity$16){
return f.cljs$core$IFn$_invoke$arity$16(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906,m23907,n23908,o23909,p23910);
} else {
var G__31096 = a23895;
var G__31097 = b23896;
var G__31098 = c23897;
var G__31099 = d23898;
var G__31100 = e23899;
var G__31101 = f23900;
var G__31102 = g23901;
var G__31103 = h23902;
var G__31104 = i23903;
var G__31105 = j23904;
var G__31106 = k23905;
var G__31107 = l23906;
var G__31108 = m23907;
var G__31109 = n23908;
var G__31110 = o23909;
var G__31111 = p23910;
return (f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__31096,G__31097,G__31098,G__31099,G__31100,G__31101,G__31102,G__31103,G__31104,G__31105,G__31106,G__31107,G__31108,G__31109,G__31110,G__31111) : f.call(null,G__31096,G__31097,G__31098,G__31099,G__31100,G__31101,G__31102,G__31103,G__31104,G__31105,G__31106,G__31107,G__31108,G__31109,G__31110,G__31111));
}
} else {
var q23911 = cljs.core._first(args__$17);
var args__$18 = cljs.core._rest(args__$17);
if((argc === (17))){
if(f.cljs$core$IFn$_invoke$arity$17){
return f.cljs$core$IFn$_invoke$arity$17(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906,m23907,n23908,o23909,p23910,q23911);
} else {
var G__31112 = a23895;
var G__31113 = b23896;
var G__31114 = c23897;
var G__31115 = d23898;
var G__31116 = e23899;
var G__31117 = f23900;
var G__31118 = g23901;
var G__31119 = h23902;
var G__31120 = i23903;
var G__31121 = j23904;
var G__31122 = k23905;
var G__31123 = l23906;
var G__31124 = m23907;
var G__31125 = n23908;
var G__31126 = o23909;
var G__31127 = p23910;
var G__31128 = q23911;
return (f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__31112,G__31113,G__31114,G__31115,G__31116,G__31117,G__31118,G__31119,G__31120,G__31121,G__31122,G__31123,G__31124,G__31125,G__31126,G__31127,G__31128) : f.call(null,G__31112,G__31113,G__31114,G__31115,G__31116,G__31117,G__31118,G__31119,G__31120,G__31121,G__31122,G__31123,G__31124,G__31125,G__31126,G__31127,G__31128));
}
} else {
var r23912 = cljs.core._first(args__$18);
var args__$19 = cljs.core._rest(args__$18);
if((argc === (18))){
if(f.cljs$core$IFn$_invoke$arity$18){
return f.cljs$core$IFn$_invoke$arity$18(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906,m23907,n23908,o23909,p23910,q23911,r23912);
} else {
var G__31129 = a23895;
var G__31130 = b23896;
var G__31131 = c23897;
var G__31132 = d23898;
var G__31133 = e23899;
var G__31134 = f23900;
var G__31135 = g23901;
var G__31136 = h23902;
var G__31137 = i23903;
var G__31138 = j23904;
var G__31139 = k23905;
var G__31140 = l23906;
var G__31141 = m23907;
var G__31142 = n23908;
var G__31143 = o23909;
var G__31144 = p23910;
var G__31145 = q23911;
var G__31146 = r23912;
return (f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__31129,G__31130,G__31131,G__31132,G__31133,G__31134,G__31135,G__31136,G__31137,G__31138,G__31139,G__31140,G__31141,G__31142,G__31143,G__31144,G__31145,G__31146) : f.call(null,G__31129,G__31130,G__31131,G__31132,G__31133,G__31134,G__31135,G__31136,G__31137,G__31138,G__31139,G__31140,G__31141,G__31142,G__31143,G__31144,G__31145,G__31146));
}
} else {
var s23913 = cljs.core._first(args__$19);
var args__$20 = cljs.core._rest(args__$19);
if((argc === (19))){
if(f.cljs$core$IFn$_invoke$arity$19){
return f.cljs$core$IFn$_invoke$arity$19(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906,m23907,n23908,o23909,p23910,q23911,r23912,s23913);
} else {
var G__31147 = a23895;
var G__31148 = b23896;
var G__31149 = c23897;
var G__31150 = d23898;
var G__31151 = e23899;
var G__31152 = f23900;
var G__31153 = g23901;
var G__31154 = h23902;
var G__31155 = i23903;
var G__31156 = j23904;
var G__31157 = k23905;
var G__31158 = l23906;
var G__31159 = m23907;
var G__31160 = n23908;
var G__31161 = o23909;
var G__31162 = p23910;
var G__31163 = q23911;
var G__31164 = r23912;
var G__31165 = s23913;
return (f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__31147,G__31148,G__31149,G__31150,G__31151,G__31152,G__31153,G__31154,G__31155,G__31156,G__31157,G__31158,G__31159,G__31160,G__31161,G__31162,G__31163,G__31164,G__31165) : f.call(null,G__31147,G__31148,G__31149,G__31150,G__31151,G__31152,G__31153,G__31154,G__31155,G__31156,G__31157,G__31158,G__31159,G__31160,G__31161,G__31162,G__31163,G__31164,G__31165));
}
} else {
var t23914 = cljs.core._first(args__$20);
var args__$21 = cljs.core._rest(args__$20);
if((argc === (20))){
if(f.cljs$core$IFn$_invoke$arity$20){
return f.cljs$core$IFn$_invoke$arity$20(a23895,b23896,c23897,d23898,e23899,f23900,g23901,h23902,i23903,j23904,k23905,l23906,m23907,n23908,o23909,p23910,q23911,r23912,s23913,t23914);
} else {
var G__31166 = a23895;
var G__31167 = b23896;
var G__31168 = c23897;
var G__31169 = d23898;
var G__31170 = e23899;
var G__31171 = f23900;
var G__31172 = g23901;
var G__31173 = h23902;
var G__31174 = i23903;
var G__31175 = j23904;
var G__31176 = k23905;
var G__31177 = l23906;
var G__31178 = m23907;
var G__31179 = n23908;
var G__31180 = o23909;
var G__31181 = p23910;
var G__31182 = q23911;
var G__31183 = r23912;
var G__31184 = s23913;
var G__31185 = t23914;
return (f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__31166,G__31167,G__31168,G__31169,G__31170,G__31171,G__31172,G__31173,G__31174,G__31175,G__31176,G__31177,G__31178,G__31179,G__31180,G__31181,G__31182,G__31183,G__31184,G__31185) : f.call(null,G__31166,G__31167,G__31168,G__31169,G__31170,G__31171,G__31172,G__31173,G__31174,G__31175,G__31176,G__31177,G__31178,G__31179,G__31180,G__31181,G__31182,G__31183,G__31184,G__31185));
}
} else {
throw (new Error("Only up to 20 arguments supported on functions"));
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
}
});

/**
* Applies fn f to the argument list formed by prepending intervening arguments to args.
* First cut.  Not lazy.  Needs to use emitted toApply.
* @param {...*} var_args
*/
cljs.core.apply = (function() {
var apply = null;
var apply__2 = (function (f,args){
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(args,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,args);
} else {
return f.cljs$lang$applyTo(args);
}
} else {
return f.apply(f,cljs.core.to_array(args));
}
});
var apply__3 = (function (f,x,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__4 = (function (f,x,y,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x,y,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__5 = (function (f,x,y,z,args){
var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x,y,z,args);
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
});
var apply__6 = (function() { 
var G__31186__delegate = function (f,a,b,c,d,args){
var arglist = cljs.core.cons(a,cljs.core.cons(b,cljs.core.cons(c,cljs.core.cons(d,cljs.core.spread(args)))));
var fixed_arity = f.cljs$lang$maxFixedArity;
if(f.cljs$lang$applyTo){
var bc = cljs.core.bounded_count(arglist,(fixed_arity + (1)));
if((bc <= fixed_arity)){
return cljs.core.apply_to(f,bc,arglist);
} else {
return f.cljs$lang$applyTo(arglist);
}
} else {
return f.apply(f,cljs.core.to_array(arglist));
}
};
var G__31186 = function (f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 5) {
var G__31187__i = 0, G__31187__a = new Array(arguments.length -  5);
while (G__31187__i < G__31187__a.length) {G__31187__a[G__31187__i] = arguments[G__31187__i + 5]; ++G__31187__i;}
  args = new cljs.core.IndexedSeq(G__31187__a,0);
} 
return G__31186__delegate.call(this,f,a,b,c,d,args);};
G__31186.cljs$lang$maxFixedArity = 5;
G__31186.cljs$lang$applyTo = (function (arglist__31188){
var f = cljs.core.first(arglist__31188);
arglist__31188 = cljs.core.next(arglist__31188);
var a = cljs.core.first(arglist__31188);
arglist__31188 = cljs.core.next(arglist__31188);
var b = cljs.core.first(arglist__31188);
arglist__31188 = cljs.core.next(arglist__31188);
var c = cljs.core.first(arglist__31188);
arglist__31188 = cljs.core.next(arglist__31188);
var d = cljs.core.first(arglist__31188);
var args = cljs.core.rest(arglist__31188);
return G__31186__delegate(f,a,b,c,d,args);
});
G__31186.cljs$core$IFn$_invoke$arity$variadic = G__31186__delegate;
return G__31186;
})()
;
apply = function(f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return apply__2.call(this,f,a);
case 3:
return apply__3.call(this,f,a,b);
case 4:
return apply__4.call(this,f,a,b,c);
case 5:
return apply__5.call(this,f,a,b,c,d);
default:
var G__31189 = null;
if (arguments.length > 5) {
var G__31190__i = 0, G__31190__a = new Array(arguments.length -  5);
while (G__31190__i < G__31190__a.length) {G__31190__a[G__31190__i] = arguments[G__31190__i + 5]; ++G__31190__i;}
G__31189 = new cljs.core.IndexedSeq(G__31190__a,0);
}
return apply__6.cljs$core$IFn$_invoke$arity$variadic(f,a,b,c,d, G__31189);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
apply.cljs$lang$maxFixedArity = 5;
apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
return apply;
})()
;
/**
* Returns an object of the same type and value as obj, with
* (apply f (meta obj) args) as its metadata.
* @param {...*} var_args
*/
cljs.core.vary_meta = (function() {
var vary_meta = null;
var vary_meta__2 = (function (obj,f){
return cljs.core.with_meta(obj,(function (){var G__31206 = cljs.core.meta(obj);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31206) : f.call(null,G__31206));
})());
});
var vary_meta__3 = (function (obj,f,a){
return cljs.core.with_meta(obj,(function (){var G__31207 = cljs.core.meta(obj);
var G__31208 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31207,G__31208) : f.call(null,G__31207,G__31208));
})());
});
var vary_meta__4 = (function (obj,f,a,b){
return cljs.core.with_meta(obj,(function (){var G__31209 = cljs.core.meta(obj);
var G__31210 = a;
var G__31211 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31209,G__31210,G__31211) : f.call(null,G__31209,G__31210,G__31211));
})());
});
var vary_meta__5 = (function (obj,f,a,b,c){
return cljs.core.with_meta(obj,(function (){var G__31212 = cljs.core.meta(obj);
var G__31213 = a;
var G__31214 = b;
var G__31215 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31212,G__31213,G__31214,G__31215) : f.call(null,G__31212,G__31213,G__31214,G__31215));
})());
});
var vary_meta__6 = (function (obj,f,a,b,c,d){
return cljs.core.with_meta(obj,(function (){var G__31216 = cljs.core.meta(obj);
var G__31217 = a;
var G__31218 = b;
var G__31219 = c;
var G__31220 = d;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31216,G__31217,G__31218,G__31219,G__31220) : f.call(null,G__31216,G__31217,G__31218,G__31219,G__31220));
})());
});
var vary_meta__7 = (function() { 
var G__31221__delegate = function (obj,f,a,b,c,d,args){
return cljs.core.with_meta(obj,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.meta(obj),a,b,c,cljs.core.array_seq([d,args], 0)));
};
var G__31221 = function (obj,f,a,b,c,d,var_args){
var args = null;
if (arguments.length > 6) {
var G__31222__i = 0, G__31222__a = new Array(arguments.length -  6);
while (G__31222__i < G__31222__a.length) {G__31222__a[G__31222__i] = arguments[G__31222__i + 6]; ++G__31222__i;}
  args = new cljs.core.IndexedSeq(G__31222__a,0);
} 
return G__31221__delegate.call(this,obj,f,a,b,c,d,args);};
G__31221.cljs$lang$maxFixedArity = 6;
G__31221.cljs$lang$applyTo = (function (arglist__31223){
var obj = cljs.core.first(arglist__31223);
arglist__31223 = cljs.core.next(arglist__31223);
var f = cljs.core.first(arglist__31223);
arglist__31223 = cljs.core.next(arglist__31223);
var a = cljs.core.first(arglist__31223);
arglist__31223 = cljs.core.next(arglist__31223);
var b = cljs.core.first(arglist__31223);
arglist__31223 = cljs.core.next(arglist__31223);
var c = cljs.core.first(arglist__31223);
arglist__31223 = cljs.core.next(arglist__31223);
var d = cljs.core.first(arglist__31223);
var args = cljs.core.rest(arglist__31223);
return G__31221__delegate(obj,f,a,b,c,d,args);
});
G__31221.cljs$core$IFn$_invoke$arity$variadic = G__31221__delegate;
return G__31221;
})()
;
vary_meta = function(obj,f,a,b,c,d,var_args){
var args = var_args;
switch(arguments.length){
case 2:
return vary_meta__2.call(this,obj,f);
case 3:
return vary_meta__3.call(this,obj,f,a);
case 4:
return vary_meta__4.call(this,obj,f,a,b);
case 5:
return vary_meta__5.call(this,obj,f,a,b,c);
case 6:
return vary_meta__6.call(this,obj,f,a,b,c,d);
default:
var G__31224 = null;
if (arguments.length > 6) {
var G__31225__i = 0, G__31225__a = new Array(arguments.length -  6);
while (G__31225__i < G__31225__a.length) {G__31225__a[G__31225__i] = arguments[G__31225__i + 6]; ++G__31225__i;}
G__31224 = new cljs.core.IndexedSeq(G__31225__a,0);
}
return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj,f,a,b,c,d, G__31224);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
vary_meta.cljs$lang$maxFixedArity = 6;
vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
return vary_meta;
})()
;
/**
* Same as (not (= obj1 obj2))
* @param {...*} var_args
*/
cljs.core.not_EQ_ = (function() {
var not_EQ_ = null;
var not_EQ___1 = (function (x){
return false;
});
var not_EQ___2 = (function (x,y){
return !(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y));
});
var not_EQ___3 = (function() { 
var G__31226__delegate = function (x,y,more){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_,x,y,more));
};
var G__31226 = function (x,y,var_args){
var more = null;
if (arguments.length > 2) {
var G__31227__i = 0, G__31227__a = new Array(arguments.length -  2);
while (G__31227__i < G__31227__a.length) {G__31227__a[G__31227__i] = arguments[G__31227__i + 2]; ++G__31227__i;}
  more = new cljs.core.IndexedSeq(G__31227__a,0);
} 
return G__31226__delegate.call(this,x,y,more);};
G__31226.cljs$lang$maxFixedArity = 2;
G__31226.cljs$lang$applyTo = (function (arglist__31228){
var x = cljs.core.first(arglist__31228);
arglist__31228 = cljs.core.next(arglist__31228);
var y = cljs.core.first(arglist__31228);
var more = cljs.core.rest(arglist__31228);
return G__31226__delegate(x,y,more);
});
G__31226.cljs$core$IFn$_invoke$arity$variadic = G__31226__delegate;
return G__31226;
})()
;
not_EQ_ = function(x,y,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return not_EQ___1.call(this,x);
case 2:
return not_EQ___2.call(this,x,y);
default:
var G__31229 = null;
if (arguments.length > 2) {
var G__31230__i = 0, G__31230__a = new Array(arguments.length -  2);
while (G__31230__i < G__31230__a.length) {G__31230__a[G__31230__i] = arguments[G__31230__i + 2]; ++G__31230__i;}
G__31229 = new cljs.core.IndexedSeq(G__31230__a,0);
}
return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31229);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
not_EQ_.cljs$lang$maxFixedArity = 2;
not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
return not_EQ_;
})()
;
/**
* If coll is empty, returns nil, else coll
*/
cljs.core.not_empty = (function not_empty(coll){
if(cljs.core.seq(coll)){
return coll;
} else {
return null;
}
});
cljs.core.nil_iter = (function nil_iter(){
if(typeof cljs.core.t31234 !== 'undefined'){
} else {

/**
* @constructor
*/
cljs.core.t31234 = (function (nil_iter,meta31235){
this.nil_iter = nil_iter;
this.meta31235 = meta31235;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 393216;
})
cljs.core.t31234.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return false;
});

cljs.core.t31234.prototype.next = (function (){
var self__ = this;
var _ = this;
return (new Error("No such element"));
});

cljs.core.t31234.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.t31234.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_31236){
var self__ = this;
var _31236__$1 = this;
return self__.meta31235;
});

cljs.core.t31234.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (_31236,meta31235__$1){
var self__ = this;
var _31236__$1 = this;
return (new cljs.core.t31234(self__.nil_iter,meta31235__$1));
});

cljs.core.t31234.cljs$lang$type = true;

cljs.core.t31234.cljs$lang$ctorStr = "cljs.core/t31234";

cljs.core.t31234.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/t31234");
});

cljs.core.__GT_t31234 = (function __GT_t31234(nil_iter__$1,meta31235){
return (new cljs.core.t31234(nil_iter__$1,meta31235));
});

}

return (new cljs.core.t31234(nil_iter,cljs.core.PersistentArrayMap.EMPTY));
});

/**
* @constructor
*/
cljs.core.StringIter = (function (s,i){
this.s = s;
this.i = i;
})
cljs.core.StringIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.s.length);
});

cljs.core.StringIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.s.charAt(self__.i);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.StringIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.StringIter.cljs$lang$type = true;

cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";

cljs.core.StringIter.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/StringIter");
});

cljs.core.__GT_StringIter = (function __GT_StringIter(s,i){
return (new cljs.core.StringIter(s,i));
});

cljs.core.string_iter = (function string_iter(x){
return (new cljs.core.StringIter(x,(0)));
});

/**
* @constructor
*/
cljs.core.ArrayIter = (function (arr,i){
this.arr = arr;
this.i = i;
})
cljs.core.ArrayIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.arr.length);
});

cljs.core.ArrayIter.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = (self__.arr[self__.i]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.ArrayIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.ArrayIter.cljs$lang$type = true;

cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";

cljs.core.ArrayIter.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ArrayIter");
});

cljs.core.__GT_ArrayIter = (function __GT_ArrayIter(arr,i){
return (new cljs.core.ArrayIter(arr,i));
});

cljs.core.array_iter = (function array_iter(x){
return (new cljs.core.ArrayIter(x,(0)));
});
cljs.core.INIT = {};
cljs.core.START = {};

/**
* @constructor
*/
cljs.core.SeqIter = (function (_seq,_next){
this._seq = _seq;
this._next = _next;
})
cljs.core.SeqIter.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__._seq === cljs.core.INIT)){
self__._seq = cljs.core.START;

self__._next = cljs.core.seq(self__._next);
} else {
if((self__._seq === self__._next)){
self__._next = cljs.core.next(self__._seq);
} else {
}
}

return !((self__._next == null));
});

cljs.core.SeqIter.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(cljs.core.not(this$.hasNext())){
throw (new Error("No such element"));
} else {
self__._seq = self__._next;

return cljs.core.first(self__._next);
}
});

cljs.core.SeqIter.prototype.remove = (function (){
var self__ = this;
var _ = this;
return (new Error("Unsupported operation"));
});

cljs.core.SeqIter.cljs$lang$type = true;

cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";

cljs.core.SeqIter.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/SeqIter");
});

cljs.core.__GT_SeqIter = (function __GT_SeqIter(_seq,_next){
return (new cljs.core.SeqIter(_seq,_next));
});

cljs.core.seq_iter = (function seq_iter(coll){
return (new cljs.core.SeqIter(cljs.core.INIT,coll));
});
cljs.core.iter = (function iter(coll){
if((coll == null)){
return cljs.core.nil_iter();
} else {
if(typeof coll === 'string'){
return cljs.core.string_iter(coll);
} else {
if(coll instanceof Array){
return cljs.core.array_iter(coll);
} else {
if(cljs.core.iterable_QMARK_(coll)){
return cljs.core._iterator(coll);
} else {
if(cljs.core.seqable_QMARK_(coll)){
return cljs.core.seq_iter(coll);
} else {
throw (new Error([cljs.core.str("Cannot create iterator from "),cljs.core.str(coll)].join('')));

}
}
}
}
}
});
cljs.core.lazy_transformer = (function lazy_transformer(stepper){
return (new cljs.core.LazyTransformer(stepper,null,null,null));
});

/**
* @constructor
*/
cljs.core.Stepper = (function (xform,iter){
this.xform = xform;
this.iter = iter;
})
cljs.core.Stepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__22952__auto__ = !((lt.stepper == null));
if(and__22952__auto__){
return self__.iter.hasNext();
} else {
return and__22952__auto__;
}
})())){
if(cljs.core.reduced_QMARK_((function (){var G__31237 = lt;
var G__31238 = self__.iter.next();
return (self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__31237,G__31238) : self__.xform.call(null,G__31237,G__31238));
})())){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__31239 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__31239) : self__.xform.call(null,G__31239));
}
});

cljs.core.Stepper.cljs$lang$type = true;

cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";

cljs.core.Stepper.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Stepper");
});

cljs.core.__GT_Stepper = (function __GT_Stepper(xform,iter){
return (new cljs.core.Stepper(xform,iter));
});

cljs.core.stepper = (function stepper(xform,iter){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return result;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.Stepper((function (){var G__31241 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__31241) : xform.call(null,G__31241));
})(),iter));
});

/**
* @constructor
*/
cljs.core.MultiStepper = (function (xform,iters,nexts){
this.xform = xform;
this.iters = iters;
this.nexts = nexts;
})
cljs.core.MultiStepper.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
var iters__$1 = cljs.core.seq(self__.iters);
while(true){
if(!((iters__$1 == null))){
var iter = cljs.core.first(iters__$1);
if(cljs.core.not(iter.hasNext())){
return false;
} else {
var G__31243 = cljs.core.next(iters__$1);
iters__$1 = G__31243;
continue;
}
} else {
return true;
}
break;
}
});

cljs.core.MultiStepper.prototype.next = (function (){
var self__ = this;
var _ = this;
var n__23851__auto___31244 = self__.iters.length;
var i_31245 = (0);
while(true){
if((i_31245 < n__23851__auto___31244)){
(self__.nexts[i_31245] = (self__.iters[i_31245]).next());

var G__31246 = (i_31245 + (1));
i_31245 = G__31246;
continue;
} else {
}
break;
}

return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts,(0));
});

cljs.core.MultiStepper.prototype.step = (function (lt){
var self__ = this;
var this$ = this;
while(true){
if(cljs.core.truth_((function (){var and__22952__auto__ = !((lt.stepper == null));
if(and__22952__auto__){
return this$.hasNext();
} else {
return and__22952__auto__;
}
})())){
if(cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform,cljs.core.cons(lt,this$.next())))){
if((lt.rest == null)){
} else {
lt.rest.stepper = null;
}
} else {
continue;
}
} else {
}
break;
}

if((lt.stepper == null)){
return null;
} else {
var G__31242 = lt;
return (self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__31242) : self__.xform.call(null,G__31242));
}
});

cljs.core.MultiStepper.cljs$lang$type = true;

cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";

cljs.core.MultiStepper.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/MultiStepper");
});

cljs.core.__GT_MultiStepper = (function __GT_MultiStepper(xform,iters,nexts){
return (new cljs.core.MultiStepper(xform,iters,nexts));
});

cljs.core.multi_stepper = (function() {
var multi_stepper = null;
var multi_stepper__2 = (function (xform,iters){
return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length)));
});
var multi_stepper__3 = (function (xform,iters,nexts){
var stepfn = (function() {
var stepfn = null;
var stepfn__1 = (function (result){
var lt = ((cljs.core.reduced_QMARK_(result))?cljs.core.deref(result):result);
lt.stepper = null;

return lt;
});
var stepfn__2 = (function (result,input){
var lt = result;
lt.first = input;

lt.rest = cljs.core.lazy_transformer(lt.stepper);

lt.stepper = null;

return lt.rest;
});
stepfn = function(result,input){
switch(arguments.length){
case 1:
return stepfn__1.call(this,result);
case 2:
return stepfn__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
return stepfn;
})()
;
return (new cljs.core.MultiStepper((function (){var G__31251 = stepfn;
return (xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__31251) : xform.call(null,G__31251));
})(),iters,nexts));
});
multi_stepper = function(xform,iters,nexts){
switch(arguments.length){
case 2:
return multi_stepper__2.call(this,xform,iters);
case 3:
return multi_stepper__3.call(this,xform,iters,nexts);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
return multi_stepper;
})()
;

/**
* @constructor
*/
cljs.core.LazyTransformer = (function (stepper,first,rest,meta){
this.stepper = stepper;
this.first = first;
this.rest = rest;
this.meta = meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31719628;
})
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return cljs.core._seq(self__.rest);
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return self__.first;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
cljs.core._seq(this$__$1);
}

if((self__.rest == null)){
return cljs.core.List.EMPTY;
} else {
return self__.rest;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
if((self__.stepper == null)){
} else {
self__.stepper.step(this$__$1);
}

if((self__.rest == null)){
return null;
} else {
return this$__$1;
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.hash_ordered_coll(this$__$1);
});

cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (this$,other){
var self__ = this;
var this$__$1 = this;
var s = cljs.core._seq(this$__$1);
if(!((s == null))){
return cljs.core.equiv_sequential(this$__$1,other);
} else {
return (cljs.core.sequential_QMARK_(other)) && ((cljs.core.seq(other) == null));
}
});

cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.List.EMPTY;
});

cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = (function (this$,o){
var self__ = this;
var this$__$1 = this;
return cljs.core.cons(o,cljs.core._seq(this$__$1));
});

cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (this$,new_meta){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.LazyTransformer(self__.stepper,self__.first,self__.rest,new_meta));
});

cljs.core.LazyTransformer.cljs$lang$type = true;

cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";

cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/LazyTransformer");
});

cljs.core.__GT_LazyTransformer = (function __GT_LazyTransformer(stepper,first,rest,meta){
return (new cljs.core.LazyTransformer(stepper,first,rest,meta));
});

(cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.LazyTransformer.create = (function (xform,coll){
return (new cljs.core.LazyTransformer(cljs.core.stepper(xform,cljs.core.iter(coll)),null,null,null));
});
cljs.core.LazyTransformer.createMulti = (function (xform,colls){
var iters = [];
var seq__31252_31256 = cljs.core.seq(colls);
var chunk__31253_31257 = null;
var count__31254_31258 = (0);
var i__31255_31259 = (0);
while(true){
if((i__31255_31259 < count__31254_31258)){
var coll_31260 = chunk__31253_31257.cljs$core$IIndexed$_nth$arity$2(null,i__31255_31259);
iters.push(cljs.core.iter(coll_31260));

var G__31261 = seq__31252_31256;
var G__31262 = chunk__31253_31257;
var G__31263 = count__31254_31258;
var G__31264 = (i__31255_31259 + (1));
seq__31252_31256 = G__31261;
chunk__31253_31257 = G__31262;
count__31254_31258 = G__31263;
i__31255_31259 = G__31264;
continue;
} else {
var temp__4126__auto___31265 = cljs.core.seq(seq__31252_31256);
if(temp__4126__auto___31265){
var seq__31252_31266__$1 = temp__4126__auto___31265;
if(cljs.core.chunked_seq_QMARK_(seq__31252_31266__$1)){
var c__23751__auto___31267 = cljs.core.chunk_first(seq__31252_31266__$1);
var G__31268 = cljs.core.chunk_rest(seq__31252_31266__$1);
var G__31269 = c__23751__auto___31267;
var G__31270 = cljs.core.count(c__23751__auto___31267);
var G__31271 = (0);
seq__31252_31256 = G__31268;
chunk__31253_31257 = G__31269;
count__31254_31258 = G__31270;
i__31255_31259 = G__31271;
continue;
} else {
var coll_31272 = cljs.core.first(seq__31252_31266__$1);
iters.push(cljs.core.iter(coll_31272));

var G__31273 = cljs.core.next(seq__31252_31266__$1);
var G__31274 = null;
var G__31275 = (0);
var G__31276 = (0);
seq__31252_31256 = G__31273;
chunk__31253_31257 = G__31274;
count__31254_31258 = G__31275;
i__31255_31259 = G__31276;
continue;
}
} else {
}
}
break;
}

return (new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform,iters,(new Array(iters.length))),null,null,null));
});
/**
* Coerces coll to a (possibly empty) sequence, if it is not already
* one. Will not force a lazy seq. (sequence nil) yields (), When a
* transducer is supplied, returns a lazy sequence of applications of
* the transform to the items in coll(s), i.e. to the set of first
* items of each coll, followed by the set of second
* items in each coll, until any one of the colls is exhausted.  Any
* remaining items in other colls are ignored. The transform should accept
* number-of-colls arguments
* @param {...*} var_args
*/
cljs.core.sequence = (function() {
var sequence = null;
var sequence__1 = (function (coll){
if(cljs.core.seq_QMARK_(coll)){
return coll;
} else {
var or__22964__auto__ = cljs.core.seq(coll);
if(or__22964__auto__){
return or__22964__auto__;
} else {
return cljs.core.List.EMPTY;
}
}
});
var sequence__2 = (function (xform,coll){
return cljs.core.LazyTransformer.create(xform,coll);
});
var sequence__3 = (function() { 
var G__31277__delegate = function (xform,coll,colls){
return cljs.core.LazyTransformer.createMulti(xform,cljs.core.to_array(cljs.core.cons(coll,colls)));
};
var G__31277 = function (xform,coll,var_args){
var colls = null;
if (arguments.length > 2) {
var G__31278__i = 0, G__31278__a = new Array(arguments.length -  2);
while (G__31278__i < G__31278__a.length) {G__31278__a[G__31278__i] = arguments[G__31278__i + 2]; ++G__31278__i;}
  colls = new cljs.core.IndexedSeq(G__31278__a,0);
} 
return G__31277__delegate.call(this,xform,coll,colls);};
G__31277.cljs$lang$maxFixedArity = 2;
G__31277.cljs$lang$applyTo = (function (arglist__31279){
var xform = cljs.core.first(arglist__31279);
arglist__31279 = cljs.core.next(arglist__31279);
var coll = cljs.core.first(arglist__31279);
var colls = cljs.core.rest(arglist__31279);
return G__31277__delegate(xform,coll,colls);
});
G__31277.cljs$core$IFn$_invoke$arity$variadic = G__31277__delegate;
return G__31277;
})()
;
sequence = function(xform,coll,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return sequence__1.call(this,xform);
case 2:
return sequence__2.call(this,xform,coll);
default:
var G__31280 = null;
if (arguments.length > 2) {
var G__31281__i = 0, G__31281__a = new Array(arguments.length -  2);
while (G__31281__i < G__31281__a.length) {G__31281__a[G__31281__i] = arguments[G__31281__i + 2]; ++G__31281__i;}
G__31280 = new cljs.core.IndexedSeq(G__31281__a,0);
}
return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform,coll, G__31280);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sequence.cljs$lang$maxFixedArity = 2;
sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
return sequence;
})()
;
/**
* Returns true if (pred x) is logical true for every x in coll, else
* false.
*/
cljs.core.every_QMARK_ = (function every_QMARK_(pred,coll){
while(true){
if((cljs.core.seq(coll) == null)){
return true;
} else {
if(cljs.core.truth_((function (){var G__31283 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31283) : pred.call(null,G__31283));
})())){
var G__31284 = pred;
var G__31285 = cljs.core.next(coll);
pred = G__31284;
coll = G__31285;
continue;
} else {
return false;

}
}
break;
}
});
/**
* Returns false if (pred x) is logical true for every x in
* coll, else true.
*/
cljs.core.not_every_QMARK_ = (function not_every_QMARK_(pred,coll){
return !(cljs.core.every_QMARK_(pred,coll));
});
/**
* Returns the first logical true value of (pred x) for any x in coll,
* else nil.  One common idiom is to use a set as pred, for example
* this will return :fred if :fred is in the sequence, otherwise nil:
* (some #{:fred} coll)
*/
cljs.core.some = (function some(pred,coll){
while(true){
if(cljs.core.seq(coll)){
var or__22964__auto__ = (function (){var G__31289 = cljs.core.first(coll);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__31289) : pred.call(null,G__31289));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var G__31290 = pred;
var G__31291 = cljs.core.next(coll);
pred = G__31290;
coll = G__31291;
continue;
}
} else {
return null;
}
break;
}
});
/**
* Returns false if (pred x) is logical true for any x in coll,
* else true.
*/
cljs.core.not_any_QMARK_ = (function not_any_QMARK_(pred,coll){
return cljs.core.not(cljs.core.some(pred,coll));
});
/**
* Returns true if n is even, throws an exception if n is not an integer
*/
cljs.core.even_QMARK_ = (function even_QMARK_(n){
if(cljs.core.integer_QMARK_(n)){
return ((n & (1)) === (0));
} else {
throw (new Error([cljs.core.str("Argument must be an integer: "),cljs.core.str(n)].join('')));
}
});
/**
* Returns true if n is odd, throws an exception if n is not an integer
*/
cljs.core.odd_QMARK_ = (function odd_QMARK_(n){
return !(cljs.core.even_QMARK_(n));
});
/**
* Takes a fn f and returns a fn that takes the same arguments as f,
* has the same effects, if any, and returns the opposite truth value.
*/
cljs.core.complement = (function complement(f){
return (function() {
var G__31298 = null;
var G__31298__0 = (function (){
return cljs.core.not((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
});
var G__31298__1 = (function (x){
return cljs.core.not((function (){var G__31295 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31295) : f.call(null,G__31295));
})());
});
var G__31298__2 = (function (x,y){
return cljs.core.not((function (){var G__31296 = x;
var G__31297 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31296,G__31297) : f.call(null,G__31296,G__31297));
})());
});
var G__31298__3 = (function() { 
var G__31299__delegate = function (x,y,zs){
return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f,x,y,zs));
};
var G__31299 = function (x,y,var_args){
var zs = null;
if (arguments.length > 2) {
var G__31300__i = 0, G__31300__a = new Array(arguments.length -  2);
while (G__31300__i < G__31300__a.length) {G__31300__a[G__31300__i] = arguments[G__31300__i + 2]; ++G__31300__i;}
  zs = new cljs.core.IndexedSeq(G__31300__a,0);
} 
return G__31299__delegate.call(this,x,y,zs);};
G__31299.cljs$lang$maxFixedArity = 2;
G__31299.cljs$lang$applyTo = (function (arglist__31301){
var x = cljs.core.first(arglist__31301);
arglist__31301 = cljs.core.next(arglist__31301);
var y = cljs.core.first(arglist__31301);
var zs = cljs.core.rest(arglist__31301);
return G__31299__delegate(x,y,zs);
});
G__31299.cljs$core$IFn$_invoke$arity$variadic = G__31299__delegate;
return G__31299;
})()
;
G__31298 = function(x,y,var_args){
var zs = var_args;
switch(arguments.length){
case 0:
return G__31298__0.call(this);
case 1:
return G__31298__1.call(this,x);
case 2:
return G__31298__2.call(this,x,y);
default:
var G__31302 = null;
if (arguments.length > 2) {
var G__31303__i = 0, G__31303__a = new Array(arguments.length -  2);
while (G__31303__i < G__31303__a.length) {G__31303__a[G__31303__i] = arguments[G__31303__i + 2]; ++G__31303__i;}
G__31302 = new cljs.core.IndexedSeq(G__31303__a,0);
}
return G__31298__3.cljs$core$IFn$_invoke$arity$variadic(x,y, G__31302);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31298.cljs$lang$maxFixedArity = 2;
G__31298.cljs$lang$applyTo = G__31298__3.cljs$lang$applyTo;
G__31298.cljs$core$IFn$_invoke$arity$0 = G__31298__0;
G__31298.cljs$core$IFn$_invoke$arity$1 = G__31298__1;
G__31298.cljs$core$IFn$_invoke$arity$2 = G__31298__2;
G__31298.cljs$core$IFn$_invoke$arity$variadic = G__31298__3.cljs$core$IFn$_invoke$arity$variadic;
return G__31298;
})()
});
/**
* Returns a function that takes any number of arguments and returns x.
*/
cljs.core.constantly = (function constantly(x){
return (function() { 
var G__31304__delegate = function (args){
return x;
};
var G__31304 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31305__i = 0, G__31305__a = new Array(arguments.length -  0);
while (G__31305__i < G__31305__a.length) {G__31305__a[G__31305__i] = arguments[G__31305__i + 0]; ++G__31305__i;}
  args = new cljs.core.IndexedSeq(G__31305__a,0);
} 
return G__31304__delegate.call(this,args);};
G__31304.cljs$lang$maxFixedArity = 0;
G__31304.cljs$lang$applyTo = (function (arglist__31306){
var args = cljs.core.seq(arglist__31306);
return G__31304__delegate(args);
});
G__31304.cljs$core$IFn$_invoke$arity$variadic = G__31304__delegate;
return G__31304;
})()
;
});
/**
* Takes a set of functions and returns a fn that is the composition
* of those fns.  The returned fn takes a variable number of args,
* applies the rightmost of fns to the args, the next
* fn (right-to-left) to the result, etc.
* @param {...*} var_args
*/
cljs.core.comp = (function() {
var comp = null;
var comp__0 = (function (){
return cljs.core.identity;
});
var comp__1 = (function (f){
return f;
});
var comp__2 = (function (f,g){
return (function() {
var G__31361 = null;
var G__31361__0 = (function (){
var G__31334 = (function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31334) : f.call(null,G__31334));
});
var G__31361__1 = (function (x){
var G__31335 = (function (){var G__31336 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31336) : g.call(null,G__31336));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31335) : f.call(null,G__31335));
});
var G__31361__2 = (function (x,y){
var G__31337 = (function (){var G__31338 = x;
var G__31339 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__31338,G__31339) : g.call(null,G__31338,G__31339));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31337) : f.call(null,G__31337));
});
var G__31361__3 = (function (x,y,z){
var G__31340 = (function (){var G__31341 = x;
var G__31342 = y;
var G__31343 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__31341,G__31342,G__31343) : g.call(null,G__31341,G__31342,G__31343));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31340) : f.call(null,G__31340));
});
var G__31361__4 = (function() { 
var G__31362__delegate = function (x,y,z,args){
var G__31344 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31344) : f.call(null,G__31344));
};
var G__31362 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31363__i = 0, G__31363__a = new Array(arguments.length -  3);
while (G__31363__i < G__31363__a.length) {G__31363__a[G__31363__i] = arguments[G__31363__i + 3]; ++G__31363__i;}
  args = new cljs.core.IndexedSeq(G__31363__a,0);
} 
return G__31362__delegate.call(this,x,y,z,args);};
G__31362.cljs$lang$maxFixedArity = 3;
G__31362.cljs$lang$applyTo = (function (arglist__31364){
var x = cljs.core.first(arglist__31364);
arglist__31364 = cljs.core.next(arglist__31364);
var y = cljs.core.first(arglist__31364);
arglist__31364 = cljs.core.next(arglist__31364);
var z = cljs.core.first(arglist__31364);
var args = cljs.core.rest(arglist__31364);
return G__31362__delegate(x,y,z,args);
});
G__31362.cljs$core$IFn$_invoke$arity$variadic = G__31362__delegate;
return G__31362;
})()
;
G__31361 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31361__0.call(this);
case 1:
return G__31361__1.call(this,x);
case 2:
return G__31361__2.call(this,x,y);
case 3:
return G__31361__3.call(this,x,y,z);
default:
var G__31365 = null;
if (arguments.length > 3) {
var G__31366__i = 0, G__31366__a = new Array(arguments.length -  3);
while (G__31366__i < G__31366__a.length) {G__31366__a[G__31366__i] = arguments[G__31366__i + 3]; ++G__31366__i;}
G__31365 = new cljs.core.IndexedSeq(G__31366__a,0);
}
return G__31361__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31365);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31361.cljs$lang$maxFixedArity = 3;
G__31361.cljs$lang$applyTo = G__31361__4.cljs$lang$applyTo;
G__31361.cljs$core$IFn$_invoke$arity$0 = G__31361__0;
G__31361.cljs$core$IFn$_invoke$arity$1 = G__31361__1;
G__31361.cljs$core$IFn$_invoke$arity$2 = G__31361__2;
G__31361.cljs$core$IFn$_invoke$arity$3 = G__31361__3;
G__31361.cljs$core$IFn$_invoke$arity$variadic = G__31361__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31361;
})()
});
var comp__3 = (function (f,g,h){
return (function() {
var G__31367 = null;
var G__31367__0 = (function (){
var G__31345 = (function (){var G__31346 = (function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31346) : g.call(null,G__31346));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31345) : f.call(null,G__31345));
});
var G__31367__1 = (function (x){
var G__31347 = (function (){var G__31348 = (function (){var G__31349 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__31349) : h.call(null,G__31349));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31348) : g.call(null,G__31348));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31347) : f.call(null,G__31347));
});
var G__31367__2 = (function (x,y){
var G__31350 = (function (){var G__31351 = (function (){var G__31352 = x;
var G__31353 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__31352,G__31353) : h.call(null,G__31352,G__31353));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31351) : g.call(null,G__31351));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31350) : f.call(null,G__31350));
});
var G__31367__3 = (function (x,y,z){
var G__31354 = (function (){var G__31355 = (function (){var G__31356 = x;
var G__31357 = y;
var G__31358 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__31356,G__31357,G__31358) : h.call(null,G__31356,G__31357,G__31358));
})();
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31355) : g.call(null,G__31355));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31354) : f.call(null,G__31354));
});
var G__31367__4 = (function() { 
var G__31368__delegate = function (x,y,z,args){
var G__31359 = (function (){var G__31360 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args);
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__31360) : g.call(null,G__31360));
})();
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31359) : f.call(null,G__31359));
};
var G__31368 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31369__i = 0, G__31369__a = new Array(arguments.length -  3);
while (G__31369__i < G__31369__a.length) {G__31369__a[G__31369__i] = arguments[G__31369__i + 3]; ++G__31369__i;}
  args = new cljs.core.IndexedSeq(G__31369__a,0);
} 
return G__31368__delegate.call(this,x,y,z,args);};
G__31368.cljs$lang$maxFixedArity = 3;
G__31368.cljs$lang$applyTo = (function (arglist__31370){
var x = cljs.core.first(arglist__31370);
arglist__31370 = cljs.core.next(arglist__31370);
var y = cljs.core.first(arglist__31370);
arglist__31370 = cljs.core.next(arglist__31370);
var z = cljs.core.first(arglist__31370);
var args = cljs.core.rest(arglist__31370);
return G__31368__delegate(x,y,z,args);
});
G__31368.cljs$core$IFn$_invoke$arity$variadic = G__31368__delegate;
return G__31368;
})()
;
G__31367 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31367__0.call(this);
case 1:
return G__31367__1.call(this,x);
case 2:
return G__31367__2.call(this,x,y);
case 3:
return G__31367__3.call(this,x,y,z);
default:
var G__31371 = null;
if (arguments.length > 3) {
var G__31372__i = 0, G__31372__a = new Array(arguments.length -  3);
while (G__31372__i < G__31372__a.length) {G__31372__a[G__31372__i] = arguments[G__31372__i + 3]; ++G__31372__i;}
G__31371 = new cljs.core.IndexedSeq(G__31372__a,0);
}
return G__31367__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31371);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31367.cljs$lang$maxFixedArity = 3;
G__31367.cljs$lang$applyTo = G__31367__4.cljs$lang$applyTo;
G__31367.cljs$core$IFn$_invoke$arity$0 = G__31367__0;
G__31367.cljs$core$IFn$_invoke$arity$1 = G__31367__1;
G__31367.cljs$core$IFn$_invoke$arity$2 = G__31367__2;
G__31367.cljs$core$IFn$_invoke$arity$3 = G__31367__3;
G__31367.cljs$core$IFn$_invoke$arity$variadic = G__31367__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31367;
})()
});
var comp__4 = (function() { 
var G__31373__delegate = function (f1,f2,f3,fs){
var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1,f2,f3,fs));
return ((function (fs__$1){
return (function() { 
var G__31374__delegate = function (args){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1),args);
var fs__$2 = cljs.core.next(fs__$1);
while(true){
if(fs__$2){
var G__31375 = cljs.core.first(fs__$2).call(null,ret);
var G__31376 = cljs.core.next(fs__$2);
ret = G__31375;
fs__$2 = G__31376;
continue;
} else {
return ret;
}
break;
}
};
var G__31374 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31377__i = 0, G__31377__a = new Array(arguments.length -  0);
while (G__31377__i < G__31377__a.length) {G__31377__a[G__31377__i] = arguments[G__31377__i + 0]; ++G__31377__i;}
  args = new cljs.core.IndexedSeq(G__31377__a,0);
} 
return G__31374__delegate.call(this,args);};
G__31374.cljs$lang$maxFixedArity = 0;
G__31374.cljs$lang$applyTo = (function (arglist__31378){
var args = cljs.core.seq(arglist__31378);
return G__31374__delegate(args);
});
G__31374.cljs$core$IFn$_invoke$arity$variadic = G__31374__delegate;
return G__31374;
})()
;
;})(fs__$1))
};
var G__31373 = function (f1,f2,f3,var_args){
var fs = null;
if (arguments.length > 3) {
var G__31379__i = 0, G__31379__a = new Array(arguments.length -  3);
while (G__31379__i < G__31379__a.length) {G__31379__a[G__31379__i] = arguments[G__31379__i + 3]; ++G__31379__i;}
  fs = new cljs.core.IndexedSeq(G__31379__a,0);
} 
return G__31373__delegate.call(this,f1,f2,f3,fs);};
G__31373.cljs$lang$maxFixedArity = 3;
G__31373.cljs$lang$applyTo = (function (arglist__31380){
var f1 = cljs.core.first(arglist__31380);
arglist__31380 = cljs.core.next(arglist__31380);
var f2 = cljs.core.first(arglist__31380);
arglist__31380 = cljs.core.next(arglist__31380);
var f3 = cljs.core.first(arglist__31380);
var fs = cljs.core.rest(arglist__31380);
return G__31373__delegate(f1,f2,f3,fs);
});
G__31373.cljs$core$IFn$_invoke$arity$variadic = G__31373__delegate;
return G__31373;
})()
;
comp = function(f1,f2,f3,var_args){
var fs = var_args;
switch(arguments.length){
case 0:
return comp__0.call(this);
case 1:
return comp__1.call(this,f1);
case 2:
return comp__2.call(this,f1,f2);
case 3:
return comp__3.call(this,f1,f2,f3);
default:
var G__31381 = null;
if (arguments.length > 3) {
var G__31382__i = 0, G__31382__a = new Array(arguments.length -  3);
while (G__31382__i < G__31382__a.length) {G__31382__a[G__31382__i] = arguments[G__31382__i + 3]; ++G__31382__i;}
G__31381 = new cljs.core.IndexedSeq(G__31382__a,0);
}
return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1,f2,f3, G__31381);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
comp.cljs$lang$maxFixedArity = 3;
comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
return comp;
})()
;
/**
* Takes a function f and fewer than the normal arguments to f, and
* returns a fn that takes a variable number of additional args. When
* called, the returned function calls f with args + additional args.
* @param {...*} var_args
*/
cljs.core.partial = (function() {
var partial = null;
var partial__1 = (function (f){
return f;
});
var partial__2 = (function (f,arg1){
return (function() {
var G__31467 = null;
var G__31467__0 = (function (){
var G__31425 = arg1;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31425) : f.call(null,G__31425));
});
var G__31467__1 = (function (x){
var G__31426 = arg1;
var G__31427 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31426,G__31427) : f.call(null,G__31426,G__31427));
});
var G__31467__2 = (function (x,y){
var G__31428 = arg1;
var G__31429 = x;
var G__31430 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31428,G__31429,G__31430) : f.call(null,G__31428,G__31429,G__31430));
});
var G__31467__3 = (function (x,y,z){
var G__31431 = arg1;
var G__31432 = x;
var G__31433 = y;
var G__31434 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31431,G__31432,G__31433,G__31434) : f.call(null,G__31431,G__31432,G__31433,G__31434));
});
var G__31467__4 = (function() { 
var G__31468__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,x,y,z,cljs.core.array_seq([args], 0));
};
var G__31468 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31469__i = 0, G__31469__a = new Array(arguments.length -  3);
while (G__31469__i < G__31469__a.length) {G__31469__a[G__31469__i] = arguments[G__31469__i + 3]; ++G__31469__i;}
  args = new cljs.core.IndexedSeq(G__31469__a,0);
} 
return G__31468__delegate.call(this,x,y,z,args);};
G__31468.cljs$lang$maxFixedArity = 3;
G__31468.cljs$lang$applyTo = (function (arglist__31470){
var x = cljs.core.first(arglist__31470);
arglist__31470 = cljs.core.next(arglist__31470);
var y = cljs.core.first(arglist__31470);
arglist__31470 = cljs.core.next(arglist__31470);
var z = cljs.core.first(arglist__31470);
var args = cljs.core.rest(arglist__31470);
return G__31468__delegate(x,y,z,args);
});
G__31468.cljs$core$IFn$_invoke$arity$variadic = G__31468__delegate;
return G__31468;
})()
;
G__31467 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31467__0.call(this);
case 1:
return G__31467__1.call(this,x);
case 2:
return G__31467__2.call(this,x,y);
case 3:
return G__31467__3.call(this,x,y,z);
default:
var G__31471 = null;
if (arguments.length > 3) {
var G__31472__i = 0, G__31472__a = new Array(arguments.length -  3);
while (G__31472__i < G__31472__a.length) {G__31472__a[G__31472__i] = arguments[G__31472__i + 3]; ++G__31472__i;}
G__31471 = new cljs.core.IndexedSeq(G__31472__a,0);
}
return G__31467__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31471);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31467.cljs$lang$maxFixedArity = 3;
G__31467.cljs$lang$applyTo = G__31467__4.cljs$lang$applyTo;
G__31467.cljs$core$IFn$_invoke$arity$0 = G__31467__0;
G__31467.cljs$core$IFn$_invoke$arity$1 = G__31467__1;
G__31467.cljs$core$IFn$_invoke$arity$2 = G__31467__2;
G__31467.cljs$core$IFn$_invoke$arity$3 = G__31467__3;
G__31467.cljs$core$IFn$_invoke$arity$variadic = G__31467__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31467;
})()
});
var partial__3 = (function (f,arg1,arg2){
return (function() {
var G__31473 = null;
var G__31473__0 = (function (){
var G__31435 = arg1;
var G__31436 = arg2;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31435,G__31436) : f.call(null,G__31435,G__31436));
});
var G__31473__1 = (function (x){
var G__31437 = arg1;
var G__31438 = arg2;
var G__31439 = x;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31437,G__31438,G__31439) : f.call(null,G__31437,G__31438,G__31439));
});
var G__31473__2 = (function (x,y){
var G__31440 = arg1;
var G__31441 = arg2;
var G__31442 = x;
var G__31443 = y;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31440,G__31441,G__31442,G__31443) : f.call(null,G__31440,G__31441,G__31442,G__31443));
});
var G__31473__3 = (function (x,y,z){
var G__31444 = arg1;
var G__31445 = arg2;
var G__31446 = x;
var G__31447 = y;
var G__31448 = z;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31444,G__31445,G__31446,G__31447,G__31448) : f.call(null,G__31444,G__31445,G__31446,G__31447,G__31448));
});
var G__31473__4 = (function() { 
var G__31474__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,x,y,cljs.core.array_seq([z,args], 0));
};
var G__31474 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31475__i = 0, G__31475__a = new Array(arguments.length -  3);
while (G__31475__i < G__31475__a.length) {G__31475__a[G__31475__i] = arguments[G__31475__i + 3]; ++G__31475__i;}
  args = new cljs.core.IndexedSeq(G__31475__a,0);
} 
return G__31474__delegate.call(this,x,y,z,args);};
G__31474.cljs$lang$maxFixedArity = 3;
G__31474.cljs$lang$applyTo = (function (arglist__31476){
var x = cljs.core.first(arglist__31476);
arglist__31476 = cljs.core.next(arglist__31476);
var y = cljs.core.first(arglist__31476);
arglist__31476 = cljs.core.next(arglist__31476);
var z = cljs.core.first(arglist__31476);
var args = cljs.core.rest(arglist__31476);
return G__31474__delegate(x,y,z,args);
});
G__31474.cljs$core$IFn$_invoke$arity$variadic = G__31474__delegate;
return G__31474;
})()
;
G__31473 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31473__0.call(this);
case 1:
return G__31473__1.call(this,x);
case 2:
return G__31473__2.call(this,x,y);
case 3:
return G__31473__3.call(this,x,y,z);
default:
var G__31477 = null;
if (arguments.length > 3) {
var G__31478__i = 0, G__31478__a = new Array(arguments.length -  3);
while (G__31478__i < G__31478__a.length) {G__31478__a[G__31478__i] = arguments[G__31478__i + 3]; ++G__31478__i;}
G__31477 = new cljs.core.IndexedSeq(G__31478__a,0);
}
return G__31473__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31477);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31473.cljs$lang$maxFixedArity = 3;
G__31473.cljs$lang$applyTo = G__31473__4.cljs$lang$applyTo;
G__31473.cljs$core$IFn$_invoke$arity$0 = G__31473__0;
G__31473.cljs$core$IFn$_invoke$arity$1 = G__31473__1;
G__31473.cljs$core$IFn$_invoke$arity$2 = G__31473__2;
G__31473.cljs$core$IFn$_invoke$arity$3 = G__31473__3;
G__31473.cljs$core$IFn$_invoke$arity$variadic = G__31473__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31473;
})()
});
var partial__4 = (function (f,arg1,arg2,arg3){
return (function() {
var G__31479 = null;
var G__31479__0 = (function (){
var G__31449 = arg1;
var G__31450 = arg2;
var G__31451 = arg3;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31449,G__31450,G__31451) : f.call(null,G__31449,G__31450,G__31451));
});
var G__31479__1 = (function (x){
var G__31452 = arg1;
var G__31453 = arg2;
var G__31454 = arg3;
var G__31455 = x;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31452,G__31453,G__31454,G__31455) : f.call(null,G__31452,G__31453,G__31454,G__31455));
});
var G__31479__2 = (function (x,y){
var G__31456 = arg1;
var G__31457 = arg2;
var G__31458 = arg3;
var G__31459 = x;
var G__31460 = y;
return (f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__31456,G__31457,G__31458,G__31459,G__31460) : f.call(null,G__31456,G__31457,G__31458,G__31459,G__31460));
});
var G__31479__3 = (function (x,y,z){
var G__31461 = arg1;
var G__31462 = arg2;
var G__31463 = arg3;
var G__31464 = x;
var G__31465 = y;
var G__31466 = z;
return (f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__31461,G__31462,G__31463,G__31464,G__31465,G__31466) : f.call(null,G__31461,G__31462,G__31463,G__31464,G__31465,G__31466));
});
var G__31479__4 = (function() { 
var G__31480__delegate = function (x,y,z,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3,x,cljs.core.array_seq([y,z,args], 0));
};
var G__31480 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__31481__i = 0, G__31481__a = new Array(arguments.length -  3);
while (G__31481__i < G__31481__a.length) {G__31481__a[G__31481__i] = arguments[G__31481__i + 3]; ++G__31481__i;}
  args = new cljs.core.IndexedSeq(G__31481__a,0);
} 
return G__31480__delegate.call(this,x,y,z,args);};
G__31480.cljs$lang$maxFixedArity = 3;
G__31480.cljs$lang$applyTo = (function (arglist__31482){
var x = cljs.core.first(arglist__31482);
arglist__31482 = cljs.core.next(arglist__31482);
var y = cljs.core.first(arglist__31482);
arglist__31482 = cljs.core.next(arglist__31482);
var z = cljs.core.first(arglist__31482);
var args = cljs.core.rest(arglist__31482);
return G__31480__delegate(x,y,z,args);
});
G__31480.cljs$core$IFn$_invoke$arity$variadic = G__31480__delegate;
return G__31480;
})()
;
G__31479 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__31479__0.call(this);
case 1:
return G__31479__1.call(this,x);
case 2:
return G__31479__2.call(this,x,y);
case 3:
return G__31479__3.call(this,x,y,z);
default:
var G__31483 = null;
if (arguments.length > 3) {
var G__31484__i = 0, G__31484__a = new Array(arguments.length -  3);
while (G__31484__i < G__31484__a.length) {G__31484__a[G__31484__i] = arguments[G__31484__i + 3]; ++G__31484__i;}
G__31483 = new cljs.core.IndexedSeq(G__31484__a,0);
}
return G__31479__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__31483);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31479.cljs$lang$maxFixedArity = 3;
G__31479.cljs$lang$applyTo = G__31479__4.cljs$lang$applyTo;
G__31479.cljs$core$IFn$_invoke$arity$0 = G__31479__0;
G__31479.cljs$core$IFn$_invoke$arity$1 = G__31479__1;
G__31479.cljs$core$IFn$_invoke$arity$2 = G__31479__2;
G__31479.cljs$core$IFn$_invoke$arity$3 = G__31479__3;
G__31479.cljs$core$IFn$_invoke$arity$variadic = G__31479__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31479;
})()
});
var partial__5 = (function() { 
var G__31485__delegate = function (f,arg1,arg2,arg3,more){
return (function() { 
var G__31486__delegate = function (args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,arg1,arg2,arg3,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more,args));
};
var G__31486 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__31487__i = 0, G__31487__a = new Array(arguments.length -  0);
while (G__31487__i < G__31487__a.length) {G__31487__a[G__31487__i] = arguments[G__31487__i + 0]; ++G__31487__i;}
  args = new cljs.core.IndexedSeq(G__31487__a,0);
} 
return G__31486__delegate.call(this,args);};
G__31486.cljs$lang$maxFixedArity = 0;
G__31486.cljs$lang$applyTo = (function (arglist__31488){
var args = cljs.core.seq(arglist__31488);
return G__31486__delegate(args);
});
G__31486.cljs$core$IFn$_invoke$arity$variadic = G__31486__delegate;
return G__31486;
})()
;
};
var G__31485 = function (f,arg1,arg2,arg3,var_args){
var more = null;
if (arguments.length > 4) {
var G__31489__i = 0, G__31489__a = new Array(arguments.length -  4);
while (G__31489__i < G__31489__a.length) {G__31489__a[G__31489__i] = arguments[G__31489__i + 4]; ++G__31489__i;}
  more = new cljs.core.IndexedSeq(G__31489__a,0);
} 
return G__31485__delegate.call(this,f,arg1,arg2,arg3,more);};
G__31485.cljs$lang$maxFixedArity = 4;
G__31485.cljs$lang$applyTo = (function (arglist__31490){
var f = cljs.core.first(arglist__31490);
arglist__31490 = cljs.core.next(arglist__31490);
var arg1 = cljs.core.first(arglist__31490);
arglist__31490 = cljs.core.next(arglist__31490);
var arg2 = cljs.core.first(arglist__31490);
arglist__31490 = cljs.core.next(arglist__31490);
var arg3 = cljs.core.first(arglist__31490);
var more = cljs.core.rest(arglist__31490);
return G__31485__delegate(f,arg1,arg2,arg3,more);
});
G__31485.cljs$core$IFn$_invoke$arity$variadic = G__31485__delegate;
return G__31485;
})()
;
partial = function(f,arg1,arg2,arg3,var_args){
var more = var_args;
switch(arguments.length){
case 1:
return partial__1.call(this,f);
case 2:
return partial__2.call(this,f,arg1);
case 3:
return partial__3.call(this,f,arg1,arg2);
case 4:
return partial__4.call(this,f,arg1,arg2,arg3);
default:
var G__31491 = null;
if (arguments.length > 4) {
var G__31492__i = 0, G__31492__a = new Array(arguments.length -  4);
while (G__31492__i < G__31492__a.length) {G__31492__a[G__31492__i] = arguments[G__31492__i + 4]; ++G__31492__i;}
G__31491 = new cljs.core.IndexedSeq(G__31492__a,0);
}
return partial__5.cljs$core$IFn$_invoke$arity$variadic(f,arg1,arg2,arg3, G__31491);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partial.cljs$lang$maxFixedArity = 4;
partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
return partial;
})()
;
/**
* Takes a function f, and returns a function that calls f, replacing
* a nil first argument to f with the supplied value x. Higher arity
* versions can replace arguments in the second and third
* positions (y, z). Note that the function f can take any number of
* arguments, not just the one(s) being nil-patched.
*/
cljs.core.fnil = (function() {
var fnil = null;
var fnil__2 = (function (f,x){
return (function() {
var G__31525 = null;
var G__31525__1 = (function (a){
var G__31509 = (((a == null))?x:a);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31509) : f.call(null,G__31509));
});
var G__31525__2 = (function (a,b){
var G__31510 = (((a == null))?x:a);
var G__31511 = b;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31510,G__31511) : f.call(null,G__31510,G__31511));
});
var G__31525__3 = (function (a,b,c){
var G__31512 = (((a == null))?x:a);
var G__31513 = b;
var G__31514 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31512,G__31513,G__31514) : f.call(null,G__31512,G__31513,G__31514));
});
var G__31525__4 = (function() { 
var G__31526__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),b,c,ds);
};
var G__31526 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__31527__i = 0, G__31527__a = new Array(arguments.length -  3);
while (G__31527__i < G__31527__a.length) {G__31527__a[G__31527__i] = arguments[G__31527__i + 3]; ++G__31527__i;}
  ds = new cljs.core.IndexedSeq(G__31527__a,0);
} 
return G__31526__delegate.call(this,a,b,c,ds);};
G__31526.cljs$lang$maxFixedArity = 3;
G__31526.cljs$lang$applyTo = (function (arglist__31528){
var a = cljs.core.first(arglist__31528);
arglist__31528 = cljs.core.next(arglist__31528);
var b = cljs.core.first(arglist__31528);
arglist__31528 = cljs.core.next(arglist__31528);
var c = cljs.core.first(arglist__31528);
var ds = cljs.core.rest(arglist__31528);
return G__31526__delegate(a,b,c,ds);
});
G__31526.cljs$core$IFn$_invoke$arity$variadic = G__31526__delegate;
return G__31526;
})()
;
G__31525 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 1:
return G__31525__1.call(this,a);
case 2:
return G__31525__2.call(this,a,b);
case 3:
return G__31525__3.call(this,a,b,c);
default:
var G__31529 = null;
if (arguments.length > 3) {
var G__31530__i = 0, G__31530__a = new Array(arguments.length -  3);
while (G__31530__i < G__31530__a.length) {G__31530__a[G__31530__i] = arguments[G__31530__i + 3]; ++G__31530__i;}
G__31529 = new cljs.core.IndexedSeq(G__31530__a,0);
}
return G__31525__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__31529);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31525.cljs$lang$maxFixedArity = 3;
G__31525.cljs$lang$applyTo = G__31525__4.cljs$lang$applyTo;
G__31525.cljs$core$IFn$_invoke$arity$1 = G__31525__1;
G__31525.cljs$core$IFn$_invoke$arity$2 = G__31525__2;
G__31525.cljs$core$IFn$_invoke$arity$3 = G__31525__3;
G__31525.cljs$core$IFn$_invoke$arity$variadic = G__31525__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31525;
})()
});
var fnil__3 = (function (f,x,y){
return (function() {
var G__31531 = null;
var G__31531__2 = (function (a,b){
var G__31515 = (((a == null))?x:a);
var G__31516 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31515,G__31516) : f.call(null,G__31515,G__31516));
});
var G__31531__3 = (function (a,b,c){
var G__31517 = (((a == null))?x:a);
var G__31518 = (((b == null))?y:b);
var G__31519 = c;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31517,G__31518,G__31519) : f.call(null,G__31517,G__31518,G__31519));
});
var G__31531__4 = (function() { 
var G__31532__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),c,ds);
};
var G__31532 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__31533__i = 0, G__31533__a = new Array(arguments.length -  3);
while (G__31533__i < G__31533__a.length) {G__31533__a[G__31533__i] = arguments[G__31533__i + 3]; ++G__31533__i;}
  ds = new cljs.core.IndexedSeq(G__31533__a,0);
} 
return G__31532__delegate.call(this,a,b,c,ds);};
G__31532.cljs$lang$maxFixedArity = 3;
G__31532.cljs$lang$applyTo = (function (arglist__31534){
var a = cljs.core.first(arglist__31534);
arglist__31534 = cljs.core.next(arglist__31534);
var b = cljs.core.first(arglist__31534);
arglist__31534 = cljs.core.next(arglist__31534);
var c = cljs.core.first(arglist__31534);
var ds = cljs.core.rest(arglist__31534);
return G__31532__delegate(a,b,c,ds);
});
G__31532.cljs$core$IFn$_invoke$arity$variadic = G__31532__delegate;
return G__31532;
})()
;
G__31531 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__31531__2.call(this,a,b);
case 3:
return G__31531__3.call(this,a,b,c);
default:
var G__31535 = null;
if (arguments.length > 3) {
var G__31536__i = 0, G__31536__a = new Array(arguments.length -  3);
while (G__31536__i < G__31536__a.length) {G__31536__a[G__31536__i] = arguments[G__31536__i + 3]; ++G__31536__i;}
G__31535 = new cljs.core.IndexedSeq(G__31536__a,0);
}
return G__31531__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__31535);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31531.cljs$lang$maxFixedArity = 3;
G__31531.cljs$lang$applyTo = G__31531__4.cljs$lang$applyTo;
G__31531.cljs$core$IFn$_invoke$arity$2 = G__31531__2;
G__31531.cljs$core$IFn$_invoke$arity$3 = G__31531__3;
G__31531.cljs$core$IFn$_invoke$arity$variadic = G__31531__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31531;
})()
});
var fnil__4 = (function (f,x,y,z){
return (function() {
var G__31537 = null;
var G__31537__2 = (function (a,b){
var G__31520 = (((a == null))?x:a);
var G__31521 = (((b == null))?y:b);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31520,G__31521) : f.call(null,G__31520,G__31521));
});
var G__31537__3 = (function (a,b,c){
var G__31522 = (((a == null))?x:a);
var G__31523 = (((b == null))?y:b);
var G__31524 = (((c == null))?z:c);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31522,G__31523,G__31524) : f.call(null,G__31522,G__31523,G__31524));
});
var G__31537__4 = (function() { 
var G__31538__delegate = function (a,b,c,ds){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,(((a == null))?x:a),(((b == null))?y:b),(((c == null))?z:c),ds);
};
var G__31538 = function (a,b,c,var_args){
var ds = null;
if (arguments.length > 3) {
var G__31539__i = 0, G__31539__a = new Array(arguments.length -  3);
while (G__31539__i < G__31539__a.length) {G__31539__a[G__31539__i] = arguments[G__31539__i + 3]; ++G__31539__i;}
  ds = new cljs.core.IndexedSeq(G__31539__a,0);
} 
return G__31538__delegate.call(this,a,b,c,ds);};
G__31538.cljs$lang$maxFixedArity = 3;
G__31538.cljs$lang$applyTo = (function (arglist__31540){
var a = cljs.core.first(arglist__31540);
arglist__31540 = cljs.core.next(arglist__31540);
var b = cljs.core.first(arglist__31540);
arglist__31540 = cljs.core.next(arglist__31540);
var c = cljs.core.first(arglist__31540);
var ds = cljs.core.rest(arglist__31540);
return G__31538__delegate(a,b,c,ds);
});
G__31538.cljs$core$IFn$_invoke$arity$variadic = G__31538__delegate;
return G__31538;
})()
;
G__31537 = function(a,b,c,var_args){
var ds = var_args;
switch(arguments.length){
case 2:
return G__31537__2.call(this,a,b);
case 3:
return G__31537__3.call(this,a,b,c);
default:
var G__31541 = null;
if (arguments.length > 3) {
var G__31542__i = 0, G__31542__a = new Array(arguments.length -  3);
while (G__31542__i < G__31542__a.length) {G__31542__a[G__31542__i] = arguments[G__31542__i + 3]; ++G__31542__i;}
G__31541 = new cljs.core.IndexedSeq(G__31542__a,0);
}
return G__31537__4.cljs$core$IFn$_invoke$arity$variadic(a,b,c, G__31541);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31537.cljs$lang$maxFixedArity = 3;
G__31537.cljs$lang$applyTo = G__31537__4.cljs$lang$applyTo;
G__31537.cljs$core$IFn$_invoke$arity$2 = G__31537__2;
G__31537.cljs$core$IFn$_invoke$arity$3 = G__31537__3;
G__31537.cljs$core$IFn$_invoke$arity$variadic = G__31537__4.cljs$core$IFn$_invoke$arity$variadic;
return G__31537;
})()
});
fnil = function(f,x,y,z){
switch(arguments.length){
case 2:
return fnil__2.call(this,f,x);
case 3:
return fnil__3.call(this,f,x,y);
case 4:
return fnil__4.call(this,f,x,y,z);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
return fnil;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to 0
* and the first item of coll, followed by applying f to 1 and the second
* item in coll, etc, until coll is exhausted. Thus function f should
* accept 2 arguments, index and item.
*/
cljs.core.map_indexed = (function() {
var map_indexed = null;
var map_indexed__1 = (function (f){
return (function (rf){
var i = (function (){var G__31573 = (-1);
return (cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__31573) : cljs.core.volatile_BANG_.call(null,G__31573));
})();
return ((function (i){
return (function() {
var G__31603 = null;
var G__31603__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31603__1 = (function (result){
var G__31574 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31574) : rf.call(null,G__31574));
});
var G__31603__2 = (function (result,input){
var G__31575 = result;
var G__31576 = (function (){var G__31577 = cljs.core._vreset_BANG_(i,(cljs.core._deref(i) + (1)));
var G__31578 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31577,G__31578) : f.call(null,G__31577,G__31578));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31575,G__31576) : rf.call(null,G__31575,G__31576));
});
G__31603 = function(result,input){
switch(arguments.length){
case 0:
return G__31603__0.call(this);
case 1:
return G__31603__1.call(this,result);
case 2:
return G__31603__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31603.cljs$core$IFn$_invoke$arity$0 = G__31603__0;
G__31603.cljs$core$IFn$_invoke$arity$1 = G__31603__1;
G__31603.cljs$core$IFn$_invoke$arity$2 = G__31603__2;
return G__31603;
})()
;})(i))
});
});
var map_indexed__2 = (function (f,coll){
var mapi = (function mapi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__23851__auto___31604 = size;
var i_31605 = (0);
while(true){
if((i_31605 < n__23851__auto___31604)){
cljs.core.chunk_append(b,(function (){var G__31599 = (idx + i_31605);
var G__31600 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_31605);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31599,G__31600) : f.call(null,G__31599,G__31600));
})());

var G__31606 = (i_31605 + (1));
i_31605 = G__31606;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),mapi((idx + size),cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__31601 = idx;
var G__31602 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31601,G__31602) : f.call(null,G__31601,G__31602));
})(),mapi((idx + (1)),cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
return mapi((0),coll);
});
map_indexed = function(f,coll){
switch(arguments.length){
case 1:
return map_indexed__1.call(this,f);
case 2:
return map_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
return map_indexed;
})()
;
/**
* Returns a lazy sequence of the non-nil results of (f item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a transducer when no collection is provided.
*/
cljs.core.keep = (function() {
var keep = null;
var keep__1 = (function (f){
return (function (rf){
return (function() {
var G__31625 = null;
var G__31625__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31625__1 = (function (result){
var G__31619 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31619) : rf.call(null,G__31619));
});
var G__31625__2 = (function (result,input){
var v = (function (){var G__31620 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31620) : f.call(null,G__31620));
})();
if((v == null)){
return result;
} else {
var G__31621 = result;
var G__31622 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31621,G__31622) : rf.call(null,G__31621,G__31622));
}
});
G__31625 = function(result,input){
switch(arguments.length){
case 0:
return G__31625__0.call(this);
case 1:
return G__31625__1.call(this,result);
case 2:
return G__31625__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31625.cljs$core$IFn$_invoke$arity$0 = G__31625__0;
G__31625.cljs$core$IFn$_invoke$arity$1 = G__31625__1;
G__31625.cljs$core$IFn$_invoke$arity$2 = G__31625__2;
return G__31625;
})()
});
});
var keep__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__23851__auto___31626 = size;
var i_31627 = (0);
while(true){
if((i_31627 < n__23851__auto___31626)){
var x_31628 = (function (){var G__31623 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_31627);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31623) : f.call(null,G__31623));
})();
if((x_31628 == null)){
} else {
cljs.core.chunk_append(b,x_31628);
}

var G__31629 = (i_31627 + (1));
i_31627 = G__31629;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__31624 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31624) : f.call(null,G__31624));
})();
if((x == null)){
return keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s));
} else {
return cljs.core.cons(x,keep.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
keep = function(f,coll){
switch(arguments.length){
case 1:
return keep__1.call(this,f);
case 2:
return keep__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
return keep;
})()
;

/**
* @constructor
*/
cljs.core.Atom = (function (state,meta,validator,watches){
this.state = state;
this.meta = meta;
this.validator = validator;
this.watches = watches;
this.cljs$lang$protocol_mask$partition0$ = 6455296;
this.cljs$lang$protocol_mask$partition1$ = 16386;
})
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__31630 = this$__$1;
return goog.getUid(G__31630);
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = (function (this$,oldval,newval){
var self__ = this;
var this$__$1 = this;
var seq__31631 = cljs.core.seq(self__.watches);
var chunk__31632 = null;
var count__31633 = (0);
var i__31634 = (0);
while(true){
if((i__31634 < count__31633)){
var vec__31635 = chunk__31632.cljs$core$IIndexed$_nth$arity$2(null,i__31634);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31635,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31635,(1),null);
var G__31636_31645 = key;
var G__31637_31646 = this$__$1;
var G__31638_31647 = oldval;
var G__31639_31648 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31636_31645,G__31637_31646,G__31638_31647,G__31639_31648) : f.call(null,G__31636_31645,G__31637_31646,G__31638_31647,G__31639_31648));

var G__31649 = seq__31631;
var G__31650 = chunk__31632;
var G__31651 = count__31633;
var G__31652 = (i__31634 + (1));
seq__31631 = G__31649;
chunk__31632 = G__31650;
count__31633 = G__31651;
i__31634 = G__31652;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__31631);
if(temp__4126__auto__){
var seq__31631__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__31631__$1)){
var c__23751__auto__ = cljs.core.chunk_first(seq__31631__$1);
var G__31653 = cljs.core.chunk_rest(seq__31631__$1);
var G__31654 = c__23751__auto__;
var G__31655 = cljs.core.count(c__23751__auto__);
var G__31656 = (0);
seq__31631 = G__31653;
chunk__31632 = G__31654;
count__31633 = G__31655;
i__31634 = G__31656;
continue;
} else {
var vec__31640 = cljs.core.first(seq__31631__$1);
var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31640,(0),null);
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__31640,(1),null);
var G__31641_31657 = key;
var G__31642_31658 = this$__$1;
var G__31643_31659 = oldval;
var G__31644_31660 = newval;
(f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__31641_31657,G__31642_31658,G__31643_31659,G__31644_31660) : f.call(null,G__31641_31657,G__31642_31658,G__31643_31659,G__31644_31660));

var G__31661 = cljs.core.next(seq__31631__$1);
var G__31662 = null;
var G__31663 = (0);
var G__31664 = (0);
seq__31631 = G__31661;
chunk__31632 = G__31662;
count__31633 = G__31663;
i__31634 = G__31664;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = (function (this$,key,f){
var self__ = this;
var this$__$1 = this;
this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches,key,f);

return this$__$1;
});

cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = (function (this$,key){
var self__ = this;
var this$__$1 = this;
return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches,key);
});

cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.meta;
});

cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return (o__$1 === other);
});

cljs.core.Atom.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Atom.cljs$lang$type = true;

cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";

cljs.core.Atom.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Atom");
});

cljs.core.__GT_Atom = (function __GT_Atom(state,meta,validator,watches){
return (new cljs.core.Atom(state,meta,validator,watches));
});

/**
* Creates and returns an Atom with an initial value of x and zero or
* more options (in any order):
* 
* :meta metadata-map
* 
* :validator validate-fn
* 
* If metadata-map is supplied, it will be come the metadata on the
* atom. validate-fn must be nil or a side-effect-free fn of one
* argument, which will be passed the intended new state on any state
* change. If the new state is unacceptable, the validate-fn should
* return false or throw an Error.  If either of these error conditions
* occur, then the value of the atom will not change.
* @param {...*} var_args
*/
cljs.core.atom = (function() {
var atom = null;
var atom__1 = (function (x){
return (new cljs.core.Atom(x,null,null,null));
});
var atom__2 = (function() { 
var G__31668__delegate = function (x,p__31665){
var map__31667 = p__31665;
var map__31667__$1 = ((cljs.core.seq_QMARK_(map__31667))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__31667):map__31667);
var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31667__$1,cljs.core.constant$keyword$8);
var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__31667__$1,cljs.core.constant$keyword$3);
return (new cljs.core.Atom(x,meta,validator,null));
};
var G__31668 = function (x,var_args){
var p__31665 = null;
if (arguments.length > 1) {
var G__31669__i = 0, G__31669__a = new Array(arguments.length -  1);
while (G__31669__i < G__31669__a.length) {G__31669__a[G__31669__i] = arguments[G__31669__i + 1]; ++G__31669__i;}
  p__31665 = new cljs.core.IndexedSeq(G__31669__a,0);
} 
return G__31668__delegate.call(this,x,p__31665);};
G__31668.cljs$lang$maxFixedArity = 1;
G__31668.cljs$lang$applyTo = (function (arglist__31670){
var x = cljs.core.first(arglist__31670);
var p__31665 = cljs.core.rest(arglist__31670);
return G__31668__delegate(x,p__31665);
});
G__31668.cljs$core$IFn$_invoke$arity$variadic = G__31668__delegate;
return G__31668;
})()
;
atom = function(x,var_args){
var p__31665 = var_args;
switch(arguments.length){
case 1:
return atom__1.call(this,x);
default:
var G__31671 = null;
if (arguments.length > 1) {
var G__31672__i = 0, G__31672__a = new Array(arguments.length -  1);
while (G__31672__i < G__31672__a.length) {G__31672__a[G__31672__i] = arguments[G__31672__i + 1]; ++G__31672__i;}
G__31671 = new cljs.core.IndexedSeq(G__31672__a,0);
}
return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__31671);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
atom.cljs$lang$maxFixedArity = 1;
atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
return atom;
})()
;
/**
* Sets the value of atom to newval without regard for the
* current value. Returns newval.
*/
cljs.core.reset_BANG_ = (function reset_BANG_(a,new_value){
if((a instanceof cljs.core.Atom)){
var validate = a.validator;
if((validate == null)){
} else {
if(cljs.core.truth_((function (){var G__31675 = new_value;
return (validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__31675) : validate.call(null,G__31675));
})())){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str("Validator rejected reference state"),cljs.core.str("\n"),cljs.core.str((function (){var G__31676 = cljs.core.list(new cljs.core.Symbol(null,"validate","validate",1439230700,null),new cljs.core.Symbol(null,"new-value","new-value",-1567397401,null));
return (cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__31676) : cljs.core.pr_str.call(null,G__31676));
})())].join('')));
}
}

var old_value = a.state;
a.state = new_value;

if((a.watches == null)){
} else {
cljs.core._notify_watches(a,old_value,new_value);
}

return new_value;
} else {
return cljs.core._reset_BANG_(a,new_value);
}
});
/**
* Atomically swaps the value of atom to be:
* (apply f current-value-of-atom args). Note that f may be called
* multiple times, and thus should be free of side effects.  Returns
* the value that was swapped in.
* @param {...*} var_args
*/
cljs.core.swap_BANG_ = (function() {
var swap_BANG_ = null;
var swap_BANG___2 = (function (a,f){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__31683 = a.state;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__31683) : f.call(null,G__31683));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a,f);
}
});
var swap_BANG___3 = (function (a,f,x){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__31684 = a.state;
var G__31685 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31684,G__31685) : f.call(null,G__31684,G__31685));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a,f,x);
}
});
var swap_BANG___4 = (function (a,f,x,y){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,(function (){var G__31686 = a.state;
var G__31687 = x;
var G__31688 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__31686,G__31687,G__31688) : f.call(null,G__31686,G__31687,G__31688));
})());
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a,f,x,y);
}
});
var swap_BANG___5 = (function() { 
var G__31689__delegate = function (a,f,x,y,more){
if((a instanceof cljs.core.Atom)){
return cljs.core.reset_BANG_(a,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,a.state,x,y,more));
} else {
return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a,f,x,y,more);
}
};
var G__31689 = function (a,f,x,y,var_args){
var more = null;
if (arguments.length > 4) {
var G__31690__i = 0, G__31690__a = new Array(arguments.length -  4);
while (G__31690__i < G__31690__a.length) {G__31690__a[G__31690__i] = arguments[G__31690__i + 4]; ++G__31690__i;}
  more = new cljs.core.IndexedSeq(G__31690__a,0);
} 
return G__31689__delegate.call(this,a,f,x,y,more);};
G__31689.cljs$lang$maxFixedArity = 4;
G__31689.cljs$lang$applyTo = (function (arglist__31691){
var a = cljs.core.first(arglist__31691);
arglist__31691 = cljs.core.next(arglist__31691);
var f = cljs.core.first(arglist__31691);
arglist__31691 = cljs.core.next(arglist__31691);
var x = cljs.core.first(arglist__31691);
arglist__31691 = cljs.core.next(arglist__31691);
var y = cljs.core.first(arglist__31691);
var more = cljs.core.rest(arglist__31691);
return G__31689__delegate(a,f,x,y,more);
});
G__31689.cljs$core$IFn$_invoke$arity$variadic = G__31689__delegate;
return G__31689;
})()
;
swap_BANG_ = function(a,f,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return swap_BANG___2.call(this,a,f);
case 3:
return swap_BANG___3.call(this,a,f,x);
case 4:
return swap_BANG___4.call(this,a,f,x,y);
default:
var G__31692 = null;
if (arguments.length > 4) {
var G__31693__i = 0, G__31693__a = new Array(arguments.length -  4);
while (G__31693__i < G__31693__a.length) {G__31693__a[G__31693__i] = arguments[G__31693__i + 4]; ++G__31693__i;}
G__31692 = new cljs.core.IndexedSeq(G__31693__a,0);
}
return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a,f,x,y, G__31692);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
swap_BANG_.cljs$lang$maxFixedArity = 4;
swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
return swap_BANG_;
})()
;
/**
* Atomically sets the value of atom to newval if and only if the
* current value of the atom is equal to oldval. Returns true if
* set happened, else false.
*/
cljs.core.compare_and_set_BANG_ = (function compare_and_set_BANG_(a,oldval,newval){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null),oldval)){
cljs.core.reset_BANG_(a,newval);

return true;
} else {
return false;
}
});
/**
* Sets the validator-fn for an atom. validator-fn must be nil or a
* side-effect-free fn of one argument, which will be passed the intended
* new state on any state change. If the new state is unacceptable, the
* validator-fn should return false or throw an Error. If the current state
* is not acceptable to the new validator, an Error will be thrown and the
* validator will not be changed.
*/
cljs.core.set_validator_BANG_ = (function set_validator_BANG_(iref,val){
return iref.validator = val;
});
/**
* Gets the validator-fn for a var/ref/agent/atom.
*/
cljs.core.get_validator = (function get_validator(iref){
return iref.validator;
});

/**
* @constructor
*/
cljs.core.Volatile = (function (state){
this.state = state;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return self__.state;
});

cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;

cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = (function (_,new_state){
var self__ = this;
var ___$1 = this;
return self__.state = new_state;
});

cljs.core.Volatile.cljs$lang$type = true;

cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";

cljs.core.Volatile.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Volatile");
});

cljs.core.__GT_Volatile = (function __GT_Volatile(state){
return (new cljs.core.Volatile(state));
});

/**
* Creates and returns a Volatile with an initial value of val.
*/
cljs.core.volatile_BANG_ = (function volatile_BANG_(val){
return (new cljs.core.Volatile(val));
});
/**
* Returns true if x is a volatile.
*/
cljs.core.volatile_QMARK_ = (function volatile_QMARK_(x){
return (x instanceof cljs.core.Volatile);
});
/**
* Sets the value of volatile to newval without regard for the
* current value. Returns newval.
*/
cljs.core.vreset_BANG_ = (function vreset_BANG_(vol,newval){
return cljs.core._vreset_BANG_(vol,newval);
});
/**
* Returns a lazy sequence of the non-nil results of (f index item). Note,
* this means false return values will be included.  f must be free of
* side-effects.  Returns a stateful transducer when no collection is
* provided.
*/
cljs.core.keep_indexed = (function() {
var keep_indexed = null;
var keep_indexed__1 = (function (f){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__31760 = null;
var G__31760__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__31760__1 = (function (result){
var G__31727 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__31727) : rf.call(null,G__31727));
});
var G__31760__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
var v = (function (){var G__31728 = i;
var G__31729 = input;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31728,G__31729) : f.call(null,G__31728,G__31729));
})();
if((v == null)){
return result;
} else {
var G__31730 = result;
var G__31731 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__31730,G__31731) : rf.call(null,G__31730,G__31731));
}
});
G__31760 = function(result,input){
switch(arguments.length){
case 0:
return G__31760__0.call(this);
case 1:
return G__31760__1.call(this,result);
case 2:
return G__31760__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__31760.cljs$core$IFn$_invoke$arity$0 = G__31760__0;
G__31760.cljs$core$IFn$_invoke$arity$1 = G__31760__1;
G__31760.cljs$core$IFn$_invoke$arity$2 = G__31760__2;
return G__31760;
})()
;})(ia))
});
});
var keep_indexed__2 = (function (f,coll){
var keepi = (function keepi(idx,coll__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__23851__auto___31761 = size;
var i_31762 = (0);
while(true){
if((i_31762 < n__23851__auto___31761)){
var x_31763 = (function (){var G__31756 = (idx + i_31762);
var G__31757 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_31762);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31756,G__31757) : f.call(null,G__31756,G__31757));
})();
if((x_31763 == null)){
} else {
cljs.core.chunk_append(b,x_31763);
}

var G__31764 = (i_31762 + (1));
i_31762 = G__31764;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),keepi((idx + size),cljs.core.chunk_rest(s)));
} else {
var x = (function (){var G__31758 = idx;
var G__31759 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__31758,G__31759) : f.call(null,G__31758,G__31759));
})();
if((x == null)){
return keepi((idx + (1)),cljs.core.rest(s));
} else {
return cljs.core.cons(x,keepi((idx + (1)),cljs.core.rest(s)));
}
}
} else {
return null;
}
}),null,null));
});
return keepi((0),coll);
});
keep_indexed = function(f,coll){
switch(arguments.length){
case 1:
return keep_indexed__1.call(this,f);
case 2:
return keep_indexed__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
return keep_indexed;
})()
;
/**
* Takes a set of predicates and returns a function f that returns true if all of its
* composing predicates return a logical true value against all of its arguments, else it returns
* false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical false result against the original predicates.
* @param {...*} var_args
*/
cljs.core.every_pred = (function() {
var every_pred = null;
var every_pred__1 = (function (p){
return (function() {
var ep1 = null;
var ep1__0 = (function (){
return true;
});
var ep1__1 = (function (x){
return cljs.core.boolean$((function (){var G__31978 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31978) : p.call(null,G__31978));
})());
});
var ep1__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__22952__auto__ = (function (){var G__31980 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31980) : p.call(null,G__31980));
})();
if(cljs.core.truth_(and__22952__auto__)){
var G__31981 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31981) : p.call(null,G__31981));
} else {
return and__22952__auto__;
}
})());
});
var ep1__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__22952__auto__ = (function (){var G__31983 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31983) : p.call(null,G__31983));
})();
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__31985 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31985) : p.call(null,G__31985));
})();
if(cljs.core.truth_(and__22952__auto____$1)){
var G__31986 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__31986) : p.call(null,G__31986));
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
})());
});
var ep1__4 = (function() { 
var G__32155__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep1.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(p,args)));
};
var G__32155 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32156__i = 0, G__32156__a = new Array(arguments.length -  3);
while (G__32156__i < G__32156__a.length) {G__32156__a[G__32156__i] = arguments[G__32156__i + 3]; ++G__32156__i;}
  args = new cljs.core.IndexedSeq(G__32156__a,0);
} 
return G__32155__delegate.call(this,x,y,z,args);};
G__32155.cljs$lang$maxFixedArity = 3;
G__32155.cljs$lang$applyTo = (function (arglist__32157){
var x = cljs.core.first(arglist__32157);
arglist__32157 = cljs.core.next(arglist__32157);
var y = cljs.core.first(arglist__32157);
arglist__32157 = cljs.core.next(arglist__32157);
var z = cljs.core.first(arglist__32157);
var args = cljs.core.rest(arglist__32157);
return G__32155__delegate(x,y,z,args);
});
G__32155.cljs$core$IFn$_invoke$arity$variadic = G__32155__delegate;
return G__32155;
})()
;
ep1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep1__0.call(this);
case 1:
return ep1__1.call(this,x);
case 2:
return ep1__2.call(this,x,y);
case 3:
return ep1__3.call(this,x,y,z);
default:
var G__32158 = null;
if (arguments.length > 3) {
var G__32159__i = 0, G__32159__a = new Array(arguments.length -  3);
while (G__32159__i < G__32159__a.length) {G__32159__a[G__32159__i] = arguments[G__32159__i + 3]; ++G__32159__i;}
G__32158 = new cljs.core.IndexedSeq(G__32159__a,0);
}
return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32158);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep1.cljs$lang$maxFixedArity = 3;
ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
return ep1;
})()
});
var every_pred__2 = (function (p1,p2){
return (function() {
var ep2 = null;
var ep2__0 = (function (){
return true;
});
var ep2__1 = (function (x){
return cljs.core.boolean$((function (){var and__22952__auto__ = (function (){var G__32018 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32018) : p1.call(null,G__32018));
})();
if(cljs.core.truth_(and__22952__auto__)){
var G__32019 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32019) : p2.call(null,G__32019));
} else {
return and__22952__auto__;
}
})());
});
var ep2__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__22952__auto__ = (function (){var G__32021 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32021) : p1.call(null,G__32021));
})();
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__32023 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32023) : p1.call(null,G__32023));
})();
if(cljs.core.truth_(and__22952__auto____$1)){
var and__22952__auto____$2 = (function (){var G__32025 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32025) : p2.call(null,G__32025));
})();
if(cljs.core.truth_(and__22952__auto____$2)){
var G__32026 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32026) : p2.call(null,G__32026));
} else {
return and__22952__auto____$2;
}
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
})());
});
var ep2__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__22952__auto__ = (function (){var G__32028 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32028) : p1.call(null,G__32028));
})();
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__32030 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32030) : p1.call(null,G__32030));
})();
if(cljs.core.truth_(and__22952__auto____$1)){
var and__22952__auto____$2 = (function (){var G__32032 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32032) : p1.call(null,G__32032));
})();
if(cljs.core.truth_(and__22952__auto____$2)){
var and__22952__auto____$3 = (function (){var G__32034 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32034) : p2.call(null,G__32034));
})();
if(cljs.core.truth_(and__22952__auto____$3)){
var and__22952__auto____$4 = (function (){var G__32036 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32036) : p2.call(null,G__32036));
})();
if(cljs.core.truth_(and__22952__auto____$4)){
var G__32037 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32037) : p2.call(null,G__32037));
} else {
return and__22952__auto____$4;
}
} else {
return and__22952__auto____$3;
}
} else {
return and__22952__auto____$2;
}
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
})());
});
var ep2__4 = (function() { 
var G__32160__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep2.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__31765_SHARP_){
var and__22952__auto__ = (function (){var G__32042 = p1__31765_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32042) : p1.call(null,G__32042));
})();
if(cljs.core.truth_(and__22952__auto__)){
var G__32043 = p1__31765_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32043) : p2.call(null,G__32043));
} else {
return and__22952__auto__;
}
}),args)));
};
var G__32160 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32161__i = 0, G__32161__a = new Array(arguments.length -  3);
while (G__32161__i < G__32161__a.length) {G__32161__a[G__32161__i] = arguments[G__32161__i + 3]; ++G__32161__i;}
  args = new cljs.core.IndexedSeq(G__32161__a,0);
} 
return G__32160__delegate.call(this,x,y,z,args);};
G__32160.cljs$lang$maxFixedArity = 3;
G__32160.cljs$lang$applyTo = (function (arglist__32162){
var x = cljs.core.first(arglist__32162);
arglist__32162 = cljs.core.next(arglist__32162);
var y = cljs.core.first(arglist__32162);
arglist__32162 = cljs.core.next(arglist__32162);
var z = cljs.core.first(arglist__32162);
var args = cljs.core.rest(arglist__32162);
return G__32160__delegate(x,y,z,args);
});
G__32160.cljs$core$IFn$_invoke$arity$variadic = G__32160__delegate;
return G__32160;
})()
;
ep2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep2__0.call(this);
case 1:
return ep2__1.call(this,x);
case 2:
return ep2__2.call(this,x,y);
case 3:
return ep2__3.call(this,x,y,z);
default:
var G__32163 = null;
if (arguments.length > 3) {
var G__32164__i = 0, G__32164__a = new Array(arguments.length -  3);
while (G__32164__i < G__32164__a.length) {G__32164__a[G__32164__i] = arguments[G__32164__i + 3]; ++G__32164__i;}
G__32163 = new cljs.core.IndexedSeq(G__32164__a,0);
}
return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32163);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep2.cljs$lang$maxFixedArity = 3;
ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
return ep2;
})()
});
var every_pred__3 = (function (p1,p2,p3){
return (function() {
var ep3 = null;
var ep3__0 = (function (){
return true;
});
var ep3__1 = (function (x){
return cljs.core.boolean$((function (){var and__22952__auto__ = (function (){var G__32089 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32089) : p1.call(null,G__32089));
})();
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__32091 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32091) : p2.call(null,G__32091));
})();
if(cljs.core.truth_(and__22952__auto____$1)){
var G__32092 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32092) : p3.call(null,G__32092));
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
})());
});
var ep3__2 = (function (x,y){
return cljs.core.boolean$((function (){var and__22952__auto__ = (function (){var G__32094 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32094) : p1.call(null,G__32094));
})();
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__32096 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32096) : p2.call(null,G__32096));
})();
if(cljs.core.truth_(and__22952__auto____$1)){
var and__22952__auto____$2 = (function (){var G__32098 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32098) : p3.call(null,G__32098));
})();
if(cljs.core.truth_(and__22952__auto____$2)){
var and__22952__auto____$3 = (function (){var G__32100 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32100) : p1.call(null,G__32100));
})();
if(cljs.core.truth_(and__22952__auto____$3)){
var and__22952__auto____$4 = (function (){var G__32102 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32102) : p2.call(null,G__32102));
})();
if(cljs.core.truth_(and__22952__auto____$4)){
var G__32103 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32103) : p3.call(null,G__32103));
} else {
return and__22952__auto____$4;
}
} else {
return and__22952__auto____$3;
}
} else {
return and__22952__auto____$2;
}
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
})());
});
var ep3__3 = (function (x,y,z){
return cljs.core.boolean$((function (){var and__22952__auto__ = (function (){var G__32105 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32105) : p1.call(null,G__32105));
})();
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__32107 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32107) : p2.call(null,G__32107));
})();
if(cljs.core.truth_(and__22952__auto____$1)){
var and__22952__auto____$2 = (function (){var G__32109 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32109) : p3.call(null,G__32109));
})();
if(cljs.core.truth_(and__22952__auto____$2)){
var and__22952__auto____$3 = (function (){var G__32111 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32111) : p1.call(null,G__32111));
})();
if(cljs.core.truth_(and__22952__auto____$3)){
var and__22952__auto____$4 = (function (){var G__32113 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32113) : p2.call(null,G__32113));
})();
if(cljs.core.truth_(and__22952__auto____$4)){
var and__22952__auto____$5 = (function (){var G__32115 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32115) : p3.call(null,G__32115));
})();
if(cljs.core.truth_(and__22952__auto____$5)){
var and__22952__auto____$6 = (function (){var G__32117 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32117) : p1.call(null,G__32117));
})();
if(cljs.core.truth_(and__22952__auto____$6)){
var and__22952__auto____$7 = (function (){var G__32119 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32119) : p2.call(null,G__32119));
})();
if(cljs.core.truth_(and__22952__auto____$7)){
var G__32120 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32120) : p3.call(null,G__32120));
} else {
return and__22952__auto____$7;
}
} else {
return and__22952__auto____$6;
}
} else {
return and__22952__auto____$5;
}
} else {
return and__22952__auto____$4;
}
} else {
return and__22952__auto____$3;
}
} else {
return and__22952__auto____$2;
}
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
})());
});
var ep3__4 = (function() { 
var G__32165__delegate = function (x,y,z,args){
return cljs.core.boolean$((ep3.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_((function (p1__31766_SHARP_){
var and__22952__auto__ = (function (){var G__32127 = p1__31766_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32127) : p1.call(null,G__32127));
})();
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__32129 = p1__31766_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32129) : p2.call(null,G__32129));
})();
if(cljs.core.truth_(and__22952__auto____$1)){
var G__32130 = p1__31766_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32130) : p3.call(null,G__32130));
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
}),args)));
};
var G__32165 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32166__i = 0, G__32166__a = new Array(arguments.length -  3);
while (G__32166__i < G__32166__a.length) {G__32166__a[G__32166__i] = arguments[G__32166__i + 3]; ++G__32166__i;}
  args = new cljs.core.IndexedSeq(G__32166__a,0);
} 
return G__32165__delegate.call(this,x,y,z,args);};
G__32165.cljs$lang$maxFixedArity = 3;
G__32165.cljs$lang$applyTo = (function (arglist__32167){
var x = cljs.core.first(arglist__32167);
arglist__32167 = cljs.core.next(arglist__32167);
var y = cljs.core.first(arglist__32167);
arglist__32167 = cljs.core.next(arglist__32167);
var z = cljs.core.first(arglist__32167);
var args = cljs.core.rest(arglist__32167);
return G__32165__delegate(x,y,z,args);
});
G__32165.cljs$core$IFn$_invoke$arity$variadic = G__32165__delegate;
return G__32165;
})()
;
ep3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return ep3__0.call(this);
case 1:
return ep3__1.call(this,x);
case 2:
return ep3__2.call(this,x,y);
case 3:
return ep3__3.call(this,x,y,z);
default:
var G__32168 = null;
if (arguments.length > 3) {
var G__32169__i = 0, G__32169__a = new Array(arguments.length -  3);
while (G__32169__i < G__32169__a.length) {G__32169__a[G__32169__i] = arguments[G__32169__i + 3]; ++G__32169__i;}
G__32168 = new cljs.core.IndexedSeq(G__32169__a,0);
}
return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32168);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ep3.cljs$lang$maxFixedArity = 3;
ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
return ep3;
})()
});
var every_pred__4 = (function() { 
var G__32170__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var epn = null;
var epn__0 = (function (){
return true;
});
var epn__1 = (function (x){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__31767_SHARP_){
var G__32146 = x;
return (p1__31767_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__31767_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32146) : p1__31767_SHARP_.call(null,G__32146));
});})(ps__$1))
,ps__$1);
});
var epn__2 = (function (x,y){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__31768_SHARP_){
var and__22952__auto__ = (function (){var G__32148 = x;
return (p1__31768_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__31768_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32148) : p1__31768_SHARP_.call(null,G__32148));
})();
if(cljs.core.truth_(and__22952__auto__)){
var G__32149 = y;
return (p1__31768_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__31768_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32149) : p1__31768_SHARP_.call(null,G__32149));
} else {
return and__22952__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__3 = (function (x,y,z){
return cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__31769_SHARP_){
var and__22952__auto__ = (function (){var G__32151 = x;
return (p1__31769_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__31769_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32151) : p1__31769_SHARP_.call(null,G__32151));
})();
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__32153 = y;
return (p1__31769_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__31769_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32153) : p1__31769_SHARP_.call(null,G__32153));
})();
if(cljs.core.truth_(and__22952__auto____$1)){
var G__32154 = z;
return (p1__31769_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__31769_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32154) : p1__31769_SHARP_.call(null,G__32154));
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
});})(ps__$1))
,ps__$1);
});
var epn__4 = (function() { 
var G__32171__delegate = function (x,y,z,args){
return cljs.core.boolean$((epn.cljs$core$IFn$_invoke$arity$3(x,y,z)) && (cljs.core.every_QMARK_(((function (ps__$1){
return (function (p1__31770_SHARP_){
return cljs.core.every_QMARK_(p1__31770_SHARP_,args);
});})(ps__$1))
,ps__$1)));
};
var G__32171 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32172__i = 0, G__32172__a = new Array(arguments.length -  3);
while (G__32172__i < G__32172__a.length) {G__32172__a[G__32172__i] = arguments[G__32172__i + 3]; ++G__32172__i;}
  args = new cljs.core.IndexedSeq(G__32172__a,0);
} 
return G__32171__delegate.call(this,x,y,z,args);};
G__32171.cljs$lang$maxFixedArity = 3;
G__32171.cljs$lang$applyTo = (function (arglist__32173){
var x = cljs.core.first(arglist__32173);
arglist__32173 = cljs.core.next(arglist__32173);
var y = cljs.core.first(arglist__32173);
arglist__32173 = cljs.core.next(arglist__32173);
var z = cljs.core.first(arglist__32173);
var args = cljs.core.rest(arglist__32173);
return G__32171__delegate(x,y,z,args);
});
G__32171.cljs$core$IFn$_invoke$arity$variadic = G__32171__delegate;
return G__32171;
})()
;
epn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return epn__0.call(this);
case 1:
return epn__1.call(this,x);
case 2:
return epn__2.call(this,x,y);
case 3:
return epn__3.call(this,x,y,z);
default:
var G__32174 = null;
if (arguments.length > 3) {
var G__32175__i = 0, G__32175__a = new Array(arguments.length -  3);
while (G__32175__i < G__32175__a.length) {G__32175__a[G__32175__i] = arguments[G__32175__i + 3]; ++G__32175__i;}
G__32174 = new cljs.core.IndexedSeq(G__32175__a,0);
}
return epn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32174);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
epn.cljs$lang$maxFixedArity = 3;
epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
return epn;
})()
;})(ps__$1))
};
var G__32170 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__32176__i = 0, G__32176__a = new Array(arguments.length -  3);
while (G__32176__i < G__32176__a.length) {G__32176__a[G__32176__i] = arguments[G__32176__i + 3]; ++G__32176__i;}
  ps = new cljs.core.IndexedSeq(G__32176__a,0);
} 
return G__32170__delegate.call(this,p1,p2,p3,ps);};
G__32170.cljs$lang$maxFixedArity = 3;
G__32170.cljs$lang$applyTo = (function (arglist__32177){
var p1 = cljs.core.first(arglist__32177);
arglist__32177 = cljs.core.next(arglist__32177);
var p2 = cljs.core.first(arglist__32177);
arglist__32177 = cljs.core.next(arglist__32177);
var p3 = cljs.core.first(arglist__32177);
var ps = cljs.core.rest(arglist__32177);
return G__32170__delegate(p1,p2,p3,ps);
});
G__32170.cljs$core$IFn$_invoke$arity$variadic = G__32170__delegate;
return G__32170;
})()
;
every_pred = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return every_pred__1.call(this,p1);
case 2:
return every_pred__2.call(this,p1,p2);
case 3:
return every_pred__3.call(this,p1,p2,p3);
default:
var G__32178 = null;
if (arguments.length > 3) {
var G__32179__i = 0, G__32179__a = new Array(arguments.length -  3);
while (G__32179__i < G__32179__a.length) {G__32179__a[G__32179__i] = arguments[G__32179__i + 3]; ++G__32179__i;}
G__32178 = new cljs.core.IndexedSeq(G__32179__a,0);
}
return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__32178);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
every_pred.cljs$lang$maxFixedArity = 3;
every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
return every_pred;
})()
;
/**
* Takes a set of predicates and returns a function f that returns the first logical true value
* returned by one of its composing predicates against any of its arguments, else it returns
* logical false. Note that f is short-circuiting in that it will stop execution on the first
* argument that triggers a logical true result against the original predicates.
* @param {...*} var_args
*/
cljs.core.some_fn = (function() {
var some_fn = null;
var some_fn__1 = (function (p){
return (function() {
var sp1 = null;
var sp1__0 = (function (){
return null;
});
var sp1__1 = (function (x){
var G__32385 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32385) : p.call(null,G__32385));
});
var sp1__2 = (function (x,y){
var or__22964__auto__ = (function (){var G__32387 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32387) : p.call(null,G__32387));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var G__32388 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32388) : p.call(null,G__32388));
}
});
var sp1__3 = (function (x,y,z){
var or__22964__auto__ = (function (){var G__32390 = x;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32390) : p.call(null,G__32390));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (function (){var G__32392 = y;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32392) : p.call(null,G__32392));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var G__32393 = z;
return (p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__32393) : p.call(null,G__32393));
}
}
});
var sp1__4 = (function() { 
var G__32554__delegate = function (x,y,z,args){
var or__22964__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return cljs.core.some(p,args);
}
};
var G__32554 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32555__i = 0, G__32555__a = new Array(arguments.length -  3);
while (G__32555__i < G__32555__a.length) {G__32555__a[G__32555__i] = arguments[G__32555__i + 3]; ++G__32555__i;}
  args = new cljs.core.IndexedSeq(G__32555__a,0);
} 
return G__32554__delegate.call(this,x,y,z,args);};
G__32554.cljs$lang$maxFixedArity = 3;
G__32554.cljs$lang$applyTo = (function (arglist__32556){
var x = cljs.core.first(arglist__32556);
arglist__32556 = cljs.core.next(arglist__32556);
var y = cljs.core.first(arglist__32556);
arglist__32556 = cljs.core.next(arglist__32556);
var z = cljs.core.first(arglist__32556);
var args = cljs.core.rest(arglist__32556);
return G__32554__delegate(x,y,z,args);
});
G__32554.cljs$core$IFn$_invoke$arity$variadic = G__32554__delegate;
return G__32554;
})()
;
sp1 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp1__0.call(this);
case 1:
return sp1__1.call(this,x);
case 2:
return sp1__2.call(this,x,y);
case 3:
return sp1__3.call(this,x,y,z);
default:
var G__32557 = null;
if (arguments.length > 3) {
var G__32558__i = 0, G__32558__a = new Array(arguments.length -  3);
while (G__32558__i < G__32558__a.length) {G__32558__a[G__32558__i] = arguments[G__32558__i + 3]; ++G__32558__i;}
G__32557 = new cljs.core.IndexedSeq(G__32558__a,0);
}
return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32557);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp1.cljs$lang$maxFixedArity = 3;
sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
return sp1;
})()
});
var some_fn__2 = (function (p1,p2){
return (function() {
var sp2 = null;
var sp2__0 = (function (){
return null;
});
var sp2__1 = (function (x){
var or__22964__auto__ = (function (){var G__32425 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32425) : p1.call(null,G__32425));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var G__32426 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32426) : p2.call(null,G__32426));
}
});
var sp2__2 = (function (x,y){
var or__22964__auto__ = (function (){var G__32428 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32428) : p1.call(null,G__32428));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (function (){var G__32430 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32430) : p1.call(null,G__32430));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var or__22964__auto____$2 = (function (){var G__32432 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32432) : p2.call(null,G__32432));
})();
if(cljs.core.truth_(or__22964__auto____$2)){
return or__22964__auto____$2;
} else {
var G__32433 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32433) : p2.call(null,G__32433));
}
}
}
});
var sp2__3 = (function (x,y,z){
var or__22964__auto__ = (function (){var G__32435 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32435) : p1.call(null,G__32435));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (function (){var G__32437 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32437) : p1.call(null,G__32437));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var or__22964__auto____$2 = (function (){var G__32439 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32439) : p1.call(null,G__32439));
})();
if(cljs.core.truth_(or__22964__auto____$2)){
return or__22964__auto____$2;
} else {
var or__22964__auto____$3 = (function (){var G__32441 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32441) : p2.call(null,G__32441));
})();
if(cljs.core.truth_(or__22964__auto____$3)){
return or__22964__auto____$3;
} else {
var or__22964__auto____$4 = (function (){var G__32443 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32443) : p2.call(null,G__32443));
})();
if(cljs.core.truth_(or__22964__auto____$4)){
return or__22964__auto____$4;
} else {
var G__32444 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32444) : p2.call(null,G__32444));
}
}
}
}
}
});
var sp2__4 = (function() { 
var G__32559__delegate = function (x,y,z,args){
var or__22964__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return cljs.core.some(((function (or__22964__auto__){
return (function (p1__32180_SHARP_){
var or__22964__auto____$1 = (function (){var G__32446 = p1__32180_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32446) : p1.call(null,G__32446));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var G__32447 = p1__32180_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32447) : p2.call(null,G__32447));
}
});})(or__22964__auto__))
,args);
}
};
var G__32559 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32560__i = 0, G__32560__a = new Array(arguments.length -  3);
while (G__32560__i < G__32560__a.length) {G__32560__a[G__32560__i] = arguments[G__32560__i + 3]; ++G__32560__i;}
  args = new cljs.core.IndexedSeq(G__32560__a,0);
} 
return G__32559__delegate.call(this,x,y,z,args);};
G__32559.cljs$lang$maxFixedArity = 3;
G__32559.cljs$lang$applyTo = (function (arglist__32561){
var x = cljs.core.first(arglist__32561);
arglist__32561 = cljs.core.next(arglist__32561);
var y = cljs.core.first(arglist__32561);
arglist__32561 = cljs.core.next(arglist__32561);
var z = cljs.core.first(arglist__32561);
var args = cljs.core.rest(arglist__32561);
return G__32559__delegate(x,y,z,args);
});
G__32559.cljs$core$IFn$_invoke$arity$variadic = G__32559__delegate;
return G__32559;
})()
;
sp2 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp2__0.call(this);
case 1:
return sp2__1.call(this,x);
case 2:
return sp2__2.call(this,x,y);
case 3:
return sp2__3.call(this,x,y,z);
default:
var G__32562 = null;
if (arguments.length > 3) {
var G__32563__i = 0, G__32563__a = new Array(arguments.length -  3);
while (G__32563__i < G__32563__a.length) {G__32563__a[G__32563__i] = arguments[G__32563__i + 3]; ++G__32563__i;}
G__32562 = new cljs.core.IndexedSeq(G__32563__a,0);
}
return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32562);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp2.cljs$lang$maxFixedArity = 3;
sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
return sp2;
})()
});
var some_fn__3 = (function (p1,p2,p3){
return (function() {
var sp3 = null;
var sp3__0 = (function (){
return null;
});
var sp3__1 = (function (x){
var or__22964__auto__ = (function (){var G__32493 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32493) : p1.call(null,G__32493));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (function (){var G__32495 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32495) : p2.call(null,G__32495));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var G__32496 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32496) : p3.call(null,G__32496));
}
}
});
var sp3__2 = (function (x,y){
var or__22964__auto__ = (function (){var G__32498 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32498) : p1.call(null,G__32498));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (function (){var G__32500 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32500) : p2.call(null,G__32500));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var or__22964__auto____$2 = (function (){var G__32502 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32502) : p3.call(null,G__32502));
})();
if(cljs.core.truth_(or__22964__auto____$2)){
return or__22964__auto____$2;
} else {
var or__22964__auto____$3 = (function (){var G__32504 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32504) : p1.call(null,G__32504));
})();
if(cljs.core.truth_(or__22964__auto____$3)){
return or__22964__auto____$3;
} else {
var or__22964__auto____$4 = (function (){var G__32506 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32506) : p2.call(null,G__32506));
})();
if(cljs.core.truth_(or__22964__auto____$4)){
return or__22964__auto____$4;
} else {
var G__32507 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32507) : p3.call(null,G__32507));
}
}
}
}
}
});
var sp3__3 = (function (x,y,z){
var or__22964__auto__ = (function (){var G__32509 = x;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32509) : p1.call(null,G__32509));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (function (){var G__32511 = x;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32511) : p2.call(null,G__32511));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var or__22964__auto____$2 = (function (){var G__32513 = x;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32513) : p3.call(null,G__32513));
})();
if(cljs.core.truth_(or__22964__auto____$2)){
return or__22964__auto____$2;
} else {
var or__22964__auto____$3 = (function (){var G__32515 = y;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32515) : p1.call(null,G__32515));
})();
if(cljs.core.truth_(or__22964__auto____$3)){
return or__22964__auto____$3;
} else {
var or__22964__auto____$4 = (function (){var G__32517 = y;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32517) : p2.call(null,G__32517));
})();
if(cljs.core.truth_(or__22964__auto____$4)){
return or__22964__auto____$4;
} else {
var or__22964__auto____$5 = (function (){var G__32519 = y;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32519) : p3.call(null,G__32519));
})();
if(cljs.core.truth_(or__22964__auto____$5)){
return or__22964__auto____$5;
} else {
var or__22964__auto____$6 = (function (){var G__32521 = z;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32521) : p1.call(null,G__32521));
})();
if(cljs.core.truth_(or__22964__auto____$6)){
return or__22964__auto____$6;
} else {
var or__22964__auto____$7 = (function (){var G__32523 = z;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32523) : p2.call(null,G__32523));
})();
if(cljs.core.truth_(or__22964__auto____$7)){
return or__22964__auto____$7;
} else {
var G__32524 = z;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32524) : p3.call(null,G__32524));
}
}
}
}
}
}
}
}
});
var sp3__4 = (function() { 
var G__32564__delegate = function (x,y,z,args){
var or__22964__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return cljs.core.some(((function (or__22964__auto__){
return (function (p1__32181_SHARP_){
var or__22964__auto____$1 = (function (){var G__32526 = p1__32181_SHARP_;
return (p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__32526) : p1.call(null,G__32526));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var or__22964__auto____$2 = (function (){var G__32528 = p1__32181_SHARP_;
return (p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__32528) : p2.call(null,G__32528));
})();
if(cljs.core.truth_(or__22964__auto____$2)){
return or__22964__auto____$2;
} else {
var G__32529 = p1__32181_SHARP_;
return (p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__32529) : p3.call(null,G__32529));
}
}
});})(or__22964__auto__))
,args);
}
};
var G__32564 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32565__i = 0, G__32565__a = new Array(arguments.length -  3);
while (G__32565__i < G__32565__a.length) {G__32565__a[G__32565__i] = arguments[G__32565__i + 3]; ++G__32565__i;}
  args = new cljs.core.IndexedSeq(G__32565__a,0);
} 
return G__32564__delegate.call(this,x,y,z,args);};
G__32564.cljs$lang$maxFixedArity = 3;
G__32564.cljs$lang$applyTo = (function (arglist__32566){
var x = cljs.core.first(arglist__32566);
arglist__32566 = cljs.core.next(arglist__32566);
var y = cljs.core.first(arglist__32566);
arglist__32566 = cljs.core.next(arglist__32566);
var z = cljs.core.first(arglist__32566);
var args = cljs.core.rest(arglist__32566);
return G__32564__delegate(x,y,z,args);
});
G__32564.cljs$core$IFn$_invoke$arity$variadic = G__32564__delegate;
return G__32564;
})()
;
sp3 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return sp3__0.call(this);
case 1:
return sp3__1.call(this,x);
case 2:
return sp3__2.call(this,x,y);
case 3:
return sp3__3.call(this,x,y,z);
default:
var G__32567 = null;
if (arguments.length > 3) {
var G__32568__i = 0, G__32568__a = new Array(arguments.length -  3);
while (G__32568__i < G__32568__a.length) {G__32568__a[G__32568__i] = arguments[G__32568__i + 3]; ++G__32568__i;}
G__32567 = new cljs.core.IndexedSeq(G__32568__a,0);
}
return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32567);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
sp3.cljs$lang$maxFixedArity = 3;
sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
return sp3;
})()
});
var some_fn__4 = (function() { 
var G__32569__delegate = function (p1,p2,p3,ps){
var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1,p2,p3,ps);
return ((function (ps__$1){
return (function() {
var spn = null;
var spn__0 = (function (){
return null;
});
var spn__1 = (function (x){
return cljs.core.some(((function (ps__$1){
return (function (p1__32182_SHARP_){
var G__32545 = x;
return (p1__32182_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32182_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32545) : p1__32182_SHARP_.call(null,G__32545));
});})(ps__$1))
,ps__$1);
});
var spn__2 = (function (x,y){
return cljs.core.some(((function (ps__$1){
return (function (p1__32183_SHARP_){
var or__22964__auto__ = (function (){var G__32547 = x;
return (p1__32183_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32183_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32547) : p1__32183_SHARP_.call(null,G__32547));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var G__32548 = y;
return (p1__32183_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32183_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32548) : p1__32183_SHARP_.call(null,G__32548));
}
});})(ps__$1))
,ps__$1);
});
var spn__3 = (function (x,y,z){
return cljs.core.some(((function (ps__$1){
return (function (p1__32184_SHARP_){
var or__22964__auto__ = (function (){var G__32550 = x;
return (p1__32184_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32184_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32550) : p1__32184_SHARP_.call(null,G__32550));
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (function (){var G__32552 = y;
return (p1__32184_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32184_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32552) : p1__32184_SHARP_.call(null,G__32552));
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var G__32553 = z;
return (p1__32184_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__32184_SHARP_.cljs$core$IFn$_invoke$arity$1(G__32553) : p1__32184_SHARP_.call(null,G__32553));
}
}
});})(ps__$1))
,ps__$1);
});
var spn__4 = (function() { 
var G__32570__delegate = function (x,y,z,args){
var or__22964__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x,y,z);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return cljs.core.some(((function (or__22964__auto__,ps__$1){
return (function (p1__32185_SHARP_){
return cljs.core.some(p1__32185_SHARP_,args);
});})(or__22964__auto__,ps__$1))
,ps__$1);
}
};
var G__32570 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__32571__i = 0, G__32571__a = new Array(arguments.length -  3);
while (G__32571__i < G__32571__a.length) {G__32571__a[G__32571__i] = arguments[G__32571__i + 3]; ++G__32571__i;}
  args = new cljs.core.IndexedSeq(G__32571__a,0);
} 
return G__32570__delegate.call(this,x,y,z,args);};
G__32570.cljs$lang$maxFixedArity = 3;
G__32570.cljs$lang$applyTo = (function (arglist__32572){
var x = cljs.core.first(arglist__32572);
arglist__32572 = cljs.core.next(arglist__32572);
var y = cljs.core.first(arglist__32572);
arglist__32572 = cljs.core.next(arglist__32572);
var z = cljs.core.first(arglist__32572);
var args = cljs.core.rest(arglist__32572);
return G__32570__delegate(x,y,z,args);
});
G__32570.cljs$core$IFn$_invoke$arity$variadic = G__32570__delegate;
return G__32570;
})()
;
spn = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return spn__0.call(this);
case 1:
return spn__1.call(this,x);
case 2:
return spn__2.call(this,x,y);
case 3:
return spn__3.call(this,x,y,z);
default:
var G__32573 = null;
if (arguments.length > 3) {
var G__32574__i = 0, G__32574__a = new Array(arguments.length -  3);
while (G__32574__i < G__32574__a.length) {G__32574__a[G__32574__i] = arguments[G__32574__i + 3]; ++G__32574__i;}
G__32573 = new cljs.core.IndexedSeq(G__32574__a,0);
}
return spn__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__32573);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
spn.cljs$lang$maxFixedArity = 3;
spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
return spn;
})()
;})(ps__$1))
};
var G__32569 = function (p1,p2,p3,var_args){
var ps = null;
if (arguments.length > 3) {
var G__32575__i = 0, G__32575__a = new Array(arguments.length -  3);
while (G__32575__i < G__32575__a.length) {G__32575__a[G__32575__i] = arguments[G__32575__i + 3]; ++G__32575__i;}
  ps = new cljs.core.IndexedSeq(G__32575__a,0);
} 
return G__32569__delegate.call(this,p1,p2,p3,ps);};
G__32569.cljs$lang$maxFixedArity = 3;
G__32569.cljs$lang$applyTo = (function (arglist__32576){
var p1 = cljs.core.first(arglist__32576);
arglist__32576 = cljs.core.next(arglist__32576);
var p2 = cljs.core.first(arglist__32576);
arglist__32576 = cljs.core.next(arglist__32576);
var p3 = cljs.core.first(arglist__32576);
var ps = cljs.core.rest(arglist__32576);
return G__32569__delegate(p1,p2,p3,ps);
});
G__32569.cljs$core$IFn$_invoke$arity$variadic = G__32569__delegate;
return G__32569;
})()
;
some_fn = function(p1,p2,p3,var_args){
var ps = var_args;
switch(arguments.length){
case 1:
return some_fn__1.call(this,p1);
case 2:
return some_fn__2.call(this,p1,p2);
case 3:
return some_fn__3.call(this,p1,p2,p3);
default:
var G__32577 = null;
if (arguments.length > 3) {
var G__32578__i = 0, G__32578__a = new Array(arguments.length -  3);
while (G__32578__i < G__32578__a.length) {G__32578__a[G__32578__i] = arguments[G__32578__i + 3]; ++G__32578__i;}
G__32577 = new cljs.core.IndexedSeq(G__32578__a,0);
}
return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1,p2,p3, G__32577);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
some_fn.cljs$lang$maxFixedArity = 3;
some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
return some_fn;
})()
;
/**
* Returns a lazy sequence consisting of the result of applying f to
* the set of first items of each coll, followed by applying f to the
* set of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments. Returns a transducer when
* no collection is provided.
* @param {...*} var_args
*/
cljs.core.map = (function() {
var map = null;
var map__1 = (function (f){
return (function (rf){
return (function() {
var G__32633 = null;
var G__32633__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32633__1 = (function (result){
var G__32619 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32619) : rf.call(null,G__32619));
});
var G__32633__2 = (function (result,input){
var G__32620 = result;
var G__32621 = (function (){var G__32622 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32622) : f.call(null,G__32622));
})();
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32620,G__32621) : rf.call(null,G__32620,G__32621));
});
var G__32633__3 = (function() { 
var G__32634__delegate = function (result,input,inputs){
var G__32623 = result;
var G__32624 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,input,inputs);
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32623,G__32624) : rf.call(null,G__32623,G__32624));
};
var G__32634 = function (result,input,var_args){
var inputs = null;
if (arguments.length > 2) {
var G__32635__i = 0, G__32635__a = new Array(arguments.length -  2);
while (G__32635__i < G__32635__a.length) {G__32635__a[G__32635__i] = arguments[G__32635__i + 2]; ++G__32635__i;}
  inputs = new cljs.core.IndexedSeq(G__32635__a,0);
} 
return G__32634__delegate.call(this,result,input,inputs);};
G__32634.cljs$lang$maxFixedArity = 2;
G__32634.cljs$lang$applyTo = (function (arglist__32636){
var result = cljs.core.first(arglist__32636);
arglist__32636 = cljs.core.next(arglist__32636);
var input = cljs.core.first(arglist__32636);
var inputs = cljs.core.rest(arglist__32636);
return G__32634__delegate(result,input,inputs);
});
G__32634.cljs$core$IFn$_invoke$arity$variadic = G__32634__delegate;
return G__32634;
})()
;
G__32633 = function(result,input,var_args){
var inputs = var_args;
switch(arguments.length){
case 0:
return G__32633__0.call(this);
case 1:
return G__32633__1.call(this,result);
case 2:
return G__32633__2.call(this,result,input);
default:
var G__32637 = null;
if (arguments.length > 2) {
var G__32638__i = 0, G__32638__a = new Array(arguments.length -  2);
while (G__32638__i < G__32638__a.length) {G__32638__a[G__32638__i] = arguments[G__32638__i + 2]; ++G__32638__i;}
G__32637 = new cljs.core.IndexedSeq(G__32638__a,0);
}
return G__32633__3.cljs$core$IFn$_invoke$arity$variadic(result,input, G__32637);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32633.cljs$lang$maxFixedArity = 2;
G__32633.cljs$lang$applyTo = G__32633__3.cljs$lang$applyTo;
G__32633.cljs$core$IFn$_invoke$arity$0 = G__32633__0;
G__32633.cljs$core$IFn$_invoke$arity$1 = G__32633__1;
G__32633.cljs$core$IFn$_invoke$arity$2 = G__32633__2;
G__32633.cljs$core$IFn$_invoke$arity$variadic = G__32633__3.cljs$core$IFn$_invoke$arity$variadic;
return G__32633;
})()
});
});
var map__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__23851__auto___32639 = size;
var i_32640 = (0);
while(true){
if((i_32640 < n__23851__auto___32639)){
cljs.core.chunk_append(b,(function (){var G__32625 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32640);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32625) : f.call(null,G__32625));
})());

var G__32641 = (i_32640 + (1));
i_32640 = G__32641;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.chunk_rest(s)));
} else {
return cljs.core.cons((function (){var G__32626 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32626) : f.call(null,G__32626));
})(),map.cljs$core$IFn$_invoke$arity$2(f,cljs.core.rest(s)));
}
} else {
return null;
}
}),null,null));
});
var map__3 = (function (f,c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons((function (){var G__32627 = cljs.core.first(s1);
var G__32628 = cljs.core.first(s2);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32627,G__32628) : f.call(null,G__32627,G__32628));
})(),map.cljs$core$IFn$_invoke$arity$3(f,cljs.core.rest(s1),cljs.core.rest(s2)));
} else {
return null;
}
}),null,null));
});
var map__4 = (function (f,c1,c2,c3){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
var s3 = cljs.core.seq(c3);
if((s1) && (s2) && (s3)){
return cljs.core.cons((function (){var G__32629 = cljs.core.first(s1);
var G__32630 = cljs.core.first(s2);
var G__32631 = cljs.core.first(s3);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32629,G__32630,G__32631) : f.call(null,G__32629,G__32630,G__32631));
})(),map.cljs$core$IFn$_invoke$arity$4(f,cljs.core.rest(s1),cljs.core.rest(s2),cljs.core.rest(s3)));
} else {
return null;
}
}),null,null));
});
var map__5 = (function() { 
var G__32642__delegate = function (f,c1,c2,c3,colls){
var step = (function step(cs){
return (new cljs.core.LazySeq(null,(function (){
var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cs);
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
});
return map.cljs$core$IFn$_invoke$arity$2(((function (step){
return (function (p1__32579_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,p1__32579_SHARP_);
});})(step))
,step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c3,cljs.core.array_seq([c2,c1], 0))));
};
var G__32642 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__32643__i = 0, G__32643__a = new Array(arguments.length -  4);
while (G__32643__i < G__32643__a.length) {G__32643__a[G__32643__i] = arguments[G__32643__i + 4]; ++G__32643__i;}
  colls = new cljs.core.IndexedSeq(G__32643__a,0);
} 
return G__32642__delegate.call(this,f,c1,c2,c3,colls);};
G__32642.cljs$lang$maxFixedArity = 4;
G__32642.cljs$lang$applyTo = (function (arglist__32644){
var f = cljs.core.first(arglist__32644);
arglist__32644 = cljs.core.next(arglist__32644);
var c1 = cljs.core.first(arglist__32644);
arglist__32644 = cljs.core.next(arglist__32644);
var c2 = cljs.core.first(arglist__32644);
arglist__32644 = cljs.core.next(arglist__32644);
var c3 = cljs.core.first(arglist__32644);
var colls = cljs.core.rest(arglist__32644);
return G__32642__delegate(f,c1,c2,c3,colls);
});
G__32642.cljs$core$IFn$_invoke$arity$variadic = G__32642__delegate;
return G__32642;
})()
;
map = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return map__1.call(this,f);
case 2:
return map__2.call(this,f,c1);
case 3:
return map__3.call(this,f,c1,c2);
case 4:
return map__4.call(this,f,c1,c2,c3);
default:
var G__32645 = null;
if (arguments.length > 4) {
var G__32646__i = 0, G__32646__a = new Array(arguments.length -  4);
while (G__32646__i < G__32646__a.length) {G__32646__a[G__32646__i] = arguments[G__32646__i + 4]; ++G__32646__i;}
G__32645 = new cljs.core.IndexedSeq(G__32646__a,0);
}
return map__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__32645);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
map.cljs$lang$maxFixedArity = 4;
map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
map.cljs$core$IFn$_invoke$arity$1 = map__1;
map.cljs$core$IFn$_invoke$arity$2 = map__2;
map.cljs$core$IFn$_invoke$arity$3 = map__3;
map.cljs$core$IFn$_invoke$arity$4 = map__4;
map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
return map;
})()
;
/**
* Returns a lazy sequence of the first n items in coll, or all items if
* there are fewer than n.  Returns a stateful transducer when
* no collection is provided.
*/
cljs.core.take = (function() {
var take = null;
var take__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__32655 = null;
var G__32655__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32655__1 = (function (result){
var G__32652 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32652) : rf.call(null,G__32652));
});
var G__32655__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));
var result__$1 = (((n__$1 > (0)))?(function (){var G__32653 = result;
var G__32654 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32653,G__32654) : rf.call(null,G__32653,G__32654));
})():result);
if(!((nn > (0)))){
return cljs.core.ensure_reduced(result__$1);
} else {
return result__$1;
}
});
G__32655 = function(result,input){
switch(arguments.length){
case 0:
return G__32655__0.call(this);
case 1:
return G__32655__1.call(this,result);
case 2:
return G__32655__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32655.cljs$core$IFn$_invoke$arity$0 = G__32655__0;
G__32655.cljs$core$IFn$_invoke$arity$1 = G__32655__1;
G__32655.cljs$core$IFn$_invoke$arity$2 = G__32655__2;
return G__32655;
})()
;})(na))
});
});
var take__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
if((n > (0))){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take.cljs$core$IFn$_invoke$arity$2((n - (1)),cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take = function(n,coll){
switch(arguments.length){
case 1:
return take__1.call(this,n);
case 2:
return take__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take.cljs$core$IFn$_invoke$arity$1 = take__1;
take.cljs$core$IFn$_invoke$arity$2 = take__2;
return take;
})()
;
/**
* Returns a lazy sequence of all but the first n items in coll.
* Returns a stateful transducer when no collection is provided.
*/
cljs.core.drop = (function() {
var drop = null;
var drop__1 = (function (n){
return (function (rf){
var na = cljs.core.volatile_BANG_(n);
return ((function (na){
return (function() {
var G__32662 = null;
var G__32662__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32662__1 = (function (result){
var G__32659 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32659) : rf.call(null,G__32659));
});
var G__32662__2 = (function (result,input){
var n__$1 = cljs.core.deref(na);
na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(na.cljs$core$IDeref$_deref$arity$1(null) - (1)));

if((n__$1 > (0))){
return result;
} else {
var G__32660 = result;
var G__32661 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32660,G__32661) : rf.call(null,G__32660,G__32661));
}
});
G__32662 = function(result,input){
switch(arguments.length){
case 0:
return G__32662__0.call(this);
case 1:
return G__32662__1.call(this,result);
case 2:
return G__32662__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32662.cljs$core$IFn$_invoke$arity$0 = G__32662__0;
G__32662.cljs$core$IFn$_invoke$arity$1 = G__32662__1;
G__32662.cljs$core$IFn$_invoke$arity$2 = G__32662__2;
return G__32662;
})()
;})(na))
});
});
var drop__2 = (function (n,coll){
var step = (function (n__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(((n__$1 > (0))) && (s)){
var G__32663 = (n__$1 - (1));
var G__32664 = cljs.core.rest(s);
n__$1 = G__32663;
coll__$1 = G__32664;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(n,coll);
});})(step))
,null,null));
});
drop = function(n,coll){
switch(arguments.length){
case 1:
return drop__1.call(this,n);
case 2:
return drop__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
return drop;
})()
;
/**
* Return a lazy sequence of all but the last n (default 1) items in coll
*/
cljs.core.drop_last = (function() {
var drop_last = null;
var drop_last__1 = (function (s){
return drop_last.cljs$core$IFn$_invoke$arity$2((1),s);
});
var drop_last__2 = (function (n,s){
return cljs.core.map.cljs$core$IFn$_invoke$arity$3((function (x,_){
return x;
}),s,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s));
});
drop_last = function(n,s){
switch(arguments.length){
case 1:
return drop_last__1.call(this,n);
case 2:
return drop_last__2.call(this,n,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
return drop_last;
})()
;
/**
* Returns a seq of the last n items in coll.  Depending on the type
* of coll may be no better than linear time.  For vectors, see also subvec.
*/
cljs.core.take_last = (function take_last(n,coll){
var s = cljs.core.seq(coll);
var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll));
while(true){
if(lead){
var G__32667 = cljs.core.next(s);
var G__32668 = cljs.core.next(lead);
s = G__32667;
lead = G__32668;
continue;
} else {
return s;
}
break;
}
});
/**
* Returns a lazy sequence of the items in coll starting from the
* first item for which (pred item) returns logical false.  Returns a
* stateful transducer when no collection is provided.
*/
cljs.core.drop_while = (function() {
var drop_while = null;
var drop_while__1 = (function (pred){
return (function (rf){
var da = cljs.core.volatile_BANG_(true);
return ((function (da){
return (function() {
var G__32681 = null;
var G__32681__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32681__1 = (function (result){
var G__32675 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32675) : rf.call(null,G__32675));
});
var G__32681__2 = (function (result,input){
var drop_QMARK_ = cljs.core.deref(da);
if(cljs.core.truth_((function (){var and__22952__auto__ = drop_QMARK_;
if(cljs.core.truth_(and__22952__auto__)){
var G__32676 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32676) : pred.call(null,G__32676));
} else {
return and__22952__auto__;
}
})())){
return result;
} else {
cljs.core.vreset_BANG_(da,null);

var G__32677 = result;
var G__32678 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32677,G__32678) : rf.call(null,G__32677,G__32678));
}
});
G__32681 = function(result,input){
switch(arguments.length){
case 0:
return G__32681__0.call(this);
case 1:
return G__32681__1.call(this,result);
case 2:
return G__32681__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32681.cljs$core$IFn$_invoke$arity$0 = G__32681__0;
G__32681.cljs$core$IFn$_invoke$arity$1 = G__32681__1;
G__32681.cljs$core$IFn$_invoke$arity$2 = G__32681__2;
return G__32681;
})()
;})(da))
});
});
var drop_while__2 = (function (pred,coll){
var step = (function (pred__$1,coll__$1){
while(true){
var s = cljs.core.seq(coll__$1);
if(cljs.core.truth_((function (){var and__22952__auto__ = s;
if(and__22952__auto__){
var G__32680 = cljs.core.first(s);
return (pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__32680) : pred__$1.call(null,G__32680));
} else {
return and__22952__auto__;
}
})())){
var G__32682 = pred__$1;
var G__32683 = cljs.core.rest(s);
pred__$1 = G__32682;
coll__$1 = G__32683;
continue;
} else {
return s;
}
break;
}
});
return (new cljs.core.LazySeq(null,((function (step){
return (function (){
return step(pred,coll);
});})(step))
,null,null));
});
drop_while = function(pred,coll){
switch(arguments.length){
case 1:
return drop_while__1.call(this,pred);
case 2:
return drop_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
return drop_while;
})()
;
/**
* Returns a lazy (infinite!) sequence of repetitions of the items in coll.
*/
cljs.core.cycle = (function cycle(coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s,cycle(s));
} else {
return null;
}
}),null,null));
});
/**
* Returns a vector of [(take n coll) (drop n coll)]
*/
cljs.core.split_at = (function split_at(n,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,coll),cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,coll)], null);
});
/**
* Returns a lazy (infinite!, or length n if supplied) sequence of xs.
*/
cljs.core.repeat = (function() {
var repeat = null;
var repeat__1 = (function (x){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(x,repeat.cljs$core$IFn$_invoke$arity$1(x));
}),null,null));
});
var repeat__2 = (function (n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeat.cljs$core$IFn$_invoke$arity$1(x));
});
repeat = function(n,x){
switch(arguments.length){
case 1:
return repeat__1.call(this,n);
case 2:
return repeat__2.call(this,n,x);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
return repeat;
})()
;
/**
* Returns a lazy seq of n xs.
*/
cljs.core.replicate = (function replicate(n,x){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
});
/**
* Takes a function of no args, presumably with side effects, and
* returns an infinite (or length n if supplied) lazy sequence of calls
* to it
*/
cljs.core.repeatedly = (function() {
var repeatedly = null;
var repeatedly__1 = (function (f){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons((function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),repeatedly.cljs$core$IFn$_invoke$arity$1(f));
}),null,null));
});
var repeatedly__2 = (function (n,f){
return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,repeatedly.cljs$core$IFn$_invoke$arity$1(f));
});
repeatedly = function(n,f){
switch(arguments.length){
case 1:
return repeatedly__1.call(this,n);
case 2:
return repeatedly__2.call(this,n,f);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
return repeatedly;
})()
;
/**
* Returns a lazy sequence of x, (f x), (f (f x)) etc. f must be free of side-effects
*/
cljs.core.iterate = (function iterate(f,x){
return cljs.core.cons(x,(new cljs.core.LazySeq(null,(function (){
return iterate(f,(function (){var G__32692 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32692) : f.call(null,G__32692));
})());
}),null,null)));
});
/**
* Returns a lazy seq of the first item in each coll, then the second etc.
* @param {...*} var_args
*/
cljs.core.interleave = (function() {
var interleave = null;
var interleave__2 = (function (c1,c2){
return (new cljs.core.LazySeq(null,(function (){
var s1 = cljs.core.seq(c1);
var s2 = cljs.core.seq(c2);
if((s1) && (s2)){
return cljs.core.cons(cljs.core.first(s1),cljs.core.cons(cljs.core.first(s2),interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1),cljs.core.rest(s2))));
} else {
return null;
}
}),null,null));
});
var interleave__3 = (function() { 
var G__32695__delegate = function (c1,c2,colls){
return (new cljs.core.LazySeq(null,(function (){
var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq,cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls,c2,cljs.core.array_seq([c1], 0)));
if(cljs.core.every_QMARK_(cljs.core.identity,ss)){
return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first,ss),cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave,cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest,ss)));
} else {
return null;
}
}),null,null));
};
var G__32695 = function (c1,c2,var_args){
var colls = null;
if (arguments.length > 2) {
var G__32696__i = 0, G__32696__a = new Array(arguments.length -  2);
while (G__32696__i < G__32696__a.length) {G__32696__a[G__32696__i] = arguments[G__32696__i + 2]; ++G__32696__i;}
  colls = new cljs.core.IndexedSeq(G__32696__a,0);
} 
return G__32695__delegate.call(this,c1,c2,colls);};
G__32695.cljs$lang$maxFixedArity = 2;
G__32695.cljs$lang$applyTo = (function (arglist__32697){
var c1 = cljs.core.first(arglist__32697);
arglist__32697 = cljs.core.next(arglist__32697);
var c2 = cljs.core.first(arglist__32697);
var colls = cljs.core.rest(arglist__32697);
return G__32695__delegate(c1,c2,colls);
});
G__32695.cljs$core$IFn$_invoke$arity$variadic = G__32695__delegate;
return G__32695;
})()
;
interleave = function(c1,c2,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return interleave__2.call(this,c1,c2);
default:
var G__32698 = null;
if (arguments.length > 2) {
var G__32699__i = 0, G__32699__a = new Array(arguments.length -  2);
while (G__32699__i < G__32699__a.length) {G__32699__a[G__32699__i] = arguments[G__32699__i + 2]; ++G__32699__i;}
G__32698 = new cljs.core.IndexedSeq(G__32699__a,0);
}
return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1,c2, G__32698);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interleave.cljs$lang$maxFixedArity = 2;
interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
return interleave;
})()
;
/**
* Returns a lazy seq of the elements of coll separated by sep
*/
cljs.core.interpose = (function() {
var interpose = null;
var interpose__1 = (function (sep){
return (function (rf){
var started = cljs.core.volatile_BANG_(false);
return ((function (started){
return (function() {
var G__32714 = null;
var G__32714__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32714__1 = (function (result){
var G__32707 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32707) : rf.call(null,G__32707));
});
var G__32714__2 = (function (result,input){
if(cljs.core.truth_(cljs.core.deref(started))){
var sepr = (function (){var G__32708 = result;
var G__32709 = sep;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32708,G__32709) : rf.call(null,G__32708,G__32709));
})();
if(cljs.core.reduced_QMARK_(sepr)){
return sepr;
} else {
var G__32710 = sepr;
var G__32711 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32710,G__32711) : rf.call(null,G__32710,G__32711));
}
} else {
cljs.core.vreset_BANG_(started,true);

var G__32712 = result;
var G__32713 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32712,G__32713) : rf.call(null,G__32712,G__32713));
}
});
G__32714 = function(result,input){
switch(arguments.length){
case 0:
return G__32714__0.call(this);
case 1:
return G__32714__1.call(this,result);
case 2:
return G__32714__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32714.cljs$core$IFn$_invoke$arity$0 = G__32714__0;
G__32714.cljs$core$IFn$_invoke$arity$1 = G__32714__1;
G__32714.cljs$core$IFn$_invoke$arity$2 = G__32714__2;
return G__32714;
})()
;})(started))
});
});
var interpose__2 = (function (sep,coll){
return cljs.core.drop.cljs$core$IFn$_invoke$arity$2((1),cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep),coll));
});
interpose = function(sep,coll){
switch(arguments.length){
case 1:
return interpose__1.call(this,sep);
case 2:
return interpose__2.call(this,sep,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
return interpose;
})()
;
/**
* Take a collection of collections, and return a lazy seq
* of items from the inner collection
*/
cljs.core.flatten1 = (function flatten1(colls){
var cat = (function cat(coll,colls__$1){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var coll__$1 = temp__4124__auto__;
return cljs.core.cons(cljs.core.first(coll__$1),cat(cljs.core.rest(coll__$1),colls__$1));
} else {
if(cljs.core.seq(colls__$1)){
return cat(cljs.core.first(colls__$1),cljs.core.rest(colls__$1));
} else {
return null;
}
}
}),null,null));
});
return cat(null,colls);
});
/**
* Returns the result of applying concat to the result of applying map
* to f and colls.  Thus function f should return a collection. Returns
* a transducer when no collections are provided
* @param {...*} var_args
*/
cljs.core.mapcat = (function() {
var mapcat = null;
var mapcat__1 = (function (f){
return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f),cljs.core.cat);
});
var mapcat__2 = (function() { 
var G__32723__delegate = function (f,colls){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat,cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map,f,colls));
};
var G__32723 = function (f,var_args){
var colls = null;
if (arguments.length > 1) {
var G__32724__i = 0, G__32724__a = new Array(arguments.length -  1);
while (G__32724__i < G__32724__a.length) {G__32724__a[G__32724__i] = arguments[G__32724__i + 1]; ++G__32724__i;}
  colls = new cljs.core.IndexedSeq(G__32724__a,0);
} 
return G__32723__delegate.call(this,f,colls);};
G__32723.cljs$lang$maxFixedArity = 1;
G__32723.cljs$lang$applyTo = (function (arglist__32725){
var f = cljs.core.first(arglist__32725);
var colls = cljs.core.rest(arglist__32725);
return G__32723__delegate(f,colls);
});
G__32723.cljs$core$IFn$_invoke$arity$variadic = G__32723__delegate;
return G__32723;
})()
;
mapcat = function(f,var_args){
var colls = var_args;
switch(arguments.length){
case 1:
return mapcat__1.call(this,f);
default:
var G__32726 = null;
if (arguments.length > 1) {
var G__32727__i = 0, G__32727__a = new Array(arguments.length -  1);
while (G__32727__i < G__32727__a.length) {G__32727__a[G__32727__i] = arguments[G__32727__i + 1]; ++G__32727__i;}
G__32726 = new cljs.core.IndexedSeq(G__32727__a,0);
}
return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__32726);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapcat.cljs$lang$maxFixedArity = 1;
mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
return mapcat;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.filter = (function() {
var filter = null;
var filter__1 = (function (pred){
return (function (rf){
return (function() {
var G__32746 = null;
var G__32746__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__32746__1 = (function (result){
var G__32740 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__32740) : rf.call(null,G__32740));
});
var G__32746__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__32741 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32741) : pred.call(null,G__32741));
})())){
var G__32742 = result;
var G__32743 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__32742,G__32743) : rf.call(null,G__32742,G__32743));
} else {
return result;
}
});
G__32746 = function(result,input){
switch(arguments.length){
case 0:
return G__32746__0.call(this);
case 1:
return G__32746__1.call(this,result);
case 2:
return G__32746__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32746.cljs$core$IFn$_invoke$arity$0 = G__32746__0;
G__32746.cljs$core$IFn$_invoke$arity$1 = G__32746__1;
G__32746.cljs$core$IFn$_invoke$arity$2 = G__32746__2;
return G__32746;
})()
});
});
var filter__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s)){
var c = cljs.core.chunk_first(s);
var size = cljs.core.count(c);
var b = cljs.core.chunk_buffer(size);
var n__23851__auto___32747 = size;
var i_32748 = (0);
while(true){
if((i_32748 < n__23851__auto___32747)){
if(cljs.core.truth_((function (){var G__32744 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32748);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32744) : pred.call(null,G__32744));
})())){
cljs.core.chunk_append(b,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c,i_32748));
} else {
}

var G__32749 = (i_32748 + (1));
i_32748 = G__32749;
continue;
} else {
}
break;
}

return cljs.core.chunk_cons(cljs.core.chunk(b),filter.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.chunk_rest(s)));
} else {
var f = cljs.core.first(s);
var r = cljs.core.rest(s);
if(cljs.core.truth_((function (){var G__32745 = f;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32745) : pred.call(null,G__32745));
})())){
return cljs.core.cons(f,filter.cljs$core$IFn$_invoke$arity$2(pred,r));
} else {
return filter.cljs$core$IFn$_invoke$arity$2(pred,r);
}
}
} else {
return null;
}
}),null,null));
});
filter = function(pred,coll){
switch(arguments.length){
case 1:
return filter__1.call(this,pred);
case 2:
return filter__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
return filter;
})()
;
/**
* Returns a lazy sequence of the items in coll for which
* (pred item) returns false. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.remove = (function() {
var remove = null;
var remove__1 = (function (pred){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
});
var remove__2 = (function (pred,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred),coll);
});
remove = function(pred,coll){
switch(arguments.length){
case 1:
return remove__1.call(this,pred);
case 2:
return remove__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
return remove;
})()
;
/**
* Returns a lazy sequence of the nodes in a tree, via a depth-first walk.
* branch? must be a fn of one arg that returns true if passed a node
* that can have children (but may not).  children must be a fn of one
* arg that returns a sequence of the children. Will only be called on
* nodes for which branch? returns true. Root is the root node of the
* tree.
*/
cljs.core.tree_seq = (function tree_seq(branch_QMARK_,children,root){
var walk = (function walk(node){
return (new cljs.core.LazySeq(null,(function (){
return cljs.core.cons(node,(cljs.core.truth_((function (){var G__32756 = node;
return (branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__32756) : branch_QMARK_.call(null,G__32756));
})())?cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk,cljs.core.array_seq([(function (){var G__32757 = node;
return (children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__32757) : children.call(null,G__32757));
})()], 0)):null));
}),null,null));
});
return walk(root);
});
/**
* Takes any nested combination of sequential things (lists, vectors,
* etc.) and returns their contents as a single, flat sequence.
* (flatten nil) returns nil.
*/
cljs.core.flatten = (function flatten(x){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (p1__32758_SHARP_){
return !(cljs.core.sequential_QMARK_(p1__32758_SHARP_));
}),cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_,cljs.core.seq,x)));
});
/**
* Returns a new coll consisting of to-coll with all of the items of
* from-coll conjoined. A transducer may be supplied.
*/
cljs.core.into = (function() {
var into = null;
var into__2 = (function (to,from){
if(!((to == null))){
if((function (){var G__32761 = to;
if(G__32761){
var bit__23638__auto__ = (G__32761.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__23638__auto__) || (G__32761.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,to,from);
}
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.List.EMPTY,from);
}
});
var into__3 = (function (to,xform,from){
if((function (){var G__32762 = to;
if(G__32762){
var bit__23638__auto__ = (G__32762.cljs$lang$protocol_mask$partition1$ & (4));
if((bit__23638__auto__) || (G__32762.cljs$core$IEditableCollection$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj_BANG_,cljs.core.transient$(to),from)),cljs.core.meta(to));
} else {
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform,cljs.core.conj,to,from);
}
});
into = function(to,xform,from){
switch(arguments.length){
case 2:
return into__2.call(this,to,xform);
case 3:
return into__3.call(this,to,xform,from);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
into.cljs$core$IFn$_invoke$arity$2 = into__2;
into.cljs$core$IFn$_invoke$arity$3 = into__3;
return into;
})()
;
/**
* Returns a vector consisting of the result of applying f to the
* set of first items of each coll, followed by applying f to the set
* of second items in each coll, until any one of the colls is
* exhausted.  Any remaining items in other colls are ignored. Function
* f should accept number-of-colls arguments.
* @param {...*} var_args
*/
cljs.core.mapv = (function() {
var mapv = null;
var mapv__2 = (function (f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,(function (){var G__32764 = o;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32764) : f.call(null,G__32764));
})());
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
var mapv__3 = (function (f,c1,c2){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$3(f,c1,c2));
});
var mapv__4 = (function (f,c1,c2,c3){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.map.cljs$core$IFn$_invoke$arity$4(f,c1,c2,c3));
});
var mapv__5 = (function() { 
var G__32765__delegate = function (f,c1,c2,c3,colls){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map,f,c1,c2,c3,cljs.core.array_seq([colls], 0)));
};
var G__32765 = function (f,c1,c2,c3,var_args){
var colls = null;
if (arguments.length > 4) {
var G__32766__i = 0, G__32766__a = new Array(arguments.length -  4);
while (G__32766__i < G__32766__a.length) {G__32766__a[G__32766__i] = arguments[G__32766__i + 4]; ++G__32766__i;}
  colls = new cljs.core.IndexedSeq(G__32766__a,0);
} 
return G__32765__delegate.call(this,f,c1,c2,c3,colls);};
G__32765.cljs$lang$maxFixedArity = 4;
G__32765.cljs$lang$applyTo = (function (arglist__32767){
var f = cljs.core.first(arglist__32767);
arglist__32767 = cljs.core.next(arglist__32767);
var c1 = cljs.core.first(arglist__32767);
arglist__32767 = cljs.core.next(arglist__32767);
var c2 = cljs.core.first(arglist__32767);
arglist__32767 = cljs.core.next(arglist__32767);
var c3 = cljs.core.first(arglist__32767);
var colls = cljs.core.rest(arglist__32767);
return G__32765__delegate(f,c1,c2,c3,colls);
});
G__32765.cljs$core$IFn$_invoke$arity$variadic = G__32765__delegate;
return G__32765;
})()
;
mapv = function(f,c1,c2,c3,var_args){
var colls = var_args;
switch(arguments.length){
case 2:
return mapv__2.call(this,f,c1);
case 3:
return mapv__3.call(this,f,c1,c2);
case 4:
return mapv__4.call(this,f,c1,c2,c3);
default:
var G__32768 = null;
if (arguments.length > 4) {
var G__32769__i = 0, G__32769__a = new Array(arguments.length -  4);
while (G__32769__i < G__32769__a.length) {G__32769__a[G__32769__i] = arguments[G__32769__i + 4]; ++G__32769__i;}
G__32768 = new cljs.core.IndexedSeq(G__32769__a,0);
}
return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f,c1,c2,c3, G__32768);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
mapv.cljs$lang$maxFixedArity = 4;
mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
return mapv;
})()
;
/**
* Returns a vector of the items in coll for which
* (pred item) returns true. pred must be free of side-effects.
*/
cljs.core.filterv = (function filterv(pred,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (v,o){
if(cljs.core.truth_((function (){var G__32771 = o;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__32771) : pred.call(null,G__32771));
})())){
return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v,o);
} else {
return v;
}
}),cljs.core.transient$(cljs.core.PersistentVector.EMPTY),coll));
});
/**
* Returns a lazy sequence of lists of n items each, at offsets step
* apart. If step is not supplied, defaults to n, i.e. the partitions
* do not overlap. If a pad collection is supplied, use its elements as
* necessary to complete last partition up to n items. In case there are
* not enough padding elements, return a partition with less than n items.
*/
cljs.core.partition = (function() {
var partition = null;
var partition__2 = (function (n,coll){
return partition.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
var partition__4 = (function (n,step,pad,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s);
if((n === cljs.core.count(p))){
return cljs.core.cons(p,partition.cljs$core$IFn$_invoke$arity$4(n,step,pad,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p,pad)));
}
} else {
return null;
}
}),null,null));
});
partition = function(n,step,pad,coll){
switch(arguments.length){
case 2:
return partition__2.call(this,n,step);
case 3:
return partition__3.call(this,n,step,pad);
case 4:
return partition__4.call(this,n,step,pad,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
return partition;
})()
;
/**
* Returns the value in a nested associative structure,
* where ks is a sequence of keys. Returns nil if the key is not present,
* or the not-found value if supplied.
*/
cljs.core.get_in = (function() {
var get_in = null;
var get_in__2 = (function (m,ks){
return get_in.cljs$core$IFn$_invoke$arity$3(m,ks,null);
});
var get_in__3 = (function (m,ks,not_found){
var sentinel = cljs.core.lookup_sentinel;
var m__$1 = m;
var ks__$1 = cljs.core.seq(ks);
while(true){
if(ks__$1){
if(!((function (){var G__32786 = m__$1;
if(G__32786){
var bit__23645__auto__ = (G__32786.cljs$lang$protocol_mask$partition0$ & (256));
if((bit__23645__auto__) || (G__32786.cljs$core$ILookup$)){
return true;
} else {
if((!G__32786.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__32786);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup,G__32786);
}
})())){
return not_found;
} else {
var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1,cljs.core.first(ks__$1),sentinel);
if((sentinel === m__$2)){
return not_found;
} else {
var G__32787 = sentinel;
var G__32788 = m__$2;
var G__32789 = cljs.core.next(ks__$1);
sentinel = G__32787;
m__$1 = G__32788;
ks__$1 = G__32789;
continue;
}
}
} else {
return m__$1;
}
break;
}
});
get_in = function(m,ks,not_found){
switch(arguments.length){
case 2:
return get_in__2.call(this,m,ks);
case 3:
return get_in__3.call(this,m,ks,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
return get_in;
})()
;
/**
* Associates a value in a nested associative structure, where ks is a
* sequence of keys and v is the new value and returns a new nested structure.
* If any levels do not exist, hash-maps will be created.
*/
cljs.core.assoc_in = (function assoc_in(m,p__32790,v){
var vec__32795 = p__32790;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32795,(0),null);
var ks = cljs.core.nthnext(vec__32795,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,v));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
/**
* 'Updates' a value in a nested associative structure, where ks is a
* sequence of keys and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* nested structure.  If any levels do not exist, hash-maps will be
* created.
* @param {...*} var_args
*/
cljs.core.update_in = (function() {
var update_in = null;
var update_in__3 = (function (m,p__32796,f){
var vec__32834 = p__32796;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32834,(0),null);
var ks = cljs.core.nthnext(vec__32834,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32835 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32835) : f.call(null,G__32835));
})());
}
});
var update_in__4 = (function (m,p__32797,f,a){
var vec__32836 = p__32797;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32836,(0),null);
var ks = cljs.core.nthnext(vec__32836,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32837 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__32838 = a;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32837,G__32838) : f.call(null,G__32837,G__32838));
})());
}
});
var update_in__5 = (function (m,p__32798,f,a,b){
var vec__32839 = p__32798;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32839,(0),null);
var ks = cljs.core.nthnext(vec__32839,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32840 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__32841 = a;
var G__32842 = b;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32840,G__32841,G__32842) : f.call(null,G__32840,G__32841,G__32842));
})());
}
});
var update_in__6 = (function (m,p__32799,f,a,b,c){
var vec__32843 = p__32799;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32843,(0),null);
var ks = cljs.core.nthnext(vec__32843,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,b,c));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32844 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__32845 = a;
var G__32846 = b;
var G__32847 = c;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32844,G__32845,G__32846,G__32847) : f.call(null,G__32844,G__32845,G__32846,G__32847));
})());
}
});
var update_in__7 = (function() { 
var G__32849__delegate = function (m,p__32800,f,a,b,c,args){
var vec__32848 = p__32800;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__32848,(0),null);
var ks = cljs.core.nthnext(vec__32848,(1));
if(ks){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),ks,f,a,cljs.core.array_seq([b,c,args], 0)));
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),a,b,c,cljs.core.array_seq([args], 0)));
}
};
var G__32849 = function (m,p__32800,f,a,b,c,var_args){
var args = null;
if (arguments.length > 6) {
var G__32850__i = 0, G__32850__a = new Array(arguments.length -  6);
while (G__32850__i < G__32850__a.length) {G__32850__a[G__32850__i] = arguments[G__32850__i + 6]; ++G__32850__i;}
  args = new cljs.core.IndexedSeq(G__32850__a,0);
} 
return G__32849__delegate.call(this,m,p__32800,f,a,b,c,args);};
G__32849.cljs$lang$maxFixedArity = 6;
G__32849.cljs$lang$applyTo = (function (arglist__32851){
var m = cljs.core.first(arglist__32851);
arglist__32851 = cljs.core.next(arglist__32851);
var p__32800 = cljs.core.first(arglist__32851);
arglist__32851 = cljs.core.next(arglist__32851);
var f = cljs.core.first(arglist__32851);
arglist__32851 = cljs.core.next(arglist__32851);
var a = cljs.core.first(arglist__32851);
arglist__32851 = cljs.core.next(arglist__32851);
var b = cljs.core.first(arglist__32851);
arglist__32851 = cljs.core.next(arglist__32851);
var c = cljs.core.first(arglist__32851);
var args = cljs.core.rest(arglist__32851);
return G__32849__delegate(m,p__32800,f,a,b,c,args);
});
G__32849.cljs$core$IFn$_invoke$arity$variadic = G__32849__delegate;
return G__32849;
})()
;
update_in = function(m,p__32800,f,a,b,c,var_args){
var args = var_args;
switch(arguments.length){
case 3:
return update_in__3.call(this,m,p__32800,f);
case 4:
return update_in__4.call(this,m,p__32800,f,a);
case 5:
return update_in__5.call(this,m,p__32800,f,a,b);
case 6:
return update_in__6.call(this,m,p__32800,f,a,b,c);
default:
var G__32852 = null;
if (arguments.length > 6) {
var G__32853__i = 0, G__32853__a = new Array(arguments.length -  6);
while (G__32853__i < G__32853__a.length) {G__32853__a[G__32853__i] = arguments[G__32853__i + 6]; ++G__32853__i;}
G__32852 = new cljs.core.IndexedSeq(G__32853__a,0);
}
return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m,p__32800,f,a,b,c, G__32852);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update_in.cljs$lang$maxFixedArity = 6;
update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
return update_in;
})()
;
/**
* 'Updates' a value in an associative structure, where k is a
* key and f is a function that will take the old value
* and any supplied args and return the new value, and returns a new
* structure.  If the key does not exist, nil is passed as the old value.
* @param {...*} var_args
*/
cljs.core.update = (function() {
var update = null;
var update__3 = (function (m,k,f){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32864 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__32864) : f.call(null,G__32864));
})());
});
var update__4 = (function (m,k,f,x){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32865 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__32866 = x;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32865,G__32866) : f.call(null,G__32865,G__32866));
})());
});
var update__5 = (function (m,k,f,x,y){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32867 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__32868 = x;
var G__32869 = y;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32867,G__32868,G__32869) : f.call(null,G__32867,G__32868,G__32869));
})());
});
var update__6 = (function (m,k,f,x,y,z){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__32870 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__32871 = x;
var G__32872 = y;
var G__32873 = z;
return (f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__32870,G__32871,G__32872,G__32873) : f.call(null,G__32870,G__32871,G__32872,G__32873));
})());
});
var update__7 = (function() { 
var G__32874__delegate = function (m,k,f,x,y,z,more){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f,cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k),x,y,z,cljs.core.array_seq([more], 0)));
};
var G__32874 = function (m,k,f,x,y,z,var_args){
var more = null;
if (arguments.length > 6) {
var G__32875__i = 0, G__32875__a = new Array(arguments.length -  6);
while (G__32875__i < G__32875__a.length) {G__32875__a[G__32875__i] = arguments[G__32875__i + 6]; ++G__32875__i;}
  more = new cljs.core.IndexedSeq(G__32875__a,0);
} 
return G__32874__delegate.call(this,m,k,f,x,y,z,more);};
G__32874.cljs$lang$maxFixedArity = 6;
G__32874.cljs$lang$applyTo = (function (arglist__32876){
var m = cljs.core.first(arglist__32876);
arglist__32876 = cljs.core.next(arglist__32876);
var k = cljs.core.first(arglist__32876);
arglist__32876 = cljs.core.next(arglist__32876);
var f = cljs.core.first(arglist__32876);
arglist__32876 = cljs.core.next(arglist__32876);
var x = cljs.core.first(arglist__32876);
arglist__32876 = cljs.core.next(arglist__32876);
var y = cljs.core.first(arglist__32876);
arglist__32876 = cljs.core.next(arglist__32876);
var z = cljs.core.first(arglist__32876);
var more = cljs.core.rest(arglist__32876);
return G__32874__delegate(m,k,f,x,y,z,more);
});
G__32874.cljs$core$IFn$_invoke$arity$variadic = G__32874__delegate;
return G__32874;
})()
;
update = function(m,k,f,x,y,z,var_args){
var more = var_args;
switch(arguments.length){
case 3:
return update__3.call(this,m,k,f);
case 4:
return update__4.call(this,m,k,f,x);
case 5:
return update__5.call(this,m,k,f,x,y);
case 6:
return update__6.call(this,m,k,f,x,y,z);
default:
var G__32877 = null;
if (arguments.length > 6) {
var G__32878__i = 0, G__32878__a = new Array(arguments.length -  6);
while (G__32878__i < G__32878__a.length) {G__32878__a[G__32878__i] = arguments[G__32878__i + 6]; ++G__32878__i;}
G__32877 = new cljs.core.IndexedSeq(G__32878__a,0);
}
return update__7.cljs$core$IFn$_invoke$arity$variadic(m,k,f,x,y,z, G__32877);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
update.cljs$lang$maxFixedArity = 6;
update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
update.cljs$core$IFn$_invoke$arity$3 = update__3;
update.cljs$core$IFn$_invoke$arity$4 = update__4;
update.cljs$core$IFn$_invoke$arity$5 = update__5;
update.cljs$core$IFn$_invoke$arity$6 = update__6;
update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
return update;
})()
;

/**
* @constructor
*/
cljs.core.VectorNode = (function (edit,arr){
this.edit = edit;
this.arr = arr;
})

cljs.core.VectorNode.cljs$lang$type = true;

cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";

cljs.core.VectorNode.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/VectorNode");
});

cljs.core.__GT_VectorNode = (function __GT_VectorNode(edit,arr){
return (new cljs.core.VectorNode(edit,arr));
});

cljs.core.pv_fresh_node = (function pv_fresh_node(edit){
return (new cljs.core.VectorNode(edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
});
cljs.core.pv_aget = (function pv_aget(node,idx){
return (node.arr[idx]);
});
cljs.core.pv_aset = (function pv_aset(node,idx,val){
return (node.arr[idx] = val);
});
cljs.core.pv_clone_node = (function pv_clone_node(node){
return (new cljs.core.VectorNode(node.edit,cljs.core.aclone(node.arr)));
});
cljs.core.tail_off = (function tail_off(pv){
var cnt = pv.cnt;
if((cnt < (32))){
return (0);
} else {
return (((cnt - (1)) >>> (5)) << (5));
}
});
cljs.core.new_path = (function new_path(edit,level,node){
var ll = level;
var ret = node;
while(true){
if((ll === (0))){
return ret;
} else {
var embed = ret;
var r = cljs.core.pv_fresh_node(edit);
var _ = cljs.core.pv_aset(r,(0),embed);
var G__32879 = (ll - (5));
var G__32880 = r;
ll = G__32879;
ret = G__32880;
continue;
}
break;
}
});
cljs.core.push_tail = (function push_tail(pv,level,parent,tailnode){
var ret = cljs.core.pv_clone_node(parent);
var subidx = (((pv.cnt - (1)) >>> level) & (31));
if(((5) === level)){
cljs.core.pv_aset(ret,subidx,tailnode);

return ret;
} else {
var child = cljs.core.pv_aget(parent,subidx);
if(!((child == null))){
var node_to_insert = push_tail(pv,(level - (5)),child,tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
} else {
var node_to_insert = cljs.core.new_path(null,(level - (5)),tailnode);
cljs.core.pv_aset(ret,subidx,node_to_insert);

return ret;
}
}
});
cljs.core.vector_index_out_of_bounds = (function vector_index_out_of_bounds(i,cnt){
throw (new Error([cljs.core.str("No item "),cljs.core.str(i),cljs.core.str(" in vector of length "),cljs.core.str(cnt)].join('')));
});
cljs.core.first_array_for_longvec = (function first_array_for_longvec(pv){
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__32885 = cljs.core.pv_aget(node,(0));
var G__32886 = (level - (5));
node = G__32885;
level = G__32886;
continue;
} else {
return node.arr;
}
break;
}
});
cljs.core.unchecked_array_for = (function unchecked_array_for(pv,i){
if((i >= cljs.core.tail_off(pv))){
return pv.tail;
} else {
var node = pv.root;
var level = pv.shift;
while(true){
if((level > (0))){
var G__32887 = cljs.core.pv_aget(node,((i >>> level) & (31)));
var G__32888 = (level - (5));
node = G__32887;
level = G__32888;
continue;
} else {
return node.arr;
}
break;
}
}
});
cljs.core.array_for = (function array_for(pv,i){
if((((0) <= i)) && ((i < pv.cnt))){
return cljs.core.unchecked_array_for(pv,i);
} else {
return cljs.core.vector_index_out_of_bounds(i,pv.cnt);
}
});
cljs.core.do_assoc = (function do_assoc(pv,level,node,i,val){
var ret = cljs.core.pv_clone_node(node);
if((level === (0))){
cljs.core.pv_aset(ret,(i & (31)),val);

return ret;
} else {
var subidx = ((i >>> level) & (31));
cljs.core.pv_aset(ret,subidx,do_assoc(pv,(level - (5)),cljs.core.pv_aget(node,subidx),i,val));

return ret;
}
});
cljs.core.pop_tail = (function pop_tail(pv,level,node){
var subidx = (((pv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = pop_tail(pv,(level - (5)),cljs.core.pv_aget(node,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,new_child);

return ret;
}
} else {
if((subidx === (0))){
return null;
} else {
var ret = cljs.core.pv_clone_node(node);
cljs.core.pv_aset(ret,subidx,null);

return ret;

}
}
});

/**
* @constructor
*/
cljs.core.RangedIterator = (function (i,base,arr,v,start,end){
this.i = i;
this.base = base;
this.arr = arr;
this.v = v;
this.start = start;
this.end = end;
})
cljs.core.RangedIterator.prototype.hasNext = (function (){
var self__ = this;
var this$ = this;
return (self__.i < self__.end);
});

cljs.core.RangedIterator.prototype.next = (function (){
var self__ = this;
var this$ = this;
if(((self__.i - self__.base) === (32))){
self__.arr = cljs.core.unchecked_array_for(self__.v,self__.i);

self__.base = (self__.base + (32));
} else {
}

var ret = (self__.arr[(self__.i & (31))]);
self__.i = (self__.i + (1));

return ret;
});

cljs.core.RangedIterator.cljs$lang$type = true;

cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";

cljs.core.RangedIterator.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/RangedIterator");
});

cljs.core.__GT_RangedIterator = (function __GT_RangedIterator(i,base,arr,v,start,end){
return (new cljs.core.RangedIterator(i,base,arr,v,start,end));
});

cljs.core.ranged_iterator = (function ranged_iterator(v,start,end){
var i = start;
return (new cljs.core.RangedIterator(i,(i - (i % (32))),(((start < cljs.core.count(v)))?cljs.core.unchecked_array_for(v,i):null),v,start,end));
});







/**
* @constructor
*/
cljs.core.PersistentVector = (function (meta,cnt,shift,root,tail,__hash){
this.meta = meta;
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 167668511;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentVector.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentVector.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__32898 = init__$2;
var G__32899 = (j + i);
var G__32900 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__32898,G__32899,G__32900) : f.call(null,G__32898,G__32899,G__32900));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__32911 = (j + (1));
var G__32912 = init__$3;
j = G__32911;
init__$2 = G__32912;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__32901 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32901) : cljs.core.deref.call(null,G__32901));
} else {
var G__32913 = (i + len);
var G__32914 = init__$2;
i = G__32913;
init__$1 = G__32914;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
});

cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return (cljs.core.unchecked_array_for(coll__$1,n)[(n & (31))]);
} else {
return not_found;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(coll__$1) <= n)){
var new_tail = cljs.core.aclone(self__.tail);
(new_tail[(n & (31))] = val);

return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,cljs.core.do_assoc(coll__$1,self__.shift,self__.root,n,val),self__.tail,null));
}
} else {
if((n === self__.cnt)){
return cljs.core._conj(coll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds  [0,"),cljs.core.str(self__.cnt),cljs.core.str("]")].join('')));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.ranged_iterator(this$__$1,(0),self__.cnt);
});

cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentVector(self__.meta,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(0));
});

cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(1));
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,(self__.cnt - (1)));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
} else {
if(((1) < (self__.cnt - cljs.core.tail_off(coll__$1)))){
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt - (1)),self__.shift,self__.root,self__.tail.slice((0),(-1)),null));
} else {
var new_tail = cljs.core.unchecked_array_for(coll__$1,(self__.cnt - (2)));
var nr = cljs.core.pop_tail(coll__$1,self__.shift,self__.root);
var new_root = (((nr == null))?cljs.core.PersistentVector.EMPTY_NODE:nr);
var cnt_1 = (self__.cnt - (1));
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
return (new cljs.core.PersistentVector(self__.meta,cnt_1,(self__.shift - (5)),cljs.core.pv_aget(new_root,(0)),new_tail,null));
} else {
return (new cljs.core.PersistentVector(self__.meta,cnt_1,self__.shift,new_root,new_tail,null));
}

}
}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return (new cljs.core.RSeq(coll__$1,(self__.cnt - (1)),null));
} else {
return null;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((other instanceof cljs.core.PersistentVector)){
if((self__.cnt === cljs.core.count(other))){
var me_iter = cljs.core._iterator(coll__$1);
var you_iter = cljs.core._iterator(other);
while(true){
if(cljs.core.truth_(me_iter.hasNext())){
var x = me_iter.next();
var y = you_iter.next();
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x,y)){
continue;
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_sequential(coll__$1,other);
}
});

cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientVector(self__.cnt,self__.shift,(function (){var G__32902 = self__.root;
return (cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__32902) : cljs.core.tv_editable_root.call(null,G__32902));
})(),(function (){var G__32903 = self__.tail;
return (cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__32903) : cljs.core.tv_editable_tail.call(null,G__32903));
})()));
});

cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (v,f){
var self__ = this;
var v__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1,f);
});

cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (v,f,init){
var self__ = this;
var v__$1 = this;
var i = (0);
var init__$1 = init;
while(true){
if((i < self__.cnt)){
var arr = cljs.core.unchecked_array_for(v__$1,i);
var len = arr.length;
var init__$2 = (function (){var j = (0);
var init__$2 = init__$1;
while(true){
if((j < len)){
var init__$3 = (function (){var G__32904 = init__$2;
var G__32905 = (arr[j]);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__32904,G__32905) : f.call(null,G__32904,G__32905));
})();
if(cljs.core.reduced_QMARK_(init__$3)){
return init__$3;
} else {
var G__32915 = (j + (1));
var G__32916 = init__$3;
j = G__32915;
init__$2 = G__32916;
continue;
}
} else {
return init__$2;
}
break;
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__32906 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__32906) : cljs.core.deref.call(null,G__32906));
} else {
var G__32917 = (i + len);
var G__32918 = init__$2;
i = G__32917;
init__$1 = G__32918;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._assoc_n(coll__$1,k,v);
} else {
throw (new Error("Vector's key for assoc must be a number."));
}
});

cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt === (0))){
return null;
} else {
if((self__.cnt <= (32))){
return (new cljs.core.IndexedSeq(self__.tail,(0)));
} else {
var G__32907 = coll__$1;
var G__32908 = cljs.core.first_array_for_longvec(coll__$1);
var G__32909 = (0);
var G__32910 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__32907,G__32908,G__32909,G__32910) : cljs.core.chunked_seq.call(null,G__32907,G__32908,G__32909,G__32910));

}
}
});

cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentVector(meta__$1,self__.cnt,self__.shift,self__.root,self__.tail,self__.__hash));
});

cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(((self__.cnt - cljs.core.tail_off(coll__$1)) < (32))){
var len = self__.tail.length;
var new_tail = (new Array((len + (1))));
var n__23851__auto___32919 = len;
var i_32920 = (0);
while(true){
if((i_32920 < n__23851__auto___32919)){
(new_tail[i_32920] = (self__.tail[i_32920]));

var G__32921 = (i_32920 + (1));
i_32920 = G__32921;
continue;
} else {
}
break;
}

(new_tail[len] = o);

return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),self__.shift,self__.root,new_tail,null));
} else {
var root_overflow_QMARK_ = ((self__.cnt >>> (5)) > ((1) << self__.shift));
var new_shift = ((root_overflow_QMARK_)?(self__.shift + (5)):self__.shift);
var new_root = ((root_overflow_QMARK_)?(function (){var n_r = cljs.core.pv_fresh_node(null);
cljs.core.pv_aset(n_r,(0),self__.root);

cljs.core.pv_aset(n_r,(1),cljs.core.new_path(null,self__.shift,(new cljs.core.VectorNode(null,self__.tail))));

return n_r;
})():cljs.core.push_tail(coll__$1,self__.shift,self__.root,(new cljs.core.VectorNode(null,self__.tail))));
return (new cljs.core.PersistentVector(self__.meta,(self__.cnt + (1)),new_shift,new_root,[o],null));
}
});

cljs.core.PersistentVector.prototype.call = (function() {
var G__32922 = null;
var G__32922__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__32922__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__32922 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32922__2.call(this,self__,k);
case 3:
return G__32922__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32922.cljs$core$IFn$_invoke$arity$2 = G__32922__2;
G__32922.cljs$core$IFn$_invoke$arity$3 = G__32922__3;
return G__32922;
})()
;

cljs.core.PersistentVector.prototype.apply = (function (self__,args32897){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32897)));
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.PersistentVector.cljs$lang$type = true;

cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";

cljs.core.PersistentVector.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentVector");
});

cljs.core.__GT_PersistentVector = (function __GT_PersistentVector(meta,cnt,shift,root,tail,__hash){
return (new cljs.core.PersistentVector(meta,cnt,shift,root,tail,__hash));
});

cljs.core.PersistentVector.EMPTY_NODE = (new cljs.core.VectorNode(null,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
cljs.core.PersistentVector.EMPTY = (new cljs.core.PersistentVector(null,(0),(5),cljs.core.PersistentVector.EMPTY_NODE,[],cljs.core.empty_ordered_hash));
cljs.core.PersistentVector.fromArray = (function (xs,no_clone){
var l = xs.length;
var xs__$1 = ((no_clone)?xs:cljs.core.aclone(xs));
if((l < (32))){
return (new cljs.core.PersistentVector(null,l,(5),cljs.core.PersistentVector.EMPTY_NODE,xs__$1,null));
} else {
var node = xs__$1.slice((0),(32));
var v = (new cljs.core.PersistentVector(null,(32),(5),cljs.core.PersistentVector.EMPTY_NODE,node,null));
var i = (32);
var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
while(true){
if((i < l)){
var G__32923 = (i + (1));
var G__32924 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out,(xs__$1[i]));
i = G__32923;
out = G__32924;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.vec = (function vec(coll){
if(coll instanceof Array){
return cljs.core.PersistentVector.fromArray(coll,true);
} else {
return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_,cljs.core._as_transient(cljs.core.PersistentVector.EMPTY),coll));
}
});
/**
* @param {...*} var_args
*/
cljs.core.vector = (function() { 
var vector__delegate = function (args){
if(((args instanceof cljs.core.IndexedSeq)) && ((args.i === (0)))){
return cljs.core.PersistentVector.fromArray(args.arr,true);
} else {
return cljs.core.vec(args);
}
};
var vector = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__32925__i = 0, G__32925__a = new Array(arguments.length -  0);
while (G__32925__i < G__32925__a.length) {G__32925__a[G__32925__i] = arguments[G__32925__i + 0]; ++G__32925__i;}
  args = new cljs.core.IndexedSeq(G__32925__a,0);
} 
return vector__delegate.call(this,args);};
vector.cljs$lang$maxFixedArity = 0;
vector.cljs$lang$applyTo = (function (arglist__32926){
var args = cljs.core.seq(arglist__32926);
return vector__delegate(args);
});
vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
return vector;
})()
;

/**
* @constructor
*/
cljs.core.ChunkedSeq = (function (vec,node,i,off,meta,__hash){
this.vec = vec;
this.node = node;
this.i = i;
this.off = off;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375020;
this.cljs$lang$protocol_mask$partition1$ = 1536;
})
cljs.core.ChunkedSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ChunkedSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__32927 = self__.vec;
var G__32928 = self__.node;
var G__32929 = self__.i;
var G__32930 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__32927,G__32928,G__32929,G__32930) : cljs.core.chunked_seq.call(null,G__32927,G__32928,G__32929,G__32930));
})();
if((s == null)){
return null;
} else {
return s;
}
} else {
return cljs.core._chunked_next(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2((function (){var G__32931 = self__.vec;
var G__32932 = (self__.i + self__.off);
var G__32933 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__32931,G__32932,G__32933) : cljs.core.subvec.call(null,G__32931,G__32932,G__32933));
})(),f);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3((function (){var G__32934 = self__.vec;
var G__32935 = (self__.i + self__.off);
var G__32936 = cljs.core.count(self__.vec);
return (cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__32934,G__32935,G__32936) : cljs.core.subvec.call(null,G__32934,G__32935,G__32936));
})(),f,start);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.node[self__.off]);
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(((self__.off + (1)) < self__.node.length)){
var s = (function (){var G__32937 = self__.vec;
var G__32938 = self__.node;
var G__32939 = self__.i;
var G__32940 = (self__.off + (1));
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__32937,G__32938,G__32939,G__32940) : cljs.core.chunked_seq.call(null,G__32937,G__32938,G__32939,G__32940));
})();
if((s == null)){
return cljs.core.List.EMPTY;
} else {
return s;
}
} else {
return cljs.core._chunked_rest(coll__$1);
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node,self__.off);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__32941 = self__.vec;
var G__32942 = cljs.core.unchecked_array_for(self__.vec,end);
var G__32943 = end;
var G__32944 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__32941,G__32942,G__32943,G__32944) : cljs.core.chunked_seq.call(null,G__32941,G__32942,G__32943,G__32944));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,m){
var self__ = this;
var coll__$1 = this;
var G__32945 = self__.vec;
var G__32946 = self__.node;
var G__32947 = self__.i;
var G__32948 = self__.off;
var G__32949 = m;
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__32945,G__32946,G__32947,G__32948,G__32949) : cljs.core.chunked_seq.call(null,G__32945,G__32946,G__32947,G__32948,G__32949));
});

cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var end = (self__.i + self__.node.length);
if((end < cljs.core._count(self__.vec))){
var G__32950 = self__.vec;
var G__32951 = cljs.core.unchecked_array_for(self__.vec,end);
var G__32952 = end;
var G__32953 = (0);
return (cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__32950,G__32951,G__32952,G__32953) : cljs.core.chunked_seq.call(null,G__32950,G__32951,G__32952,G__32953));
} else {
return null;
}
});

cljs.core.ChunkedSeq.cljs$lang$type = true;

cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";

cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ChunkedSeq");
});

cljs.core.__GT_ChunkedSeq = (function __GT_ChunkedSeq(vec,node,i,off,meta,__hash){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,__hash));
});

(cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.chunked_seq = (function() {
var chunked_seq = null;
var chunked_seq__3 = (function (vec,i,off){
return (new cljs.core.ChunkedSeq(vec,cljs.core.array_for(vec,i),i,off,null,null));
});
var chunked_seq__4 = (function (vec,node,i,off){
return (new cljs.core.ChunkedSeq(vec,node,i,off,null,null));
});
var chunked_seq__5 = (function (vec,node,i,off,meta){
return (new cljs.core.ChunkedSeq(vec,node,i,off,meta,null));
});
chunked_seq = function(vec,node,i,off,meta){
switch(arguments.length){
case 3:
return chunked_seq__3.call(this,vec,node,i);
case 4:
return chunked_seq__4.call(this,vec,node,i,off);
case 5:
return chunked_seq__5.call(this,vec,node,i,off,meta);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
return chunked_seq;
})()
;

/**
* @constructor
*/
cljs.core.Subvec = (function (meta,v,start,end,__hash){
this.meta = meta;
this.v = v;
this.start = start;
this.end = end;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 166617887;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Subvec.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Subvec.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return cljs.core.vector_index_out_of_bounds(n,(self__.end - self__.start));
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.start + n));
}
});

cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if(((n < (0))) || ((self__.end <= (self__.start + n)))){
return not_found;
} else {
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v,(self__.start + n),not_found);
}
});

cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (coll,n,val){
var self__ = this;
var coll__$1 = this;
var v_pos = (self__.start + n);
var G__32955 = self__.meta;
var G__32956 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v,v_pos,val);
var G__32957 = self__.start;
var G__32958 = (function (){var x__23281__auto__ = self__.end;
var y__23282__auto__ = (v_pos + (1));
return ((x__23281__auto__ > y__23282__auto__) ? x__23281__auto__ : y__23282__auto__);
})();
var G__32959 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__32955,G__32956,G__32957,G__32958,G__32959) : cljs.core.build_subvec.call(null,G__32955,G__32956,G__32957,G__32958,G__32959));
});

cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Subvec(self__.meta,self__.v,self__.start,self__.end,self__.__hash));
});

cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (self__.end - self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,(self__.end - (1)));
});

cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.start === self__.end)){
throw (new Error("Can't pop empty vector"));
} else {
var G__32960 = self__.meta;
var G__32961 = self__.v;
var G__32962 = self__.start;
var G__32963 = (self__.end - (1));
var G__32964 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__32960,G__32961,G__32962,G__32963,G__32964) : cljs.core.build_subvec.call(null,G__32960,G__32961,G__32962,G__32963,G__32964));
}
});

cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(!((self__.start === self__.end))){
return (new cljs.core.RSeq(coll__$1,((self__.end - self__.start) - (1)),null));
} else {
return null;
}
});

cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY,self__.meta);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1,f);
});

cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start__$1){
var self__ = this;
var coll__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1,f,start__$1);
});

cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,key,val){
var self__ = this;
var coll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n(coll__$1,key,val);
} else {
throw (new Error("Subvec's key for assoc must be a number."));
}
});

cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var subvec_seq = ((function (coll__$1){
return (function subvec_seq(i){
if((i === self__.end)){
return null;
} else {
return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v,i),(new cljs.core.LazySeq(null,((function (coll__$1){
return (function (){
return subvec_seq((i + (1)));
});})(coll__$1))
,null,null)));
}
});})(coll__$1))
;
return subvec_seq(self__.start);
});

cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
var G__32966 = meta__$1;
var G__32967 = self__.v;
var G__32968 = self__.start;
var G__32969 = self__.end;
var G__32970 = self__.__hash;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__32966,G__32967,G__32968,G__32969,G__32970) : cljs.core.build_subvec.call(null,G__32966,G__32967,G__32968,G__32969,G__32970));
});

cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
var G__32971 = self__.meta;
var G__32972 = cljs.core._assoc_n(self__.v,self__.end,o);
var G__32973 = self__.start;
var G__32974 = (self__.end + (1));
var G__32975 = null;
return (cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__32971,G__32972,G__32973,G__32974,G__32975) : cljs.core.build_subvec.call(null,G__32971,G__32972,G__32973,G__32974,G__32975));
});

cljs.core.Subvec.prototype.call = (function() {
var G__32976 = null;
var G__32976__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});
var G__32976__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});
G__32976 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__32976__2.call(this,self__,k);
case 3:
return G__32976__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__32976.cljs$core$IFn$_invoke$arity$2 = G__32976__2;
G__32976.cljs$core$IFn$_invoke$arity$3 = G__32976__3;
return G__32976;
})()
;

cljs.core.Subvec.prototype.apply = (function (self__,args32954){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32954)));
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$2(null,k);
});

cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$IIndexed$_nth$arity$3(null,k,not_found);
});

cljs.core.Subvec.cljs$lang$type = true;

cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";

cljs.core.Subvec.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Subvec");
});

cljs.core.__GT_Subvec = (function __GT_Subvec(meta,v,start,end,__hash){
return (new cljs.core.Subvec(meta,v,start,end,__hash));
});

(cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.build_subvec = (function build_subvec(meta,v,start,end,__hash){
while(true){
if((v instanceof cljs.core.Subvec)){
var G__32977 = meta;
var G__32978 = v.v;
var G__32979 = (v.start + start);
var G__32980 = (v.start + end);
var G__32981 = __hash;
meta = G__32977;
v = G__32978;
start = G__32979;
end = G__32980;
__hash = G__32981;
continue;
} else {
var c = cljs.core.count(v);
if(((start < (0))) || ((end < (0))) || ((start > c)) || ((end > c))){
throw (new Error("Index out of bounds"));
} else {
}

return (new cljs.core.Subvec(meta,v,start,end,__hash));
}
break;
}
});
/**
* Returns a persistent vector of the items in vector from
* start (inclusive) to end (exclusive).  If end is not supplied,
* defaults to (count vector). This operation is O(1) and very fast, as
* the resulting vector shares structure with the original and no
* trimming is done.
*/
cljs.core.subvec = (function() {
var subvec = null;
var subvec__2 = (function (v,start){
return subvec.cljs$core$IFn$_invoke$arity$3(v,start,cljs.core.count(v));
});
var subvec__3 = (function (v,start,end){
return cljs.core.build_subvec(null,v,start,end,null);
});
subvec = function(v,start,end){
switch(arguments.length){
case 2:
return subvec__2.call(this,v,start);
case 3:
return subvec__3.call(this,v,start,end);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
return subvec;
})()
;
cljs.core.tv_ensure_editable = (function tv_ensure_editable(edit,node){
if((edit === node.edit)){
return node;
} else {
return (new cljs.core.VectorNode(edit,cljs.core.aclone(node.arr)));
}
});
cljs.core.tv_editable_root = (function tv_editable_root(node){
return (new cljs.core.VectorNode((function (){var obj32988 = {};
return obj32988;
})(),cljs.core.aclone(node.arr)));
});
cljs.core.tv_editable_tail = (function tv_editable_tail(tl){
var ret = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
cljs.core.array_copy(tl,(0),ret,(0),tl.length);

return ret;
});
cljs.core.tv_push_tail = (function tv_push_tail(tv,level,parent,tail_node){
var ret = cljs.core.tv_ensure_editable(tv.root.edit,parent);
var subidx = (((tv.cnt - (1)) >>> level) & (31));
cljs.core.pv_aset(ret,subidx,(((level === (5)))?tail_node:(function (){var child = cljs.core.pv_aget(ret,subidx);
if(!((child == null))){
return tv_push_tail(tv,(level - (5)),child,tail_node);
} else {
return cljs.core.new_path(tv.root.edit,(level - (5)),tail_node);
}
})()));

return ret;
});
cljs.core.tv_pop_tail = (function tv_pop_tail(tv,level,node){
var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit,node);
var subidx = (((tv.cnt - (2)) >>> level) & (31));
if((level > (5))){
var new_child = tv_pop_tail(tv,(level - (5)),cljs.core.pv_aget(node__$1,subidx));
if(((new_child == null)) && ((subidx === (0)))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,new_child);

return node__$1;
}
} else {
if((subidx === (0))){
return null;
} else {
cljs.core.pv_aset(node__$1,subidx,null);

return node__$1;

}
}
});
cljs.core.unchecked_editable_array_for = (function unchecked_editable_array_for(tv,i){
if((i >= cljs.core.tail_off(tv))){
return tv.tail;
} else {
var root = tv.root;
var node = root;
var level = tv.shift;
while(true){
if((level > (0))){
var G__32996 = cljs.core.tv_ensure_editable(root.edit,cljs.core.pv_aget(node,((i >>> level) & (31))));
var G__32997 = (level - (5));
node = G__32996;
level = G__32997;
continue;
} else {
return node.arr;
}
break;
}
}
});

/**
* @constructor
*/
cljs.core.TransientVector = (function (cnt,shift,root,tail){
this.cnt = cnt;
this.shift = shift;
this.root = root;
this.tail = tail;
this.cljs$lang$protocol_mask$partition0$ = 275;
this.cljs$lang$protocol_mask$partition1$ = 88;
})
cljs.core.TransientVector.prototype.call = (function() {
var G__33001 = null;
var G__33001__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33001__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33001 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33001__2.call(this,self__,k);
case 3:
return G__33001__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33001.cljs$core$IFn$_invoke$arity$2 = G__33001__2;
G__33001.cljs$core$IFn$_invoke$arity$3 = G__33001__3;
return G__33001;
})()
;

cljs.core.TransientVector.prototype.apply = (function (self__,args32998){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args32998)));
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(typeof k === 'number'){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1,k,not_found);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (coll,n){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return (cljs.core.array_for(coll__$1,n)[(n & (31))]);
} else {
throw (new Error("nth after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (coll,n,not_found){
var self__ = this;
var coll__$1 = this;
if((((0) <= n)) && ((n < self__.cnt))){
return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1,n);
} else {
return not_found;
}
});

cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.root.edit){
return self__.cnt;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = (function (tcoll,n,val){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((((0) <= n)) && ((n < self__.cnt))){
if((cljs.core.tail_off(tcoll__$1) <= n)){
(self__.tail[(n & (31))] = val);

return tcoll__$1;
} else {
var new_root = ((function (tcoll__$1){
return (function go(level,node){
var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit,node);
if((level === (0))){
cljs.core.pv_aset(node__$1,(n & (31)),val);

return node__$1;
} else {
var subidx = ((n >>> level) & (31));
cljs.core.pv_aset(node__$1,subidx,go((level - (5)),cljs.core.pv_aget(node__$1,subidx)));

return node__$1;
}
});})(tcoll__$1))
.call(null,self__.shift,self__.root);
self__.root = new_root;

return tcoll__$1;
}
} else {
if((n === self__.cnt)){
return cljs.core._conj_BANG_(tcoll__$1,val);
} else {
throw (new Error([cljs.core.str("Index "),cljs.core.str(n),cljs.core.str(" out of bounds for TransientVector of length"),cljs.core.str(self__.cnt)].join('')));

}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if((self__.cnt === (0))){
throw (new Error("Can't pop empty vector"));
} else {
if(((1) === self__.cnt)){
self__.cnt = (0);

return tcoll__$1;
} else {
if((((self__.cnt - (1)) & (31)) > (0))){
self__.cnt = (self__.cnt - (1));

return tcoll__$1;
} else {
var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1,(self__.cnt - (2)));
var new_root = (function (){var nr = cljs.core.tv_pop_tail(tcoll__$1,self__.shift,self__.root);
if(!((nr == null))){
return nr;
} else {
return (new cljs.core.VectorNode(self__.root.edit,[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]));
}
})();
if((((5) < self__.shift)) && ((cljs.core.pv_aget(new_root,(1)) == null))){
var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit,cljs.core.pv_aget(new_root,(0)));
self__.root = new_root__$1;

self__.shift = (self__.shift - (5));

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
} else {
self__.root = new_root;

self__.cnt = (self__.cnt - (1));

self__.tail = new_tail;

return tcoll__$1;
}

}
}
}
} else {
throw (new Error("pop! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(typeof key === 'number'){
return cljs.core._assoc_n_BANG_(tcoll__$1,key,val);
} else {
throw (new Error("TransientVector's key for assoc! must be a number."));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
if(((self__.cnt - cljs.core.tail_off(tcoll__$1)) < (32))){
(self__.tail[(self__.cnt & (31))] = o);

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var tail_node = (new cljs.core.VectorNode(self__.root.edit,self__.tail));
var new_tail = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
(new_tail[(0)] = o);

self__.tail = new_tail;

if(((self__.cnt >>> (5)) > ((1) << self__.shift))){
var new_root_array = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var new_shift = (self__.shift + (5));
(new_root_array[(0)] = self__.root);

(new_root_array[(1)] = cljs.core.new_path(self__.root.edit,self__.shift,tail_node));

self__.root = (new cljs.core.VectorNode(self__.root.edit,new_root_array));

self__.shift = new_shift;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
} else {
var new_root = cljs.core.tv_push_tail(tcoll__$1,self__.shift,self__.root,tail_node);
self__.root = new_root;

self__.cnt = (self__.cnt + (1));

return tcoll__$1;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(self__.root.edit){
self__.root.edit = null;

var len = (self__.cnt - cljs.core.tail_off(tcoll__$1));
var trimmed_tail = (new Array(len));
cljs.core.array_copy(self__.tail,(0),trimmed_tail,(0),len);

return (new cljs.core.PersistentVector(null,self__.cnt,self__.shift,self__.root,trimmed_tail,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientVector.cljs$lang$type = true;

cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";

cljs.core.TransientVector.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/TransientVector");
});

cljs.core.__GT_TransientVector = (function __GT_TransientVector(cnt,shift,root,tail){
return (new cljs.core.TransientVector(cnt,shift,root,tail));
});


/**
* @constructor
*/
cljs.core.PersistentQueueSeq = (function (meta,front,rear,__hash){
this.meta = meta;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 31850572;
})
cljs.core.PersistentQueueSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueueSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueueSeq(self__.meta,f1,self__.rear,null));
} else {
if((self__.rear == null)){
return cljs.core._empty(coll__$1);
} else {
return (new cljs.core.PersistentQueueSeq(self__.meta,self__.rear,null,null));
}
}
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueueSeq(meta__$1,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentQueueSeq.cljs$lang$type = true;

cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";

cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentQueueSeq");
});

cljs.core.__GT_PersistentQueueSeq = (function __GT_PersistentQueueSeq(meta,front,rear,__hash){
return (new cljs.core.PersistentQueueSeq(meta,front,rear,__hash));
});

(cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));

/**
* @constructor
*/
cljs.core.PersistentQueue = (function (meta,count,front,rear,__hash){
this.meta = meta;
this.count = count;
this.front = front;
this.rear = rear;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 31858766;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentQueue.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentQueue.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(self__.meta,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.count;
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
var temp__4124__auto__ = cljs.core.next(self__.front);
if(temp__4124__auto__){
var f1 = temp__4124__auto__;
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),f1,self__.rear,null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count - (1)),cljs.core.seq(self__.rear),cljs.core.PersistentVector.EMPTY,null));
}
} else {
return coll__$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY,self__.meta);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.front);
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.rest(cljs.core.seq(coll__$1));
});

cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var rear__$1 = cljs.core.seq(self__.rear);
if(cljs.core.truth_((function (){var or__22964__auto__ = self__.front;
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return rear__$1;
}
})())){
return (new cljs.core.PersistentQueueSeq(null,self__.front,cljs.core.seq(rear__$1),null));
} else {
return null;
}
});

cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentQueue(meta__$1,self__.count,self__.front,self__.rear,self__.__hash));
});

cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_(self__.front)){
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),self__.front,cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__22964__auto__ = self__.rear;
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return cljs.core.PersistentVector.EMPTY;
}
})(),o),null));
} else {
return (new cljs.core.PersistentQueue(self__.meta,(self__.count + (1)),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front,o),cljs.core.PersistentVector.EMPTY,null));
}
});

cljs.core.PersistentQueue.cljs$lang$type = true;

cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";

cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentQueue");
});

cljs.core.__GT_PersistentQueue = (function __GT_PersistentQueue(meta,count,front,rear,__hash){
return (new cljs.core.PersistentQueue(meta,count,front,rear,__hash));
});

cljs.core.PersistentQueue.EMPTY = (new cljs.core.PersistentQueue(null,(0),null,cljs.core.PersistentVector.EMPTY,cljs.core.empty_ordered_hash));
(cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));

/**
* @constructor
*/
cljs.core.NeverEquiv = (function (){
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2097152;
})
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (o,other){
var self__ = this;
var o__$1 = this;
return false;
});

cljs.core.NeverEquiv.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NeverEquiv.cljs$lang$type = true;

cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";

cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/NeverEquiv");
});

cljs.core.__GT_NeverEquiv = (function __GT_NeverEquiv(){
return (new cljs.core.NeverEquiv());
});

cljs.core.never_equiv = (new cljs.core.NeverEquiv());
/**
* Assumes y is a map. Returns true if x equals y, otherwise returns
* false.
*/
cljs.core.equiv_map = (function equiv_map(x,y){
return cljs.core.boolean$(((cljs.core.map_QMARK_(y))?(((cljs.core.count(x) === cljs.core.count(y)))?cljs.core.every_QMARK_(cljs.core.identity,cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (xkv){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y,cljs.core.first(xkv),cljs.core.never_equiv),cljs.core.second(xkv));
}),x)):null):null));
});
cljs.core.scan_array = (function scan_array(incr,k,array){
var len = array.length;
var i = (0);
while(true){
if((i < len)){
if((k === (array[i]))){
return i;
} else {
var G__33002 = (i + incr);
i = G__33002;
continue;
}
} else {
return null;
}
break;
}
});
cljs.core.obj_map_compare_keys = (function obj_map_compare_keys(a,b){
var a__$1 = cljs.core.hash(a);
var b__$1 = cljs.core.hash(b);
if((a__$1 < b__$1)){
return (-1);
} else {
if((a__$1 > b__$1)){
return (1);
} else {
return (0);

}
}
});
cljs.core.obj_map__GT_hash_map = (function obj_map__GT_hash_map(m,k,v){
var ks = m.keys;
var len = ks.length;
var so = m.strobj;
var mm = cljs.core.meta(m);
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var k__$1 = (ks[i]);
var G__33003 = (i + (1));
var G__33004 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k__$1,(so[k__$1]));
i = G__33003;
out = G__33004;
continue;
} else {
return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,k,v)),mm);
}
break;
}
});
cljs.core.obj_clone = (function obj_clone(obj,ks){
var new_obj = (function (){var obj33008 = {};
return obj33008;
})();
var l = ks.length;
var i_33009 = (0);
while(true){
if((i_33009 < l)){
var k_33010 = (ks[i_33009]);
(new_obj[k_33010] = (obj[k_33010]));

var G__33011 = (i_33009 + (1));
i_33009 = G__33011;
continue;
} else {
}
break;
}

return new_obj;
});

/**
* @constructor
*/
cljs.core.ObjMap = (function (meta,keys,strobj,update_count,__hash){
this.meta = meta;
this.keys = keys;
this.strobj = strobj;
this.update_count = update_count;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 4;
})
cljs.core.ObjMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ObjMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__22952__auto__ = (function (){var G__33015 = k;
return goog.isString(G__33015);
})();
if(cljs.core.truth_(and__22952__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__22952__auto__;
}
})())){
return (self__.strobj[k]);
} else {
return not_found;
}
});

cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.keys.length;
var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
var init__$1 = init;
while(true){
if(cljs.core.seq(keys__$1)){
var k = cljs.core.first(keys__$1);
var init__$2 = (function (){var G__33016 = init__$1;
var G__33017 = k;
var G__33018 = (self__.strobj[k]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33016,G__33017,G__33018) : f.call(null,G__33016,G__33017,G__33018));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33019 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33019) : cljs.core.deref.call(null,G__33019));
} else {
var G__33025 = cljs.core.rest(keys__$1);
var G__33026 = init__$2;
keys__$1 = G__33025;
init__$1 = G__33026;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.keys.length;
});

cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1));
});

cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.ObjMap.EMPTY,self__.meta);
});

cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__22952__auto__ = (function (){var G__33021 = k;
return goog.isString(G__33021);
})();
if(cljs.core.truth_(and__22952__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__22952__auto__;
}
})())){
var new_keys = cljs.core.aclone(self__.keys);
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
new_keys.splice(cljs.core.scan_array((1),k,new_keys),(1));

delete new_strobj[k];

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
} else {
return coll__$1;
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var G__33022 = k;
return goog.isString(G__33022);
})())){
if(((self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD)) || ((self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD))){
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
} else {
if(!((cljs.core.scan_array((1),k,self__.keys) == null))){
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
(new_strobj[k] = v);

return (new cljs.core.ObjMap(self__.meta,self__.keys,new_strobj,(self__.update_count + (1)),null));
} else {
var new_strobj = cljs.core.obj_clone(self__.strobj,self__.keys);
var new_keys = cljs.core.aclone(self__.keys);
(new_strobj[k] = v);

new_keys.push(k);

return (new cljs.core.ObjMap(self__.meta,new_keys,new_strobj,(self__.update_count + (1)),null));
}
}
} else {
return cljs.core.obj_map__GT_hash_map(coll__$1,k,v);
}
});

cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if(cljs.core.truth_((function (){var and__22952__auto__ = (function (){var G__33024 = k;
return goog.isString(G__33024);
})();
if(cljs.core.truth_(and__22952__auto__)){
return !((cljs.core.scan_array((1),k,self__.keys) == null));
} else {
return and__22952__auto__;
}
})())){
return true;
} else {
return false;
}
});

cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.keys.length > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (coll__$1){
return (function (p1__33012_SHARP_){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[p1__33012_SHARP_,(self__.strobj[p1__33012_SHARP_])],null));
});})(coll__$1))
,self__.keys.sort(cljs.core.obj_map_compare_keys));
} else {
return null;
}
});

cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ObjMap(meta__$1,self__.keys,self__.strobj,self__.update_count,self__.__hash));
});

cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,coll__$1,entry);
}
});

cljs.core.ObjMap.prototype.call = (function() {
var G__33027 = null;
var G__33027__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33027__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33027 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33027__2.call(this,self__,k);
case 3:
return G__33027__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33027.cljs$core$IFn$_invoke$arity$2 = G__33027__2;
G__33027.cljs$core$IFn$_invoke$arity$3 = G__33027__3;
return G__33027;
})()
;

cljs.core.ObjMap.prototype.apply = (function (self__,args33013){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33013)));
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.ObjMap.cljs$lang$type = true;

cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";

cljs.core.ObjMap.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ObjMap");
});

cljs.core.__GT_ObjMap = (function __GT_ObjMap(meta,keys,strobj,update_count,__hash){
return (new cljs.core.ObjMap(meta,keys,strobj,update_count,__hash));
});

cljs.core.ObjMap.EMPTY = (new cljs.core.ObjMap(null,[],(function (){var obj33029 = {};
return obj33029;
})(),(0),cljs.core.empty_unordered_hash));
cljs.core.ObjMap.HASHMAP_THRESHOLD = (8);
cljs.core.ObjMap.fromObject = (function (ks,obj){
return (new cljs.core.ObjMap(null,ks,obj,(0),null));
});

/**
* @constructor
*/
cljs.core.ES6EntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6EntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var vec__33030 = cljs.core.first(self__.s);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33030,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33030,(1),null);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [k,v]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6EntriesIterator.cljs$lang$type = true;

cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";

cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ES6EntriesIterator");
});

cljs.core.__GT_ES6EntriesIterator = (function __GT_ES6EntriesIterator(s){
return (new cljs.core.ES6EntriesIterator(s));
});

cljs.core.es6_entries_iterator = (function es6_entries_iterator(coll){
return (new cljs.core.ES6EntriesIterator(cljs.core.seq(coll)));
});

/**
* @constructor
*/
cljs.core.ES6SetEntriesIterator = (function (s){
this.s = s;
})
cljs.core.ES6SetEntriesIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
if(!((self__.s == null))){
var x = cljs.core.first(self__.s);
self__.s = cljs.core.next(self__.s);

return {"done": false, "value": [x,x]};
} else {
return {"done": true, "value": null};
}
});

cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";

cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ES6SetEntriesIterator");
});

cljs.core.__GT_ES6SetEntriesIterator = (function __GT_ES6SetEntriesIterator(s){
return (new cljs.core.ES6SetEntriesIterator(s));
});

cljs.core.es6_set_entries_iterator = (function es6_set_entries_iterator(coll){
return (new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll)));
});
cljs.core.array_map_index_of_nil_QMARK_ = (function array_map_index_of_nil_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(((arr[i]) == null)){
return i;
} else {
var G__33031 = (i + (2));
i = G__33031;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_keyword_QMARK_ = (function array_map_index_of_keyword_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.fqn;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Keyword)) && ((kstr === k_SINGLEQUOTE_.fqn));
})()){
return i;
} else {
var G__33032 = (i + (2));
i = G__33032;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_symbol_QMARK_ = (function array_map_index_of_symbol_QMARK_(arr,m,k){
var len = arr.length;
var kstr = k.str;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((function (){var k_SINGLEQUOTE_ = (arr[i]);
return ((k_SINGLEQUOTE_ instanceof cljs.core.Symbol)) && ((kstr === k_SINGLEQUOTE_.str));
})()){
return i;
} else {
var G__33033 = (i + (2));
i = G__33033;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_identical_QMARK_ = (function array_map_index_of_identical_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if((k === (arr[i]))){
return i;
} else {
var G__33034 = (i + (2));
i = G__33034;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of_equiv_QMARK_ = (function array_map_index_of_equiv_QMARK_(arr,m,k){
var len = arr.length;
var i = (0);
while(true){
if((len <= i)){
return (-1);
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(arr[i]))){
return i;
} else {
var G__33035 = (i + (2));
i = G__33035;
continue;

}
}
break;
}
});
cljs.core.array_map_index_of = (function array_map_index_of(m,k){
var arr = m.arr;
if((k instanceof cljs.core.Keyword)){
return cljs.core.array_map_index_of_keyword_QMARK_(arr,m,k);
} else {
if(cljs.core.truth_((function (){var or__22964__auto__ = (function (){var G__33039 = k;
return goog.isString(G__33039);
})();
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return typeof k === 'number';
}
})())){
return cljs.core.array_map_index_of_identical_QMARK_(arr,m,k);
} else {
if((k instanceof cljs.core.Symbol)){
return cljs.core.array_map_index_of_symbol_QMARK_(arr,m,k);
} else {
if((k == null)){
return cljs.core.array_map_index_of_nil_QMARK_(arr,m,k);
} else {
return cljs.core.array_map_index_of_equiv_QMARK_(arr,m,k);

}
}
}
}
});
cljs.core.array_map_extend_kv = (function array_map_extend_kv(m,k,v){
var arr = m.arr;
var l = arr.length;
var narr = (new Array((l + (2))));
var i_33040 = (0);
while(true){
if((i_33040 < l)){
(narr[i_33040] = (arr[i_33040]));

var G__33041 = (i_33040 + (1));
i_33040 = G__33041;
continue;
} else {
}
break;
}

(narr[l] = k);

(narr[(l + (1))] = v);

return narr;
});

/**
* @constructor
*/
cljs.core.PersistentArrayMapSeq = (function (arr,i,_meta){
this.arr = arr;
this.i = i;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374990;
})
cljs.core.PersistentArrayMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return null;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return ((self__.arr.length - self__.i) / (2));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.i < (self__.arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(self__.arr,(self__.i + (2)),self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMapSeq(self__.arr,self__.i,new_meta));
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";

cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentArrayMapSeq");
});

cljs.core.__GT_PersistentArrayMapSeq = (function __GT_PersistentArrayMapSeq(arr,i,_meta){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
});

(cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.persistent_array_map_seq = (function persistent_array_map_seq(arr,i,_meta){
if((i <= (arr.length - (2)))){
return (new cljs.core.PersistentArrayMapSeq(arr,i,_meta));
} else {
return null;
}
});


/**
* @constructor
*/
cljs.core.PersistentArrayMapIterator = (function (arr,i,cnt){
this.arr = arr;
this.i = i;
this.cnt = cnt;
})
cljs.core.PersistentArrayMapIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
return (self__.i < self__.cnt);
});

cljs.core.PersistentArrayMapIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[self__.i]),(self__.arr[(self__.i + (1))])], null);
self__.i = (self__.i + (2));

return ret;
});

cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";

cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentArrayMapIterator");
});

cljs.core.__GT_PersistentArrayMapIterator = (function __GT_PersistentArrayMapIterator(arr,i,cnt){
return (new cljs.core.PersistentArrayMapIterator(arr,i,cnt));
});


/**
* @constructor
*/
cljs.core.PersistentArrayMap = (function (meta,cnt,arr,__hash){
this.meta = meta;
this.cnt = cnt;
this.arr = arr;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16647951;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentArrayMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentArrayMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentArrayMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33043 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33043) : cljs.core.keys.call(null,G__33043));
})());
});

cljs.core.PersistentArrayMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentArrayMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33044 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33044) : cljs.core.vals.call(null,G__33044));
})());
});

cljs.core.PersistentArrayMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentArrayMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33045 = cljs.core.seq(coll);
var chunk__33046 = null;
var count__33047 = (0);
var i__33048 = (0);
while(true){
if((i__33048 < count__33047)){
var vec__33049 = chunk__33046.cljs$core$IIndexed$_nth$arity$2(null,i__33048);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33049,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33049,(1),null);
var G__33050_33063 = v;
var G__33051_33064 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33050_33063,G__33051_33064) : f.call(null,G__33050_33063,G__33051_33064));

var G__33065 = seq__33045;
var G__33066 = chunk__33046;
var G__33067 = count__33047;
var G__33068 = (i__33048 + (1));
seq__33045 = G__33065;
chunk__33046 = G__33066;
count__33047 = G__33067;
i__33048 = G__33068;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33045);
if(temp__4126__auto__){
var seq__33045__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33045__$1)){
var c__23751__auto__ = cljs.core.chunk_first(seq__33045__$1);
var G__33069 = cljs.core.chunk_rest(seq__33045__$1);
var G__33070 = c__23751__auto__;
var G__33071 = cljs.core.count(c__23751__auto__);
var G__33072 = (0);
seq__33045 = G__33069;
chunk__33046 = G__33070;
count__33047 = G__33071;
i__33048 = G__33072;
continue;
} else {
var vec__33052 = cljs.core.first(seq__33045__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33052,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33052,(1),null);
var G__33053_33073 = v;
var G__33054_33074 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33053_33073,G__33054_33074) : f.call(null,G__33053_33073,G__33054_33074));

var G__33075 = cljs.core.next(seq__33045__$1);
var G__33076 = null;
var G__33077 = (0);
var G__33078 = (0);
seq__33045 = G__33075;
chunk__33046 = G__33076;
count__33047 = G__33077;
i__33048 = G__33078;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var G__33055 = init__$1;
var G__33056 = (self__.arr[i]);
var G__33057 = (self__.arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33055,G__33056,G__33057) : f.call(null,G__33055,G__33056,G__33057));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33058 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33058) : cljs.core.deref.call(null,G__33058));
} else {
var G__33079 = (i + (2));
var G__33080 = init__$2;
i = G__33079;
init__$1 = G__33080;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return (new cljs.core.PersistentArrayMapIterator(self__.arr,(0),(self__.cnt * (2))));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
if((function (){var G__33059 = other;
if(G__33059){
var bit__23638__auto__ = (G__33059.cljs$lang$protocol_mask$partition0$ & (1024));
if((bit__23638__auto__) || (G__33059.cljs$core$IMap$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
var alen = self__.arr.length;
var other__$1 = other;
if((self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null))){
var i = (0);
while(true){
if((i < alen)){
var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null,(self__.arr[i]),cljs.core.lookup_sentinel);
if(!((v === cljs.core.lookup_sentinel))){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[(i + (1))]),v)){
var G__33081 = (i + (2));
i = G__33081;
continue;
} else {
return false;
}
} else {
return false;
}
} else {
return true;
}
break;
}
} else {
return false;
}
} else {
return cljs.core.equiv_map(coll__$1,other);
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientArrayMap((function (){var obj33061 = {};
return obj33061;
})(),self__.arr.length,cljs.core.aclone(self__.arr)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY,self__.meta);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx >= (0))){
var len = self__.arr.length;
var new_len = (len - (2));
if((new_len === (0))){
return cljs.core._empty(coll__$1);
} else {
var new_arr = (new Array(new_len));
var s = (0);
var d = (0);
while(true){
if((s >= len)){
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt - (1)),new_arr,null));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k,(self__.arr[s]))){
var G__33082 = (s + (2));
var G__33083 = d;
s = G__33082;
d = G__33083;
continue;
} else {
(new_arr[d] = (self__.arr[s]));

(new_arr[(d + (1))] = (self__.arr[(s + (1))]));

var G__33084 = (s + (2));
var G__33085 = (d + (2));
s = G__33084;
d = G__33085;
continue;

}
}
break;
}
}
} else {
return coll__$1;
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var idx = cljs.core.array_map_index_of(coll__$1,k);
if((idx === (-1))){
if((self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr__$1 = cljs.core.array_map_extend_kv(coll__$1,k,v);
return (new cljs.core.PersistentArrayMap(self__.meta,(self__.cnt + (1)),arr__$1,null));
} else {
return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY,coll__$1),k,v),self__.meta);
}
} else {
if((v === (self__.arr[(idx + (1))]))){
return coll__$1;
} else {
var arr__$1 = (function (){var G__33062 = cljs.core.aclone(self__.arr);
(G__33062[(idx + (1))] = v);

return G__33062;
})();
return (new cljs.core.PersistentArrayMap(self__.meta,self__.cnt,arr__$1,null));

}
}
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((cljs.core.array_map_index_of(coll__$1,k) === (-1)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.persistent_array_map_seq(self__.arr,(0),null);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentArrayMap(meta__$1,self__.cnt,self__.arr,self__.__hash));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__33086 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__33087 = cljs.core.next(es);
ret = G__33086;
es = G__33087;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentArrayMap.prototype.call = (function() {
var G__33088 = null;
var G__33088__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33088__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33088 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33088__2.call(this,self__,k);
case 3:
return G__33088__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33088.cljs$core$IFn$_invoke$arity$2 = G__33088__2;
G__33088.cljs$core$IFn$_invoke$arity$3 = G__33088__3;
return G__33088;
})()
;

cljs.core.PersistentArrayMap.prototype.apply = (function (self__,args33042){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33042)));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentArrayMap.cljs$lang$type = true;

cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";

cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentArrayMap");
});

cljs.core.__GT_PersistentArrayMap = (function __GT_PersistentArrayMap(meta,cnt,arr,__hash){
return (new cljs.core.PersistentArrayMap(meta,cnt,arr,__hash));
});

cljs.core.PersistentArrayMap.EMPTY = (new cljs.core.PersistentArrayMap(null,(0),[],cljs.core.empty_unordered_hash));
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = (8);
cljs.core.PersistentArrayMap.fromArray = (function (arr,no_clone,no_check){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
if(no_check){
var cnt = (arr__$1.length / (2));
return (new cljs.core.PersistentArrayMap(null,cnt,arr__$1,null));
} else {
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__33089 = (i + (2));
var G__33090 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__33089;
ret = G__33090;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
}
});
(cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientArrayMap = (function (editable_QMARK_,len,arr){
this.editable_QMARK_ = editable_QMARK_;
this.len = len;
this.arr = arr;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx >= (0))){
(self__.arr[idx] = (self__.arr[(self__.len - (2))]));

(self__.arr[(idx + (1))] = (self__.arr[(self__.len - (1))]));

var G__33091_33099 = self__.arr;
G__33091_33099.pop();

G__33091_33099.pop();


self__.len = (self__.len - (2));
} else {
}

return tcoll__$1;
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,key);
if((idx === (-1))){
if(((self__.len + (2)) <= ((2) * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD))){
self__.len = (self__.len + (2));

self__.arr.push(key);

self__.arr.push(val);

return tcoll__$1;
} else {
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3((function (){var G__33092 = self__.len;
var G__33093 = self__.arr;
return (cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__33092,G__33093) : cljs.core.array__GT_transient_hash_map.call(null,G__33092,G__33093));
})(),key,val);
}
} else {
if((val === (self__.arr[(idx + (1))]))){
return tcoll__$1;
} else {
(self__.arr[(idx + (1))] = val);

return tcoll__$1;
}
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
if((function (){var G__33094 = o;
if(G__33094){
var bit__23645__auto__ = (G__33094.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__23645__auto__) || (G__33094.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__33094.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33094);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33094);
}
})()){
return cljs.core._assoc_BANG_(tcoll__$1,(function (){var G__33095 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33095) : cljs.core.key.call(null,G__33095));
})(),(function (){var G__33096 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33096) : cljs.core.val.call(null,G__33096));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$2 = tcoll__$1;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__33100 = cljs.core.next(es);
var G__33101 = cljs.core._assoc_BANG_(tcoll__$2,(function (){var G__33097 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33097) : cljs.core.key.call(null,G__33097));
})(),(function (){var G__33098 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33098) : cljs.core.val.call(null,G__33098));
})());
es = G__33100;
tcoll__$2 = G__33101;
continue;
} else {
return tcoll__$2;
}
break;
}
}
} else {
throw (new Error("conj! after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
self__.editable_QMARK_ = false;

return (new cljs.core.PersistentArrayMap(null,cljs.core.quot(self__.len,(2)),self__.arr,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,k,null);
});

cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
var idx = cljs.core.array_map_index_of(tcoll__$1,k);
if((idx === (-1))){
return not_found;
} else {
return (self__.arr[(idx + (1))]);
}
} else {
throw (new Error("lookup after persistent!"));
}
});

cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
if(cljs.core.truth_(self__.editable_QMARK_)){
return cljs.core.quot(self__.len,(2));
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientArrayMap.cljs$lang$type = true;

cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";

cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/TransientArrayMap");
});

cljs.core.__GT_TransientArrayMap = (function __GT_TransientArrayMap(editable_QMARK_,len,arr){
return (new cljs.core.TransientArrayMap(editable_QMARK_,len,arr));
});


cljs.core.array__GT_transient_hash_map = (function array__GT_transient_hash_map(len,arr){
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
var i = (0);
while(true){
if((i < len)){
var G__33102 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,(arr[i]),(arr[(i + (1))]));
var G__33103 = (i + (2));
out = G__33102;
i = G__33103;
continue;
} else {
return out;
}
break;
}
});

/**
* @constructor
*/
cljs.core.Box = (function (val){
this.val = val;
})

cljs.core.Box.cljs$lang$type = true;

cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";

cljs.core.Box.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Box");
});

cljs.core.__GT_Box = (function __GT_Box(val){
return (new cljs.core.Box(val));
});






cljs.core.key_test = (function key_test(key,other){
if((key === other)){
return true;
} else {
if(cljs.core.keyword_identical_QMARK_(key,other)){
return true;
} else {
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key,other);

}
}
});
cljs.core.mask = (function mask(hash,shift){
return ((hash >>> shift) & (31));
});
cljs.core.clone_and_set = (function() {
var clone_and_set = null;
var clone_and_set__3 = (function (arr,i,a){
var G__33106 = cljs.core.aclone(arr);
(G__33106[i] = a);

return G__33106;
});
var clone_and_set__5 = (function (arr,i,a,j,b){
var G__33107 = cljs.core.aclone(arr);
(G__33107[i] = a);

(G__33107[j] = b);

return G__33107;
});
clone_and_set = function(arr,i,a,j,b){
switch(arguments.length){
case 3:
return clone_and_set__3.call(this,arr,i,a);
case 5:
return clone_and_set__5.call(this,arr,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
return clone_and_set;
})()
;
cljs.core.remove_pair = (function remove_pair(arr,i){
var new_arr = (new Array((arr.length - (2))));
cljs.core.array_copy(arr,(0),new_arr,(0),((2) * i));

cljs.core.array_copy(arr,((2) * (i + (1))),new_arr,((2) * i),(new_arr.length - ((2) * i)));

return new_arr;
});
cljs.core.bitmap_indexed_node_index = (function bitmap_indexed_node_index(bitmap,bit){
return cljs.core.bit_count((bitmap & (bit - (1))));
});
cljs.core.bitpos = (function bitpos(hash,shift){
return ((1) << ((hash >>> shift) & 0x01f));
});
cljs.core.edit_and_set = (function() {
var edit_and_set = null;
var edit_and_set__4 = (function (inode,edit,i,a){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

return editable;
});
var edit_and_set__6 = (function (inode,edit,i,a,j,b){
var editable = inode.ensure_editable(edit);
(editable.arr[i] = a);

(editable.arr[j] = b);

return editable;
});
edit_and_set = function(inode,edit,i,a,j,b){
switch(arguments.length){
case 4:
return edit_and_set__4.call(this,inode,edit,i,a);
case 6:
return edit_and_set__6.call(this,inode,edit,i,a,j,b);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
return edit_and_set;
})()
;
cljs.core.inode_kv_reduce = (function inode_kv_reduce(arr,f,init){
var len = arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var init__$2 = (function (){var k = (arr[i]);
if(!((k == null))){
var G__33112 = init__$1;
var G__33113 = k;
var G__33114 = (arr[(i + (1))]);
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33112,G__33113,G__33114) : f.call(null,G__33112,G__33113,G__33114));
} else {
var node = (arr[(i + (1))]);
if(!((node == null))){
return node.kv_reduce(f,init__$1);
} else {
return init__$1;
}
}
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33115 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33115) : cljs.core.deref.call(null,G__33115));
} else {
var G__33116 = (i + (2));
var G__33117 = init__$2;
i = G__33116;
init__$1 = G__33117;
continue;
}
} else {
return init__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.BitmapIndexedNode = (function (edit,bitmap,arr){
this.edit = edit;
this.bitmap = bitmap;
this.arr = arr;
})
cljs.core.BitmapIndexedNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var n = cljs.core.bit_count(self__.bitmap);
var new_arr = (new Array((((n < (0)))?(4):((2) * (n + (1))))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * n));

return (new cljs.core.BitmapIndexedNode(e,self__.bitmap,new_arr));
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
} else {
if((self__.bitmap === bit)){
return null;
} else {
return inode.edit_and_remove_pair(edit__$1,bit,idx);

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
(removed_leaf_QMARK_[(0)] = true);

return inode.edit_and_remove_pair(edit__$1,bit,idx);
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = (function (e,bit,i){
var self__ = this;
var inode = this;
if((self__.bitmap === bit)){
return null;
} else {
var editable = inode.ensure_editable(e);
var earr = editable.arr;
var len = earr.length;
editable.bitmap = (bit ^ editable.bitmap);

cljs.core.array_copy(earr,((2) * (i + (1))),earr,((2) * i),(len - ((2) * (i + (1)))));

(earr[(len - (2))] = null);

(earr[(len - (1))] = null);

return editable;
}
});

cljs.core.BitmapIndexedNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33118 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__33118) : cljs.core.create_inode_seq.call(null,G__33118));
});

cljs.core.BitmapIndexedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.BitmapIndexedNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return val_or_node;
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((((2) * n) < self__.arr.length)){
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
added_leaf_QMARK_.val = true;

cljs.core.array_copy_downward(earr,((2) * idx),earr,((2) * (idx + (1))),((2) * (n - idx)));

(earr[((2) * idx)] = key);

(earr[(((2) * idx) + (1))] = val);

editable.bitmap = (editable.bitmap | bit);

return editable;
} else {
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_33132 = (0);
var j_33133 = (0);
while(true){
if((i_33132 < (32))){
if((((self__.bitmap >>> i_33132) & (1)) === (0))){
var G__33134 = (i_33132 + (1));
var G__33135 = j_33133;
i_33132 = G__33134;
j_33133 = G__33135;
continue;
} else {
(nodes[i_33132] = ((!(((self__.arr[j_33133]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),cljs.core.hash((self__.arr[j_33133])),(self__.arr[j_33133]),(self__.arr[(j_33133 + (1))]),added_leaf_QMARK_):(self__.arr[(j_33133 + (1))])));

var G__33136 = (i_33132 + (1));
var G__33137 = (j_33133 + (2));
i_33132 = G__33136;
j_33133 = G__33137;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(edit__$1,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (4)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

var editable = inode.ensure_editable(edit__$1);
editable.arr = new_arr;

editable.bitmap = (editable.bitmap | bit);

return editable;

}
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),n);
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(((2) * idx) + (1)),val);
}
} else {
added_leaf_QMARK_.val = true;

return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__33119 = edit__$1;
var G__33120 = (shift + (5));
var G__33121 = key_or_nil;
var G__33122 = val_or_node;
var G__33123 = hash;
var G__33124 = key;
var G__33125 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__33119,G__33120,G__33121,G__33122,G__33123,G__33124,G__33125) : cljs.core.create_node.call(null,G__33119,G__33120,G__33121,G__33122,G__33123,G__33124,G__33125));
})());

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
if(((self__.bitmap & bit) === (0))){
var n = cljs.core.bit_count(self__.bitmap);
if((n >= (16))){
var nodes = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];
var jdx = ((hash >>> shift) & 0x01f);
(nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_));

var i_33138 = (0);
var j_33139 = (0);
while(true){
if((i_33138 < (32))){
if((((self__.bitmap >>> i_33138) & (1)) === (0))){
var G__33140 = (i_33138 + (1));
var G__33141 = j_33139;
i_33138 = G__33140;
j_33139 = G__33141;
continue;
} else {
(nodes[i_33138] = ((!(((self__.arr[j_33139]) == null)))?cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),cljs.core.hash((self__.arr[j_33139])),(self__.arr[j_33139]),(self__.arr[(j_33139 + (1))]),added_leaf_QMARK_):(self__.arr[(j_33139 + (1))])));

var G__33142 = (i_33138 + (1));
var G__33143 = (j_33139 + (2));
i_33138 = G__33142;
j_33139 = G__33143;
continue;
}
} else {
}
break;
}

return (new cljs.core.ArrayNode(null,(n + (1)),nodes));
} else {
var new_arr = (new Array(((2) * (n + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * idx));

(new_arr[((2) * idx)] = key);

(new_arr[(((2) * idx) + (1))] = val);

cljs.core.array_copy(self__.arr,((2) * idx),new_arr,((2) * (idx + (1))),((2) * (n - idx)));

added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap | bit),new_arr));
}
} else {
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
if((val === val_or_node)){
return inode;
} else {
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),val)));
}
} else {
added_leaf_QMARK_.val = true;

return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr,((2) * idx),null,(((2) * idx) + (1)),(function (){var G__33126 = (shift + (5));
var G__33127 = key_or_nil;
var G__33128 = val_or_node;
var G__33129 = hash;
var G__33130 = key;
var G__33131 = val;
return (cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__33126,G__33127,G__33128,G__33129,G__33130,G__33131) : cljs.core.create_node.call(null,G__33126,G__33127,G__33128,G__33129,G__33130,G__33131));
})())));

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return not_found;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
return val_or_node.inode_find((shift + (5)),hash,key,not_found);
} else {
if(cljs.core.key_test(key,key_or_nil)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil,val_or_node], null);
} else {
return not_found;

}
}
}
});

cljs.core.BitmapIndexedNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var bit = (1 << ((hash >>> shift) & 0x01f));
if(((self__.bitmap & bit) === (0))){
return inode;
} else {
var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap,bit);
var key_or_nil = (self__.arr[((2) * idx)]);
var val_or_node = (self__.arr[(((2) * idx) + (1))]);
if((key_or_nil == null)){
var n = val_or_node.inode_without((shift + (5)),hash,key);
if((n === val_or_node)){
return inode;
} else {
if(!((n == null))){
return (new cljs.core.BitmapIndexedNode(null,self__.bitmap,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(((2) * idx) + (1)),n)));
} else {
if((self__.bitmap === bit)){
return null;
} else {
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));

}
}
}
} else {
if(cljs.core.key_test(key,key_or_nil)){
return (new cljs.core.BitmapIndexedNode(null,(self__.bitmap ^ bit),cljs.core.remove_pair(self__.arr,idx)));
} else {
return inode;

}
}
}
});

cljs.core.BitmapIndexedNode.cljs$lang$type = true;

cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";

cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/BitmapIndexedNode");
});

cljs.core.__GT_BitmapIndexedNode = (function __GT_BitmapIndexedNode(edit,bitmap,arr){
return (new cljs.core.BitmapIndexedNode(edit,bitmap,arr));
});

cljs.core.BitmapIndexedNode.EMPTY = (new cljs.core.BitmapIndexedNode(null,(0),[]));
cljs.core.pack_array_node = (function pack_array_node(array_node,edit,idx){
var arr = array_node.arr;
var len = arr.length;
var new_arr = (new Array(((2) * (array_node.cnt - (1)))));
var i = (0);
var j = (1);
var bitmap = (0);
while(true){
if((i < len)){
if((!((i === idx))) && (!(((arr[i]) == null)))){
(new_arr[j] = (arr[i]));

var G__33144 = (i + (1));
var G__33145 = (j + (2));
var G__33146 = (bitmap | ((1) << i));
i = G__33144;
j = G__33145;
bitmap = G__33146;
continue;
} else {
var G__33147 = (i + (1));
var G__33148 = j;
var G__33149 = bitmap;
i = G__33147;
j = G__33148;
bitmap = G__33149;
continue;
}
} else {
return (new cljs.core.BitmapIndexedNode(edit,bitmap,new_arr));
}
break;
}
});

/**
* @constructor
*/
cljs.core.ArrayNode = (function (edit,cnt,arr){
this.edit = edit;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.ArrayNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
return (new cljs.core.ArrayNode(e,self__.cnt,cljs.core.aclone(self__.arr)));
}
});

cljs.core.ArrayNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return inode;
} else {
var n = node.inode_without_BANG_(edit__$1,(shift + (5)),hash,key,removed_leaf_QMARK_);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,edit__$1,idx);
} else {
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
editable.cnt = (editable.cnt - (1));

return editable;
}
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);

}
}
}
});

cljs.core.ArrayNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33150 = self__.arr;
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__33150) : cljs.core.create_array_node_seq.call(null,G__33150));
});

cljs.core.ArrayNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
var len = self__.arr.length;
var i = (0);
var init__$1 = init;
while(true){
if((i < len)){
var node = (self__.arr[i]);
if(!((node == null))){
var init__$2 = node.kv_reduce(f,init__$1);
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33151 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33151) : cljs.core.deref.call(null,G__33151));
} else {
var G__33152 = (i + (1));
var G__33153 = init__$2;
i = G__33152;
init__$1 = G__33153;
continue;
}
} else {
var G__33154 = (i + (1));
var G__33155 = init__$1;
i = G__33154;
init__$1 = G__33155;
continue;
}
} else {
return init__$1;
}
break;
}
});

cljs.core.ArrayNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_lookup((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_));
editable.cnt = (editable.cnt + (1));

return editable;
} else {
var n = node.inode_assoc_BANG_(edit__$1,(shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,idx,n);
}
}
});

cljs.core.ArrayNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if((node == null)){
return (new cljs.core.ArrayNode(null,(self__.cnt + (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,cljs.core.BitmapIndexedNode.EMPTY.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_))));
} else {
var n = node.inode_assoc((shift + (5)),hash,key,val,added_leaf_QMARK_);
if((n === node)){
return inode;
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
}
});

cljs.core.ArrayNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
return node.inode_find((shift + (5)),hash,key,not_found);
} else {
return not_found;
}
});

cljs.core.ArrayNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = ((hash >>> shift) & 0x01f);
var node = (self__.arr[idx]);
if(!((node == null))){
var n = node.inode_without((shift + (5)),hash,key);
if((n === node)){
return inode;
} else {
if((n == null)){
if((self__.cnt <= (8))){
return cljs.core.pack_array_node(inode,null,idx);
} else {
return (new cljs.core.ArrayNode(null,(self__.cnt - (1)),cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));
}
} else {
return (new cljs.core.ArrayNode(null,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,idx,n)));

}
}
} else {
return inode;
}
});

cljs.core.ArrayNode.cljs$lang$type = true;

cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";

cljs.core.ArrayNode.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ArrayNode");
});

cljs.core.__GT_ArrayNode = (function __GT_ArrayNode(edit,cnt,arr){
return (new cljs.core.ArrayNode(edit,cnt,arr));
});

cljs.core.hash_collision_node_find_index = (function hash_collision_node_find_index(arr,cnt,key){
var lim = ((2) * cnt);
var i = (0);
while(true){
if((i < lim)){
if(cljs.core.key_test(key,(arr[i]))){
return i;
} else {
var G__33156 = (i + (2));
i = G__33156;
continue;
}
} else {
return (-1);
}
break;
}
});

/**
* @constructor
*/
cljs.core.HashCollisionNode = (function (edit,collision_hash,cnt,arr){
this.edit = edit;
this.collision_hash = collision_hash;
this.cnt = cnt;
this.arr = arr;
})
cljs.core.HashCollisionNode.prototype.ensure_editable = (function (e){
var self__ = this;
var inode = this;
if((e === self__.edit)){
return inode;
} else {
var new_arr = (new Array(((2) * (self__.cnt + (1)))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),((2) * self__.cnt));

return (new cljs.core.HashCollisionNode(e,self__.collision_hash,self__.cnt,new_arr));
}
});

cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = (function (edit__$1,shift,hash,key,removed_leaf_QMARK_){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
(removed_leaf_QMARK_[(0)] = true);

if((self__.cnt === (1))){
return null;
} else {
var editable = inode.ensure_editable(edit__$1);
var earr = editable.arr;
(earr[idx] = (earr[(((2) * self__.cnt) - (2))]));

(earr[(idx + (1))] = (earr[(((2) * self__.cnt) - (1))]));

(earr[(((2) * self__.cnt) - (1))] = null);

(earr[(((2) * self__.cnt) - (2))] = null);

editable.cnt = (editable.cnt - (1));

return editable;
}
}
});

cljs.core.HashCollisionNode.prototype.inode_seq = (function (){
var self__ = this;
var inode = this;
var G__33157 = self__.arr;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__33157) : cljs.core.create_inode_seq.call(null,G__33157));
});

cljs.core.HashCollisionNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var inode = this;
return cljs.core.inode_kv_reduce(self__.arr,f,init);
});

cljs.core.HashCollisionNode.prototype.inode_lookup = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return (self__.arr[(idx + (1))]);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = (function (edit__$1,shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
if((self__.arr.length > ((2) * self__.cnt))){
var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode,edit__$1,((2) * self__.cnt),key,(((2) * self__.cnt) + (1)),val);
added_leaf_QMARK_.val = true;

editable.cnt = (editable.cnt + (1));

return editable;
} else {
var len = self__.arr.length;
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return inode.ensure_editable_array(edit__$1,(self__.cnt + (1)),new_arr);
}
} else {
if(((self__.arr[(idx + (1))]) === val)){
return inode;
} else {
return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode,edit__$1,(idx + (1)),val);
}
}
} else {
return (new cljs.core.BitmapIndexedNode(edit__$1,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode,null,null])).inode_assoc_BANG_(edit__$1,shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.inode_assoc = (function (shift,hash,key,val,added_leaf_QMARK_){
var self__ = this;
var inode = this;
if((hash === self__.collision_hash)){
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
var len = ((2) * self__.cnt);
var new_arr = (new Array((len + (2))));
cljs.core.array_copy(self__.arr,(0),new_arr,(0),len);

(new_arr[len] = key);

(new_arr[(len + (1))] = val);

added_leaf_QMARK_.val = true;

return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt + (1)),new_arr));
} else {
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((self__.arr[idx]),val)){
return inode;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,self__.cnt,cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr,(idx + (1)),val)));
}
}
} else {
return (new cljs.core.BitmapIndexedNode(null,(1 << ((self__.collision_hash >>> shift) & 0x01f)),[null,inode])).inode_assoc(shift,hash,key,val,added_leaf_QMARK_);
}
});

cljs.core.HashCollisionNode.prototype.ensure_editable_array = (function (e,count,array){
var self__ = this;
var inode = this;
if((e === self__.edit)){
self__.arr = array;

self__.cnt = count;

return inode;
} else {
return (new cljs.core.HashCollisionNode(self__.edit,self__.collision_hash,count,array));
}
});

cljs.core.HashCollisionNode.prototype.inode_find = (function (shift,hash,key,not_found){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx < (0))){
return not_found;
} else {
if(cljs.core.key_test(key,(self__.arr[idx]))){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.arr[idx]),(self__.arr[(idx + (1))])], null);
} else {
return not_found;

}
}
});

cljs.core.HashCollisionNode.prototype.inode_without = (function (shift,hash,key){
var self__ = this;
var inode = this;
var idx = cljs.core.hash_collision_node_find_index(self__.arr,self__.cnt,key);
if((idx === (-1))){
return inode;
} else {
if((self__.cnt === (1))){
return null;
} else {
return (new cljs.core.HashCollisionNode(null,self__.collision_hash,(self__.cnt - (1)),cljs.core.remove_pair(self__.arr,cljs.core.quot(idx,(2)))));

}
}
});

cljs.core.HashCollisionNode.cljs$lang$type = true;

cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";

cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/HashCollisionNode");
});

cljs.core.__GT_HashCollisionNode = (function __GT_HashCollisionNode(edit,collision_hash,cnt,arr){
return (new cljs.core.HashCollisionNode(edit,collision_hash,cnt,arr));
});

cljs.core.create_node = (function() {
var create_node = null;
var create_node__6 = (function (shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc(shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
var create_node__7 = (function (edit,shift,key1,val1,key2hash,key2,val2){
var key1hash = cljs.core.hash(key1);
if((key1hash === key2hash)){
return (new cljs.core.HashCollisionNode(null,key1hash,(2),[key1,val1,key2,val2]));
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit,shift,key1hash,key1,val1,added_leaf_QMARK_).inode_assoc_BANG_(edit,shift,key2hash,key2,val2,added_leaf_QMARK_);
}
});
create_node = function(edit,shift,key1,val1,key2hash,key2,val2){
switch(arguments.length){
case 6:
return create_node__6.call(this,edit,shift,key1,val1,key2hash,key2);
case 7:
return create_node__7.call(this,edit,shift,key1,val1,key2hash,key2,val2);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
return create_node;
})()
;

/**
* @constructor
*/
cljs.core.NodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.NodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.NodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(self__.nodes[self__.i]),(self__.nodes[(self__.i + (1))])], null);
} else {
return cljs.core.first(self__.s);
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.s == null)){
var G__33158 = self__.nodes;
var G__33159 = (self__.i + (2));
var G__33160 = null;
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__33158,G__33159,G__33160) : cljs.core.create_inode_seq.call(null,G__33158,G__33159,G__33160));
} else {
var G__33161 = self__.nodes;
var G__33162 = self__.i;
var G__33163 = cljs.core.next(self__.s);
return (cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__33161,G__33162,G__33163) : cljs.core.create_inode_seq.call(null,G__33161,G__33162,G__33163));
}
});

cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.NodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.NodeSeq.cljs$lang$type = true;

cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";

cljs.core.NodeSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/NodeSeq");
});

cljs.core.__GT_NodeSeq = (function __GT_NodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.NodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.create_inode_seq = (function() {
var create_inode_seq = null;
var create_inode_seq__1 = (function (nodes){
return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes,(0),null);
});
var create_inode_seq__3 = (function (nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
if(!(((nodes[j]) == null))){
return (new cljs.core.NodeSeq(null,nodes,j,null,null));
} else {
var temp__4124__auto__ = (nodes[(j + (1))]);
if(cljs.core.truth_(temp__4124__auto__)){
var node = temp__4124__auto__;
var temp__4124__auto____$1 = node.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var node_seq = temp__4124__auto____$1;
return (new cljs.core.NodeSeq(null,nodes,(j + (2)),node_seq,null));
} else {
var G__33167 = (j + (2));
j = G__33167;
continue;
}
} else {
var G__33168 = (j + (2));
j = G__33168;
continue;
}
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.NodeSeq(null,nodes,i,s,null));
}
});
create_inode_seq = function(nodes,i,s){
switch(arguments.length){
case 1:
return create_inode_seq__1.call(this,nodes);
case 3:
return create_inode_seq__3.call(this,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
return create_inode_seq;
})()
;

/**
* @constructor
*/
cljs.core.ArrayNodeSeq = (function (meta,nodes,i,s,__hash){
this.meta = meta;
this.nodes = nodes;
this.i = i;
this.s = s;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374860;
})
cljs.core.ArrayNodeSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ArrayNodeSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.first(self__.s);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var G__33169 = null;
var G__33170 = self__.nodes;
var G__33171 = self__.i;
var G__33172 = cljs.core.next(self__.s);
return (cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__33169,G__33170,G__33171,G__33172) : cljs.core.create_array_node_seq.call(null,G__33169,G__33170,G__33171,G__33172));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ArrayNodeSeq(meta__$1,self__.nodes,self__.i,self__.s,self__.__hash));
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ArrayNodeSeq.cljs$lang$type = true;

cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";

cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ArrayNodeSeq");
});

cljs.core.__GT_ArrayNodeSeq = (function __GT_ArrayNodeSeq(meta,nodes,i,s,__hash){
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,__hash));
});

(cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.create_array_node_seq = (function() {
var create_array_node_seq = null;
var create_array_node_seq__1 = (function (nodes){
return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null,nodes,(0),null);
});
var create_array_node_seq__4 = (function (meta,nodes,i,s){
if((s == null)){
var len = nodes.length;
var j = i;
while(true){
if((j < len)){
var temp__4124__auto__ = (nodes[j]);
if(cljs.core.truth_(temp__4124__auto__)){
var nj = temp__4124__auto__;
var temp__4124__auto____$1 = nj.inode_seq();
if(cljs.core.truth_(temp__4124__auto____$1)){
var ns = temp__4124__auto____$1;
return (new cljs.core.ArrayNodeSeq(meta,nodes,(j + (1)),ns,null));
} else {
var G__33177 = (j + (1));
j = G__33177;
continue;
}
} else {
var G__33178 = (j + (1));
j = G__33178;
continue;
}
} else {
return null;
}
break;
}
} else {
return (new cljs.core.ArrayNodeSeq(meta,nodes,i,s,null));
}
});
create_array_node_seq = function(meta,nodes,i,s){
switch(arguments.length){
case 1:
return create_array_node_seq__1.call(this,meta);
case 4:
return create_array_node_seq__4.call(this,meta,nodes,i,s);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
return create_array_node_seq;
})()
;

/**
* @constructor
*/
cljs.core.PersistentHashMap = (function (meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
this.meta = meta;
this.cnt = cnt;
this.root = root;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 16123663;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33180 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33180) : cljs.core.keys.call(null,G__33180));
})());
});

cljs.core.PersistentHashMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33181 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33181) : cljs.core.vals.call(null,G__33181));
})());
});

cljs.core.PersistentHashMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33182 = cljs.core.seq(coll);
var chunk__33183 = null;
var count__33184 = (0);
var i__33185 = (0);
while(true){
if((i__33185 < count__33184)){
var vec__33186 = chunk__33183.cljs$core$IIndexed$_nth$arity$2(null,i__33185);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33186,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33186,(1),null);
var G__33187_33198 = v;
var G__33188_33199 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33187_33198,G__33188_33199) : f.call(null,G__33187_33198,G__33188_33199));

var G__33200 = seq__33182;
var G__33201 = chunk__33183;
var G__33202 = count__33184;
var G__33203 = (i__33185 + (1));
seq__33182 = G__33200;
chunk__33183 = G__33201;
count__33184 = G__33202;
i__33185 = G__33203;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33182);
if(temp__4126__auto__){
var seq__33182__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33182__$1)){
var c__23751__auto__ = cljs.core.chunk_first(seq__33182__$1);
var G__33204 = cljs.core.chunk_rest(seq__33182__$1);
var G__33205 = c__23751__auto__;
var G__33206 = cljs.core.count(c__23751__auto__);
var G__33207 = (0);
seq__33182 = G__33204;
chunk__33183 = G__33205;
count__33184 = G__33206;
i__33185 = G__33207;
continue;
} else {
var vec__33189 = cljs.core.first(seq__33182__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33189,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33189,(1),null);
var G__33190_33208 = v;
var G__33191_33209 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33190_33208,G__33191_33209) : f.call(null,G__33190_33208,G__33191_33209));

var G__33210 = cljs.core.next(seq__33182__$1);
var G__33211 = null;
var G__33212 = (0);
var G__33213 = (0);
seq__33182 = G__33210;
chunk__33183 = G__33211;
count__33184 = G__33212;
i__33185 = G__33213;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
var init__$1 = ((self__.has_nil_QMARK_)?(function (){var G__33192 = init;
var G__33193 = null;
var G__33194 = self__.nil_val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33192,G__33193,G__33194) : f.call(null,G__33192,G__33193,G__33194));
})():init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__33195 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33195) : cljs.core.deref.call(null,G__33195));
} else {
if(!((self__.root == null))){
return self__.root.kv_reduce(f,init__$1);
} else {
return init__$1;

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashMap(self__.meta,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashMap((function (){var obj33197 = {};
return obj33197;
})(),self__.root,self__.cnt,self__.has_nil_QMARK_,self__.nil_val));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY,self__.meta);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),self__.root,false,null,null));
} else {
return coll__$1;
}
} else {
if((self__.root == null)){
return coll__$1;
} else {
var new_root = self__.root.inode_without((0),cljs.core.hash(k),k);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,(self__.cnt - (1)),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
if((k == null)){
if((self__.has_nil_QMARK_) && ((v === self__.nil_val))){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((self__.has_nil_QMARK_)?self__.cnt:(self__.cnt + (1))),self__.root,true,v,null));
}
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var new_root = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc((0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((new_root === self__.root)){
return coll__$1;
} else {
return (new cljs.core.PersistentHashMap(self__.meta,((added_leaf_QMARK_.val)?(self__.cnt + (1)):self__.cnt),new_root,self__.has_nil_QMARK_,self__.nil_val,null));
}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
if((k == null)){
return self__.has_nil_QMARK_;
} else {
if((self__.root == null)){
return false;
} else {
return !((self__.root.inode_lookup((0),cljs.core.hash(k),k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel));

}
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var s = ((!((self__.root == null)))?self__.root.inode_seq():null);
if(self__.has_nil_QMARK_){
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null,self__.nil_val], null),s);
} else {
return s;
}
} else {
return null;
}
});

cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashMap(meta__$1,self__.cnt,self__.root,self__.has_nil_QMARK_,self__.nil_val,self__.__hash));
});

cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__33214 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__33215 = cljs.core.next(es);
ret = G__33214;
es = G__33215;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentHashMap.prototype.call = (function() {
var G__33216 = null;
var G__33216__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33216__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33216 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33216__2.call(this,self__,k);
case 3:
return G__33216__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33216.cljs$core$IFn$_invoke$arity$2 = G__33216__2;
G__33216.cljs$core$IFn$_invoke$arity$3 = G__33216__3;
return G__33216;
})()
;

cljs.core.PersistentHashMap.prototype.apply = (function (self__,args33179){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33179)));
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashMap.cljs$lang$type = true;

cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";

cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentHashMap");
});

cljs.core.__GT_PersistentHashMap = (function __GT_PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash){
return (new cljs.core.PersistentHashMap(meta,cnt,root,has_nil_QMARK_,nil_val,__hash));
});

cljs.core.PersistentHashMap.EMPTY = (new cljs.core.PersistentHashMap(null,(0),null,false,null,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashMap.fromArray = (function (arr,no_clone){
var arr__$1 = ((no_clone)?arr:cljs.core.aclone(arr));
var len = arr__$1.length;
var i = (0);
var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__33217 = (i + (2));
var G__33218 = cljs.core._assoc_BANG_(ret,(arr__$1[i]),(arr__$1[(i + (1))]));
i = G__33217;
ret = G__33218;
continue;
} else {
return cljs.core._persistent_BANG_(ret);
}
break;
}
});
cljs.core.PersistentHashMap.fromArrays = (function (ks,vs){
var len = ks.length;
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if((i < len)){
var G__33219 = (i + (1));
var G__33220 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null,(ks[i]),(vs[i]));
i = G__33219;
out = G__33220;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
});
(cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashMap = (function (edit,root,count,has_nil_QMARK_,nil_val){
this.edit = edit;
this.root = root;
this.count = count;
this.has_nil_QMARK_ = has_nil_QMARK_;
this.nil_val = nil_val;
this.cljs$lang$protocol_mask$partition1$ = 56;
this.cljs$lang$protocol_mask$partition0$ = 258;
})
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = (function (tcoll,key){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.without_BANG_(key);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = (function (tcoll,key,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.assoc_BANG_(key,val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,val){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.conj_BANG_(val);
});

cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return tcoll__$1.persistent_BANG_();
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,k){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return null;
}
} else {
if((self__.root == null)){
return null;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,k,not_found){
var self__ = this;
var tcoll__$1 = this;
if((k == null)){
if(self__.has_nil_QMARK_){
return self__.nil_val;
} else {
return not_found;
}
} else {
if((self__.root == null)){
return not_found;
} else {
return self__.root.inode_lookup((0),cljs.core.hash(k),k,not_found);
}
}
});

cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if(self__.edit){
return self__.count;
} else {
throw (new Error("count after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.conj_BANG_ = (function (o){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((function (){var G__33221 = o;
if(G__33221){
var bit__23645__auto__ = (G__33221.cljs$lang$protocol_mask$partition0$ & (2048));
if((bit__23645__auto__) || (G__33221.cljs$core$IMapEntry$)){
return true;
} else {
if((!G__33221.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33221);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry,G__33221);
}
})()){
return tcoll.assoc_BANG_((function (){var G__33222 = o;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33222) : cljs.core.key.call(null,G__33222));
})(),(function (){var G__33223 = o;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33223) : cljs.core.val.call(null,G__33223));
})());
} else {
var es = cljs.core.seq(o);
var tcoll__$1 = tcoll;
while(true){
var temp__4124__auto__ = cljs.core.first(es);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
var G__33226 = cljs.core.next(es);
var G__33227 = tcoll__$1.assoc_BANG_((function (){var G__33224 = e;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33224) : cljs.core.key.call(null,G__33224));
})(),(function (){var G__33225 = e;
return (cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__33225) : cljs.core.val.call(null,G__33225));
})());
es = G__33226;
tcoll__$1 = G__33227;
continue;
} else {
return tcoll__$1;
}
break;
}
}
} else {
throw (new Error("conj! after persistent"));
}
});

cljs.core.TransientHashMap.prototype.assoc_BANG_ = (function (k,v){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if((self__.nil_val === v)){
} else {
self__.nil_val = v;
}

if(self__.has_nil_QMARK_){
} else {
self__.count = (self__.count + (1));

self__.has_nil_QMARK_ = true;
}

return tcoll;
} else {
var added_leaf_QMARK_ = (new cljs.core.Box(false));
var node = (((self__.root == null))?cljs.core.BitmapIndexedNode.EMPTY:self__.root).inode_assoc_BANG_(self__.edit,(0),cljs.core.hash(k),k,v,added_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(added_leaf_QMARK_.val){
self__.count = (self__.count + (1));
} else {
}

return tcoll;
}
} else {
throw (new Error("assoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.without_BANG_ = (function (k){
var self__ = this;
var tcoll = this;
if(self__.edit){
if((k == null)){
if(self__.has_nil_QMARK_){
self__.has_nil_QMARK_ = false;

self__.nil_val = null;

self__.count = (self__.count - (1));

return tcoll;
} else {
return tcoll;
}
} else {
if((self__.root == null)){
return tcoll;
} else {
var removed_leaf_QMARK_ = (new cljs.core.Box(false));
var node = self__.root.inode_without_BANG_(self__.edit,(0),cljs.core.hash(k),k,removed_leaf_QMARK_);
if((node === self__.root)){
} else {
self__.root = node;
}

if(cljs.core.truth_((removed_leaf_QMARK_[(0)]))){
self__.count = (self__.count - (1));
} else {
}

return tcoll;
}
}
} else {
throw (new Error("dissoc! after persistent!"));
}
});

cljs.core.TransientHashMap.prototype.persistent_BANG_ = (function (){
var self__ = this;
var tcoll = this;
if(self__.edit){
self__.edit = null;

return (new cljs.core.PersistentHashMap(null,self__.count,self__.root,self__.has_nil_QMARK_,self__.nil_val,null));
} else {
throw (new Error("persistent! called twice"));
}
});

cljs.core.TransientHashMap.cljs$lang$type = true;

cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";

cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/TransientHashMap");
});

cljs.core.__GT_TransientHashMap = (function __GT_TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val){
return (new cljs.core.TransientHashMap(edit,root,count,has_nil_QMARK_,nil_val));
});

cljs.core.tree_map_seq_push = (function tree_map_seq_push(node,stack,ascending_QMARK_){
var t = node;
var stack__$1 = stack;
while(true){
if(!((t == null))){
var G__33228 = ((ascending_QMARK_)?t.left:t.right);
var G__33229 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1,t);
t = G__33228;
stack__$1 = G__33229;
continue;
} else {
return stack__$1;
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMapSeq = (function (meta,stack,ascending_QMARK_,cnt,__hash){
this.meta = meta;
this.stack = stack;
this.ascending_QMARK_ = ascending_QMARK_;
this.cnt = cnt;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374862;
})
cljs.core.PersistentTreeMapSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMapSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt < (0))){
return (cljs.core.count(cljs.core.next(coll__$1)) + (1));
} else {
return self__.cnt;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core.peek(self__.stack);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var t = cljs.core.first(self__.stack);
var next_stack = cljs.core.tree_map_seq_push(((self__.ascending_QMARK_)?t.right:t.left),cljs.core.next(self__.stack),self__.ascending_QMARK_);
if(!((next_stack == null))){
return (new cljs.core.PersistentTreeMapSeq(null,next_stack,self__.ascending_QMARK_,(self__.cnt - (1)),null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return this$__$1;
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMapSeq(meta__$1,self__.stack,self__.ascending_QMARK_,self__.cnt,self__.__hash));
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";

cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentTreeMapSeq");
});

cljs.core.__GT_PersistentTreeMapSeq = (function __GT_PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash){
return (new cljs.core.PersistentTreeMapSeq(meta,stack,ascending_QMARK_,cnt,__hash));
});

(cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.create_tree_map_seq = (function create_tree_map_seq(tree,ascending_QMARK_,cnt){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.tree_map_seq_push(tree,null,ascending_QMARK_),ascending_QMARK_,cnt,null));
});

cljs.core.balance_left = (function balance_left(key,val,ins,right){
if((ins instanceof cljs.core.RedNode)){
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,ins.left.blacken(),(new cljs.core.BlackNode(key,val,ins.right,right,null)),null));
} else {
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.right.key,ins.right.val,(new cljs.core.BlackNode(ins.key,ins.val,ins.left,ins.right.left,null)),(new cljs.core.BlackNode(key,val,ins.right.right,right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,ins,right,null));
}
});
cljs.core.balance_right = (function balance_right(key,val,left,ins){
if((ins instanceof cljs.core.RedNode)){
if((ins.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.key,ins.val,(new cljs.core.BlackNode(key,val,left,ins.left,null)),ins.right.blacken(),null));
} else {
if((ins.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(ins.left.key,ins.left.val,(new cljs.core.BlackNode(key,val,left,ins.left.left,null)),(new cljs.core.BlackNode(ins.key,ins.val,ins.left.right,ins.right,null)),null));
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));

}
}
} else {
return (new cljs.core.BlackNode(key,val,left,ins,null));
}
});
cljs.core.balance_left_del = (function balance_left_del(key,val,del,right){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,del.blacken(),right,null));
} else {
if((right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right(key,val,del,right.redden());
} else {
if(((right instanceof cljs.core.RedNode)) && ((right.left instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(right.left.key,right.left.val,(new cljs.core.BlackNode(key,val,del,right.left.left,null)),cljs.core.balance_right(right.key,right.val,right.left.right,right.right.redden()),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.balance_right_del = (function balance_right_del(key,val,left,del){
if((del instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(key,val,left,del.blacken(),null));
} else {
if((left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left(key,val,left.redden(),del);
} else {
if(((left instanceof cljs.core.RedNode)) && ((left.right instanceof cljs.core.BlackNode))){
return (new cljs.core.RedNode(left.right.key,left.right.val,cljs.core.balance_left(left.key,left.val,left.left.redden(),left.right.left),(new cljs.core.BlackNode(key,val,left.right.right,del,null)),null));
} else {
throw (new Error("red-black tree invariant violation"));

}
}
}
});
cljs.core.tree_map_kv_reduce = (function tree_map_kv_reduce(node,f,init){
var init__$1 = ((!((node.left == null)))?tree_map_kv_reduce(node.left,f,init):init);
if(cljs.core.reduced_QMARK_(init__$1)){
var G__33242 = init__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33242) : cljs.core.deref.call(null,G__33242));
} else {
var init__$2 = (function (){var G__33243 = init__$1;
var G__33244 = node.key;
var G__33245 = node.val;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33243,G__33244,G__33245) : f.call(null,G__33243,G__33244,G__33245));
})();
if(cljs.core.reduced_QMARK_(init__$2)){
var G__33246 = init__$2;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33246) : cljs.core.deref.call(null,G__33246));
} else {
var init__$3 = ((!((node.right == null)))?tree_map_kv_reduce(node.right,f,init__$2):init__$2);
if(cljs.core.reduced_QMARK_(init__$3)){
var G__33247 = init__$3;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33247) : cljs.core.deref.call(null,G__33247));
} else {
return init__$3;
}
}
}
});

/**
* @constructor
*/
cljs.core.BlackNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.BlackNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return ins.balance_right(node);
});

cljs.core.BlackNode.prototype.redden = (function (){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.BlackNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return node;
});

cljs.core.BlackNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return ins.balance_left(node);
});

cljs.core.BlackNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.BlackNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));
});

cljs.core.BlackNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));
});

cljs.core.BlackNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_left_del(self__.key,self__.val,del,self__.right);
});

cljs.core.BlackNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.BlackNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return cljs.core.balance_right_del(self__.key,self__.val,self__.left,del);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.BlackNode.prototype.call = (function() {
var G__33249 = null;
var G__33249__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33249__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33249 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33249__2.call(this,self__,k);
case 3:
return G__33249__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33249.cljs$core$IFn$_invoke$arity$2 = G__33249__2;
G__33249.cljs$core$IFn$_invoke$arity$3 = G__33249__3;
return G__33249;
})()
;

cljs.core.BlackNode.prototype.apply = (function (self__,args33248){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33248)));
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.BlackNode.cljs$lang$type = true;

cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";

cljs.core.BlackNode.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/BlackNode");
});

cljs.core.__GT_BlackNode = (function __GT_BlackNode(key,val,left,right,__hash){
return (new cljs.core.BlackNode(key,val,left,right,__hash));
});

(cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));

/**
* @constructor
*/
cljs.core.RedNode = (function (key,val,left,right,__hash){
this.key = key;
this.val = val;
this.left = left;
this.right = right;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32402207;
})
cljs.core.RedNode.prototype.add_right = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,ins,null));
});

cljs.core.RedNode.prototype.redden = (function (){
var self__ = this;
var node = this;
throw (new Error("red-black tree invariant violation"));
});

cljs.core.RedNode.prototype.blacken = (function (){
var self__ = this;
var node = this;
return (new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right,null));
});

cljs.core.RedNode.prototype.add_left = (function (ins){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,ins,self__.right,null));
});

cljs.core.RedNode.prototype.replace = (function (key__$1,val__$1,left__$1,right__$1){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(key__$1,val__$1,left__$1,right__$1,null));
});

cljs.core.RedNode.prototype.balance_left = (function (parent){
var self__ = this;
var node = this;
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,self__.left.blacken(),(new cljs.core.BlackNode(parent.key,parent.val,self__.right,parent.right,null)),null));
} else {
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.right.key,self__.right.val,(new cljs.core.BlackNode(self__.key,self__.val,self__.left,self__.right.left,null)),(new cljs.core.BlackNode(parent.key,parent.val,self__.right.right,parent.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,node,parent.right,null));

}
}
});

cljs.core.RedNode.prototype.balance_right = (function (parent){
var self__ = this;
var node = this;
if((self__.right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.key,self__.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left,null)),self__.right.blacken(),null));
} else {
if((self__.left instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(self__.left.key,self__.left.val,(new cljs.core.BlackNode(parent.key,parent.val,parent.left,self__.left.left,null)),(new cljs.core.BlackNode(self__.key,self__.val,self__.left.right,self__.right,null)),null));
} else {
return (new cljs.core.BlackNode(parent.key,parent.val,parent.left,node,null));

}
}
});

cljs.core.RedNode.prototype.remove_left = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,del,self__.right,null));
});

cljs.core.RedNode.prototype.kv_reduce = (function (f,init){
var self__ = this;
var node = this;
return cljs.core.tree_map_kv_reduce(node,f,init);
});

cljs.core.RedNode.prototype.remove_right = (function (del){
var self__ = this;
var node = this;
return (new cljs.core.RedNode(self__.key,self__.val,self__.left,del,null));
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (node,k){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,null);
});

cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (node,k,not_found){
var self__ = this;
var node__$1 = this;
return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1,k,not_found);
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (node,n){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return null;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (node,n,not_found){
var self__ = this;
var node__$1 = this;
if((n === (0))){
return self__.key;
} else {
if((n === (1))){
return self__.val;
} else {
return not_found;

}
}
});

cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = (function (node,n,v){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null).cljs$core$IVector$_assoc_n$arity$3(null,n,v);
});

cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return null;
});

cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return (2);
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.key;
});

cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return self__.val;
});

cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
});

cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core.PersistentVector.EMPTY;
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (node,f){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1,f);
});

cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (node,f,start){
var self__ = this;
var node__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1,f,start);
});

cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (node,k,v){
var self__ = this;
var node__$1 = this;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),k,v);
});

cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (node){
var self__ = this;
var node__$1 = this;
return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY,self__.val),self__.key);
});

cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (node,meta){
var self__ = this;
var node__$1 = this;
return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val], null),meta);
});

cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = (function (node,o){
var self__ = this;
var node__$1 = this;
return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key,self__.val,o], null);
});

cljs.core.RedNode.prototype.call = (function() {
var G__33251 = null;
var G__33251__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33251__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var node = self____$1;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33251 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33251__2.call(this,self__,k);
case 3:
return G__33251__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33251.cljs$core$IFn$_invoke$arity$2 = G__33251__2;
G__33251.cljs$core$IFn$_invoke$arity$3 = G__33251__3;
return G__33251;
})()
;

cljs.core.RedNode.prototype.apply = (function (self__,args33250){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33250)));
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var node = this;
return node.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.RedNode.cljs$lang$type = true;

cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";

cljs.core.RedNode.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/RedNode");
});

cljs.core.__GT_RedNode = (function __GT_RedNode(key,val,left,right,__hash){
return (new cljs.core.RedNode(key,val,left,right,__hash));
});

(cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.tree_map_add = (function tree_map_add(comp,tree,k,v,found){
if((tree == null)){
return (new cljs.core.RedNode(k,v,null,null,null));
} else {
var c = (function (){var G__33264 = k;
var G__33265 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33264,G__33265) : comp.call(null,G__33264,G__33265));
})();
if((c === (0))){
(found[(0)] = tree);

return null;
} else {
if((c < (0))){
var ins = tree_map_add(comp,tree.left,k,v,found);
if(!((ins == null))){
return tree.add_left(ins);
} else {
return null;
}
} else {
var ins = tree_map_add(comp,tree.right,k,v,found);
if(!((ins == null))){
return tree.add_right(ins);
} else {
return null;
}

}
}
}
});
cljs.core.tree_map_append = (function tree_map_append(left,right){
if((left == null)){
return right;
} else {
if((right == null)){
return left;
} else {
if((left instanceof cljs.core.RedNode)){
if((right instanceof cljs.core.RedNode)){
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.RedNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.RedNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,(new cljs.core.RedNode(right.key,right.val,app,right.right,null)),null));
}
} else {
return (new cljs.core.RedNode(left.key,left.val,left.left,tree_map_append(left.right,right),null));
}
} else {
if((right instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(right.key,right.val,tree_map_append(left,right.left),right.right,null));
} else {
var app = tree_map_append(left.right,right.left);
if((app instanceof cljs.core.RedNode)){
return (new cljs.core.RedNode(app.key,app.val,(new cljs.core.BlackNode(left.key,left.val,left.left,app.left,null)),(new cljs.core.BlackNode(right.key,right.val,app.right,right.right,null)),null));
} else {
return cljs.core.balance_left_del(left.key,left.val,left.left,(new cljs.core.BlackNode(right.key,right.val,app,right.right,null)));
}

}
}
}
}
});
cljs.core.tree_map_remove = (function tree_map_remove(comp,tree,k,found){
if(!((tree == null))){
var c = (function (){var G__33284 = k;
var G__33285 = tree.key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33284,G__33285) : comp.call(null,G__33284,G__33285));
})();
if((c === (0))){
(found[(0)] = tree);

return cljs.core.tree_map_append(tree.left,tree.right);
} else {
if((c < (0))){
var del = tree_map_remove(comp,tree.left,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.left instanceof cljs.core.BlackNode)){
return cljs.core.balance_left_del(tree.key,tree.val,del,tree.right);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,del,tree.right,null));
}
} else {
return null;
}
} else {
var del = tree_map_remove(comp,tree.right,k,found);
if((!((del == null))) || (!(((found[(0)]) == null)))){
if((tree.right instanceof cljs.core.BlackNode)){
return cljs.core.balance_right_del(tree.key,tree.val,tree.left,del);
} else {
return (new cljs.core.RedNode(tree.key,tree.val,tree.left,del,null));
}
} else {
return null;
}

}
}
} else {
return null;
}
});
cljs.core.tree_map_replace = (function tree_map_replace(comp,tree,k,v){
var tk = tree.key;
var c = (function (){var G__33296 = k;
var G__33297 = tk;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33296,G__33297) : comp.call(null,G__33296,G__33297));
})();
if((c === (0))){
return tree.replace(tk,v,tree.left,tree.right);
} else {
if((c < (0))){
return tree.replace(tk,tree.val,tree_map_replace(comp,tree.left,k,v),tree.right);
} else {
return tree.replace(tk,tree.val,tree.left,tree_map_replace(comp,tree.right,k,v));

}
}
});

/**
* @constructor
*/
cljs.core.PersistentTreeMap = (function (comp,tree,cnt,meta,__hash){
this.comp = comp;
this.tree = tree;
this.cnt = cnt;
this.meta = meta;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 418776847;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeMap.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33299 = cljs.core.seq(coll);
var chunk__33300 = null;
var count__33301 = (0);
var i__33302 = (0);
while(true){
if((i__33302 < count__33301)){
var vec__33303 = chunk__33300.cljs$core$IIndexed$_nth$arity$2(null,i__33302);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33303,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33303,(1),null);
var G__33304_33316 = v;
var G__33305_33317 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33304_33316,G__33305_33317) : f.call(null,G__33304_33316,G__33305_33317));

var G__33318 = seq__33299;
var G__33319 = chunk__33300;
var G__33320 = count__33301;
var G__33321 = (i__33302 + (1));
seq__33299 = G__33318;
chunk__33300 = G__33319;
count__33301 = G__33320;
i__33302 = G__33321;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33299);
if(temp__4126__auto__){
var seq__33299__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33299__$1)){
var c__23751__auto__ = cljs.core.chunk_first(seq__33299__$1);
var G__33322 = cljs.core.chunk_rest(seq__33299__$1);
var G__33323 = c__23751__auto__;
var G__33324 = cljs.core.count(c__23751__auto__);
var G__33325 = (0);
seq__33299 = G__33322;
chunk__33300 = G__33323;
count__33301 = G__33324;
i__33302 = G__33325;
continue;
} else {
var vec__33306 = cljs.core.first(seq__33299__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33306,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33306,(1),null);
var G__33307_33326 = v;
var G__33308_33327 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33307_33326,G__33308_33327) : f.call(null,G__33307_33326,G__33308_33327));

var G__33328 = cljs.core.next(seq__33299__$1);
var G__33329 = null;
var G__33330 = (0);
var G__33331 = (0);
seq__33299 = G__33328;
chunk__33300 = G__33329;
count__33301 = G__33330;
i__33302 = G__33331;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.get = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeMap.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeMap.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33309 = coll;
return (cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__33309) : cljs.core.keys.call(null,G__33309));
})());
});

cljs.core.PersistentTreeMap.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator((function (){var G__33310 = coll;
return (cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__33310) : cljs.core.vals.call(null,G__33310));
})());
});

cljs.core.PersistentTreeMap.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeMap.prototype.entry_at = (function (k){
var self__ = this;
var coll = this;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__33311 = k;
var G__33312 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__33311,G__33312) : self__.comp.call(null,G__33311,G__33312));
})();
if((c === (0))){
return t;
} else {
if((c < (0))){
var G__33332 = t.left;
t = G__33332;
continue;
} else {
var G__33333 = t.right;
t = G__33333;
continue;

}
}
} else {
return null;
}
break;
}
});

cljs.core.PersistentTreeMap.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,k,null);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,k,not_found){
var self__ = this;
var coll__$1 = this;
var n = coll__$1.entry_at(k);
if(!((n == null))){
return n.val;
} else {
return not_found;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = (function (coll,f,init){
var self__ = this;
var coll__$1 = this;
if(!((self__.tree == null))){
return cljs.core.tree_map_kv_reduce(self__.tree,f,init);
} else {
return init;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,self__.meta,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.cnt;
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,false,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_map(coll__$1,other);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,(0)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_remove(self__.comp,self__.tree,k,found);
if((t == null)){
if((cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0)) == null)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,null,(0),self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt - (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = (function (coll,k,v){
var self__ = this;
var coll__$1 = this;
var found = [null];
var t = cljs.core.tree_map_add(self__.comp,self__.tree,k,v,found);
if((t == null)){
var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found,(0));
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v,found_node.val)){
return coll__$1;
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,cljs.core.tree_map_replace(self__.comp,self__.tree,k,v),self__.cnt,self__.meta,null));
}
} else {
return (new cljs.core.PersistentTreeMap(self__.comp,t.blacken(),(self__.cnt + (1)),self__.meta,null));
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = (function (coll,k){
var self__ = this;
var coll__$1 = this;
return !((coll__$1.entry_at(k) == null));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,true,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeMap(self__.comp,self__.tree,self__.cnt,meta__$1,self__.__hash));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
if(cljs.core.vector_QMARK_(entry)){
return cljs.core._assoc(coll__$1,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry,(1)));
} else {
var ret = coll__$1;
var es = cljs.core.seq(entry);
while(true){
if((es == null)){
return ret;
} else {
var e = cljs.core.first(es);
if(cljs.core.vector_QMARK_(e)){
var G__33334 = cljs.core._assoc(ret,cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(0)),cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e,(1)));
var G__33335 = cljs.core.next(es);
ret = G__33334;
es = G__33335;
continue;
} else {
throw (new Error("conj on a map takes map entries or seqables of map entries"));
}
}
break;
}
}
});

cljs.core.PersistentTreeMap.prototype.call = (function() {
var G__33336 = null;
var G__33336__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33336__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33336 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33336__2.call(this,self__,k);
case 3:
return G__33336__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33336.cljs$core$IFn$_invoke$arity$2 = G__33336__2;
G__33336.cljs$core$IFn$_invoke$arity$3 = G__33336__3;
return G__33336;
})()
;

cljs.core.PersistentTreeMap.prototype.apply = (function (self__,args33298){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33298)));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
return cljs.core.create_tree_map_seq(self__.tree,ascending_QMARK_,self__.cnt);
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
if((self__.cnt > (0))){
var stack = null;
var t = self__.tree;
while(true){
if(!((t == null))){
var c = (function (){var G__33313 = k;
var G__33314 = t.key;
return (self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__33313,G__33314) : self__.comp.call(null,G__33313,G__33314));
})();
if((c === (0))){
return (new cljs.core.PersistentTreeMapSeq(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t),ascending_QMARK_,(-1),null));
} else {
if(cljs.core.truth_(ascending_QMARK_)){
if((c < (0))){
var G__33337 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__33338 = t.left;
stack = G__33337;
t = G__33338;
continue;
} else {
var G__33339 = stack;
var G__33340 = t.right;
stack = G__33339;
t = G__33340;
continue;
}
} else {
if((c > (0))){
var G__33341 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack,t);
var G__33342 = t.right;
stack = G__33341;
t = G__33342;
continue;
} else {
var G__33343 = stack;
var G__33344 = t.left;
stack = G__33343;
t = G__33344;
continue;
}

}
}
} else {
if((stack == null)){
return null;
} else {
return (new cljs.core.PersistentTreeMapSeq(null,stack,ascending_QMARK_,(-1),null));
}
}
break;
}
} else {
return null;
}
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
var G__33315 = entry;
return (cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__33315) : cljs.core.key.call(null,G__33315));
});

cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.comp;
});

cljs.core.PersistentTreeMap.cljs$lang$type = true;

cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";

cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentTreeMap");
});

cljs.core.__GT_PersistentTreeMap = (function __GT_PersistentTreeMap(comp,tree,cnt,meta,__hash){
return (new cljs.core.PersistentTreeMap(comp,tree,cnt,meta,__hash));
});

cljs.core.PersistentTreeMap.EMPTY = (new cljs.core.PersistentTreeMap(cljs.core.compare,null,(0),null,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
/**
* keyval => key val
* Returns a new hash map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.hash_map = (function() { 
var hash_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
while(true){
if(in$){
var G__33345 = cljs.core.nnext(in$);
var G__33346 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__33345;
out = G__33346;
continue;
} else {
return cljs.core.persistent_BANG_(out);
}
break;
}
};
var hash_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33347__i = 0, G__33347__a = new Array(arguments.length -  0);
while (G__33347__i < G__33347__a.length) {G__33347__a[G__33347__i] = arguments[G__33347__i + 0]; ++G__33347__i;}
  keyvals = new cljs.core.IndexedSeq(G__33347__a,0);
} 
return hash_map__delegate.call(this,keyvals);};
hash_map.cljs$lang$maxFixedArity = 0;
hash_map.cljs$lang$applyTo = (function (arglist__33348){
var keyvals = cljs.core.seq(arglist__33348);
return hash_map__delegate(keyvals);
});
hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
return hash_map;
})()
;
/**
* keyval => key val
* Returns a new array map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.array_map = (function() { 
var array_map__delegate = function (keyvals){
return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array,keyvals),true,false);
};
var array_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33349__i = 0, G__33349__a = new Array(arguments.length -  0);
while (G__33349__i < G__33349__a.length) {G__33349__a[G__33349__i] = arguments[G__33349__i + 0]; ++G__33349__i;}
  keyvals = new cljs.core.IndexedSeq(G__33349__a,0);
} 
return array_map__delegate.call(this,keyvals);};
array_map.cljs$lang$maxFixedArity = 0;
array_map.cljs$lang$applyTo = (function (arglist__33350){
var keyvals = cljs.core.seq(arglist__33350);
return array_map__delegate(keyvals);
});
array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
return array_map;
})()
;
/**
* keyval => key val
* Returns a new object map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.obj_map = (function() { 
var obj_map__delegate = function (keyvals){
var ks = [];
var obj = (function (){var obj33354 = {};
return obj33354;
})();
var kvs = cljs.core.seq(keyvals);
while(true){
if(kvs){
ks.push(cljs.core.first(kvs));

(obj[cljs.core.first(kvs)] = cljs.core.second(kvs));

var G__33355 = cljs.core.nnext(kvs);
kvs = G__33355;
continue;
} else {
return cljs.core.ObjMap.fromObject(ks,obj);
}
break;
}
};
var obj_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33356__i = 0, G__33356__a = new Array(arguments.length -  0);
while (G__33356__i < G__33356__a.length) {G__33356__a[G__33356__i] = arguments[G__33356__i + 0]; ++G__33356__i;}
  keyvals = new cljs.core.IndexedSeq(G__33356__a,0);
} 
return obj_map__delegate.call(this,keyvals);};
obj_map.cljs$lang$maxFixedArity = 0;
obj_map.cljs$lang$applyTo = (function (arglist__33357){
var keyvals = cljs.core.seq(arglist__33357);
return obj_map__delegate(keyvals);
});
obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
return obj_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings.
* @param {...*} var_args
*/
cljs.core.sorted_map = (function() { 
var sorted_map__delegate = function (keyvals){
var in$ = cljs.core.seq(keyvals);
var out = cljs.core.PersistentTreeMap.EMPTY;
while(true){
if(in$){
var G__33358 = cljs.core.nnext(in$);
var G__33359 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__33358;
out = G__33359;
continue;
} else {
return out;
}
break;
}
};
var sorted_map = function (var_args){
var keyvals = null;
if (arguments.length > 0) {
var G__33360__i = 0, G__33360__a = new Array(arguments.length -  0);
while (G__33360__i < G__33360__a.length) {G__33360__a[G__33360__i] = arguments[G__33360__i + 0]; ++G__33360__i;}
  keyvals = new cljs.core.IndexedSeq(G__33360__a,0);
} 
return sorted_map__delegate.call(this,keyvals);};
sorted_map.cljs$lang$maxFixedArity = 0;
sorted_map.cljs$lang$applyTo = (function (arglist__33361){
var keyvals = cljs.core.seq(arglist__33361);
return sorted_map__delegate(keyvals);
});
sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
return sorted_map;
})()
;
/**
* keyval => key val
* Returns a new sorted map with supplied mappings, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_map_by = (function() { 
var sorted_map_by__delegate = function (comparator,keyvals){
var in$ = cljs.core.seq(keyvals);
var out = (new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator),null,(0),null,(0)));
while(true){
if(in$){
var G__33362 = cljs.core.nnext(in$);
var G__33363 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out,cljs.core.first(in$),cljs.core.second(in$));
in$ = G__33362;
out = G__33363;
continue;
} else {
return out;
}
break;
}
};
var sorted_map_by = function (comparator,var_args){
var keyvals = null;
if (arguments.length > 1) {
var G__33364__i = 0, G__33364__a = new Array(arguments.length -  1);
while (G__33364__i < G__33364__a.length) {G__33364__a[G__33364__i] = arguments[G__33364__i + 1]; ++G__33364__i;}
  keyvals = new cljs.core.IndexedSeq(G__33364__a,0);
} 
return sorted_map_by__delegate.call(this,comparator,keyvals);};
sorted_map_by.cljs$lang$maxFixedArity = 1;
sorted_map_by.cljs$lang$applyTo = (function (arglist__33365){
var comparator = cljs.core.first(arglist__33365);
var keyvals = cljs.core.rest(arglist__33365);
return sorted_map_by__delegate(comparator,keyvals);
});
sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
return sorted_map_by;
})()
;

/**
* @constructor
*/
cljs.core.KeySeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.KeySeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.KeySeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__33366 = self__.mseq;
if(G__33366){
var bit__23645__auto__ = (G__33366.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__23645__auto__) || (G__33366.cljs$core$INext$)){
return true;
} else {
if((!G__33366.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33366);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33366);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.KeySeq(nseq,self__._meta));
}
});

cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_key$arity$1(null);
});

cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__33367 = self__.mseq;
if(G__33367){
var bit__23645__auto__ = (G__33367.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__23645__auto__) || (G__33367.cljs$core$INext$)){
return true;
} else {
if((!G__33367.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33367);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33367);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.KeySeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.KeySeq(self__.mseq,new_meta));
});

cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.KeySeq.cljs$lang$type = true;

cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";

cljs.core.KeySeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/KeySeq");
});

cljs.core.__GT_KeySeq = (function __GT_KeySeq(mseq,_meta){
return (new cljs.core.KeySeq(mseq,_meta));
});

(cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
/**
* Returns a sequence of the map's keys.
*/
cljs.core.keys = (function keys(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.KeySeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the key of the map entry.
*/
cljs.core.key = (function key(map_entry){
return cljs.core._key(map_entry);
});

/**
* @constructor
*/
cljs.core.ValSeq = (function (mseq,_meta){
this.mseq = mseq;
this._meta = _meta;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 32374988;
})
cljs.core.ValSeq.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.ValSeq.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__._meta;
});

cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__33368 = self__.mseq;
if(G__33368){
var bit__23645__auto__ = (G__33368.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__23645__auto__) || (G__33368.cljs$core$INext$)){
return true;
} else {
if((!G__33368.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33368);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33368);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if((nseq == null)){
return null;
} else {
return (new cljs.core.ValSeq(nseq,self__._meta));
}
});

cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.hash_ordered_coll(coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return cljs.core.equiv_sequential(coll__$1,other);
});

cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__._meta);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (coll,f){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (coll,f,start){
var self__ = this;
var coll__$1 = this;
return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f,start,coll__$1);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
return me.cljs$core$IMapEntry$_val$arity$1(null);
});

cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var nseq = (((function (){var G__33369 = self__.mseq;
if(G__33369){
var bit__23645__auto__ = (G__33369.cljs$lang$protocol_mask$partition0$ & (128));
if((bit__23645__auto__) || (G__33369.cljs$core$INext$)){
return true;
} else {
if((!G__33369.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33369);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.INext,G__33369);
}
})())?self__.mseq.cljs$core$INext$_next$arity$1(null):cljs.core.next(self__.mseq));
if(!((nseq == null))){
return (new cljs.core.ValSeq(nseq,self__._meta));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return coll__$1;
});

cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,new_meta){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.ValSeq(self__.mseq,new_meta));
});

cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return cljs.core.cons(o,coll__$1);
});

cljs.core.ValSeq.cljs$lang$type = true;

cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";

cljs.core.ValSeq.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ValSeq");
});

cljs.core.__GT_ValSeq = (function __GT_ValSeq(mseq,_meta){
return (new cljs.core.ValSeq(mseq,_meta));
});

(cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
/**
* Returns a sequence of the map's values.
*/
cljs.core.vals = (function vals(hash_map){
var temp__4126__auto__ = cljs.core.seq(hash_map);
if(temp__4126__auto__){
var mseq = temp__4126__auto__;
return (new cljs.core.ValSeq(mseq,null));
} else {
return null;
}
});
/**
* Returns the value in the map entry.
*/
cljs.core.val = (function val(map_entry){
return cljs.core._val(map_entry);
});
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping from
* the latter (left-to-right) will be the mapping in the result.
* @param {...*} var_args
*/
cljs.core.merge = (function() { 
var merge__delegate = function (maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2((function (p1__33370_SHARP_,p2__33371_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2((function (){var or__22964__auto__ = p1__33370_SHARP_;
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),p2__33371_SHARP_);
}),maps);
} else {
return null;
}
};
var merge = function (var_args){
var maps = null;
if (arguments.length > 0) {
var G__33372__i = 0, G__33372__a = new Array(arguments.length -  0);
while (G__33372__i < G__33372__a.length) {G__33372__a[G__33372__i] = arguments[G__33372__i + 0]; ++G__33372__i;}
  maps = new cljs.core.IndexedSeq(G__33372__a,0);
} 
return merge__delegate.call(this,maps);};
merge.cljs$lang$maxFixedArity = 0;
merge.cljs$lang$applyTo = (function (arglist__33373){
var maps = cljs.core.seq(arglist__33373);
return merge__delegate(maps);
});
merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
return merge;
})()
;
/**
* Returns a map that consists of the rest of the maps conj-ed onto
* the first.  If a key occurs in more than one map, the mapping(s)
* from the latter (left-to-right) will be combined with the mapping in
* the result by calling (f val-in-result val-in-latter).
* @param {...*} var_args
*/
cljs.core.merge_with = (function() { 
var merge_with__delegate = function (f,maps){
if(cljs.core.truth_(cljs.core.some(cljs.core.identity,maps))){
var merge_entry = (function (m,e){
var k = cljs.core.first(e);
var v = cljs.core.second(e);
if(cljs.core.contains_QMARK_(m,k)){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,(function (){var G__33376 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m,k);
var G__33377 = v;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33376,G__33377) : f.call(null,G__33376,G__33377));
})());
} else {
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,v);
}
});
var merge2 = ((function (merge_entry){
return (function (m1,m2){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry,(function (){var or__22964__auto__ = m1;
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return cljs.core.PersistentArrayMap.EMPTY;
}
})(),cljs.core.seq(m2));
});})(merge_entry))
;
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2,maps);
} else {
return null;
}
};
var merge_with = function (f,var_args){
var maps = null;
if (arguments.length > 1) {
var G__33378__i = 0, G__33378__a = new Array(arguments.length -  1);
while (G__33378__i < G__33378__a.length) {G__33378__a[G__33378__i] = arguments[G__33378__i + 1]; ++G__33378__i;}
  maps = new cljs.core.IndexedSeq(G__33378__a,0);
} 
return merge_with__delegate.call(this,f,maps);};
merge_with.cljs$lang$maxFixedArity = 1;
merge_with.cljs$lang$applyTo = (function (arglist__33379){
var f = cljs.core.first(arglist__33379);
var maps = cljs.core.rest(arglist__33379);
return merge_with__delegate(f,maps);
});
merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
return merge_with;
})()
;
/**
* Returns a map containing only those entries in map whose key is in keys
*/
cljs.core.select_keys = (function select_keys(map,keyseq){
var ret = cljs.core.PersistentArrayMap.EMPTY;
var keys = cljs.core.seq(keyseq);
while(true){
if(keys){
var key = cljs.core.first(keys);
var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map,key,cljs.core.constant$keyword$9);
var G__33380 = ((cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry,cljs.core.constant$keyword$9))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,key,entry):ret);
var G__33381 = cljs.core.next(keys);
ret = G__33380;
keys = G__33381;
continue;
} else {
return cljs.core.with_meta(ret,cljs.core.meta(map));
}
break;
}
});

/**
* @constructor
*/
cljs.core.PersistentHashSet = (function (meta,hash_map,__hash){
this.meta = meta;
this.hash_map = hash_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 15077647;
this.cljs$lang$protocol_mask$partition1$ = 8196;
})
cljs.core.PersistentHashSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentHashSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentHashSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentHashSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentHashSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33384 = cljs.core.seq(coll);
var chunk__33385 = null;
var count__33386 = (0);
var i__33387 = (0);
while(true){
if((i__33387 < count__33386)){
var vec__33388 = chunk__33385.cljs$core$IIndexed$_nth$arity$2(null,i__33387);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33388,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33388,(1),null);
var G__33389_33394 = v;
var G__33390_33395 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33389_33394,G__33390_33395) : f.call(null,G__33389_33394,G__33390_33395));

var G__33396 = seq__33384;
var G__33397 = chunk__33385;
var G__33398 = count__33386;
var G__33399 = (i__33387 + (1));
seq__33384 = G__33396;
chunk__33385 = G__33397;
count__33386 = G__33398;
i__33387 = G__33399;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33384);
if(temp__4126__auto__){
var seq__33384__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33384__$1)){
var c__23751__auto__ = cljs.core.chunk_first(seq__33384__$1);
var G__33400 = cljs.core.chunk_rest(seq__33384__$1);
var G__33401 = c__23751__auto__;
var G__33402 = cljs.core.count(c__23751__auto__);
var G__33403 = (0);
seq__33384 = G__33400;
chunk__33385 = G__33401;
count__33386 = G__33402;
i__33387 = G__33403;
continue;
} else {
var vec__33391 = cljs.core.first(seq__33384__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33391,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33391,(1),null);
var G__33392_33404 = v;
var G__33393_33405 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33392_33404,G__33393_33405) : f.call(null,G__33392_33404,G__33393_33405));

var G__33406 = cljs.core.next(seq__33384__$1);
var G__33407 = null;
var G__33408 = (0);
var G__33409 = (0);
seq__33384 = G__33406;
chunk__33385 = G__33407;
count__33386 = G__33408;
i__33387 = G__33409;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
if(cljs.core._contains_key_QMARK_(self__.hash_map,v)){
return v;
} else {
return not_found;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._count(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__33382_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__33382_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY,self__.meta);
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core._dissoc(self__.hash_map,v),null));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.hash_map);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(meta__$1,self__.hash_map,self__.__hash));
});

cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentHashSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map,o,null),null));
});

cljs.core.PersistentHashSet.prototype.call = (function() {
var G__33410 = null;
var G__33410__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33410__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33410 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33410__2.call(this,self__,k);
case 3:
return G__33410__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33410.cljs$core$IFn$_invoke$arity$2 = G__33410__2;
G__33410.cljs$core$IFn$_invoke$arity$3 = G__33410__3;
return G__33410;
})()
;

cljs.core.PersistentHashSet.prototype.apply = (function (self__,args33383){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33383)));
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentHashSet.cljs$lang$type = true;

cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";

cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentHashSet");
});

cljs.core.__GT_PersistentHashSet = (function __GT_PersistentHashSet(meta,hash_map,__hash){
return (new cljs.core.PersistentHashSet(meta,hash_map,__hash));
});

cljs.core.PersistentHashSet.EMPTY = (new cljs.core.PersistentHashSet(null,cljs.core.PersistentArrayMap.EMPTY,cljs.core.empty_unordered_hash));
cljs.core.PersistentHashSet.fromArray = (function (items,no_clone){
var len = items.length;
if((len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD)){
var arr = ((no_clone)?items:cljs.core.aclone(items));
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
while(true){
if((i < len)){
var G__33411 = (i + (1));
var G__33412 = cljs.core._assoc_BANG_(out,(items[i]),null);
i = G__33411;
out = G__33412;
continue;
} else {
return (new cljs.core.PersistentHashSet(null,cljs.core._persistent_BANG_(out),null));
}
break;
}
} else {
var i = (0);
var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < len)){
var G__33413 = (i + (1));
var G__33414 = cljs.core._conj_BANG_(out,(items[i]));
i = G__33413;
out = G__33414;
continue;
} else {
return cljs.core._persistent_BANG_(out);
}
break;
}
}
});
(cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));

/**
* @constructor
*/
cljs.core.TransientHashSet = (function (transient_map){
this.transient_map = transient_map;
this.cljs$lang$protocol_mask$partition0$ = 259;
this.cljs$lang$protocol_mask$partition1$ = 136;
})
cljs.core.TransientHashSet.prototype.call = (function() {
var G__33416 = null;
var G__33416__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});
var G__33416__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var tcoll = self____$1;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});
G__33416 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33416__2.call(this,self__,k);
case 3:
return G__33416__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33416.cljs$core$IFn$_invoke$arity$2 = G__33416__2;
G__33416.cljs$core$IFn$_invoke$arity$3 = G__33416__3;
return G__33416;
})()
;

cljs.core.TransientHashSet.prototype.apply = (function (self__,args33415){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33415)));
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return null;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var tcoll = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,k,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return k;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1,v,null);
});

cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (tcoll,v,not_found){
var self__ = this;
var tcoll__$1 = this;
if((cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map,v,cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)){
return not_found;
} else {
return v;
}
});

cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return cljs.core.count(self__.transient_map);
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = (function (tcoll,v){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map,v);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = (function (tcoll,o){
var self__ = this;
var tcoll__$1 = this;
self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map,o,null);

return tcoll__$1;
});

cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = (function (tcoll){
var self__ = this;
var tcoll__$1 = this;
return (new cljs.core.PersistentHashSet(null,cljs.core.persistent_BANG_(self__.transient_map),null));
});

cljs.core.TransientHashSet.cljs$lang$type = true;

cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";

cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/TransientHashSet");
});

cljs.core.__GT_TransientHashSet = (function __GT_TransientHashSet(transient_map){
return (new cljs.core.TransientHashSet(transient_map));
});


/**
* @constructor
*/
cljs.core.PersistentTreeSet = (function (meta,tree_map,__hash){
this.meta = meta;
this.tree_map = tree_map;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 417730831;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.PersistentTreeSet.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.PersistentTreeSet.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.PersistentTreeSet.prototype.keys = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.entries = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.values = (function (){
var self__ = this;
var coll = this;
return cljs.core.es6_iterator(cljs.core.seq(coll));
});

cljs.core.PersistentTreeSet.prototype.has = (function (k){
var self__ = this;
var coll = this;
return cljs.core.contains_QMARK_(coll,k);
});

cljs.core.PersistentTreeSet.prototype.forEach = (function (f){
var self__ = this;
var coll = this;
var seq__33419 = cljs.core.seq(coll);
var chunk__33420 = null;
var count__33421 = (0);
var i__33422 = (0);
while(true){
if((i__33422 < count__33421)){
var vec__33423 = chunk__33420.cljs$core$IIndexed$_nth$arity$2(null,i__33422);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33423,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33423,(1),null);
var G__33424_33429 = v;
var G__33425_33430 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33424_33429,G__33425_33430) : f.call(null,G__33424_33429,G__33425_33430));

var G__33431 = seq__33419;
var G__33432 = chunk__33420;
var G__33433 = count__33421;
var G__33434 = (i__33422 + (1));
seq__33419 = G__33431;
chunk__33420 = G__33432;
count__33421 = G__33433;
i__33422 = G__33434;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33419);
if(temp__4126__auto__){
var seq__33419__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33419__$1)){
var c__23751__auto__ = cljs.core.chunk_first(seq__33419__$1);
var G__33435 = cljs.core.chunk_rest(seq__33419__$1);
var G__33436 = c__23751__auto__;
var G__33437 = cljs.core.count(c__23751__auto__);
var G__33438 = (0);
seq__33419 = G__33435;
chunk__33420 = G__33436;
count__33421 = G__33437;
i__33422 = G__33438;
continue;
} else {
var vec__33426 = cljs.core.first(seq__33419__$1);
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33426,(0),null);
var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33426,(1),null);
var G__33427_33439 = v;
var G__33428_33440 = k;
(f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33427_33439,G__33428_33440) : f.call(null,G__33427_33439,G__33428_33440));

var G__33441 = cljs.core.next(seq__33419__$1);
var G__33442 = null;
var G__33443 = (0);
var G__33444 = (0);
seq__33419 = G__33441;
chunk__33420 = G__33442;
count__33421 = G__33443;
i__33422 = G__33444;
continue;
}
} else {
return null;
}
}
break;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1,v,null);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = (function (coll,v,not_found){
var self__ = this;
var coll__$1 = this;
var n = self__.tree_map.entry_at(v);
if(!((n == null))){
return n.key;
} else {
return not_found;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return self__.meta;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.count(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
if((cljs.core.count(self__.tree_map) > (0))){
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core.rseq(self__.tree_map));
} else {
return null;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (coll,other){
var self__ = this;
var coll__$1 = this;
return (cljs.core.set_QMARK_(other)) && ((cljs.core.count(coll__$1) === cljs.core.count(other))) && (cljs.core.every_QMARK_(((function (coll__$1){
return (function (p1__33417_SHARP_){
return cljs.core.contains_QMARK_(coll__$1,p1__33417_SHARP_);
});})(coll__$1))
,other));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core._empty(self__.tree_map),(0)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = (function (coll,v){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map,v),null));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core.keys(self__.tree_map);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (coll,meta__$1){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(meta__$1,self__.tree_map,self__.__hash));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = (function (coll,o){
var self__ = this;
var coll__$1 = this;
return (new cljs.core.PersistentTreeSet(self__.meta,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map,o,null),null));
});

cljs.core.PersistentTreeSet.prototype.call = (function() {
var G__33445 = null;
var G__33445__2 = (function (self__,k){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});
var G__33445__3 = (function (self__,k,not_found){
var self__ = this;
var self____$1 = this;
var coll = self____$1;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});
G__33445 = function(self__,k,not_found){
switch(arguments.length){
case 2:
return G__33445__2.call(this,self__,k);
case 3:
return G__33445__3.call(this,self__,k,not_found);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33445.cljs$core$IFn$_invoke$arity$2 = G__33445__2;
G__33445.cljs$core$IFn$_invoke$arity$3 = G__33445__3;
return G__33445;
})()
;

cljs.core.PersistentTreeSet.prototype.apply = (function (self__,args33418){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args33418)));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = (function (k){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$2(null,k);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = (function (k,not_found){
var self__ = this;
var coll = this;
return coll.cljs$core$ILookup$_lookup$arity$3(null,k,not_found);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = (function (coll,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq(self__.tree_map,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = (function (coll,k,ascending_QMARK_){
var self__ = this;
var coll__$1 = this;
return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key,cljs.core._sorted_seq_from(self__.tree_map,k,ascending_QMARK_));
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = (function (coll,entry){
var self__ = this;
var coll__$1 = this;
return entry;
});

cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = (function (coll){
var self__ = this;
var coll__$1 = this;
return cljs.core._comparator(self__.tree_map);
});

cljs.core.PersistentTreeSet.cljs$lang$type = true;

cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";

cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/PersistentTreeSet");
});

cljs.core.__GT_PersistentTreeSet = (function __GT_PersistentTreeSet(meta,tree_map,__hash){
return (new cljs.core.PersistentTreeSet(meta,tree_map,__hash));
});

cljs.core.PersistentTreeSet.EMPTY = (new cljs.core.PersistentTreeSet(null,cljs.core.PersistentTreeMap.EMPTY,cljs.core.empty_unordered_hash));
(cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
cljs.core.set_from_indexed_seq = (function set_from_indexed_seq(iseq){
var arr = iseq.arr;
var ret = (function (){var a__23845__auto__ = arr;
var i = (0);
var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if((i < a__23845__auto__.length)){
var G__33446 = (i + (1));
var G__33447 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,(arr[i]));
i = G__33446;
res = G__33447;
continue;
} else {
return res;
}
break;
}
})();
return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
});
/**
* Returns a set of the distinct elements of coll.
*/
cljs.core.set = (function set(coll){
var in$ = cljs.core.seq(coll);
if((in$ == null)){
return cljs.core.PersistentHashSet.EMPTY;
} else {
if(((in$ instanceof cljs.core.IndexedSeq)) && ((in$.i === (0)))){
return cljs.core.set_from_indexed_seq(in$);
} else {
var in$__$1 = in$;
var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
while(true){
if(!((in$__$1 == null))){
var G__33448 = in$__$1.cljs$core$INext$_next$arity$1(null);
var G__33449 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null,in$__$1.cljs$core$ISeq$_first$arity$1(null));
in$__$1 = G__33448;
out = G__33449;
continue;
} else {
return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
}
break;
}

}
}
});
/**
* @param {...*} var_args
*/
cljs.core.hash_set = (function() {
var hash_set = null;
var hash_set__0 = (function (){
return cljs.core.PersistentHashSet.EMPTY;
});
var hash_set__1 = (function() { 
var G__33450__delegate = function (keys){
return cljs.core.set(keys);
};
var G__33450 = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__33451__i = 0, G__33451__a = new Array(arguments.length -  0);
while (G__33451__i < G__33451__a.length) {G__33451__a[G__33451__i] = arguments[G__33451__i + 0]; ++G__33451__i;}
  keys = new cljs.core.IndexedSeq(G__33451__a,0);
} 
return G__33450__delegate.call(this,keys);};
G__33450.cljs$lang$maxFixedArity = 0;
G__33450.cljs$lang$applyTo = (function (arglist__33452){
var keys = cljs.core.seq(arglist__33452);
return G__33450__delegate(keys);
});
G__33450.cljs$core$IFn$_invoke$arity$variadic = G__33450__delegate;
return G__33450;
})()
;
hash_set = function(var_args){
var keys = var_args;
switch(arguments.length){
case 0:
return hash_set__0.call(this);
default:
var G__33453 = null;
if (arguments.length > 0) {
var G__33454__i = 0, G__33454__a = new Array(arguments.length -  0);
while (G__33454__i < G__33454__a.length) {G__33454__a[G__33454__i] = arguments[G__33454__i + 0]; ++G__33454__i;}
G__33453 = new cljs.core.IndexedSeq(G__33454__a,0);
}
return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__33453);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
hash_set.cljs$lang$maxFixedArity = 0;
hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
return hash_set;
})()
;
/**
* Returns a new sorted set with supplied keys.
* @param {...*} var_args
*/
cljs.core.sorted_set = (function() { 
var sorted_set__delegate = function (keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,cljs.core.PersistentTreeSet.EMPTY,keys);
};
var sorted_set = function (var_args){
var keys = null;
if (arguments.length > 0) {
var G__33455__i = 0, G__33455__a = new Array(arguments.length -  0);
while (G__33455__i < G__33455__a.length) {G__33455__a[G__33455__i] = arguments[G__33455__i + 0]; ++G__33455__i;}
  keys = new cljs.core.IndexedSeq(G__33455__a,0);
} 
return sorted_set__delegate.call(this,keys);};
sorted_set.cljs$lang$maxFixedArity = 0;
sorted_set.cljs$lang$applyTo = (function (arglist__33456){
var keys = cljs.core.seq(arglist__33456);
return sorted_set__delegate(keys);
});
sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
return sorted_set;
})()
;
/**
* Returns a new sorted set with supplied keys, using the supplied comparator.
* @param {...*} var_args
*/
cljs.core.sorted_set_by = (function() { 
var sorted_set_by__delegate = function (comparator,keys){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj,(new cljs.core.PersistentTreeSet(null,cljs.core.sorted_map_by(comparator),(0))),keys);
};
var sorted_set_by = function (comparator,var_args){
var keys = null;
if (arguments.length > 1) {
var G__33457__i = 0, G__33457__a = new Array(arguments.length -  1);
while (G__33457__i < G__33457__a.length) {G__33457__a[G__33457__i] = arguments[G__33457__i + 1]; ++G__33457__i;}
  keys = new cljs.core.IndexedSeq(G__33457__a,0);
} 
return sorted_set_by__delegate.call(this,comparator,keys);};
sorted_set_by.cljs$lang$maxFixedArity = 1;
sorted_set_by.cljs$lang$applyTo = (function (arglist__33458){
var comparator = cljs.core.first(arglist__33458);
var keys = cljs.core.rest(arglist__33458);
return sorted_set_by__delegate(comparator,keys);
});
sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
return sorted_set_by;
})()
;
/**
* Given a map of replacement pairs and a vector/collection, returns a
* vector/seq with any elements = a key in smap replaced with the
* corresponding val in smap.  Returns a transducer when no collection
* is provided.
*/
cljs.core.replace = (function() {
var replace = null;
var replace__1 = (function (smap){
return cljs.core.map.cljs$core$IFn$_invoke$arity$1((function (p1__33459_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__33459_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.val(e);
} else {
return p1__33459_SHARP_;
}
}));
});
var replace__2 = (function (smap,coll){
if(cljs.core.vector_QMARK_(coll)){
var n = cljs.core.count(coll);
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (n){
return (function (v,i){
var temp__4124__auto__ = cljs.core.find(smap,cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v,i));
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v,i,cljs.core.second(e));
} else {
return v;
}
});})(n))
,coll,cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,cljs.core.iterate(cljs.core.inc,(0))));
} else {
return cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (p1__33460_SHARP_){
var temp__4124__auto__ = cljs.core.find(smap,p1__33460_SHARP_);
if(cljs.core.truth_(temp__4124__auto__)){
var e = temp__4124__auto__;
return cljs.core.second(e);
} else {
return p1__33460_SHARP_;
}
}),coll);
}
});
replace = function(smap,coll){
switch(arguments.length){
case 1:
return replace__1.call(this,smap);
case 2:
return replace__2.call(this,smap,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
return replace;
})()
;
/**
* Returns a lazy sequence of the elements of coll with duplicates removed
*/
cljs.core.distinct = (function() {
var distinct = null;
var distinct__0 = (function (){
return (function (rf){
var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
return ((function (seen){
return (function() {
var G__33481 = null;
var G__33481__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33481__1 = (function (result){
var G__33471 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33471) : rf.call(null,G__33471));
});
var G__33481__2 = (function (result,input){
if(cljs.core.contains_QMARK_((function (){var G__33472 = seen;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33472) : cljs.core.deref.call(null,G__33472));
})(),input)){
return result;
} else {
seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null),input));

var G__33473 = result;
var G__33474 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33473,G__33474) : rf.call(null,G__33473,G__33474));
}
});
G__33481 = function(result,input){
switch(arguments.length){
case 0:
return G__33481__0.call(this);
case 1:
return G__33481__1.call(this,result);
case 2:
return G__33481__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33481.cljs$core$IFn$_invoke$arity$0 = G__33481__0;
G__33481.cljs$core$IFn$_invoke$arity$1 = G__33481__1;
G__33481.cljs$core$IFn$_invoke$arity$2 = G__33481__2;
return G__33481;
})()
;})(seen))
});
});
var distinct__1 = (function (coll){
var step = (function step(xs,seen){
return (new cljs.core.LazySeq(null,(function (){
return (function (p__33479,seen__$1){
while(true){
var vec__33480 = p__33479;
var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33480,(0),null);
var xs__$1 = vec__33480;
var temp__4126__auto__ = cljs.core.seq(xs__$1);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.contains_QMARK_(seen__$1,f)){
var G__33482 = cljs.core.rest(s);
var G__33483 = seen__$1;
p__33479 = G__33482;
seen__$1 = G__33483;
continue;
} else {
return cljs.core.cons(f,step(cljs.core.rest(s),cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1,f)));
}
} else {
return null;
}
break;
}
}).call(null,xs,seen);
}),null,null));
});
return step(coll,cljs.core.PersistentHashSet.EMPTY);
});
distinct = function(coll){
switch(arguments.length){
case 0:
return distinct__0.call(this);
case 1:
return distinct__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
return distinct;
})()
;
cljs.core.butlast = (function butlast(s){
var ret = cljs.core.PersistentVector.EMPTY;
var s__$1 = s;
while(true){
if(cljs.core.next(s__$1)){
var G__33484 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret,cljs.core.first(s__$1));
var G__33485 = cljs.core.next(s__$1);
ret = G__33484;
s__$1 = G__33485;
continue;
} else {
return cljs.core.seq(ret);
}
break;
}
});
/**
* Returns the name String of a string, symbol or keyword.
*/
cljs.core.name = (function name(x){
if((function (){var G__33487 = x;
if(G__33487){
var bit__23638__auto__ = (G__33487.cljs$lang$protocol_mask$partition1$ & (4096));
if((bit__23638__auto__) || (G__33487.cljs$core$INamed$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return x.cljs$core$INamed$_name$arity$1(null);
} else {
if(typeof x === 'string'){
return x;
} else {
throw (new Error([cljs.core.str("Doesn't support name: "),cljs.core.str(x)].join('')));
}
}
});
/**
* Returns a map with the keys mapped to the corresponding vals.
*/
cljs.core.zipmap = (function zipmap(keys,vals){
var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
var ks = cljs.core.seq(keys);
var vs = cljs.core.seq(vals);
while(true){
if((ks) && (vs)){
var G__33488 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map,cljs.core.first(ks),cljs.core.first(vs));
var G__33489 = cljs.core.next(ks);
var G__33490 = cljs.core.next(vs);
map = G__33488;
ks = G__33489;
vs = G__33490;
continue;
} else {
return cljs.core.persistent_BANG_(map);
}
break;
}
});
/**
* Returns the x for which (k x), a number, is greatest.
* @param {...*} var_args
*/
cljs.core.max_key = (function() {
var max_key = null;
var max_key__2 = (function (k,x){
return x;
});
var max_key__3 = (function (k,x,y){
if(((function (){var G__33501 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__33501) : k.call(null,G__33501));
})() > (function (){var G__33502 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__33502) : k.call(null,G__33502));
})())){
return x;
} else {
return y;
}
});
var max_key__4 = (function() { 
var G__33503__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__33491_SHARP_,p2__33492_SHARP_){
return max_key.cljs$core$IFn$_invoke$arity$3(k,p1__33491_SHARP_,p2__33492_SHARP_);
}),max_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__33503 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__33504__i = 0, G__33504__a = new Array(arguments.length -  3);
while (G__33504__i < G__33504__a.length) {G__33504__a[G__33504__i] = arguments[G__33504__i + 3]; ++G__33504__i;}
  more = new cljs.core.IndexedSeq(G__33504__a,0);
} 
return G__33503__delegate.call(this,k,x,y,more);};
G__33503.cljs$lang$maxFixedArity = 3;
G__33503.cljs$lang$applyTo = (function (arglist__33505){
var k = cljs.core.first(arglist__33505);
arglist__33505 = cljs.core.next(arglist__33505);
var x = cljs.core.first(arglist__33505);
arglist__33505 = cljs.core.next(arglist__33505);
var y = cljs.core.first(arglist__33505);
var more = cljs.core.rest(arglist__33505);
return G__33503__delegate(k,x,y,more);
});
G__33503.cljs$core$IFn$_invoke$arity$variadic = G__33503__delegate;
return G__33503;
})()
;
max_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return max_key__2.call(this,k,x);
case 3:
return max_key__3.call(this,k,x,y);
default:
var G__33506 = null;
if (arguments.length > 3) {
var G__33507__i = 0, G__33507__a = new Array(arguments.length -  3);
while (G__33507__i < G__33507__a.length) {G__33507__a[G__33507__i] = arguments[G__33507__i + 3]; ++G__33507__i;}
G__33506 = new cljs.core.IndexedSeq(G__33507__a,0);
}
return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__33506);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
max_key.cljs$lang$maxFixedArity = 3;
max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
return max_key;
})()
;
/**
* Returns the x for which (k x), a number, is least.
* @param {...*} var_args
*/
cljs.core.min_key = (function() {
var min_key = null;
var min_key__2 = (function (k,x){
return x;
});
var min_key__3 = (function (k,x,y){
if(((function (){var G__33518 = x;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__33518) : k.call(null,G__33518));
})() < (function (){var G__33519 = y;
return (k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__33519) : k.call(null,G__33519));
})())){
return x;
} else {
return y;
}
});
var min_key__4 = (function() { 
var G__33520__delegate = function (k,x,y,more){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__33508_SHARP_,p2__33509_SHARP_){
return min_key.cljs$core$IFn$_invoke$arity$3(k,p1__33508_SHARP_,p2__33509_SHARP_);
}),min_key.cljs$core$IFn$_invoke$arity$3(k,x,y),more);
};
var G__33520 = function (k,x,y,var_args){
var more = null;
if (arguments.length > 3) {
var G__33521__i = 0, G__33521__a = new Array(arguments.length -  3);
while (G__33521__i < G__33521__a.length) {G__33521__a[G__33521__i] = arguments[G__33521__i + 3]; ++G__33521__i;}
  more = new cljs.core.IndexedSeq(G__33521__a,0);
} 
return G__33520__delegate.call(this,k,x,y,more);};
G__33520.cljs$lang$maxFixedArity = 3;
G__33520.cljs$lang$applyTo = (function (arglist__33522){
var k = cljs.core.first(arglist__33522);
arglist__33522 = cljs.core.next(arglist__33522);
var x = cljs.core.first(arglist__33522);
arglist__33522 = cljs.core.next(arglist__33522);
var y = cljs.core.first(arglist__33522);
var more = cljs.core.rest(arglist__33522);
return G__33520__delegate(k,x,y,more);
});
G__33520.cljs$core$IFn$_invoke$arity$variadic = G__33520__delegate;
return G__33520;
})()
;
min_key = function(k,x,y,var_args){
var more = var_args;
switch(arguments.length){
case 2:
return min_key__2.call(this,k,x);
case 3:
return min_key__3.call(this,k,x,y);
default:
var G__33523 = null;
if (arguments.length > 3) {
var G__33524__i = 0, G__33524__a = new Array(arguments.length -  3);
while (G__33524__i < G__33524__a.length) {G__33524__a[G__33524__i] = arguments[G__33524__i + 3]; ++G__33524__i;}
G__33523 = new cljs.core.IndexedSeq(G__33524__a,0);
}
return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k,x,y, G__33523);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
min_key.cljs$lang$maxFixedArity = 3;
min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
return min_key;
})()
;

/**
* @constructor
*/
cljs.core.ArrayList = (function (arr){
this.arr = arr;
})
cljs.core.ArrayList.prototype.add = (function (x){
var self__ = this;
var _ = this;
return self__.arr.push(x);
});

cljs.core.ArrayList.prototype.size = (function (){
var self__ = this;
var _ = this;
return self__.arr.length;
});

cljs.core.ArrayList.prototype.clear = (function (){
var self__ = this;
var _ = this;
return self__.arr = [];
});

cljs.core.ArrayList.prototype.isEmpty = (function (){
var self__ = this;
var _ = this;
return (self__.arr.length === (0));
});

cljs.core.ArrayList.prototype.toArray = (function (){
var self__ = this;
var _ = this;
return self__.arr;
});

cljs.core.ArrayList.cljs$lang$type = true;

cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";

cljs.core.ArrayList.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ArrayList");
});

cljs.core.__GT_ArrayList = (function __GT_ArrayList(arr){
return (new cljs.core.ArrayList(arr));
});

cljs.core.array_list = (function array_list(){
return (new cljs.core.ArrayList([]));
});
/**
* Returns a lazy sequence of lists like partition, but may include
* partitions with fewer than n items at the end.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_all = (function() {
var partition_all = null;
var partition_all__1 = (function (n){
return (function (rf){
var a = cljs.core.array_list();
return ((function (a){
return (function() {
var G__33541 = null;
var G__33541__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33541__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__33536 = result;
var G__33537 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33536,G__33537) : rf.call(null,G__33536,G__33537));
})());
})());
var G__33538 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33538) : rf.call(null,G__33538));
});
var G__33541__2 = (function (result,input){
a.add(input);

if((n === a.size())){
var v = cljs.core.vec(a.toArray());
a.clear();

var G__33539 = result;
var G__33540 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33539,G__33540) : rf.call(null,G__33539,G__33540));
} else {
return result;
}
});
G__33541 = function(result,input){
switch(arguments.length){
case 0:
return G__33541__0.call(this);
case 1:
return G__33541__1.call(this,result);
case 2:
return G__33541__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33541.cljs$core$IFn$_invoke$arity$0 = G__33541__0;
G__33541.cljs$core$IFn$_invoke$arity$1 = G__33541__1;
G__33541.cljs$core$IFn$_invoke$arity$2 = G__33541__2;
return G__33541;
})()
;})(a))
});
});
var partition_all__2 = (function (n,coll){
return partition_all.cljs$core$IFn$_invoke$arity$3(n,n,coll);
});
var partition_all__3 = (function (n,step,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n,s),partition_all.cljs$core$IFn$_invoke$arity$3(n,step,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step,s)));
} else {
return null;
}
}),null,null));
});
partition_all = function(n,step,coll){
switch(arguments.length){
case 1:
return partition_all__1.call(this,n);
case 2:
return partition_all__2.call(this,n,step);
case 3:
return partition_all__3.call(this,n,step,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
return partition_all;
})()
;
/**
* Returns a lazy sequence of successive items from coll while
* (pred item) returns true. pred must be free of side-effects.
* Returns a transducer when no collection is provided.
*/
cljs.core.take_while = (function() {
var take_while = null;
var take_while__1 = (function (pred){
return (function (rf){
return (function() {
var G__33554 = null;
var G__33554__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33554__1 = (function (result){
var G__33549 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33549) : rf.call(null,G__33549));
});
var G__33554__2 = (function (result,input){
if(cljs.core.truth_((function (){var G__33550 = input;
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33550) : pred.call(null,G__33550));
})())){
var G__33551 = result;
var G__33552 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33551,G__33552) : rf.call(null,G__33551,G__33552));
} else {
return cljs.core.reduced(result);
}
});
G__33554 = function(result,input){
switch(arguments.length){
case 0:
return G__33554__0.call(this);
case 1:
return G__33554__1.call(this,result);
case 2:
return G__33554__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33554.cljs$core$IFn$_invoke$arity$0 = G__33554__0;
G__33554.cljs$core$IFn$_invoke$arity$1 = G__33554__1;
G__33554.cljs$core$IFn$_invoke$arity$2 = G__33554__2;
return G__33554;
})()
});
});
var take_while__2 = (function (pred,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
if(cljs.core.truth_((function (){var G__33553 = cljs.core.first(s);
return (pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__33553) : pred.call(null,G__33553));
})())){
return cljs.core.cons(cljs.core.first(s),take_while.cljs$core$IFn$_invoke$arity$2(pred,cljs.core.rest(s)));
} else {
return null;
}
} else {
return null;
}
}),null,null));
});
take_while = function(pred,coll){
switch(arguments.length){
case 1:
return take_while__1.call(this,pred);
case 2:
return take_while__2.call(this,pred,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
return take_while;
})()
;
cljs.core.mk_bound_fn = (function mk_bound_fn(sc,test,key){
return (function (e){
var comp = cljs.core._comparator(sc);
var G__33559 = (function (){var G__33561 = cljs.core._entry_key(sc,e);
var G__33562 = key;
return (comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__33561,G__33562) : comp.call(null,G__33561,G__33562));
})();
var G__33560 = (0);
return (test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__33559,G__33560) : test.call(null,G__33559,G__33560));
});
});
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.subseq = (function() {
var subseq = null;
var subseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_,cljs.core._GT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__33566 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33566,(0),null);
var s = vec__33566;
if(cljs.core.truth_((function (){var G__33567 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__33567) : include.call(null,G__33567));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,true));
}
});
var subseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,start_key,true);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__33568 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33568,(0),null);
var s = vec__33568;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,end_test,end_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,start_test,start_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
subseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return subseq__3.call(this,sc,start_test,start_key);
case 5:
return subseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
return subseq;
})()
;
/**
* sc must be a sorted collection, test(s) one of <, <=, > or
* >=. Returns a reverse seq of those entries with keys ek for
* which (test (.. sc comparator (compare ek key)) 0) is true
*/
cljs.core.rsubseq = (function() {
var rsubseq = null;
var rsubseq__3 = (function (sc,test,key){
var include = cljs.core.mk_bound_fn(sc,test,key);
if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_,cljs.core._LT__EQ_], true).call(null,test))){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__33572 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33572,(0),null);
var s = vec__33572;
if(cljs.core.truth_((function (){var G__33573 = e;
return (include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__33573) : include.call(null,G__33573));
})())){
return s;
} else {
return cljs.core.next(s);
}
} else {
return null;
}
} else {
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include,cljs.core._sorted_seq(sc,false));
}
});
var rsubseq__5 = (function (sc,start_test,start_key,end_test,end_key){
var temp__4126__auto__ = cljs.core._sorted_seq_from(sc,end_key,false);
if(cljs.core.truth_(temp__4126__auto__)){
var vec__33574 = temp__4126__auto__;
var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33574,(0),null);
var s = vec__33574;
return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc,start_test,start_key),(cljs.core.truth_(cljs.core.mk_bound_fn(sc,end_test,end_key).call(null,e))?s:cljs.core.next(s)));
} else {
return null;
}
});
rsubseq = function(sc,start_test,start_key,end_test,end_key){
switch(arguments.length){
case 3:
return rsubseq__3.call(this,sc,start_test,start_key);
case 5:
return rsubseq__5.call(this,sc,start_test,start_key,end_test,end_key);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
return rsubseq;
})()
;

/**
* @constructor
*/
cljs.core.RangeIterator = (function (i,end,step){
this.i = i;
this.end = end;
this.step = step;
})
cljs.core.RangeIterator.prototype.hasNext = (function (){
var self__ = this;
var _ = this;
if((self__.step > (0))){
return (self__.i < self__.end);
} else {
return (self__.i > self__.end);
}
});

cljs.core.RangeIterator.prototype.next = (function (){
var self__ = this;
var _ = this;
var ret = self__.i;
self__.i = (self__.i + self__.step);

return ret;
});

cljs.core.RangeIterator.cljs$lang$type = true;

cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";

cljs.core.RangeIterator.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/RangeIterator");
});

cljs.core.__GT_RangeIterator = (function __GT_RangeIterator(i,end,step){
return (new cljs.core.RangeIterator(i,end,step));
});


/**
* @constructor
*/
cljs.core.Range = (function (meta,start,end,step,__hash){
this.meta = meta;
this.start = start;
this.end = end;
this.step = step;
this.__hash = __hash;
this.cljs$lang$protocol_mask$partition0$ = 32375006;
this.cljs$lang$protocol_mask$partition1$ = 8192;
})
cljs.core.Range.prototype.toString = (function (){
var self__ = this;
var coll = this;
return cljs.core.pr_str_STAR_(coll);
});

cljs.core.Range.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = (function (rng,n){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
throw (new Error("Index out of bounds"));
}
}
});

cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = (function (rng,n,not_found){
var self__ = this;
var rng__$1 = this;
if((n < cljs.core._count(rng__$1))){
return (self__.start + (n * self__.step));
} else {
if(((self__.start > self__.end)) && ((self__.step === (0)))){
return self__.start;
} else {
return not_found;
}
}
});

cljs.core.Range.prototype.cljs$core$IIterable$ = true;

cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.RangeIterator(self__.start,self__.end,self__.step));
});

cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return self__.meta;
});

cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return (new cljs.core.Range(self__.meta,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if(((self__.start + self__.step) < self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
} else {
if(((self__.start + self__.step) > self__.end)){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(cljs.core.not(cljs.core._seq(rng__$1))){
return (0);
} else {
var G__33575 = ((self__.end - self__.start) / self__.step);
return (Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__33575) : Math.ceil.call(null,G__33575));
}
});

cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
var h__23385__auto__ = self__.__hash;
if(!((h__23385__auto__ == null))){
return h__23385__auto__;
} else {
var h__23385__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
self__.__hash = h__23385__auto____$1;

return h__23385__auto____$1;
}
});

cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (rng,other){
var self__ = this;
var rng__$1 = this;
return cljs.core.equiv_sequential(rng__$1,other);
});

cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
return cljs.core.with_meta(cljs.core.List.EMPTY,self__.meta);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = (function (rng,f){
var self__ = this;
var rng__$1 = this;
return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1,f);
});

cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (rng,f,init){
var self__ = this;
var rng__$1 = this;
var i = self__.start;
var ret = init;
while(true){
if((((self__.step > (0)))?(i < self__.end):(i > self__.end))){
var ret__$1 = (function (){var G__33576 = ret;
var G__33577 = i;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33576,G__33577) : f.call(null,G__33576,G__33577));
})();
if(cljs.core.reduced_QMARK_(ret__$1)){
var G__33578 = ret__$1;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33578) : cljs.core.deref.call(null,G__33578));
} else {
var G__33579 = (i + self__.step);
var G__33580 = ret__$1;
i = G__33579;
ret = G__33580;
continue;
}
} else {
return ret;
}
break;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((cljs.core._seq(rng__$1) == null)){
return null;
} else {
return self__.start;
}
});

cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if(!((cljs.core._seq(rng__$1) == null))){
return (new cljs.core.Range(self__.meta,(self__.start + self__.step),self__.end,self__.step,null));
} else {
return cljs.core.List.EMPTY;
}
});

cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (rng){
var self__ = this;
var rng__$1 = this;
if((self__.step > (0))){
if((self__.start < self__.end)){
return rng__$1;
} else {
return null;
}
} else {
if((self__.start > self__.end)){
return rng__$1;
} else {
return null;
}
}
});

cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = (function (rng,meta__$1){
var self__ = this;
var rng__$1 = this;
return (new cljs.core.Range(meta__$1,self__.start,self__.end,self__.step,self__.__hash));
});

cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = (function (rng,o){
var self__ = this;
var rng__$1 = this;
return cljs.core.cons(o,rng__$1);
});

cljs.core.Range.cljs$lang$type = true;

cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";

cljs.core.Range.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Range");
});

cljs.core.__GT_Range = (function __GT_Range(meta,start,end,step,__hash){
return (new cljs.core.Range(meta,start,end,step,__hash));
});

(cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
/**
* Returns a lazy seq of nums from start (inclusive) to end
* (exclusive), by step, where start defaults to 0, step to 1,
* and end to infinity.
*/
cljs.core.range = (function() {
var range = null;
var range__0 = (function (){
return range.cljs$core$IFn$_invoke$arity$3((0),Number.MAX_VALUE,(1));
});
var range__1 = (function (end){
return range.cljs$core$IFn$_invoke$arity$3((0),end,(1));
});
var range__2 = (function (start,end){
return range.cljs$core$IFn$_invoke$arity$3(start,end,(1));
});
var range__3 = (function (start,end,step){
return (new cljs.core.Range(null,start,end,step,null));
});
range = function(start,end,step){
switch(arguments.length){
case 0:
return range__0.call(this);
case 1:
return range__1.call(this,start);
case 2:
return range__2.call(this,start,end);
case 3:
return range__3.call(this,start,end,step);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
range.cljs$core$IFn$_invoke$arity$0 = range__0;
range.cljs$core$IFn$_invoke$arity$1 = range__1;
range.cljs$core$IFn$_invoke$arity$2 = range__2;
range.cljs$core$IFn$_invoke$arity$3 = range__3;
return range;
})()
;
/**
* Returns a lazy seq of every nth item in coll.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.take_nth = (function() {
var take_nth = null;
var take_nth__1 = (function (n){
return (function (rf){
var ia = cljs.core.volatile_BANG_((-1));
return ((function (ia){
return (function() {
var G__33598 = null;
var G__33598__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33598__1 = (function (result){
var G__33595 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33595) : rf.call(null,G__33595));
});
var G__33598__2 = (function (result,input){
var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null,(ia.cljs$core$IDeref$_deref$arity$1(null) + (1)));
if((cljs.core.rem(i,n) === (0))){
var G__33596 = result;
var G__33597 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33596,G__33597) : rf.call(null,G__33596,G__33597));
} else {
return result;
}
});
G__33598 = function(result,input){
switch(arguments.length){
case 0:
return G__33598__0.call(this);
case 1:
return G__33598__1.call(this,result);
case 2:
return G__33598__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33598.cljs$core$IFn$_invoke$arity$0 = G__33598__0;
G__33598.cljs$core$IFn$_invoke$arity$1 = G__33598__1;
G__33598.cljs$core$IFn$_invoke$arity$2 = G__33598__2;
return G__33598;
})()
;})(ia))
});
});
var take_nth__2 = (function (n,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return cljs.core.cons(cljs.core.first(s),take_nth.cljs$core$IFn$_invoke$arity$2(n,cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n,s)));
} else {
return null;
}
}),null,null));
});
take_nth = function(n,coll){
switch(arguments.length){
case 1:
return take_nth__1.call(this,n);
case 2:
return take_nth__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
return take_nth;
})()
;
/**
* Returns a vector of [(take-while pred coll) (drop-while pred coll)]
*/
cljs.core.split_with = (function split_with(pred,coll){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred,coll),cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred,coll)], null);
});
/**
* Applies f to each value in coll, splitting it each time f returns a
* new value.  Returns a lazy seq of partitions.  Returns a stateful
* transducer when no collection is provided.
*/
cljs.core.partition_by = (function() {
var partition_by = null;
var partition_by__1 = (function (f){
return (function (rf){
var a = cljs.core.array_list();
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (a,pa){
return (function() {
var G__33620 = null;
var G__33620__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33620__1 = (function (result){
var result__$1 = (cljs.core.truth_(a.isEmpty())?result:(function (){var v = cljs.core.vec(a.toArray());
a.clear();

return cljs.core.unreduced((function (){var G__33611 = result;
var G__33612 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33611,G__33612) : rf.call(null,G__33611,G__33612));
})());
})());
var G__33613 = result__$1;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33613) : rf.call(null,G__33613));
});
var G__33620__2 = (function (result,input){
var pval = (function (){var G__33614 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33614) : cljs.core.deref.call(null,G__33614));
})();
var val = (function (){var G__33615 = input;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33615) : f.call(null,G__33615));
})();
cljs.core.vreset_BANG_(pa,val);

if((cljs.core.keyword_identical_QMARK_(pval,cljs.core.constant$keyword$10)) || (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val,pval))){
a.add(input);

return result;
} else {
var v = cljs.core.vec(a.toArray());
a.clear();

var ret = (function (){var G__33616 = result;
var G__33617 = v;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33616,G__33617) : rf.call(null,G__33616,G__33617));
})();
if(cljs.core.reduced_QMARK_(ret)){
} else {
a.add(input);
}

return ret;
}
});
G__33620 = function(result,input){
switch(arguments.length){
case 0:
return G__33620__0.call(this);
case 1:
return G__33620__1.call(this,result);
case 2:
return G__33620__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33620.cljs$core$IFn$_invoke$arity$0 = G__33620__0;
G__33620.cljs$core$IFn$_invoke$arity$1 = G__33620__1;
G__33620.cljs$core$IFn$_invoke$arity$2 = G__33620__2;
return G__33620;
})()
;})(a,pa))
});
});
var partition_by__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
var fst = cljs.core.first(s);
var fv = (function (){var G__33618 = fst;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33618) : f.call(null,G__33618));
})();
var run = cljs.core.cons(fst,cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(((function (fst,fv,s,temp__4126__auto__){
return (function (p1__33599_SHARP_){
return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv,(function (){var G__33619 = p1__33599_SHARP_;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33619) : f.call(null,G__33619));
})());
});})(fst,fv,s,temp__4126__auto__))
,cljs.core.next(s)));
return cljs.core.cons(run,partition_by.cljs$core$IFn$_invoke$arity$2(f,cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run),s))));
} else {
return null;
}
}),null,null));
});
partition_by = function(f,coll){
switch(arguments.length){
case 1:
return partition_by__1.call(this,f);
case 2:
return partition_by__2.call(this,f,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
return partition_by;
})()
;
/**
* Returns a map from distinct items in coll to the number of times
* they appear.
*/
cljs.core.frequencies = (function frequencies(coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (counts,x){
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts,x,(cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts,x,(0)) + (1)));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Returns a lazy seq of the intermediate values of the reduction (as
* per reduce) of coll by f, starting with init.
*/
cljs.core.reductions = (function() {
var reductions = null;
var reductions__2 = (function (f,coll){
return (new cljs.core.LazySeq(null,(function (){
var temp__4124__auto__ = cljs.core.seq(coll);
if(temp__4124__auto__){
var s = temp__4124__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,cljs.core.first(s),cljs.core.rest(s));
} else {
return cljs.core._conj(cljs.core.List.EMPTY,(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})());
}
}),null,null));
});
var reductions__3 = (function (f,init,coll){
return cljs.core.cons(init,(new cljs.core.LazySeq(null,(function (){
var temp__4126__auto__ = cljs.core.seq(coll);
if(temp__4126__auto__){
var s = temp__4126__auto__;
return reductions.cljs$core$IFn$_invoke$arity$3(f,(function (){var G__33629 = init;
var G__33630 = cljs.core.first(s);
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33629,G__33630) : f.call(null,G__33629,G__33630));
})(),cljs.core.rest(s));
} else {
return null;
}
}),null,null)));
});
reductions = function(f,init,coll){
switch(arguments.length){
case 2:
return reductions__2.call(this,f,init);
case 3:
return reductions__3.call(this,f,init,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
return reductions;
})()
;
/**
* Takes a set of functions and returns a fn that is the juxtaposition
* of those fns.  The returned fn takes a variable number of args, and
* returns a vector containing the result of applying each fn to the
* args (left-to-right).
* ((juxt a b c) x) => [(a x) (b x) (c x)]
* @param {...*} var_args
*/
cljs.core.juxt = (function() {
var juxt = null;
var juxt__1 = (function (f){
return (function() {
var G__33725 = null;
var G__33725__0 = (function (){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})()],null));
});
var G__33725__1 = (function (x){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33683 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33683) : f.call(null,G__33683));
})()],null));
});
var G__33725__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33684 = x;
var G__33685 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33684,G__33685) : f.call(null,G__33684,G__33685));
})()],null));
});
var G__33725__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33686 = x;
var G__33687 = y;
var G__33688 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33686,G__33687,G__33688) : f.call(null,G__33686,G__33687,G__33688));
})()],null));
});
var G__33725__4 = (function() { 
var G__33726__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,1,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args)],null));
};
var G__33726 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33727__i = 0, G__33727__a = new Array(arguments.length -  3);
while (G__33727__i < G__33727__a.length) {G__33727__a[G__33727__i] = arguments[G__33727__i + 3]; ++G__33727__i;}
  args = new cljs.core.IndexedSeq(G__33727__a,0);
} 
return G__33726__delegate.call(this,x,y,z,args);};
G__33726.cljs$lang$maxFixedArity = 3;
G__33726.cljs$lang$applyTo = (function (arglist__33728){
var x = cljs.core.first(arglist__33728);
arglist__33728 = cljs.core.next(arglist__33728);
var y = cljs.core.first(arglist__33728);
arglist__33728 = cljs.core.next(arglist__33728);
var z = cljs.core.first(arglist__33728);
var args = cljs.core.rest(arglist__33728);
return G__33726__delegate(x,y,z,args);
});
G__33726.cljs$core$IFn$_invoke$arity$variadic = G__33726__delegate;
return G__33726;
})()
;
G__33725 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33725__0.call(this);
case 1:
return G__33725__1.call(this,x);
case 2:
return G__33725__2.call(this,x,y);
case 3:
return G__33725__3.call(this,x,y,z);
default:
var G__33729 = null;
if (arguments.length > 3) {
var G__33730__i = 0, G__33730__a = new Array(arguments.length -  3);
while (G__33730__i < G__33730__a.length) {G__33730__a[G__33730__i] = arguments[G__33730__i + 3]; ++G__33730__i;}
G__33729 = new cljs.core.IndexedSeq(G__33730__a,0);
}
return G__33725__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33729);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33725.cljs$lang$maxFixedArity = 3;
G__33725.cljs$lang$applyTo = G__33725__4.cljs$lang$applyTo;
G__33725.cljs$core$IFn$_invoke$arity$0 = G__33725__0;
G__33725.cljs$core$IFn$_invoke$arity$1 = G__33725__1;
G__33725.cljs$core$IFn$_invoke$arity$2 = G__33725__2;
G__33725.cljs$core$IFn$_invoke$arity$3 = G__33725__3;
G__33725.cljs$core$IFn$_invoke$arity$variadic = G__33725__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33725;
})()
});
var juxt__2 = (function (f,g){
return (function() {
var G__33731 = null;
var G__33731__0 = (function (){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})()],null));
});
var G__33731__1 = (function (x){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33689 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33689) : f.call(null,G__33689));
})(),(function (){var G__33690 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33690) : g.call(null,G__33690));
})()],null));
});
var G__33731__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33691 = x;
var G__33692 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33691,G__33692) : f.call(null,G__33691,G__33692));
})(),(function (){var G__33693 = x;
var G__33694 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__33693,G__33694) : g.call(null,G__33693,G__33694));
})()],null));
});
var G__33731__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33695 = x;
var G__33696 = y;
var G__33697 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33695,G__33696,G__33697) : f.call(null,G__33695,G__33696,G__33697));
})(),(function (){var G__33698 = x;
var G__33699 = y;
var G__33700 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__33698,G__33699,G__33700) : g.call(null,G__33698,G__33699,G__33700));
})()],null));
});
var G__33731__4 = (function() { 
var G__33732__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,2,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args)],null));
};
var G__33732 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33733__i = 0, G__33733__a = new Array(arguments.length -  3);
while (G__33733__i < G__33733__a.length) {G__33733__a[G__33733__i] = arguments[G__33733__i + 3]; ++G__33733__i;}
  args = new cljs.core.IndexedSeq(G__33733__a,0);
} 
return G__33732__delegate.call(this,x,y,z,args);};
G__33732.cljs$lang$maxFixedArity = 3;
G__33732.cljs$lang$applyTo = (function (arglist__33734){
var x = cljs.core.first(arglist__33734);
arglist__33734 = cljs.core.next(arglist__33734);
var y = cljs.core.first(arglist__33734);
arglist__33734 = cljs.core.next(arglist__33734);
var z = cljs.core.first(arglist__33734);
var args = cljs.core.rest(arglist__33734);
return G__33732__delegate(x,y,z,args);
});
G__33732.cljs$core$IFn$_invoke$arity$variadic = G__33732__delegate;
return G__33732;
})()
;
G__33731 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33731__0.call(this);
case 1:
return G__33731__1.call(this,x);
case 2:
return G__33731__2.call(this,x,y);
case 3:
return G__33731__3.call(this,x,y,z);
default:
var G__33735 = null;
if (arguments.length > 3) {
var G__33736__i = 0, G__33736__a = new Array(arguments.length -  3);
while (G__33736__i < G__33736__a.length) {G__33736__a[G__33736__i] = arguments[G__33736__i + 3]; ++G__33736__i;}
G__33735 = new cljs.core.IndexedSeq(G__33736__a,0);
}
return G__33731__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33735);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33731.cljs$lang$maxFixedArity = 3;
G__33731.cljs$lang$applyTo = G__33731__4.cljs$lang$applyTo;
G__33731.cljs$core$IFn$_invoke$arity$0 = G__33731__0;
G__33731.cljs$core$IFn$_invoke$arity$1 = G__33731__1;
G__33731.cljs$core$IFn$_invoke$arity$2 = G__33731__2;
G__33731.cljs$core$IFn$_invoke$arity$3 = G__33731__3;
G__33731.cljs$core$IFn$_invoke$arity$variadic = G__33731__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33731;
})()
});
var juxt__3 = (function (f,g,h){
return (function() {
var G__33737 = null;
var G__33737__0 = (function (){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})(),(function (){return (g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null));
})(),(function (){return (h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null));
})()],null));
});
var G__33737__1 = (function (x){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33701 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__33701) : f.call(null,G__33701));
})(),(function (){var G__33702 = x;
return (g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__33702) : g.call(null,G__33702));
})(),(function (){var G__33703 = x;
return (h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__33703) : h.call(null,G__33703));
})()],null));
});
var G__33737__2 = (function (x,y){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33704 = x;
var G__33705 = y;
return (f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__33704,G__33705) : f.call(null,G__33704,G__33705));
})(),(function (){var G__33706 = x;
var G__33707 = y;
return (g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__33706,G__33707) : g.call(null,G__33706,G__33707));
})(),(function (){var G__33708 = x;
var G__33709 = y;
return (h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__33708,G__33709) : h.call(null,G__33708,G__33709));
})()],null));
});
var G__33737__3 = (function (x,y,z){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[(function (){var G__33710 = x;
var G__33711 = y;
var G__33712 = z;
return (f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__33710,G__33711,G__33712) : f.call(null,G__33710,G__33711,G__33712));
})(),(function (){var G__33713 = x;
var G__33714 = y;
var G__33715 = z;
return (g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__33713,G__33714,G__33715) : g.call(null,G__33713,G__33714,G__33715));
})(),(function (){var G__33716 = x;
var G__33717 = y;
var G__33718 = z;
return (h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__33716,G__33717,G__33718) : h.call(null,G__33716,G__33717,G__33718));
})()],null));
});
var G__33737__4 = (function() { 
var G__33738__delegate = function (x,y,z,args){
return (new cljs.core.PersistentVector(null,3,(5),cljs.core.PersistentVector.EMPTY_NODE,[cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g,x,y,z,args),cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h,x,y,z,args)],null));
};
var G__33738 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33739__i = 0, G__33739__a = new Array(arguments.length -  3);
while (G__33739__i < G__33739__a.length) {G__33739__a[G__33739__i] = arguments[G__33739__i + 3]; ++G__33739__i;}
  args = new cljs.core.IndexedSeq(G__33739__a,0);
} 
return G__33738__delegate.call(this,x,y,z,args);};
G__33738.cljs$lang$maxFixedArity = 3;
G__33738.cljs$lang$applyTo = (function (arglist__33740){
var x = cljs.core.first(arglist__33740);
arglist__33740 = cljs.core.next(arglist__33740);
var y = cljs.core.first(arglist__33740);
arglist__33740 = cljs.core.next(arglist__33740);
var z = cljs.core.first(arglist__33740);
var args = cljs.core.rest(arglist__33740);
return G__33738__delegate(x,y,z,args);
});
G__33738.cljs$core$IFn$_invoke$arity$variadic = G__33738__delegate;
return G__33738;
})()
;
G__33737 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33737__0.call(this);
case 1:
return G__33737__1.call(this,x);
case 2:
return G__33737__2.call(this,x,y);
case 3:
return G__33737__3.call(this,x,y,z);
default:
var G__33741 = null;
if (arguments.length > 3) {
var G__33742__i = 0, G__33742__a = new Array(arguments.length -  3);
while (G__33742__i < G__33742__a.length) {G__33742__a[G__33742__i] = arguments[G__33742__i + 3]; ++G__33742__i;}
G__33741 = new cljs.core.IndexedSeq(G__33742__a,0);
}
return G__33737__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33741);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33737.cljs$lang$maxFixedArity = 3;
G__33737.cljs$lang$applyTo = G__33737__4.cljs$lang$applyTo;
G__33737.cljs$core$IFn$_invoke$arity$0 = G__33737__0;
G__33737.cljs$core$IFn$_invoke$arity$1 = G__33737__1;
G__33737.cljs$core$IFn$_invoke$arity$2 = G__33737__2;
G__33737.cljs$core$IFn$_invoke$arity$3 = G__33737__3;
G__33737.cljs$core$IFn$_invoke$arity$variadic = G__33737__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33737;
})()
});
var juxt__4 = (function() { 
var G__33743__delegate = function (f,g,h,fs){
var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f,g,h,fs);
return ((function (fs__$1){
return (function() {
var G__33744 = null;
var G__33744__0 = (function (){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__33631_SHARP_,p2__33632_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__33631_SHARP_,(function (){return (p2__33632_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__33632_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__33632_SHARP_.call(null));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__33744__1 = (function (x){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__33633_SHARP_,p2__33634_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__33633_SHARP_,(function (){var G__33719 = x;
return (p2__33634_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__33634_SHARP_.cljs$core$IFn$_invoke$arity$1(G__33719) : p2__33634_SHARP_.call(null,G__33719));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__33744__2 = (function (x,y){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__33635_SHARP_,p2__33636_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__33635_SHARP_,(function (){var G__33720 = x;
var G__33721 = y;
return (p2__33636_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__33636_SHARP_.cljs$core$IFn$_invoke$arity$2(G__33720,G__33721) : p2__33636_SHARP_.call(null,G__33720,G__33721));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__33744__3 = (function (x,y,z){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__33637_SHARP_,p2__33638_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__33637_SHARP_,(function (){var G__33722 = x;
var G__33723 = y;
var G__33724 = z;
return (p2__33638_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__33638_SHARP_.cljs$core$IFn$_invoke$arity$3(G__33722,G__33723,G__33724) : p2__33638_SHARP_.call(null,G__33722,G__33723,G__33724));
})());
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
});
var G__33744__4 = (function() { 
var G__33745__delegate = function (x,y,z,args){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (fs__$1){
return (function (p1__33639_SHARP_,p2__33640_SHARP_){
return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__33639_SHARP_,cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__33640_SHARP_,x,y,z,args));
});})(fs__$1))
,cljs.core.PersistentVector.EMPTY,fs__$1);
};
var G__33745 = function (x,y,z,var_args){
var args = null;
if (arguments.length > 3) {
var G__33746__i = 0, G__33746__a = new Array(arguments.length -  3);
while (G__33746__i < G__33746__a.length) {G__33746__a[G__33746__i] = arguments[G__33746__i + 3]; ++G__33746__i;}
  args = new cljs.core.IndexedSeq(G__33746__a,0);
} 
return G__33745__delegate.call(this,x,y,z,args);};
G__33745.cljs$lang$maxFixedArity = 3;
G__33745.cljs$lang$applyTo = (function (arglist__33747){
var x = cljs.core.first(arglist__33747);
arglist__33747 = cljs.core.next(arglist__33747);
var y = cljs.core.first(arglist__33747);
arglist__33747 = cljs.core.next(arglist__33747);
var z = cljs.core.first(arglist__33747);
var args = cljs.core.rest(arglist__33747);
return G__33745__delegate(x,y,z,args);
});
G__33745.cljs$core$IFn$_invoke$arity$variadic = G__33745__delegate;
return G__33745;
})()
;
G__33744 = function(x,y,z,var_args){
var args = var_args;
switch(arguments.length){
case 0:
return G__33744__0.call(this);
case 1:
return G__33744__1.call(this,x);
case 2:
return G__33744__2.call(this,x,y);
case 3:
return G__33744__3.call(this,x,y,z);
default:
var G__33748 = null;
if (arguments.length > 3) {
var G__33749__i = 0, G__33749__a = new Array(arguments.length -  3);
while (G__33749__i < G__33749__a.length) {G__33749__a[G__33749__i] = arguments[G__33749__i + 3]; ++G__33749__i;}
G__33748 = new cljs.core.IndexedSeq(G__33749__a,0);
}
return G__33744__4.cljs$core$IFn$_invoke$arity$variadic(x,y,z, G__33748);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33744.cljs$lang$maxFixedArity = 3;
G__33744.cljs$lang$applyTo = G__33744__4.cljs$lang$applyTo;
G__33744.cljs$core$IFn$_invoke$arity$0 = G__33744__0;
G__33744.cljs$core$IFn$_invoke$arity$1 = G__33744__1;
G__33744.cljs$core$IFn$_invoke$arity$2 = G__33744__2;
G__33744.cljs$core$IFn$_invoke$arity$3 = G__33744__3;
G__33744.cljs$core$IFn$_invoke$arity$variadic = G__33744__4.cljs$core$IFn$_invoke$arity$variadic;
return G__33744;
})()
;})(fs__$1))
};
var G__33743 = function (f,g,h,var_args){
var fs = null;
if (arguments.length > 3) {
var G__33750__i = 0, G__33750__a = new Array(arguments.length -  3);
while (G__33750__i < G__33750__a.length) {G__33750__a[G__33750__i] = arguments[G__33750__i + 3]; ++G__33750__i;}
  fs = new cljs.core.IndexedSeq(G__33750__a,0);
} 
return G__33743__delegate.call(this,f,g,h,fs);};
G__33743.cljs$lang$maxFixedArity = 3;
G__33743.cljs$lang$applyTo = (function (arglist__33751){
var f = cljs.core.first(arglist__33751);
arglist__33751 = cljs.core.next(arglist__33751);
var g = cljs.core.first(arglist__33751);
arglist__33751 = cljs.core.next(arglist__33751);
var h = cljs.core.first(arglist__33751);
var fs = cljs.core.rest(arglist__33751);
return G__33743__delegate(f,g,h,fs);
});
G__33743.cljs$core$IFn$_invoke$arity$variadic = G__33743__delegate;
return G__33743;
})()
;
juxt = function(f,g,h,var_args){
var fs = var_args;
switch(arguments.length){
case 1:
return juxt__1.call(this,f);
case 2:
return juxt__2.call(this,f,g);
case 3:
return juxt__3.call(this,f,g,h);
default:
var G__33752 = null;
if (arguments.length > 3) {
var G__33753__i = 0, G__33753__a = new Array(arguments.length -  3);
while (G__33753__i < G__33753__a.length) {G__33753__a[G__33753__i] = arguments[G__33753__i + 3]; ++G__33753__i;}
G__33752 = new cljs.core.IndexedSeq(G__33753__a,0);
}
return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f,g,h, G__33752);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
juxt.cljs$lang$maxFixedArity = 3;
juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
return juxt;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. dorun can
* be used to force any effects. Walks through the successive nexts of
* the seq, does not retain the head and returns nil.
*/
cljs.core.dorun = (function() {
var dorun = null;
var dorun__1 = (function (coll){
while(true){
if(cljs.core.seq(coll)){
var G__33754 = cljs.core.next(coll);
coll = G__33754;
continue;
} else {
return null;
}
break;
}
});
var dorun__2 = (function (n,coll){
while(true){
if((cljs.core.seq(coll)) && ((n > (0)))){
var G__33755 = (n - (1));
var G__33756 = cljs.core.next(coll);
n = G__33755;
coll = G__33756;
continue;
} else {
return null;
}
break;
}
});
dorun = function(n,coll){
switch(arguments.length){
case 1:
return dorun__1.call(this,n);
case 2:
return dorun__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
return dorun;
})()
;
/**
* When lazy sequences are produced via functions that have side
* effects, any effects other than those needed to produce the first
* element in the seq do not occur until the seq is consumed. doall can
* be used to force any effects. Walks through the successive nexts of
* the seq, retains the head and returns it, thus causing the entire
* seq to reside in memory at one time.
*/
cljs.core.doall = (function() {
var doall = null;
var doall__1 = (function (coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);

return coll;
});
var doall__2 = (function (n,coll){
cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n,coll);

return coll;
});
doall = function(n,coll){
switch(arguments.length){
case 1:
return doall__1.call(this,n);
case 2:
return doall__2.call(this,n,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
return doall;
})()
;
cljs.core.regexp_QMARK_ = (function regexp_QMARK_(o){
return (o instanceof RegExp);
});
/**
* Returns the result of (re-find re s) if re fully matches s.
*/
cljs.core.re_matches = (function re_matches(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches),s)){
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
} else {
return null;
}
} else {
throw (new TypeError("re-matches must match against a string."));
}
});
/**
* Returns the first regex match, if any, of s to re, using
* re.exec(s). Returns a vector, containing first the matching
* substring, then any capturing groups if the regular expression contains
* capturing groups.
*/
cljs.core.re_find = (function re_find(re,s){
if(typeof s === 'string'){
var matches = re.exec(s);
if((matches == null)){
return null;
} else {
if((cljs.core.count(matches) === (1))){
return cljs.core.first(matches);
} else {
return cljs.core.vec(matches);
}
}
} else {
throw (new TypeError("re-find must match against a string."));
}
});
/**
* Returns a lazy sequence of successive matches of re in s.
*/
cljs.core.re_seq = (function re_seq(re,s){
var match_data = cljs.core.re_find(re,s);
var match_idx = s.search(re);
var match_str = ((cljs.core.coll_QMARK_(match_data))?cljs.core.first(match_data):match_data);
var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s,(match_idx + cljs.core.count(match_str)));
if(cljs.core.truth_(match_data)){
return (new cljs.core.LazySeq(null,((function (match_data,match_idx,match_str,post_match){
return (function (){
return cljs.core.cons(match_data,((cljs.core.seq(post_match))?re_seq(re,post_match):null));
});})(match_data,match_idx,match_str,post_match))
,null,null));
} else {
return null;
}
});
/**
* Returns an instance of RegExp which has compiled the provided string.
*/
cljs.core.re_pattern = (function re_pattern(s){
if((s instanceof RegExp)){
return s;
} else {
var vec__33760 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/,s);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33760,(0),null);
var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33760,(1),null);
var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33760,(2),null);
return (new RegExp(pattern,flags));
}
});
cljs.core.pr_sequential_writer = (function pr_sequential_writer(writer,print_one,begin,sep,end,opts,coll){
var _STAR_print_level_STAR_33768 = cljs.core._STAR_print_level_STAR_;
cljs.core._STAR_print_level_STAR_ = (((cljs.core._STAR_print_level_STAR_ == null))?null:(cljs.core._STAR_print_level_STAR_ - (1)));

try{if((!((cljs.core._STAR_print_level_STAR_ == null))) && ((cljs.core._STAR_print_level_STAR_ < (0)))){
return cljs.core._write(writer,"#");
} else {
cljs.core._write(writer,begin);

if((cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) === (0))){
if(cljs.core.seq(coll)){
cljs.core._write(writer,(function (){var or__22964__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return "...";
}
})());
} else {
}
} else {
if(cljs.core.seq(coll)){
var G__33769_33775 = cljs.core.first(coll);
var G__33770_33776 = writer;
var G__33771_33777 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__33769_33775,G__33770_33776,G__33771_33777) : print_one.call(null,G__33769_33775,G__33770_33776,G__33771_33777));
} else {
}

var coll_33778__$1 = cljs.core.next(coll);
var n_33779 = (cljs.core.constant$keyword$5.cljs$core$IFn$_invoke$arity$1(opts) - (1));
while(true){
if((coll_33778__$1) && (((n_33779 == null)) || (!((n_33779 === (0)))))){
cljs.core._write(writer,sep);

var G__33772_33780 = cljs.core.first(coll_33778__$1);
var G__33773_33781 = writer;
var G__33774_33782 = opts;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__33772_33780,G__33773_33781,G__33774_33782) : print_one.call(null,G__33772_33780,G__33773_33781,G__33774_33782));

var G__33783 = cljs.core.next(coll_33778__$1);
var G__33784 = (n_33779 - (1));
coll_33778__$1 = G__33783;
n_33779 = G__33784;
continue;
} else {
if((cljs.core.seq(coll_33778__$1)) && ((n_33779 === (0)))){
cljs.core._write(writer,sep);

cljs.core._write(writer,(function (){var or__22964__auto__ = cljs.core.constant$keyword$11.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return "...";
}
})());
} else {
}
}
break;
}
}

return cljs.core._write(writer,end);
}
}finally {cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_33768;
}});
/**
* @param {...*} var_args
*/
cljs.core.write_all = (function() { 
var write_all__delegate = function (writer,ss){
var seq__33789 = cljs.core.seq(ss);
var chunk__33790 = null;
var count__33791 = (0);
var i__33792 = (0);
while(true){
if((i__33792 < count__33791)){
var s = chunk__33790.cljs$core$IIndexed$_nth$arity$2(null,i__33792);
cljs.core._write(writer,s);

var G__33793 = seq__33789;
var G__33794 = chunk__33790;
var G__33795 = count__33791;
var G__33796 = (i__33792 + (1));
seq__33789 = G__33793;
chunk__33790 = G__33794;
count__33791 = G__33795;
i__33792 = G__33796;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33789);
if(temp__4126__auto__){
var seq__33789__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33789__$1)){
var c__23751__auto__ = cljs.core.chunk_first(seq__33789__$1);
var G__33797 = cljs.core.chunk_rest(seq__33789__$1);
var G__33798 = c__23751__auto__;
var G__33799 = cljs.core.count(c__23751__auto__);
var G__33800 = (0);
seq__33789 = G__33797;
chunk__33790 = G__33798;
count__33791 = G__33799;
i__33792 = G__33800;
continue;
} else {
var s = cljs.core.first(seq__33789__$1);
cljs.core._write(writer,s);

var G__33801 = cljs.core.next(seq__33789__$1);
var G__33802 = null;
var G__33803 = (0);
var G__33804 = (0);
seq__33789 = G__33801;
chunk__33790 = G__33802;
count__33791 = G__33803;
i__33792 = G__33804;
continue;
}
} else {
return null;
}
}
break;
}
};
var write_all = function (writer,var_args){
var ss = null;
if (arguments.length > 1) {
var G__33805__i = 0, G__33805__a = new Array(arguments.length -  1);
while (G__33805__i < G__33805__a.length) {G__33805__a[G__33805__i] = arguments[G__33805__i + 1]; ++G__33805__i;}
  ss = new cljs.core.IndexedSeq(G__33805__a,0);
} 
return write_all__delegate.call(this,writer,ss);};
write_all.cljs$lang$maxFixedArity = 1;
write_all.cljs$lang$applyTo = (function (arglist__33806){
var writer = cljs.core.first(arglist__33806);
var ss = cljs.core.rest(arglist__33806);
return write_all__delegate(writer,ss);
});
write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
return write_all;
})()
;
cljs.core.string_print = (function string_print(x){
(cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null,x));

return null;
});
cljs.core.flush = (function flush(){
return null;
});
cljs.core.char_escapes = (function (){var obj33808 = {"\"":"\\\"","\\":"\\\\","\b":"\\b","\f":"\\f","\n":"\\n","\r":"\\r","\t":"\\t"};
return obj33808;
})();
cljs.core.quote_string = (function quote_string(s){
return [cljs.core.str("\""),cljs.core.str(s.replace((function (){var G__33811 = "[\\\\\"\b\f\n\r\t]";
var G__33812 = "g";
return RegExp(G__33811,G__33812);
})(),(function (match){
return (cljs.core.char_escapes[match]);
}))),cljs.core.str("\"")].join('');
});
cljs.core.pr_writer_impl = (function pr_writer_impl(obj,writer,opts){
if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if((void 0 === obj)){
return cljs.core._write(writer,"#<undefined>");
} else {
if(cljs.core.truth_((function (){var and__22952__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$3);
if(cljs.core.truth_(and__22952__auto__)){
var and__22952__auto____$1 = (function (){var G__33826 = obj;
if(G__33826){
var bit__23645__auto__ = (G__33826.cljs$lang$protocol_mask$partition0$ & (131072));
if((bit__23645__auto__) || (G__33826.cljs$core$IMeta$)){
return true;
} else {
if((!G__33826.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__33826);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta,G__33826);
}
})();
if(and__22952__auto____$1){
return cljs.core.meta(obj);
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
})())){
cljs.core._write(writer,"^");

var G__33827_33837 = cljs.core.meta(obj);
var G__33828_33838 = writer;
var G__33829_33839 = opts;
(cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__33827_33837,G__33828_33838,G__33829_33839) : cljs.core.pr_writer.call(null,G__33827_33837,G__33828_33838,G__33829_33839));

cljs.core._write(writer," ");
} else {
}

if((obj == null)){
return cljs.core._write(writer,"nil");
} else {
if(obj.cljs$lang$type){
return obj.cljs$lang$ctorPrWriter(obj,writer,opts);
} else {
if((function (){var G__33830 = obj;
if(G__33830){
var bit__23638__auto__ = (G__33830.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__23638__auto__) || (G__33830.cljs$core$IPrintWithWriter$)){
return true;
} else {
return false;
}
} else {
return false;
}
})()){
return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null,writer,opts);
} else {
if(((cljs.core.type(obj) === Boolean)) || (typeof obj === 'number')){
return cljs.core._write(writer,[cljs.core.str(obj)].join(''));
} else {
if(cljs.core.object_QMARK_(obj)){
cljs.core._write(writer,"#js ");

var G__33831 = cljs.core.map.cljs$core$IFn$_invoke$arity$2((function (k){
return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k),(obj[k])], null);
}),cljs.core.js_keys(obj));
var G__33832 = cljs.core.pr_writer;
var G__33833 = writer;
var G__33834 = opts;
return (cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__33831,G__33832,G__33833,G__33834) : cljs.core.print_map.call(null,G__33831,G__33832,G__33833,G__33834));
} else {
if(obj instanceof Array){
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#js ["," ","]",opts,obj);
} else {
if(cljs.core.truth_((function (){var G__33835 = obj;
return goog.isString(G__33835);
})())){
if(cljs.core.truth_(cljs.core.constant$keyword$2.cljs$core$IFn$_invoke$arity$1(opts))){
return cljs.core._write(writer,cljs.core.quote_string(obj));
} else {
return cljs.core._write(writer,obj);
}
} else {
if(cljs.core.fn_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));
} else {
if((obj instanceof Date)){
var normalize = (function (n,len){
var ns = [cljs.core.str(n)].join('');
while(true){
if((cljs.core.count(ns) < len)){
var G__33840 = [cljs.core.str("0"),cljs.core.str(ns)].join('');
ns = G__33840;
continue;
} else {
return ns;
}
break;
}
});
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#inst \"",[cljs.core.str(obj.getUTCFullYear())].join(''),"-",normalize((obj.getUTCMonth() + (1)),(2)),"-",normalize(obj.getUTCDate(),(2)),"T",normalize(obj.getUTCHours(),(2)),":",normalize(obj.getUTCMinutes(),(2)),":",normalize(obj.getUTCSeconds(),(2)),".",normalize(obj.getUTCMilliseconds(),(3)),"-","00:00\""], 0));
} else {
if(cljs.core.regexp_QMARK_(obj)){
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#\"",obj.source,"\""], 0));
} else {
if((function (){var G__33836 = obj;
if(G__33836){
var bit__23645__auto__ = (G__33836.cljs$lang$protocol_mask$partition0$ & (2147483648));
if((bit__23645__auto__) || (G__33836.cljs$core$IPrintWithWriter$)){
return true;
} else {
if((!G__33836.cljs$lang$protocol_mask$partition0$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__33836);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter,G__33836);
}
})()){
return cljs.core._pr_writer(obj,writer,opts);
} else {
return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer,cljs.core.array_seq(["#<",[cljs.core.str(obj)].join(''),">"], 0));

}
}
}
}
}
}
}
}
}
}
}

}
}
});
/**
* Prefer this to pr-seq, because it makes the printing function
* configurable, allowing efficient implementations such as appending
* to a StringBuffer.
*/
cljs.core.pr_writer = (function pr_writer(obj,writer,opts){
var temp__4124__auto__ = cljs.core.constant$keyword$12.cljs$core$IFn$_invoke$arity$1(opts);
if(cljs.core.truth_(temp__4124__auto__)){
var alt_impl = temp__4124__auto__;
var G__33844 = obj;
var G__33845 = writer;
var G__33846 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts,cljs.core.constant$keyword$13,cljs.core.pr_writer_impl);
return (alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__33844,G__33845,G__33846) : alt_impl.call(null,G__33844,G__33845,G__33846));
} else {
return cljs.core.pr_writer_impl(obj,writer,opts);
}
});
cljs.core.pr_seq_writer = (function pr_seq_writer(objs,writer,opts){
cljs.core.pr_writer(cljs.core.first(objs),writer,opts);

var seq__33851 = cljs.core.seq(cljs.core.next(objs));
var chunk__33852 = null;
var count__33853 = (0);
var i__33854 = (0);
while(true){
if((i__33854 < count__33853)){
var obj = chunk__33852.cljs$core$IIndexed$_nth$arity$2(null,i__33854);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__33855 = seq__33851;
var G__33856 = chunk__33852;
var G__33857 = count__33853;
var G__33858 = (i__33854 + (1));
seq__33851 = G__33855;
chunk__33852 = G__33856;
count__33853 = G__33857;
i__33854 = G__33858;
continue;
} else {
var temp__4126__auto__ = cljs.core.seq(seq__33851);
if(temp__4126__auto__){
var seq__33851__$1 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(seq__33851__$1)){
var c__23751__auto__ = cljs.core.chunk_first(seq__33851__$1);
var G__33859 = cljs.core.chunk_rest(seq__33851__$1);
var G__33860 = c__23751__auto__;
var G__33861 = cljs.core.count(c__23751__auto__);
var G__33862 = (0);
seq__33851 = G__33859;
chunk__33852 = G__33860;
count__33853 = G__33861;
i__33854 = G__33862;
continue;
} else {
var obj = cljs.core.first(seq__33851__$1);
cljs.core._write(writer," ");

cljs.core.pr_writer(obj,writer,opts);

var G__33863 = cljs.core.next(seq__33851__$1);
var G__33864 = null;
var G__33865 = (0);
var G__33866 = (0);
seq__33851 = G__33863;
chunk__33852 = G__33864;
count__33853 = G__33865;
i__33854 = G__33866;
continue;
}
} else {
return null;
}
}
break;
}
});
cljs.core.pr_sb_with_opts = (function pr_sb_with_opts(objs,opts){
var sb = (new goog.string.StringBuffer());
var writer = (new cljs.core.StringBufferWriter(sb));
cljs.core.pr_seq_writer(objs,writer,opts);

writer.cljs$core$IWriter$_flush$arity$1(null);

return sb;
});
/**
* Prints a sequence of objects to a string, observing all the
* options given in opts
*/
cljs.core.pr_str_with_opts = (function pr_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "";
} else {
return [cljs.core.str(cljs.core.pr_sb_with_opts(objs,opts))].join('');
}
});
/**
* Same as pr-str-with-opts followed by (newline)
*/
cljs.core.prn_str_with_opts = (function prn_str_with_opts(objs,opts){
if(cljs.core.empty_QMARK_(objs)){
return "\n";
} else {
var sb = cljs.core.pr_sb_with_opts(objs,opts);
sb.append("\n");

return [cljs.core.str(sb)].join('');
}
});
/**
* Prints a sequence of objects using string-print, observing all
* the options given in opts
*/
cljs.core.pr_with_opts = (function pr_with_opts(objs,opts){
return cljs.core.string_print(cljs.core.pr_str_with_opts(objs,opts));
});
cljs.core.newline = (function newline(opts){
cljs.core.string_print("\n");

if(cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts,cljs.core.constant$keyword$1))){
return cljs.core.flush();
} else {
return null;
}
});
/**
* pr to a string, returning it. Fundamental entrypoint to IPrintWithWriter.
* @param {...*} var_args
*/
cljs.core.pr_str = (function() { 
var pr_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.pr_opts());
};
var pr_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__33867__i = 0, G__33867__a = new Array(arguments.length -  0);
while (G__33867__i < G__33867__a.length) {G__33867__a[G__33867__i] = arguments[G__33867__i + 0]; ++G__33867__i;}
  objs = new cljs.core.IndexedSeq(G__33867__a,0);
} 
return pr_str__delegate.call(this,objs);};
pr_str.cljs$lang$maxFixedArity = 0;
pr_str.cljs$lang$applyTo = (function (arglist__33868){
var objs = cljs.core.seq(arglist__33868);
return pr_str__delegate(objs);
});
pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
return pr_str;
})()
;
/**
* Same as pr-str followed by (newline)
* @param {...*} var_args
*/
cljs.core.prn_str = (function() { 
var prn_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.pr_opts());
};
var prn_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__33869__i = 0, G__33869__a = new Array(arguments.length -  0);
while (G__33869__i < G__33869__a.length) {G__33869__a[G__33869__i] = arguments[G__33869__i + 0]; ++G__33869__i;}
  objs = new cljs.core.IndexedSeq(G__33869__a,0);
} 
return prn_str__delegate.call(this,objs);};
prn_str.cljs$lang$maxFixedArity = 0;
prn_str.cljs$lang$applyTo = (function (arglist__33870){
var objs = cljs.core.seq(arglist__33870);
return prn_str__delegate(objs);
});
prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
return prn_str;
})()
;
/**
* Prints the object(s) using string-print.  Prints the
* object(s), separated by spaces if there is more than one.
* By default, pr and prn print in a way that objects can be
* read by the reader
* @param {...*} var_args
*/
cljs.core.pr = (function() { 
var pr__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.pr_opts());
};
var pr = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__33871__i = 0, G__33871__a = new Array(arguments.length -  0);
while (G__33871__i < G__33871__a.length) {G__33871__a[G__33871__i] = arguments[G__33871__i + 0]; ++G__33871__i;}
  objs = new cljs.core.IndexedSeq(G__33871__a,0);
} 
return pr__delegate.call(this,objs);};
pr.cljs$lang$maxFixedArity = 0;
pr.cljs$lang$applyTo = (function (arglist__33872){
var objs = cljs.core.seq(arglist__33872);
return pr__delegate(objs);
});
pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
return pr;
})()
;
/**
* Prints the object(s) using string-print.
* print and println produce output for human consumption.
* @param {...*} var_args
*/
cljs.core.print = (function() { 
var cljs_core_print__delegate = function (objs){
return cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var cljs_core_print = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__33873__i = 0, G__33873__a = new Array(arguments.length -  0);
while (G__33873__i < G__33873__a.length) {G__33873__a[G__33873__i] = arguments[G__33873__i + 0]; ++G__33873__i;}
  objs = new cljs.core.IndexedSeq(G__33873__a,0);
} 
return cljs_core_print__delegate.call(this,objs);};
cljs_core_print.cljs$lang$maxFixedArity = 0;
cljs_core_print.cljs$lang$applyTo = (function (arglist__33874){
var objs = cljs.core.seq(arglist__33874);
return cljs_core_print__delegate(objs);
});
cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
return cljs_core_print;
})()
;
/**
* print to a string, returning it
* @param {...*} var_args
*/
cljs.core.print_str = (function() { 
var print_str__delegate = function (objs){
return cljs.core.pr_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var print_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__33875__i = 0, G__33875__a = new Array(arguments.length -  0);
while (G__33875__i < G__33875__a.length) {G__33875__a[G__33875__i] = arguments[G__33875__i + 0]; ++G__33875__i;}
  objs = new cljs.core.IndexedSeq(G__33875__a,0);
} 
return print_str__delegate.call(this,objs);};
print_str.cljs$lang$maxFixedArity = 0;
print_str.cljs$lang$applyTo = (function (arglist__33876){
var objs = cljs.core.seq(arglist__33876);
return print_str__delegate(objs);
});
print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
return print_str;
})()
;
/**
* Same as print followed by (newline)
* @param {...*} var_args
*/
cljs.core.println = (function() { 
var println__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var println = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__33877__i = 0, G__33877__a = new Array(arguments.length -  0);
while (G__33877__i < G__33877__a.length) {G__33877__a[G__33877__i] = arguments[G__33877__i + 0]; ++G__33877__i;}
  objs = new cljs.core.IndexedSeq(G__33877__a,0);
} 
return println__delegate.call(this,objs);};
println.cljs$lang$maxFixedArity = 0;
println.cljs$lang$applyTo = (function (arglist__33878){
var objs = cljs.core.seq(arglist__33878);
return println__delegate(objs);
});
println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
return println;
})()
;
/**
* println to a string, returning it
* @param {...*} var_args
*/
cljs.core.println_str = (function() { 
var println_str__delegate = function (objs){
return cljs.core.prn_str_with_opts(objs,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(),cljs.core.constant$keyword$2,false));
};
var println_str = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__33879__i = 0, G__33879__a = new Array(arguments.length -  0);
while (G__33879__i < G__33879__a.length) {G__33879__a[G__33879__i] = arguments[G__33879__i + 0]; ++G__33879__i;}
  objs = new cljs.core.IndexedSeq(G__33879__a,0);
} 
return println_str__delegate.call(this,objs);};
println_str.cljs$lang$maxFixedArity = 0;
println_str.cljs$lang$applyTo = (function (arglist__33880){
var objs = cljs.core.seq(arglist__33880);
return println_str__delegate(objs);
});
println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
return println_str;
})()
;
/**
* Same as pr followed by (newline).
* @param {...*} var_args
*/
cljs.core.prn = (function() { 
var prn__delegate = function (objs){
cljs.core.pr_with_opts(objs,cljs.core.pr_opts());

if(cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)){
return cljs.core.newline(cljs.core.pr_opts());
} else {
return null;
}
};
var prn = function (var_args){
var objs = null;
if (arguments.length > 0) {
var G__33881__i = 0, G__33881__a = new Array(arguments.length -  0);
while (G__33881__i < G__33881__a.length) {G__33881__a[G__33881__i] = arguments[G__33881__i + 0]; ++G__33881__i;}
  objs = new cljs.core.IndexedSeq(G__33881__a,0);
} 
return prn__delegate.call(this,objs);};
prn.cljs$lang$maxFixedArity = 0;
prn.cljs$lang$applyTo = (function (arglist__33882){
var objs = cljs.core.seq(arglist__33882);
return prn__delegate(objs);
});
prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
return prn;
})()
;
cljs.core.print_map = (function print_map(m,print_one,writer,opts){
return cljs.core.pr_sequential_writer(writer,(function (e,w,opts__$1){
var G__33889_33895 = cljs.core.key(e);
var G__33890_33896 = w;
var G__33891_33897 = opts__$1;
(print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__33889_33895,G__33890_33896,G__33891_33897) : print_one.call(null,G__33889_33895,G__33890_33896,G__33891_33897));

cljs.core._write(w," ");

var G__33892 = cljs.core.val(e);
var G__33893 = w;
var G__33894 = opts__$1;
return (print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__33892,G__33893,G__33894) : print_one.call(null,G__33892,G__33893,G__33894));
}),"{",", ","}",opts,cljs.core.seq(m));
});
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Volatile: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#'");

return cljs.core.pr_writer(a__$1.sym,writer,opts);
});

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#{"," ","}",opts,coll__$1);
});

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (a,writer,opts){
var a__$1 = this;
cljs.core._write(writer,"#<Atom: ");

cljs.core.pr_writer(a__$1.state,writer,opts);

return cljs.core._write(writer,">");
});

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"["," ","]",opts,coll__$1);
});

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core._write(writer,"()");
});

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"#queue ["," ","]",opts,cljs.core.seq(coll__$1));
});

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.print_map(coll__$1,cljs.core.pr_writer,writer,opts);
});

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});

cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll,writer,opts){
var coll__$1 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$1);
});
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;

cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;

cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1,y);
});

cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;

cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_keywords(x__$1,y);
});

cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;

cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = (function (x,y){
var x__$1 = this;
return cljs.core.compare_symbols(x__$1,y);
});
/**
* Atomically sets the metadata for a namespace/var/ref/agent/atom to be:
* 
* (apply f its-current-meta args)
* 
* f must be free of side-effects
* @param {...*} var_args
*/
cljs.core.alter_meta_BANG_ = (function() { 
var alter_meta_BANG___delegate = function (iref,f,args){
return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f,iref.meta,args);
};
var alter_meta_BANG_ = function (iref,f,var_args){
var args = null;
if (arguments.length > 2) {
var G__33898__i = 0, G__33898__a = new Array(arguments.length -  2);
while (G__33898__i < G__33898__a.length) {G__33898__a[G__33898__i] = arguments[G__33898__i + 2]; ++G__33898__i;}
  args = new cljs.core.IndexedSeq(G__33898__a,0);
} 
return alter_meta_BANG___delegate.call(this,iref,f,args);};
alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
alter_meta_BANG_.cljs$lang$applyTo = (function (arglist__33899){
var iref = cljs.core.first(arglist__33899);
arglist__33899 = cljs.core.next(arglist__33899);
var f = cljs.core.first(arglist__33899);
var args = cljs.core.rest(arglist__33899);
return alter_meta_BANG___delegate(iref,f,args);
});
alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
return alter_meta_BANG_;
})()
;
/**
* Atomically resets the metadata for an atom
*/
cljs.core.reset_meta_BANG_ = (function reset_meta_BANG_(iref,m){
return iref.meta = m;
});
/**
* Alpha - subject to change.
* 
* Adds a watch function to an atom reference. The watch fn must be a
* fn of 4 args: a key, the reference, its old-state, its
* new-state. Whenever the reference's state might have been changed,
* any registered watches will have their functions called. The watch
* fn will be called synchronously. Note that an atom's state
* may have changed again prior to the fn call, so use old/new-state
* rather than derefing the reference. Keys must be unique per
* reference, and can be used to remove the watch with remove-watch,
* but are otherwise considered opaque by the watch mechanism.  Bear in
* mind that regardless of the result or action of the watch fns the
* atom's value will change.  Example:
* 
* (def a (atom 0))
* (add-watch a :inc (fn [k r o n] (assert (== 0 n))))
* (swap! a inc)
* ;; Assertion Error
* (deref a)
* ;=> 1
*/
cljs.core.add_watch = (function add_watch(iref,key,f){
cljs.core._add_watch(iref,key,f);

return iref;
});
/**
* Alpha - subject to change.
* 
* Removes a watch (set by add-watch) from a reference
*/
cljs.core.remove_watch = (function remove_watch(iref,key){
cljs.core._remove_watch(iref,key);

return iref;
});
cljs.core.gensym_counter = null;
/**
* Returns a new symbol with a unique name. If a prefix string is
* supplied, the name is prefix# where # is some unique number. If
* prefix is not supplied, the prefix is 'G__'.
*/
cljs.core.gensym = (function() {
var gensym = null;
var gensym__0 = (function (){
return gensym.cljs$core$IFn$_invoke$arity$1("G__");
});
var gensym__1 = (function (prefix_string){
if((cljs.core.gensym_counter == null)){
cljs.core.gensym_counter = (function (){var G__33902 = (0);
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__33902) : cljs.core.atom.call(null,G__33902));
})();
} else {
}

return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string),cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter,cljs.core.inc))].join(''));
});
gensym = function(prefix_string){
switch(arguments.length){
case 0:
return gensym__0.call(this);
case 1:
return gensym__1.call(this,prefix_string);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
return gensym;
})()
;
cljs.core.fixture1 = (1);
cljs.core.fixture2 = (2);

/**
* @constructor
*/
cljs.core.Delay = (function (f,value){
this.f = f;
this.value = value;
this.cljs$lang$protocol_mask$partition1$ = 1;
this.cljs$lang$protocol_mask$partition0$ = 32768;
})
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = (function (d){
var self__ = this;
var d__$1 = this;
return cljs.core.not(self__.f);
});

cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
if(cljs.core.truth_(self__.f)){
self__.value = (function (){return (self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null));
})();

self__.f = null;
} else {
}

return self__.value;
});

cljs.core.Delay.cljs$lang$type = true;

cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";

cljs.core.Delay.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Delay");
});

cljs.core.__GT_Delay = (function __GT_Delay(f,value){
return (new cljs.core.Delay(f,value));
});

/**
* returns true if x is a Delay created with delay
*/
cljs.core.delay_QMARK_ = (function delay_QMARK_(x){
return (x instanceof cljs.core.Delay);
});
/**
* If x is a Delay, returns the (possibly cached) value of its expression, else returns x
*/
cljs.core.force = (function force(x){
if(cljs.core.delay_QMARK_(x)){
var G__33904 = x;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33904) : cljs.core.deref.call(null,G__33904));
} else {
return x;
}
});
/**
* Returns true if a value has been produced for a promise, delay, future or lazy sequence.
*/
cljs.core.realized_QMARK_ = (function realized_QMARK_(d){
return cljs.core._realized_QMARK_(d);
});
cljs.core.preserving_reduced = (function preserving_reduced(rf){
return (function (p1__33905_SHARP_,p2__33906_SHARP_){
var ret = (function (){var G__33909 = p1__33905_SHARP_;
var G__33910 = p2__33906_SHARP_;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33909,G__33910) : rf.call(null,G__33909,G__33910));
})();
if(cljs.core.reduced_QMARK_(ret)){
return cljs.core.reduced(ret);
} else {
return ret;
}
});
});
/**
* A transducer which concatenates the contents of each input, which must be a
* collection, into the reduction.
*/
cljs.core.cat = (function cat(rf){
var rf1 = cljs.core.preserving_reduced(rf);
return ((function (rf1){
return (function() {
var G__33913 = null;
var G__33913__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33913__1 = (function (result){
var G__33912 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33912) : rf.call(null,G__33912));
});
var G__33913__2 = (function (result,input){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1,result,input);
});
G__33913 = function(result,input){
switch(arguments.length){
case 0:
return G__33913__0.call(this);
case 1:
return G__33913__1.call(this,result);
case 2:
return G__33913__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33913.cljs$core$IFn$_invoke$arity$0 = G__33913__0;
G__33913.cljs$core$IFn$_invoke$arity$1 = G__33913__1;
G__33913.cljs$core$IFn$_invoke$arity$2 = G__33913__2;
return G__33913;
})()
;})(rf1))
});
/**
* Returns a lazy sequence removing consecutive duplicates in coll.
* Returns a transducer when no collection is provided.
*/
cljs.core.dedupe = (function() {
var dedupe = null;
var dedupe__0 = (function (){
return (function (rf){
var pa = cljs.core.volatile_BANG_(cljs.core.constant$keyword$10);
return ((function (pa){
return (function() {
var G__33922 = null;
var G__33922__0 = (function (){
return (rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null));
});
var G__33922__1 = (function (result){
var G__33918 = result;
return (rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__33918) : rf.call(null,G__33918));
});
var G__33922__2 = (function (result,input){
var prior = (function (){var G__33919 = pa;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__33919) : cljs.core.deref.call(null,G__33919));
})();
cljs.core.vreset_BANG_(pa,input);

if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior,input)){
return result;
} else {
var G__33920 = result;
var G__33921 = input;
return (rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__33920,G__33921) : rf.call(null,G__33920,G__33921));
}
});
G__33922 = function(result,input){
switch(arguments.length){
case 0:
return G__33922__0.call(this);
case 1:
return G__33922__1.call(this,result);
case 2:
return G__33922__2.call(this,result,input);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__33922.cljs$core$IFn$_invoke$arity$0 = G__33922__0;
G__33922.cljs$core$IFn$_invoke$arity$1 = G__33922__1;
G__33922.cljs$core$IFn$_invoke$arity$2 = G__33922__2;
return G__33922;
})()
;})(pa))
});
});
var dedupe__1 = (function (coll){
return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(),coll);
});
dedupe = function(coll){
switch(arguments.length){
case 0:
return dedupe__0.call(this);
case 1:
return dedupe__1.call(this,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
return dedupe;
})()
;
/**
* Returns items from coll with random probability of prob (0.0 -
* 1.0).  Returns a transducer when no collection is provided.
*/
cljs.core.random_sample = (function() {
var random_sample = null;
var random_sample__1 = (function (prob){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$1((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}));
});
var random_sample__2 = (function (prob,coll){
return cljs.core.filter.cljs$core$IFn$_invoke$arity$2((function (_){
return ((function (){return (cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null));
})() < prob);
}),coll);
});
random_sample = function(prob,coll){
switch(arguments.length){
case 1:
return random_sample__1.call(this,prob);
case 2:
return random_sample__2.call(this,prob,coll);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
return random_sample;
})()
;

/**
* @constructor
*/
cljs.core.Eduction = (function (xform,coll){
this.xform = xform;
this.coll = coll;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2173173760;
})
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (coll__$1,writer,opts){
var self__ = this;
var coll__$2 = this;
return cljs.core.pr_sequential_writer(writer,cljs.core.pr_writer,"("," ",")",opts,coll__$2);
});

cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = (function (_,f,init){
var self__ = this;
var ___$1 = this;
return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform,f,init,self__.coll);
});

cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = (function (_){
var self__ = this;
var ___$1 = this;
return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform,self__.coll));
});

cljs.core.Eduction.cljs$lang$type = true;

cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";

cljs.core.Eduction.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/Eduction");
});

cljs.core.__GT_Eduction = (function __GT_Eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});

(cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = (function (){
var this__23942__auto__ = this;
return cljs.core.es6_iterator(this__23942__auto__);
}));
/**
* Returns a reducible/iterable/seqable application of
* the transducer to the items in coll. Note that these applications
* will be performed every time iterator/seq/reduce is called.
*/
cljs.core.eduction = (function eduction(xform,coll){
return (new cljs.core.Eduction(xform,coll));
});
/**
* Runs the supplied procedure (via reduce), for purposes of side
* effects, on successive items in the collection. Returns nil
*/
cljs.core.run_BANG_ = (function run_BANG_(proc,coll){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (p1__33924_SHARP_,p2__33923_SHARP_){
var G__33926 = p2__33923_SHARP_;
return (proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__33926) : proc.call(null,G__33926));
}),null,coll);
});

cljs.core.IEncodeJS = (function (){var obj33928 = {};
return obj33928;
})();

cljs.core._clj__GT_js = (function _clj__GT_js(x){
if((function (){var and__22952__auto__ = x;
if(and__22952__auto__){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
} else {
return and__22952__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
} else {
var x__23608__auto__ = (((x == null))?null:x);
return (function (){var or__22964__auto__ = (cljs.core._clj__GT_js[(function (){var G__33932 = x__23608__auto__;
return goog.typeOf(G__33932);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._clj__GT_js["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-clj->js",x);
}
}
})().call(null,x);
}
});

cljs.core._key__GT_js = (function _key__GT_js(x){
if((function (){var and__22952__auto__ = x;
if(and__22952__auto__){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
} else {
return and__22952__auto__;
}
})()){
return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
} else {
var x__23608__auto__ = (((x == null))?null:x);
return (function (){var or__22964__auto__ = (cljs.core._key__GT_js[(function (){var G__33936 = x__23608__auto__;
return goog.typeOf(G__33936);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._key__GT_js["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeJS.-key->js",x);
}
}
})().call(null,x);
}
});

cljs.core.key__GT_js = (function key__GT_js(k){
if((function (){var G__33939 = k;
if(G__33939){
var bit__23645__auto__ = null;
if(cljs.core.truth_((function (){var or__22964__auto__ = bit__23645__auto__;
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return G__33939.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__33939.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__33939);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__33939);
}
})()){
return cljs.core._clj__GT_js(k);
} else {
if((typeof k === 'string') || (typeof k === 'number') || ((k instanceof cljs.core.Keyword)) || ((k instanceof cljs.core.Symbol))){
var G__33940 = k;
return (cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__33940) : cljs.core.clj__GT_js.call(null,G__33940));
} else {
return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
}
}
});
/**
* Recursively transforms ClojureScript values to JavaScript.
* sets/vectors/lists become Arrays, Keywords and Symbol become Strings,
* Maps become Objects. Arbitrary keys are encoded to by key->js.
*/
cljs.core.clj__GT_js = (function clj__GT_js(x){
if((x == null)){
return null;
} else {
if((function (){var G__33956 = x;
if(G__33956){
var bit__23645__auto__ = null;
if(cljs.core.truth_((function (){var or__22964__auto__ = bit__23645__auto__;
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return G__33956.cljs$core$IEncodeJS$;
}
})())){
return true;
} else {
if((!G__33956.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__33956);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS,G__33956);
}
})()){
return cljs.core._clj__GT_js(x);
} else {
if((x instanceof cljs.core.Keyword)){
return cljs.core.name(x);
} else {
if((x instanceof cljs.core.Symbol)){
return [cljs.core.str(x)].join('');
} else {
if(cljs.core.map_QMARK_(x)){
var m = (function (){var obj33958 = {};
return obj33958;
})();
var seq__33959_33969 = cljs.core.seq(x);
var chunk__33960_33970 = null;
var count__33961_33971 = (0);
var i__33962_33972 = (0);
while(true){
if((i__33962_33972 < count__33961_33971)){
var vec__33963_33973 = chunk__33960_33970.cljs$core$IIndexed$_nth$arity$2(null,i__33962_33972);
var k_33974 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33963_33973,(0),null);
var v_33975 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33963_33973,(1),null);
(m[cljs.core.key__GT_js(k_33974)] = clj__GT_js(v_33975));

var G__33976 = seq__33959_33969;
var G__33977 = chunk__33960_33970;
var G__33978 = count__33961_33971;
var G__33979 = (i__33962_33972 + (1));
seq__33959_33969 = G__33976;
chunk__33960_33970 = G__33977;
count__33961_33971 = G__33978;
i__33962_33972 = G__33979;
continue;
} else {
var temp__4126__auto___33980 = cljs.core.seq(seq__33959_33969);
if(temp__4126__auto___33980){
var seq__33959_33981__$1 = temp__4126__auto___33980;
if(cljs.core.chunked_seq_QMARK_(seq__33959_33981__$1)){
var c__23751__auto___33982 = cljs.core.chunk_first(seq__33959_33981__$1);
var G__33983 = cljs.core.chunk_rest(seq__33959_33981__$1);
var G__33984 = c__23751__auto___33982;
var G__33985 = cljs.core.count(c__23751__auto___33982);
var G__33986 = (0);
seq__33959_33969 = G__33983;
chunk__33960_33970 = G__33984;
count__33961_33971 = G__33985;
i__33962_33972 = G__33986;
continue;
} else {
var vec__33964_33987 = cljs.core.first(seq__33959_33981__$1);
var k_33988 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33964_33987,(0),null);
var v_33989 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__33964_33987,(1),null);
(m[cljs.core.key__GT_js(k_33988)] = clj__GT_js(v_33989));

var G__33990 = cljs.core.next(seq__33959_33981__$1);
var G__33991 = null;
var G__33992 = (0);
var G__33993 = (0);
seq__33959_33969 = G__33990;
chunk__33960_33970 = G__33991;
count__33961_33971 = G__33992;
i__33962_33972 = G__33993;
continue;
}
} else {
}
}
break;
}

return m;
} else {
if(cljs.core.coll_QMARK_(x)){
var arr = [];
var seq__33965_33994 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js,x));
var chunk__33966_33995 = null;
var count__33967_33996 = (0);
var i__33968_33997 = (0);
while(true){
if((i__33968_33997 < count__33967_33996)){
var x_33998__$1 = chunk__33966_33995.cljs$core$IIndexed$_nth$arity$2(null,i__33968_33997);
arr.push(x_33998__$1);

var G__33999 = seq__33965_33994;
var G__34000 = chunk__33966_33995;
var G__34001 = count__33967_33996;
var G__34002 = (i__33968_33997 + (1));
seq__33965_33994 = G__33999;
chunk__33966_33995 = G__34000;
count__33967_33996 = G__34001;
i__33968_33997 = G__34002;
continue;
} else {
var temp__4126__auto___34003 = cljs.core.seq(seq__33965_33994);
if(temp__4126__auto___34003){
var seq__33965_34004__$1 = temp__4126__auto___34003;
if(cljs.core.chunked_seq_QMARK_(seq__33965_34004__$1)){
var c__23751__auto___34005 = cljs.core.chunk_first(seq__33965_34004__$1);
var G__34006 = cljs.core.chunk_rest(seq__33965_34004__$1);
var G__34007 = c__23751__auto___34005;
var G__34008 = cljs.core.count(c__23751__auto___34005);
var G__34009 = (0);
seq__33965_33994 = G__34006;
chunk__33966_33995 = G__34007;
count__33967_33996 = G__34008;
i__33968_33997 = G__34009;
continue;
} else {
var x_34010__$1 = cljs.core.first(seq__33965_34004__$1);
arr.push(x_34010__$1);

var G__34011 = cljs.core.next(seq__33965_34004__$1);
var G__34012 = null;
var G__34013 = (0);
var G__34014 = (0);
seq__33965_33994 = G__34011;
chunk__33966_33995 = G__34012;
count__33967_33996 = G__34013;
i__33968_33997 = G__34014;
continue;
}
} else {
}
}
break;
}

return arr;
} else {
return x;

}
}
}
}
}
}
});

cljs.core.IEncodeClojure = (function (){var obj34016 = {};
return obj34016;
})();

cljs.core._js__GT_clj = (function _js__GT_clj(x,options){
if((function (){var and__22952__auto__ = x;
if(and__22952__auto__){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
} else {
return and__22952__auto__;
}
})()){
return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x,options);
} else {
var x__23608__auto__ = (((x == null))?null:x);
return (function (){var or__22964__auto__ = (cljs.core._js__GT_clj[(function (){var G__34020 = x__23608__auto__;
return goog.typeOf(G__34020);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._js__GT_clj["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IEncodeClojure.-js->clj",x);
}
}
})().call(null,x,options);
}
});

/**
* Recursively transforms JavaScript arrays into ClojureScript
* vectors, and JavaScript objects into ClojureScript maps.  With
* option ':keywordize-keys true' will convert object fields from
* strings to keywords.
* @param {...*} var_args
*/
cljs.core.js__GT_clj = (function() {
var js__GT_clj = null;
var js__GT_clj__1 = (function (x){
return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x,cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [cljs.core.constant$keyword$14,false], null)], 0));
});
var js__GT_clj__2 = (function() { 
var G__34077__delegate = function (x,opts){
var map__34050 = opts;
var map__34050__$1 = ((cljs.core.seq_QMARK_(map__34050))?cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map,map__34050):map__34050);
var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__34050__$1,cljs.core.constant$keyword$14);
var keyfn = (cljs.core.truth_(keywordize_keys)?cljs.core.keyword:cljs.core.str);
var f = ((function (map__34050,map__34050__$1,keywordize_keys,keyfn){
return (function thisfn(x__$1){
if((function (){var G__34066 = x__$1;
if(G__34066){
var bit__23645__auto__ = null;
if(cljs.core.truth_((function (){var or__22964__auto__ = bit__23645__auto__;
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return G__34066.cljs$core$IEncodeClojure$;
}
})())){
return true;
} else {
if((!G__34066.cljs$lang$protocol_mask$partition$)){
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__34066);
} else {
return false;
}
}
} else {
return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure,G__34066);
}
})()){
return cljs.core._js__GT_clj(x__$1,cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map,opts));
} else {
if(cljs.core.seq_QMARK_(x__$1)){
return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(cljs.core.coll_QMARK_(x__$1)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1),cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if(x__$1 instanceof Array){
return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn,x__$1));
} else {
if((cljs.core.type(x__$1) === Object)){
return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY,(function (){var iter__23720__auto__ = ((function (map__34050,map__34050__$1,keywordize_keys,keyfn){
return (function iter__34067(s__34068){
return (new cljs.core.LazySeq(null,((function (map__34050,map__34050__$1,keywordize_keys,keyfn){
return (function (){
var s__34068__$1 = s__34068;
while(true){
var temp__4126__auto__ = cljs.core.seq(s__34068__$1);
if(temp__4126__auto__){
var s__34068__$2 = temp__4126__auto__;
if(cljs.core.chunked_seq_QMARK_(s__34068__$2)){
var c__23718__auto__ = cljs.core.chunk_first(s__34068__$2);
var size__23719__auto__ = cljs.core.count(c__23718__auto__);
var b__34070 = cljs.core.chunk_buffer(size__23719__auto__);
if((function (){var i__34069 = (0);
while(true){
if((i__34069 < size__23719__auto__)){
var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__23718__auto__,i__34069);
cljs.core.chunk_append(b__34070,new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__34075 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__34075) : keyfn.call(null,G__34075));
})(),thisfn((x__$1[k]))], null));

var G__34078 = (i__34069 + (1));
i__34069 = G__34078;
continue;
} else {
return true;
}
break;
}
})()){
return cljs.core.chunk_cons(cljs.core.chunk(b__34070),iter__34067(cljs.core.chunk_rest(s__34068__$2)));
} else {
return cljs.core.chunk_cons(cljs.core.chunk(b__34070),null);
}
} else {
var k = cljs.core.first(s__34068__$2);
return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(function (){var G__34076 = k;
return (keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__34076) : keyfn.call(null,G__34076));
})(),thisfn((x__$1[k]))], null),iter__34067(cljs.core.rest(s__34068__$2)));
}
} else {
return null;
}
break;
}
});})(map__34050,map__34050__$1,keywordize_keys,keyfn))
,null,null));
});})(map__34050,map__34050__$1,keywordize_keys,keyfn))
;
return iter__23720__auto__(cljs.core.js_keys(x__$1));
})());
} else {
return x__$1;

}
}
}
}
}
});})(map__34050,map__34050__$1,keywordize_keys,keyfn))
;
return f(x);
};
var G__34077 = function (x,var_args){
var opts = null;
if (arguments.length > 1) {
var G__34079__i = 0, G__34079__a = new Array(arguments.length -  1);
while (G__34079__i < G__34079__a.length) {G__34079__a[G__34079__i] = arguments[G__34079__i + 1]; ++G__34079__i;}
  opts = new cljs.core.IndexedSeq(G__34079__a,0);
} 
return G__34077__delegate.call(this,x,opts);};
G__34077.cljs$lang$maxFixedArity = 1;
G__34077.cljs$lang$applyTo = (function (arglist__34080){
var x = cljs.core.first(arglist__34080);
var opts = cljs.core.rest(arglist__34080);
return G__34077__delegate(x,opts);
});
G__34077.cljs$core$IFn$_invoke$arity$variadic = G__34077__delegate;
return G__34077;
})()
;
js__GT_clj = function(x,var_args){
var opts = var_args;
switch(arguments.length){
case 1:
return js__GT_clj__1.call(this,x);
default:
var G__34081 = null;
if (arguments.length > 1) {
var G__34082__i = 0, G__34082__a = new Array(arguments.length -  1);
while (G__34082__i < G__34082__a.length) {G__34082__a[G__34082__i] = arguments[G__34082__i + 1]; ++G__34082__i;}
G__34081 = new cljs.core.IndexedSeq(G__34082__a,0);
}
return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__34081);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
js__GT_clj.cljs$lang$maxFixedArity = 1;
js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
return js__GT_clj;
})()
;
/**
* Returns a memoized version of a referentially transparent function. The
* memoized version of the function keeps a cache of the mapping from arguments
* to results and, when calls with the same arguments are repeated often, has
* higher performance at the expense of higher memory use.
*/
cljs.core.memoize = (function memoize(f){
var mem = (function (){var G__34085 = cljs.core.PersistentArrayMap.EMPTY;
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__34085) : cljs.core.atom.call(null,G__34085));
})();
return ((function (mem){
return (function() { 
var G__34087__delegate = function (args){
var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3((function (){var G__34086 = mem;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34086) : cljs.core.deref.call(null,G__34086));
})(),args,cljs.core.lookup_sentinel);
if((v === cljs.core.lookup_sentinel)){
var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem,cljs.core.assoc,args,ret);

return ret;
} else {
return v;
}
};
var G__34087 = function (var_args){
var args = null;
if (arguments.length > 0) {
var G__34088__i = 0, G__34088__a = new Array(arguments.length -  0);
while (G__34088__i < G__34088__a.length) {G__34088__a[G__34088__i] = arguments[G__34088__i + 0]; ++G__34088__i;}
  args = new cljs.core.IndexedSeq(G__34088__a,0);
} 
return G__34087__delegate.call(this,args);};
G__34087.cljs$lang$maxFixedArity = 0;
G__34087.cljs$lang$applyTo = (function (arglist__34089){
var args = cljs.core.seq(arglist__34089);
return G__34087__delegate(args);
});
G__34087.cljs$core$IFn$_invoke$arity$variadic = G__34087__delegate;
return G__34087;
})()
;
;})(mem))
});
/**
* trampoline can be used to convert algorithms requiring mutual
* recursion without stack consumption. Calls f with supplied args, if
* any. If f returns a fn, calls that fn with no arguments, and
* continues to repeat, until the return value is not a fn, then
* returns that non-fn value. Note that if you want to return a fn as a
* final value, you must wrap it in some data structure and unpack it
* after trampoline returns.
* @param {...*} var_args
*/
cljs.core.trampoline = (function() {
var trampoline = null;
var trampoline__1 = (function (f){
while(true){
var ret = (function (){return (f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));
})();
if(cljs.core.fn_QMARK_(ret)){
var G__34091 = ret;
f = G__34091;
continue;
} else {
return ret;
}
break;
}
});
var trampoline__2 = (function() { 
var G__34092__delegate = function (f,args){
return trampoline.cljs$core$IFn$_invoke$arity$1((function (){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f,args);
}));
};
var G__34092 = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__34093__i = 0, G__34093__a = new Array(arguments.length -  1);
while (G__34093__i < G__34093__a.length) {G__34093__a[G__34093__i] = arguments[G__34093__i + 1]; ++G__34093__i;}
  args = new cljs.core.IndexedSeq(G__34093__a,0);
} 
return G__34092__delegate.call(this,f,args);};
G__34092.cljs$lang$maxFixedArity = 1;
G__34092.cljs$lang$applyTo = (function (arglist__34094){
var f = cljs.core.first(arglist__34094);
var args = cljs.core.rest(arglist__34094);
return G__34092__delegate(f,args);
});
G__34092.cljs$core$IFn$_invoke$arity$variadic = G__34092__delegate;
return G__34092;
})()
;
trampoline = function(f,var_args){
var args = var_args;
switch(arguments.length){
case 1:
return trampoline__1.call(this,f);
default:
var G__34095 = null;
if (arguments.length > 1) {
var G__34096__i = 0, G__34096__a = new Array(arguments.length -  1);
while (G__34096__i < G__34096__a.length) {G__34096__a[G__34096__i] = arguments[G__34096__i + 1]; ++G__34096__i;}
G__34095 = new cljs.core.IndexedSeq(G__34096__a,0);
}
return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__34095);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
trampoline.cljs$lang$maxFixedArity = 1;
trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
return trampoline;
})()
;
/**
* Returns a random floating point number between 0 (inclusive) and
* n (default 1) (exclusive).
*/
cljs.core.rand = (function() {
var rand = null;
var rand__0 = (function (){
return rand.cljs$core$IFn$_invoke$arity$1((1));
});
var rand__1 = (function (n){
return ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
});
rand = function(n){
switch(arguments.length){
case 0:
return rand__0.call(this);
case 1:
return rand__1.call(this,n);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
return rand;
})()
;
/**
* Returns a random integer between 0 (inclusive) and n (exclusive).
*/
cljs.core.rand_int = (function rand_int(n){
var G__34099 = ((function (){return (Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null));
})() * n);
return (Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__34099) : Math.floor.call(null,G__34099));
});
/**
* Return a random element of the (sequential) collection. Will have
* the same performance characteristics as nth for the given
* collection.
*/
cljs.core.rand_nth = (function rand_nth(coll){
return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll,cljs.core.rand_int(cljs.core.count(coll)));
});
/**
* Returns a map of the elements of coll keyed by the result of
* f on each element. The value at each key will be a vector of the
* corresponding elements, in the order they appeared in coll.
*/
cljs.core.group_by = (function group_by(f,coll){
return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (ret,x){
var k = (function (){var G__34101 = x;
return (f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__34101) : f.call(null,G__34101));
})();
return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.PersistentVector.EMPTY),x));
}),cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY),coll));
});
/**
* Creates a hierarchy object for use with derive, isa? etc.
*/
cljs.core.make_hierarchy = (function make_hierarchy(){
return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$16,cljs.core.PersistentArrayMap.EMPTY,cljs.core.constant$keyword$17,cljs.core.PersistentArrayMap.EMPTY], null);
});
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = (function get_global_hierarchy(){
if((cljs.core._global_hierarchy == null)){
cljs.core._global_hierarchy = (function (){var G__34103 = cljs.core.make_hierarchy();
return (cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__34103) : cljs.core.atom.call(null,G__34103));
})();
} else {
}

return cljs.core._global_hierarchy;
});
/**
* @param {...*} var_args
*/
cljs.core.swap_global_hierarchy_BANG_ = (function() { 
var swap_global_hierarchy_BANG___delegate = function (f,args){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_,cljs.core.get_global_hierarchy(),f,args);
};
var swap_global_hierarchy_BANG_ = function (f,var_args){
var args = null;
if (arguments.length > 1) {
var G__34104__i = 0, G__34104__a = new Array(arguments.length -  1);
while (G__34104__i < G__34104__a.length) {G__34104__a[G__34104__i] = arguments[G__34104__i + 1]; ++G__34104__i;}
  args = new cljs.core.IndexedSeq(G__34104__a,0);
} 
return swap_global_hierarchy_BANG___delegate.call(this,f,args);};
swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
swap_global_hierarchy_BANG_.cljs$lang$applyTo = (function (arglist__34105){
var f = cljs.core.first(arglist__34105);
var args = cljs.core.rest(arglist__34105);
return swap_global_hierarchy_BANG___delegate(f,args);
});
swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
return swap_global_hierarchy_BANG_;
})()
;
/**
* Returns true if (= child parent), or child is directly or indirectly derived from
* parent, either via a JavaScript type inheritance relationship or a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy
*/
cljs.core.isa_QMARK_ = (function() {
var isa_QMARK_ = null;
var isa_QMARK___2 = (function (child,parent){
return isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__34170 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34170) : cljs.core.deref.call(null,G__34170));
})(),child,parent);
});
var isa_QMARK___3 = (function (h,child,parent){
var or__22964__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child,parent);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = cljs.core.contains_QMARK_(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h).call(null,child),parent);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
var and__22952__auto__ = cljs.core.vector_QMARK_(parent);
if(and__22952__auto__){
var and__22952__auto____$1 = cljs.core.vector_QMARK_(child);
if(and__22952__auto____$1){
var and__22952__auto____$2 = (cljs.core.count(parent) === cljs.core.count(child));
if(and__22952__auto____$2){
var ret = true;
var i = (0);
while(true){
if((!(ret)) || ((i === cljs.core.count(parent)))){
return ret;
} else {
var G__34195 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h,(function (){var G__34193 = i;
return (child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__34193) : child.call(null,G__34193));
})(),(function (){var G__34194 = i;
return (parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__34194) : parent.call(null,G__34194));
})());
var G__34196 = (i + (1));
ret = G__34195;
i = G__34196;
continue;
}
break;
}
} else {
return and__22952__auto____$2;
}
} else {
return and__22952__auto____$1;
}
} else {
return and__22952__auto__;
}
}
}
});
isa_QMARK_ = function(h,child,parent){
switch(arguments.length){
case 2:
return isa_QMARK___2.call(this,h,child);
case 3:
return isa_QMARK___3.call(this,h,child,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
return isa_QMARK_;
})()
;
/**
* Returns the immediate parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.parents = (function() {
var parents = null;
var parents__1 = (function (tag){
return parents.cljs$core$IFn$_invoke$arity$2((function (){var G__34200 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34200) : cljs.core.deref.call(null,G__34200));
})(),tag);
});
var parents__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag));
});
parents = function(h,tag){
switch(arguments.length){
case 1:
return parents__1.call(this,h);
case 2:
return parents__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
return parents;
})()
;
/**
* Returns the immediate and indirect parents of tag, either via a JavaScript type
* inheritance relationship or a relationship established via derive. h
* must be a hierarchy obtained from make-hierarchy, if not supplied
* defaults to the global hierarchy
*/
cljs.core.ancestors = (function() {
var ancestors = null;
var ancestors__1 = (function (tag){
return ancestors.cljs$core$IFn$_invoke$arity$2((function (){var G__34204 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34204) : cljs.core.deref.call(null,G__34204));
})(),tag);
});
var ancestors__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag));
});
ancestors = function(h,tag){
switch(arguments.length){
case 1:
return ancestors__1.call(this,h);
case 2:
return ancestors__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
return ancestors;
})()
;
/**
* Returns the immediate and indirect children of tag, through a
* relationship established via derive. h must be a hierarchy obtained
* from make-hierarchy, if not supplied defaults to the global
* hierarchy. Note: does not work on JavaScript type inheritance
* relationships.
*/
cljs.core.descendants = (function() {
var descendants = null;
var descendants__1 = (function (tag){
return descendants.cljs$core$IFn$_invoke$arity$2((function (){var G__34208 = cljs.core.get_global_hierarchy();
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34208) : cljs.core.deref.call(null,G__34208));
})(),tag);
});
var descendants__2 = (function (h,tag){
return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),tag));
});
descendants = function(h,tag){
switch(arguments.length){
case 1:
return descendants__1.call(this,h);
case 2:
return descendants__2.call(this,h,tag);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
return descendants;
})()
;
/**
* Establishes a parent/child relationship between parent and
* tag. Parent must be a namespace-qualified symbol or keyword and
* child can be either a namespace-qualified symbol or keyword or a
* class. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.derive = (function() {
var derive = null;
var derive__2 = (function (tag,parent){
if(cljs.core.truth_(cljs.core.namespace(parent))){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"namespace","namespace",1263021155,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var derive__3 = (function (h,tag,parent){
if(cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag,parent)){
} else {
throw (new Error([cljs.core.str("Assert failed: "),cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null,"not=","not=",1466536204,null),new cljs.core.Symbol(null,"tag","tag",350170304,null),new cljs.core.Symbol(null,"parent","parent",761652748,null))], 0)))].join('')));
}

var tp = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var td = cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h);
var ta = cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h);
var tf = ((function (tp,td,ta){
return (function (m,source,sources,target,targets){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (tp,td,ta){
return (function (ret,k){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret,k,cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj,cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets,k,cljs.core.PersistentHashSet.EMPTY),cljs.core.cons(target,(function (){var G__34217 = target;
return (targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__34217) : targets.call(null,G__34217));
})())));
});})(tp,td,ta))
,m,cljs.core.cons(source,(function (){var G__34218 = source;
return (sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__34218) : sources.call(null,G__34218));
})()));
});})(tp,td,ta))
;
var or__22964__auto__ = ((cljs.core.contains_QMARK_((function (){var G__34222 = tag;
return (tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__34222) : tp.call(null,G__34222));
})(),parent))?null:(function (){
if(cljs.core.contains_QMARK_((function (){var G__34223 = tag;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__34223) : ta.call(null,G__34223));
})(),parent)){
throw (new Error([cljs.core.str(tag),cljs.core.str("already has"),cljs.core.str(parent),cljs.core.str("as ancestor")].join('')));
} else {
}

if(cljs.core.contains_QMARK_((function (){var G__34224 = parent;
return (ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__34224) : ta.call(null,G__34224));
})(),tag)){
throw (new Error([cljs.core.str("Cyclic derivation:"),cljs.core.str(parent),cljs.core.str("has"),cljs.core.str(tag),cljs.core.str("as ancestor")].join('')));
} else {
}

return new cljs.core.PersistentArrayMap(null, 3, [cljs.core.constant$keyword$15,cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h),tag,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp,tag,cljs.core.PersistentHashSet.EMPTY),parent)),cljs.core.constant$keyword$17,tf(cljs.core.constant$keyword$17.cljs$core$IFn$_invoke$arity$1(h),tag,td,parent,ta),cljs.core.constant$keyword$16,tf(cljs.core.constant$keyword$16.cljs$core$IFn$_invoke$arity$1(h),parent,ta,tag,td)], null);
})()
);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return h;
}
});
derive = function(h,tag,parent){
switch(arguments.length){
case 2:
return derive__2.call(this,h,tag);
case 3:
return derive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
return derive;
})()
;
/**
* Removes a parent/child relationship between parent and
* tag. h must be a hierarchy obtained from make-hierarchy, if not
* supplied defaults to, and modifies, the global hierarchy.
*/
cljs.core.underive = (function() {
var underive = null;
var underive__2 = (function (tag,parent){
cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive,cljs.core.array_seq([tag,parent], 0));

return null;
});
var underive__3 = (function (h,tag,parent){
var parentMap = cljs.core.constant$keyword$15.cljs$core$IFn$_invoke$arity$1(h);
var childsParents = (cljs.core.truth_((function (){var G__34231 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34231) : parentMap.call(null,G__34231));
})())?cljs.core.disj.cljs$core$IFn$_invoke$arity$2((function (){var G__34232 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34232) : parentMap.call(null,G__34232));
})(),parent):cljs.core.PersistentHashSet.EMPTY);
var newParents = (cljs.core.truth_(cljs.core.not_empty(childsParents))?cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap,tag,childsParents):cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap,tag));
var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(((function (parentMap,childsParents,newParents){
return (function (p1__34225_SHARP_){
return cljs.core.cons(cljs.core.first(p1__34225_SHARP_),cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__34225_SHARP_),cljs.core.second(p1__34225_SHARP_)));
});})(parentMap,childsParents,newParents))
,cljs.core.seq(newParents)));
if(cljs.core.contains_QMARK_((function (){var G__34233 = tag;
return (parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__34233) : parentMap.call(null,G__34233));
})(),parent)){
return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(((function (parentMap,childsParents,newParents,deriv_seq){
return (function (p1__34226_SHARP_,p2__34227_SHARP_){
return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive,p1__34226_SHARP_,p2__34227_SHARP_);
});})(parentMap,childsParents,newParents,deriv_seq))
,cljs.core.make_hierarchy(),cljs.core.partition.cljs$core$IFn$_invoke$arity$2((2),deriv_seq));
} else {
return h;
}
});
underive = function(h,tag,parent){
switch(arguments.length){
case 2:
return underive__2.call(this,h,tag);
case 3:
return underive__3.call(this,h,tag,parent);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
return underive;
})()
;
cljs.core.reset_cache = (function reset_cache(method_cache,method_table,cached_hierarchy,hierarchy){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache,(function (_){
var G__34236 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34236) : cljs.core.deref.call(null,G__34236));
}));

return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy,(function (_){
var G__34237 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34237) : cljs.core.deref.call(null,G__34237));
}));
});
cljs.core.prefers_STAR_ = (function prefers_STAR_(x,y,prefer_table){
var xprefs = (function (){var G__34253 = prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34253) : cljs.core.deref.call(null,G__34253));
})().call(null,x);
var or__22964__auto__ = (cljs.core.truth_((function (){var and__22952__auto__ = xprefs;
if(cljs.core.truth_(and__22952__auto__)){
var G__34255 = y;
return (xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__34255) : xprefs.call(null,G__34255));
} else {
return and__22952__auto__;
}
})())?true:null);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(x,cljs.core.first(ps),prefer_table))){
} else {
}

var G__34256 = cljs.core.rest(ps);
ps = G__34256;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__22964__auto____$1)){
return or__22964__auto____$1;
} else {
var or__22964__auto____$2 = (function (){var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
while(true){
if((cljs.core.count(ps) > (0))){
if(cljs.core.truth_(prefers_STAR_(cljs.core.first(ps),y,prefer_table))){
} else {
}

var G__34257 = cljs.core.rest(ps);
ps = G__34257;
continue;
} else {
return null;
}
break;
}
})();
if(cljs.core.truth_(or__22964__auto____$2)){
return or__22964__auto____$2;
} else {
return false;
}
}
}
});
cljs.core.dominates = (function dominates(x,y,prefer_table){
var or__22964__auto__ = cljs.core.prefers_STAR_(x,y,prefer_table);
if(cljs.core.truth_(or__22964__auto__)){
return or__22964__auto__;
} else {
return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x,y);
}
});
cljs.core.find_and_cache_best_method = (function find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3((function (be,p__34271){
var vec__34272 = p__34271;
var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34272,(0),null);
var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__34272,(1),null);
var e = vec__34272;
if(cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3((function (){var G__34273 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34273) : cljs.core.deref.call(null,G__34273));
})(),dispatch_val,k)){
var be2 = (cljs.core.truth_((function (){var or__22964__auto__ = (be == null);
if(or__22964__auto__){
return or__22964__auto__;
} else {
return cljs.core.dominates(k,cljs.core.first(be),prefer_table);
}
})())?e:be);
if(cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2),k,prefer_table))){
} else {
throw (new Error([cljs.core.str("Multiple methods in multimethod '"),cljs.core.str(name),cljs.core.str("' match dispatch value: "),cljs.core.str(dispatch_val),cljs.core.str(" -> "),cljs.core.str(k),cljs.core.str(" and "),cljs.core.str(cljs.core.first(be2)),cljs.core.str(", and neither is preferred")].join('')));
}

return be2;
} else {
return be;
}
}),null,(function (){var G__34274 = method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34274) : cljs.core.deref.call(null,G__34274));
})());
if(cljs.core.truth_(best_entry)){
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__34275 = cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34275) : cljs.core.deref.call(null,G__34275));
})(),(function (){var G__34276 = hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34276) : cljs.core.deref.call(null,G__34276));
})())){
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache,cljs.core.assoc,dispatch_val,cljs.core.second(best_entry));

return cljs.core.second(best_entry);
} else {
cljs.core.reset_cache(method_cache,method_table,cached_hierarchy,hierarchy);

return find_and_cache_best_method(name,dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy);
}
} else {
return null;
}
});

cljs.core.IMultiFn = (function (){var obj34278 = {};
return obj34278;
})();

cljs.core._reset = (function _reset(mf){
if((function (){var and__22952__auto__ = mf;
if(and__22952__auto__){
return mf.cljs$core$IMultiFn$_reset$arity$1;
} else {
return and__22952__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
} else {
var x__23608__auto__ = (((mf == null))?null:mf);
return (function (){var or__22964__auto__ = (cljs.core._reset[(function (){var G__34282 = x__23608__auto__;
return goog.typeOf(G__34282);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._reset["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-reset",mf);
}
}
})().call(null,mf);
}
});

cljs.core._add_method = (function _add_method(mf,dispatch_val,method){
if((function (){var and__22952__auto__ = mf;
if(and__22952__auto__){
return mf.cljs$core$IMultiFn$_add_method$arity$3;
} else {
return and__22952__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_add_method$arity$3(mf,dispatch_val,method);
} else {
var x__23608__auto__ = (((mf == null))?null:mf);
return (function (){var or__22964__auto__ = (cljs.core._add_method[(function (){var G__34286 = x__23608__auto__;
return goog.typeOf(G__34286);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._add_method["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-add-method",mf);
}
}
})().call(null,mf,dispatch_val,method);
}
});

cljs.core._remove_method = (function _remove_method(mf,dispatch_val){
if((function (){var and__22952__auto__ = mf;
if(and__22952__auto__){
return mf.cljs$core$IMultiFn$_remove_method$arity$2;
} else {
return and__22952__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf,dispatch_val);
} else {
var x__23608__auto__ = (((mf == null))?null:mf);
return (function (){var or__22964__auto__ = (cljs.core._remove_method[(function (){var G__34290 = x__23608__auto__;
return goog.typeOf(G__34290);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._remove_method["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-remove-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._prefer_method = (function _prefer_method(mf,dispatch_val,dispatch_val_y){
if((function (){var and__22952__auto__ = mf;
if(and__22952__auto__){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
} else {
return and__22952__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf,dispatch_val,dispatch_val_y);
} else {
var x__23608__auto__ = (((mf == null))?null:mf);
return (function (){var or__22964__auto__ = (cljs.core._prefer_method[(function (){var G__34294 = x__23608__auto__;
return goog.typeOf(G__34294);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._prefer_method["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefer-method",mf);
}
}
})().call(null,mf,dispatch_val,dispatch_val_y);
}
});

cljs.core._get_method = (function _get_method(mf,dispatch_val){
if((function (){var and__22952__auto__ = mf;
if(and__22952__auto__){
return mf.cljs$core$IMultiFn$_get_method$arity$2;
} else {
return and__22952__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_get_method$arity$2(mf,dispatch_val);
} else {
var x__23608__auto__ = (((mf == null))?null:mf);
return (function (){var or__22964__auto__ = (cljs.core._get_method[(function (){var G__34298 = x__23608__auto__;
return goog.typeOf(G__34298);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._get_method["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-get-method",mf);
}
}
})().call(null,mf,dispatch_val);
}
});

cljs.core._methods = (function _methods(mf){
if((function (){var and__22952__auto__ = mf;
if(and__22952__auto__){
return mf.cljs$core$IMultiFn$_methods$arity$1;
} else {
return and__22952__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
} else {
var x__23608__auto__ = (((mf == null))?null:mf);
return (function (){var or__22964__auto__ = (cljs.core._methods[(function (){var G__34302 = x__23608__auto__;
return goog.typeOf(G__34302);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._methods["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-methods",mf);
}
}
})().call(null,mf);
}
});

cljs.core._prefers = (function _prefers(mf){
if((function (){var and__22952__auto__ = mf;
if(and__22952__auto__){
return mf.cljs$core$IMultiFn$_prefers$arity$1;
} else {
return and__22952__auto__;
}
})()){
return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
} else {
var x__23608__auto__ = (((mf == null))?null:mf);
return (function (){var or__22964__auto__ = (cljs.core._prefers[(function (){var G__34306 = x__23608__auto__;
return goog.typeOf(G__34306);
})()]);
if(or__22964__auto__){
return or__22964__auto__;
} else {
var or__22964__auto____$1 = (cljs.core._prefers["_"]);
if(or__22964__auto____$1){
return or__22964__auto____$1;
} else {
throw cljs.core.missing_protocol("IMultiFn.-prefers",mf);
}
}
})().call(null,mf);
}
});

cljs.core.throw_no_method_error = (function throw_no_method_error(name,dispatch_val){
throw (new Error([cljs.core.str("No method in multimethod '"),cljs.core.str(name),cljs.core.str("' for dispatch value: "),cljs.core.str(dispatch_val)].join('')));
});

/**
* @constructor
*/
cljs.core.MultiFn = (function (name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
this.name = name;
this.dispatch_fn = dispatch_fn;
this.default_dispatch_val = default_dispatch_val;
this.hierarchy = hierarchy;
this.method_table = method_table;
this.prefer_table = prefer_table;
this.method_cache = method_cache;
this.cached_hierarchy = cached_hierarchy;
this.cljs$lang$protocol_mask$partition0$ = 4194305;
this.cljs$lang$protocol_mask$partition1$ = 4352;
})
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__34308 = this$__$1;
return goog.getUid(G__34308);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._name(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
return cljs.core._namespace(self__.name);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (mf__$2){
return cljs.core.PersistentArrayMap.EMPTY;
});})(mf__$1))
);

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy,((function (mf__$1){
return (function (mf__$2){
return null;
});})(mf__$1))
);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = (function (mf,dispatch_val,method){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table,cljs.core.assoc,dispatch_val,method);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table,cljs.core.dissoc,dispatch_val);

cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);

return mf__$1;
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = (function (mf,dispatch_val){
var self__ = this;
var mf__$1 = this;
if(cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2((function (){var G__34309 = self__.cached_hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34309) : cljs.core.deref.call(null,G__34309));
})(),(function (){var G__34310 = self__.hierarchy;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34310) : cljs.core.deref.call(null,G__34310));
})())){
} else {
cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
}

var temp__4124__auto__ = (function (){var G__34311 = self__.method_cache;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34311) : cljs.core.deref.call(null,G__34311));
})().call(null,dispatch_val);
if(cljs.core.truth_(temp__4124__auto__)){
var target_fn = temp__4124__auto__;
return target_fn;
} else {
var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name,dispatch_val,self__.hierarchy,self__.method_table,self__.prefer_table,self__.method_cache,self__.cached_hierarchy);
if(cljs.core.truth_(temp__4124__auto____$1)){
var target_fn = temp__4124__auto____$1;
return target_fn;
} else {
return (function (){var G__34312 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34312) : cljs.core.deref.call(null,G__34312));
})().call(null,self__.default_dispatch_val);
}
}
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = (function (mf,dispatch_val_x,dispatch_val_y){
var self__ = this;
var mf__$1 = this;
if(cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x,dispatch_val_y,self__.prefer_table))){
throw (new Error([cljs.core.str("Preference conflict in multimethod '"),cljs.core.str(self__.name),cljs.core.str("': "),cljs.core.str(dispatch_val_y),cljs.core.str(" is already preferred to "),cljs.core.str(dispatch_val_x)].join('')));
} else {
}

cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table,((function (mf__$1){
return (function (old){
return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old,dispatch_val_x,cljs.core.PersistentHashSet.EMPTY),dispatch_val_y));
});})(mf__$1))
);

return cljs.core.reset_cache(self__.method_cache,self__.method_table,self__.cached_hierarchy,self__.hierarchy);
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__34313 = self__.method_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34313) : cljs.core.deref.call(null,G__34313));
});

cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = (function (mf){
var self__ = this;
var mf__$1 = this;
var G__34314 = self__.prefer_table;
return (cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__34314) : cljs.core.deref.call(null,G__34314));
});

cljs.core.MultiFn.prototype.call = (function() {
var G__35155 = null;
var G__35155__1 = (function (self__){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});
var G__35155__2 = (function (self__,a){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34315 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__34315) : self__.dispatch_fn.call(null,G__34315));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34316 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__34316) : target_fn.call(null,G__34316));
});
var G__35155__3 = (function (self__,a,b){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34317 = a;
var G__34318 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__34317,G__34318) : self__.dispatch_fn.call(null,G__34317,G__34318));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34319 = a;
var G__34320 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__34319,G__34320) : target_fn.call(null,G__34319,G__34320));
});
var G__35155__4 = (function (self__,a,b,c){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34321 = a;
var G__34322 = b;
var G__34323 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__34321,G__34322,G__34323) : self__.dispatch_fn.call(null,G__34321,G__34322,G__34323));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34324 = a;
var G__34325 = b;
var G__34326 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__34324,G__34325,G__34326) : target_fn.call(null,G__34324,G__34325,G__34326));
});
var G__35155__5 = (function (self__,a,b,c,d){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34327 = a;
var G__34328 = b;
var G__34329 = c;
var G__34330 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__34327,G__34328,G__34329,G__34330) : self__.dispatch_fn.call(null,G__34327,G__34328,G__34329,G__34330));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34331 = a;
var G__34332 = b;
var G__34333 = c;
var G__34334 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__34331,G__34332,G__34333,G__34334) : target_fn.call(null,G__34331,G__34332,G__34333,G__34334));
});
var G__35155__6 = (function (self__,a,b,c,d,e){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34335 = a;
var G__34336 = b;
var G__34337 = c;
var G__34338 = d;
var G__34339 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__34335,G__34336,G__34337,G__34338,G__34339) : self__.dispatch_fn.call(null,G__34335,G__34336,G__34337,G__34338,G__34339));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34340 = a;
var G__34341 = b;
var G__34342 = c;
var G__34343 = d;
var G__34344 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__34340,G__34341,G__34342,G__34343,G__34344) : target_fn.call(null,G__34340,G__34341,G__34342,G__34343,G__34344));
});
var G__35155__7 = (function (self__,a,b,c,d,e,f){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34345 = a;
var G__34346 = b;
var G__34347 = c;
var G__34348 = d;
var G__34349 = e;
var G__34350 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__34345,G__34346,G__34347,G__34348,G__34349,G__34350) : self__.dispatch_fn.call(null,G__34345,G__34346,G__34347,G__34348,G__34349,G__34350));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34351 = a;
var G__34352 = b;
var G__34353 = c;
var G__34354 = d;
var G__34355 = e;
var G__34356 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__34351,G__34352,G__34353,G__34354,G__34355,G__34356) : target_fn.call(null,G__34351,G__34352,G__34353,G__34354,G__34355,G__34356));
});
var G__35155__8 = (function (self__,a,b,c,d,e,f,g){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34357 = a;
var G__34358 = b;
var G__34359 = c;
var G__34360 = d;
var G__34361 = e;
var G__34362 = f;
var G__34363 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__34357,G__34358,G__34359,G__34360,G__34361,G__34362,G__34363) : self__.dispatch_fn.call(null,G__34357,G__34358,G__34359,G__34360,G__34361,G__34362,G__34363));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34364 = a;
var G__34365 = b;
var G__34366 = c;
var G__34367 = d;
var G__34368 = e;
var G__34369 = f;
var G__34370 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__34364,G__34365,G__34366,G__34367,G__34368,G__34369,G__34370) : target_fn.call(null,G__34364,G__34365,G__34366,G__34367,G__34368,G__34369,G__34370));
});
var G__35155__9 = (function (self__,a,b,c,d,e,f,g,h){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34371 = a;
var G__34372 = b;
var G__34373 = c;
var G__34374 = d;
var G__34375 = e;
var G__34376 = f;
var G__34377 = g;
var G__34378 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__34371,G__34372,G__34373,G__34374,G__34375,G__34376,G__34377,G__34378) : self__.dispatch_fn.call(null,G__34371,G__34372,G__34373,G__34374,G__34375,G__34376,G__34377,G__34378));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34379 = a;
var G__34380 = b;
var G__34381 = c;
var G__34382 = d;
var G__34383 = e;
var G__34384 = f;
var G__34385 = g;
var G__34386 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__34379,G__34380,G__34381,G__34382,G__34383,G__34384,G__34385,G__34386) : target_fn.call(null,G__34379,G__34380,G__34381,G__34382,G__34383,G__34384,G__34385,G__34386));
});
var G__35155__10 = (function (self__,a,b,c,d,e,f,g,h,i){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34387 = a;
var G__34388 = b;
var G__34389 = c;
var G__34390 = d;
var G__34391 = e;
var G__34392 = f;
var G__34393 = g;
var G__34394 = h;
var G__34395 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__34387,G__34388,G__34389,G__34390,G__34391,G__34392,G__34393,G__34394,G__34395) : self__.dispatch_fn.call(null,G__34387,G__34388,G__34389,G__34390,G__34391,G__34392,G__34393,G__34394,G__34395));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34396 = a;
var G__34397 = b;
var G__34398 = c;
var G__34399 = d;
var G__34400 = e;
var G__34401 = f;
var G__34402 = g;
var G__34403 = h;
var G__34404 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__34396,G__34397,G__34398,G__34399,G__34400,G__34401,G__34402,G__34403,G__34404) : target_fn.call(null,G__34396,G__34397,G__34398,G__34399,G__34400,G__34401,G__34402,G__34403,G__34404));
});
var G__35155__11 = (function (self__,a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34405 = a;
var G__34406 = b;
var G__34407 = c;
var G__34408 = d;
var G__34409 = e;
var G__34410 = f;
var G__34411 = g;
var G__34412 = h;
var G__34413 = i;
var G__34414 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__34405,G__34406,G__34407,G__34408,G__34409,G__34410,G__34411,G__34412,G__34413,G__34414) : self__.dispatch_fn.call(null,G__34405,G__34406,G__34407,G__34408,G__34409,G__34410,G__34411,G__34412,G__34413,G__34414));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34415 = a;
var G__34416 = b;
var G__34417 = c;
var G__34418 = d;
var G__34419 = e;
var G__34420 = f;
var G__34421 = g;
var G__34422 = h;
var G__34423 = i;
var G__34424 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__34415,G__34416,G__34417,G__34418,G__34419,G__34420,G__34421,G__34422,G__34423,G__34424) : target_fn.call(null,G__34415,G__34416,G__34417,G__34418,G__34419,G__34420,G__34421,G__34422,G__34423,G__34424));
});
var G__35155__12 = (function (self__,a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34425 = a;
var G__34426 = b;
var G__34427 = c;
var G__34428 = d;
var G__34429 = e;
var G__34430 = f;
var G__34431 = g;
var G__34432 = h;
var G__34433 = i;
var G__34434 = j;
var G__34435 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__34425,G__34426,G__34427,G__34428,G__34429,G__34430,G__34431,G__34432,G__34433,G__34434,G__34435) : self__.dispatch_fn.call(null,G__34425,G__34426,G__34427,G__34428,G__34429,G__34430,G__34431,G__34432,G__34433,G__34434,G__34435));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34436 = a;
var G__34437 = b;
var G__34438 = c;
var G__34439 = d;
var G__34440 = e;
var G__34441 = f;
var G__34442 = g;
var G__34443 = h;
var G__34444 = i;
var G__34445 = j;
var G__34446 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__34436,G__34437,G__34438,G__34439,G__34440,G__34441,G__34442,G__34443,G__34444,G__34445,G__34446) : target_fn.call(null,G__34436,G__34437,G__34438,G__34439,G__34440,G__34441,G__34442,G__34443,G__34444,G__34445,G__34446));
});
var G__35155__13 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34447 = a;
var G__34448 = b;
var G__34449 = c;
var G__34450 = d;
var G__34451 = e;
var G__34452 = f;
var G__34453 = g;
var G__34454 = h;
var G__34455 = i;
var G__34456 = j;
var G__34457 = k;
var G__34458 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__34447,G__34448,G__34449,G__34450,G__34451,G__34452,G__34453,G__34454,G__34455,G__34456,G__34457,G__34458) : self__.dispatch_fn.call(null,G__34447,G__34448,G__34449,G__34450,G__34451,G__34452,G__34453,G__34454,G__34455,G__34456,G__34457,G__34458));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34459 = a;
var G__34460 = b;
var G__34461 = c;
var G__34462 = d;
var G__34463 = e;
var G__34464 = f;
var G__34465 = g;
var G__34466 = h;
var G__34467 = i;
var G__34468 = j;
var G__34469 = k;
var G__34470 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__34459,G__34460,G__34461,G__34462,G__34463,G__34464,G__34465,G__34466,G__34467,G__34468,G__34469,G__34470) : target_fn.call(null,G__34459,G__34460,G__34461,G__34462,G__34463,G__34464,G__34465,G__34466,G__34467,G__34468,G__34469,G__34470));
});
var G__35155__14 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34471 = a;
var G__34472 = b;
var G__34473 = c;
var G__34474 = d;
var G__34475 = e;
var G__34476 = f;
var G__34477 = g;
var G__34478 = h;
var G__34479 = i;
var G__34480 = j;
var G__34481 = k;
var G__34482 = l;
var G__34483 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__34471,G__34472,G__34473,G__34474,G__34475,G__34476,G__34477,G__34478,G__34479,G__34480,G__34481,G__34482,G__34483) : self__.dispatch_fn.call(null,G__34471,G__34472,G__34473,G__34474,G__34475,G__34476,G__34477,G__34478,G__34479,G__34480,G__34481,G__34482,G__34483));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34484 = a;
var G__34485 = b;
var G__34486 = c;
var G__34487 = d;
var G__34488 = e;
var G__34489 = f;
var G__34490 = g;
var G__34491 = h;
var G__34492 = i;
var G__34493 = j;
var G__34494 = k;
var G__34495 = l;
var G__34496 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__34484,G__34485,G__34486,G__34487,G__34488,G__34489,G__34490,G__34491,G__34492,G__34493,G__34494,G__34495,G__34496) : target_fn.call(null,G__34484,G__34485,G__34486,G__34487,G__34488,G__34489,G__34490,G__34491,G__34492,G__34493,G__34494,G__34495,G__34496));
});
var G__35155__15 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34497 = a;
var G__34498 = b;
var G__34499 = c;
var G__34500 = d;
var G__34501 = e;
var G__34502 = f;
var G__34503 = g;
var G__34504 = h;
var G__34505 = i;
var G__34506 = j;
var G__34507 = k;
var G__34508 = l;
var G__34509 = m;
var G__34510 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__34497,G__34498,G__34499,G__34500,G__34501,G__34502,G__34503,G__34504,G__34505,G__34506,G__34507,G__34508,G__34509,G__34510) : self__.dispatch_fn.call(null,G__34497,G__34498,G__34499,G__34500,G__34501,G__34502,G__34503,G__34504,G__34505,G__34506,G__34507,G__34508,G__34509,G__34510));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34511 = a;
var G__34512 = b;
var G__34513 = c;
var G__34514 = d;
var G__34515 = e;
var G__34516 = f;
var G__34517 = g;
var G__34518 = h;
var G__34519 = i;
var G__34520 = j;
var G__34521 = k;
var G__34522 = l;
var G__34523 = m;
var G__34524 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__34511,G__34512,G__34513,G__34514,G__34515,G__34516,G__34517,G__34518,G__34519,G__34520,G__34521,G__34522,G__34523,G__34524) : target_fn.call(null,G__34511,G__34512,G__34513,G__34514,G__34515,G__34516,G__34517,G__34518,G__34519,G__34520,G__34521,G__34522,G__34523,G__34524));
});
var G__35155__16 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34525 = a;
var G__34526 = b;
var G__34527 = c;
var G__34528 = d;
var G__34529 = e;
var G__34530 = f;
var G__34531 = g;
var G__34532 = h;
var G__34533 = i;
var G__34534 = j;
var G__34535 = k;
var G__34536 = l;
var G__34537 = m;
var G__34538 = n;
var G__34539 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__34525,G__34526,G__34527,G__34528,G__34529,G__34530,G__34531,G__34532,G__34533,G__34534,G__34535,G__34536,G__34537,G__34538,G__34539) : self__.dispatch_fn.call(null,G__34525,G__34526,G__34527,G__34528,G__34529,G__34530,G__34531,G__34532,G__34533,G__34534,G__34535,G__34536,G__34537,G__34538,G__34539));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34540 = a;
var G__34541 = b;
var G__34542 = c;
var G__34543 = d;
var G__34544 = e;
var G__34545 = f;
var G__34546 = g;
var G__34547 = h;
var G__34548 = i;
var G__34549 = j;
var G__34550 = k;
var G__34551 = l;
var G__34552 = m;
var G__34553 = n;
var G__34554 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__34540,G__34541,G__34542,G__34543,G__34544,G__34545,G__34546,G__34547,G__34548,G__34549,G__34550,G__34551,G__34552,G__34553,G__34554) : target_fn.call(null,G__34540,G__34541,G__34542,G__34543,G__34544,G__34545,G__34546,G__34547,G__34548,G__34549,G__34550,G__34551,G__34552,G__34553,G__34554));
});
var G__35155__17 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34555 = a;
var G__34556 = b;
var G__34557 = c;
var G__34558 = d;
var G__34559 = e;
var G__34560 = f;
var G__34561 = g;
var G__34562 = h;
var G__34563 = i;
var G__34564 = j;
var G__34565 = k;
var G__34566 = l;
var G__34567 = m;
var G__34568 = n;
var G__34569 = o;
var G__34570 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__34555,G__34556,G__34557,G__34558,G__34559,G__34560,G__34561,G__34562,G__34563,G__34564,G__34565,G__34566,G__34567,G__34568,G__34569,G__34570) : self__.dispatch_fn.call(null,G__34555,G__34556,G__34557,G__34558,G__34559,G__34560,G__34561,G__34562,G__34563,G__34564,G__34565,G__34566,G__34567,G__34568,G__34569,G__34570));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34571 = a;
var G__34572 = b;
var G__34573 = c;
var G__34574 = d;
var G__34575 = e;
var G__34576 = f;
var G__34577 = g;
var G__34578 = h;
var G__34579 = i;
var G__34580 = j;
var G__34581 = k;
var G__34582 = l;
var G__34583 = m;
var G__34584 = n;
var G__34585 = o;
var G__34586 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__34571,G__34572,G__34573,G__34574,G__34575,G__34576,G__34577,G__34578,G__34579,G__34580,G__34581,G__34582,G__34583,G__34584,G__34585,G__34586) : target_fn.call(null,G__34571,G__34572,G__34573,G__34574,G__34575,G__34576,G__34577,G__34578,G__34579,G__34580,G__34581,G__34582,G__34583,G__34584,G__34585,G__34586));
});
var G__35155__18 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34587 = a;
var G__34588 = b;
var G__34589 = c;
var G__34590 = d;
var G__34591 = e;
var G__34592 = f;
var G__34593 = g;
var G__34594 = h;
var G__34595 = i;
var G__34596 = j;
var G__34597 = k;
var G__34598 = l;
var G__34599 = m;
var G__34600 = n;
var G__34601 = o;
var G__34602 = p;
var G__34603 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__34587,G__34588,G__34589,G__34590,G__34591,G__34592,G__34593,G__34594,G__34595,G__34596,G__34597,G__34598,G__34599,G__34600,G__34601,G__34602,G__34603) : self__.dispatch_fn.call(null,G__34587,G__34588,G__34589,G__34590,G__34591,G__34592,G__34593,G__34594,G__34595,G__34596,G__34597,G__34598,G__34599,G__34600,G__34601,G__34602,G__34603));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34604 = a;
var G__34605 = b;
var G__34606 = c;
var G__34607 = d;
var G__34608 = e;
var G__34609 = f;
var G__34610 = g;
var G__34611 = h;
var G__34612 = i;
var G__34613 = j;
var G__34614 = k;
var G__34615 = l;
var G__34616 = m;
var G__34617 = n;
var G__34618 = o;
var G__34619 = p;
var G__34620 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__34604,G__34605,G__34606,G__34607,G__34608,G__34609,G__34610,G__34611,G__34612,G__34613,G__34614,G__34615,G__34616,G__34617,G__34618,G__34619,G__34620) : target_fn.call(null,G__34604,G__34605,G__34606,G__34607,G__34608,G__34609,G__34610,G__34611,G__34612,G__34613,G__34614,G__34615,G__34616,G__34617,G__34618,G__34619,G__34620));
});
var G__35155__19 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34621 = a;
var G__34622 = b;
var G__34623 = c;
var G__34624 = d;
var G__34625 = e;
var G__34626 = f;
var G__34627 = g;
var G__34628 = h;
var G__34629 = i;
var G__34630 = j;
var G__34631 = k;
var G__34632 = l;
var G__34633 = m;
var G__34634 = n;
var G__34635 = o;
var G__34636 = p;
var G__34637 = q;
var G__34638 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__34621,G__34622,G__34623,G__34624,G__34625,G__34626,G__34627,G__34628,G__34629,G__34630,G__34631,G__34632,G__34633,G__34634,G__34635,G__34636,G__34637,G__34638) : self__.dispatch_fn.call(null,G__34621,G__34622,G__34623,G__34624,G__34625,G__34626,G__34627,G__34628,G__34629,G__34630,G__34631,G__34632,G__34633,G__34634,G__34635,G__34636,G__34637,G__34638));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34639 = a;
var G__34640 = b;
var G__34641 = c;
var G__34642 = d;
var G__34643 = e;
var G__34644 = f;
var G__34645 = g;
var G__34646 = h;
var G__34647 = i;
var G__34648 = j;
var G__34649 = k;
var G__34650 = l;
var G__34651 = m;
var G__34652 = n;
var G__34653 = o;
var G__34654 = p;
var G__34655 = q;
var G__34656 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__34639,G__34640,G__34641,G__34642,G__34643,G__34644,G__34645,G__34646,G__34647,G__34648,G__34649,G__34650,G__34651,G__34652,G__34653,G__34654,G__34655,G__34656) : target_fn.call(null,G__34639,G__34640,G__34641,G__34642,G__34643,G__34644,G__34645,G__34646,G__34647,G__34648,G__34649,G__34650,G__34651,G__34652,G__34653,G__34654,G__34655,G__34656));
});
var G__35155__20 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34657 = a;
var G__34658 = b;
var G__34659 = c;
var G__34660 = d;
var G__34661 = e;
var G__34662 = f;
var G__34663 = g;
var G__34664 = h;
var G__34665 = i;
var G__34666 = j;
var G__34667 = k;
var G__34668 = l;
var G__34669 = m;
var G__34670 = n;
var G__34671 = o;
var G__34672 = p;
var G__34673 = q;
var G__34674 = r;
var G__34675 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__34657,G__34658,G__34659,G__34660,G__34661,G__34662,G__34663,G__34664,G__34665,G__34666,G__34667,G__34668,G__34669,G__34670,G__34671,G__34672,G__34673,G__34674,G__34675) : self__.dispatch_fn.call(null,G__34657,G__34658,G__34659,G__34660,G__34661,G__34662,G__34663,G__34664,G__34665,G__34666,G__34667,G__34668,G__34669,G__34670,G__34671,G__34672,G__34673,G__34674,G__34675));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34676 = a;
var G__34677 = b;
var G__34678 = c;
var G__34679 = d;
var G__34680 = e;
var G__34681 = f;
var G__34682 = g;
var G__34683 = h;
var G__34684 = i;
var G__34685 = j;
var G__34686 = k;
var G__34687 = l;
var G__34688 = m;
var G__34689 = n;
var G__34690 = o;
var G__34691 = p;
var G__34692 = q;
var G__34693 = r;
var G__34694 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__34676,G__34677,G__34678,G__34679,G__34680,G__34681,G__34682,G__34683,G__34684,G__34685,G__34686,G__34687,G__34688,G__34689,G__34690,G__34691,G__34692,G__34693,G__34694) : target_fn.call(null,G__34676,G__34677,G__34678,G__34679,G__34680,G__34681,G__34682,G__34683,G__34684,G__34685,G__34686,G__34687,G__34688,G__34689,G__34690,G__34691,G__34692,G__34693,G__34694));
});
var G__35155__21 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = (function (){var G__34695 = a;
var G__34696 = b;
var G__34697 = c;
var G__34698 = d;
var G__34699 = e;
var G__34700 = f;
var G__34701 = g;
var G__34702 = h;
var G__34703 = i;
var G__34704 = j;
var G__34705 = k;
var G__34706 = l;
var G__34707 = m;
var G__34708 = n;
var G__34709 = o;
var G__34710 = p;
var G__34711 = q;
var G__34712 = r;
var G__34713 = s;
var G__34714 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__34695,G__34696,G__34697,G__34698,G__34699,G__34700,G__34701,G__34702,G__34703,G__34704,G__34705,G__34706,G__34707,G__34708,G__34709,G__34710,G__34711,G__34712,G__34713,G__34714) : self__.dispatch_fn.call(null,G__34695,G__34696,G__34697,G__34698,G__34699,G__34700,G__34701,G__34702,G__34703,G__34704,G__34705,G__34706,G__34707,G__34708,G__34709,G__34710,G__34711,G__34712,G__34713,G__34714));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34715 = a;
var G__34716 = b;
var G__34717 = c;
var G__34718 = d;
var G__34719 = e;
var G__34720 = f;
var G__34721 = g;
var G__34722 = h;
var G__34723 = i;
var G__34724 = j;
var G__34725 = k;
var G__34726 = l;
var G__34727 = m;
var G__34728 = n;
var G__34729 = o;
var G__34730 = p;
var G__34731 = q;
var G__34732 = r;
var G__34733 = s;
var G__34734 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__34715,G__34716,G__34717,G__34718,G__34719,G__34720,G__34721,G__34722,G__34723,G__34724,G__34725,G__34726,G__34727,G__34728,G__34729,G__34730,G__34731,G__34732,G__34733,G__34734) : target_fn.call(null,G__34715,G__34716,G__34717,G__34718,G__34719,G__34720,G__34721,G__34722,G__34723,G__34724,G__34725,G__34726,G__34727,G__34728,G__34729,G__34730,G__34731,G__34732,G__34733,G__34734));
});
var G__35155__22 = (function (self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var self____$1 = this;
var mf = self____$1;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});
G__35155 = function(self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
switch(arguments.length){
case 1:
return G__35155__1.call(this,self__);
case 2:
return G__35155__2.call(this,self__,a);
case 3:
return G__35155__3.call(this,self__,a,b);
case 4:
return G__35155__4.call(this,self__,a,b,c);
case 5:
return G__35155__5.call(this,self__,a,b,c,d);
case 6:
return G__35155__6.call(this,self__,a,b,c,d,e);
case 7:
return G__35155__7.call(this,self__,a,b,c,d,e,f);
case 8:
return G__35155__8.call(this,self__,a,b,c,d,e,f,g);
case 9:
return G__35155__9.call(this,self__,a,b,c,d,e,f,g,h);
case 10:
return G__35155__10.call(this,self__,a,b,c,d,e,f,g,h,i);
case 11:
return G__35155__11.call(this,self__,a,b,c,d,e,f,g,h,i,j);
case 12:
return G__35155__12.call(this,self__,a,b,c,d,e,f,g,h,i,j,k);
case 13:
return G__35155__13.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l);
case 14:
return G__35155__14.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m);
case 15:
return G__35155__15.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n);
case 16:
return G__35155__16.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o);
case 17:
return G__35155__17.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p);
case 18:
return G__35155__18.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q);
case 19:
return G__35155__19.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r);
case 20:
return G__35155__20.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s);
case 21:
return G__35155__21.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t);
case 22:
return G__35155__22.call(this,self__,a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
G__35155.cljs$core$IFn$_invoke$arity$1 = G__35155__1;
G__35155.cljs$core$IFn$_invoke$arity$2 = G__35155__2;
G__35155.cljs$core$IFn$_invoke$arity$3 = G__35155__3;
G__35155.cljs$core$IFn$_invoke$arity$4 = G__35155__4;
G__35155.cljs$core$IFn$_invoke$arity$5 = G__35155__5;
G__35155.cljs$core$IFn$_invoke$arity$6 = G__35155__6;
G__35155.cljs$core$IFn$_invoke$arity$7 = G__35155__7;
G__35155.cljs$core$IFn$_invoke$arity$8 = G__35155__8;
G__35155.cljs$core$IFn$_invoke$arity$9 = G__35155__9;
G__35155.cljs$core$IFn$_invoke$arity$10 = G__35155__10;
G__35155.cljs$core$IFn$_invoke$arity$11 = G__35155__11;
G__35155.cljs$core$IFn$_invoke$arity$12 = G__35155__12;
G__35155.cljs$core$IFn$_invoke$arity$13 = G__35155__13;
G__35155.cljs$core$IFn$_invoke$arity$14 = G__35155__14;
G__35155.cljs$core$IFn$_invoke$arity$15 = G__35155__15;
G__35155.cljs$core$IFn$_invoke$arity$16 = G__35155__16;
G__35155.cljs$core$IFn$_invoke$arity$17 = G__35155__17;
G__35155.cljs$core$IFn$_invoke$arity$18 = G__35155__18;
G__35155.cljs$core$IFn$_invoke$arity$19 = G__35155__19;
G__35155.cljs$core$IFn$_invoke$arity$20 = G__35155__20;
G__35155.cljs$core$IFn$_invoke$arity$21 = G__35155__21;
G__35155.cljs$core$IFn$_invoke$arity$22 = G__35155__22;
return G__35155;
})()
;

cljs.core.MultiFn.prototype.apply = (function (self__,args34307){
var self__ = this;
var self____$1 = this;
return self____$1.call.apply(self____$1,[self____$1].concat(cljs.core.aclone(args34307)));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = (function (){
var self__ = this;
var mf = this;
var dispatch_val = (function (){return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return (target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = (function (a){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34735 = a;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__34735) : self__.dispatch_fn.call(null,G__34735));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34736 = a;
return (target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__34736) : target_fn.call(null,G__34736));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = (function (a,b){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34737 = a;
var G__34738 = b;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__34737,G__34738) : self__.dispatch_fn.call(null,G__34737,G__34738));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34739 = a;
var G__34740 = b;
return (target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__34739,G__34740) : target_fn.call(null,G__34739,G__34740));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = (function (a,b,c){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34741 = a;
var G__34742 = b;
var G__34743 = c;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__34741,G__34742,G__34743) : self__.dispatch_fn.call(null,G__34741,G__34742,G__34743));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34744 = a;
var G__34745 = b;
var G__34746 = c;
return (target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__34744,G__34745,G__34746) : target_fn.call(null,G__34744,G__34745,G__34746));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = (function (a,b,c,d){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34747 = a;
var G__34748 = b;
var G__34749 = c;
var G__34750 = d;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__34747,G__34748,G__34749,G__34750) : self__.dispatch_fn.call(null,G__34747,G__34748,G__34749,G__34750));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34751 = a;
var G__34752 = b;
var G__34753 = c;
var G__34754 = d;
return (target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__34751,G__34752,G__34753,G__34754) : target_fn.call(null,G__34751,G__34752,G__34753,G__34754));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = (function (a,b,c,d,e){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34755 = a;
var G__34756 = b;
var G__34757 = c;
var G__34758 = d;
var G__34759 = e;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__34755,G__34756,G__34757,G__34758,G__34759) : self__.dispatch_fn.call(null,G__34755,G__34756,G__34757,G__34758,G__34759));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34760 = a;
var G__34761 = b;
var G__34762 = c;
var G__34763 = d;
var G__34764 = e;
return (target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__34760,G__34761,G__34762,G__34763,G__34764) : target_fn.call(null,G__34760,G__34761,G__34762,G__34763,G__34764));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = (function (a,b,c,d,e,f){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34765 = a;
var G__34766 = b;
var G__34767 = c;
var G__34768 = d;
var G__34769 = e;
var G__34770 = f;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__34765,G__34766,G__34767,G__34768,G__34769,G__34770) : self__.dispatch_fn.call(null,G__34765,G__34766,G__34767,G__34768,G__34769,G__34770));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34771 = a;
var G__34772 = b;
var G__34773 = c;
var G__34774 = d;
var G__34775 = e;
var G__34776 = f;
return (target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__34771,G__34772,G__34773,G__34774,G__34775,G__34776) : target_fn.call(null,G__34771,G__34772,G__34773,G__34774,G__34775,G__34776));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = (function (a,b,c,d,e,f,g){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34777 = a;
var G__34778 = b;
var G__34779 = c;
var G__34780 = d;
var G__34781 = e;
var G__34782 = f;
var G__34783 = g;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__34777,G__34778,G__34779,G__34780,G__34781,G__34782,G__34783) : self__.dispatch_fn.call(null,G__34777,G__34778,G__34779,G__34780,G__34781,G__34782,G__34783));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34784 = a;
var G__34785 = b;
var G__34786 = c;
var G__34787 = d;
var G__34788 = e;
var G__34789 = f;
var G__34790 = g;
return (target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__34784,G__34785,G__34786,G__34787,G__34788,G__34789,G__34790) : target_fn.call(null,G__34784,G__34785,G__34786,G__34787,G__34788,G__34789,G__34790));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = (function (a,b,c,d,e,f,g,h){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34791 = a;
var G__34792 = b;
var G__34793 = c;
var G__34794 = d;
var G__34795 = e;
var G__34796 = f;
var G__34797 = g;
var G__34798 = h;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__34791,G__34792,G__34793,G__34794,G__34795,G__34796,G__34797,G__34798) : self__.dispatch_fn.call(null,G__34791,G__34792,G__34793,G__34794,G__34795,G__34796,G__34797,G__34798));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34799 = a;
var G__34800 = b;
var G__34801 = c;
var G__34802 = d;
var G__34803 = e;
var G__34804 = f;
var G__34805 = g;
var G__34806 = h;
return (target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__34799,G__34800,G__34801,G__34802,G__34803,G__34804,G__34805,G__34806) : target_fn.call(null,G__34799,G__34800,G__34801,G__34802,G__34803,G__34804,G__34805,G__34806));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = (function (a,b,c,d,e,f,g,h,i){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34807 = a;
var G__34808 = b;
var G__34809 = c;
var G__34810 = d;
var G__34811 = e;
var G__34812 = f;
var G__34813 = g;
var G__34814 = h;
var G__34815 = i;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__34807,G__34808,G__34809,G__34810,G__34811,G__34812,G__34813,G__34814,G__34815) : self__.dispatch_fn.call(null,G__34807,G__34808,G__34809,G__34810,G__34811,G__34812,G__34813,G__34814,G__34815));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34816 = a;
var G__34817 = b;
var G__34818 = c;
var G__34819 = d;
var G__34820 = e;
var G__34821 = f;
var G__34822 = g;
var G__34823 = h;
var G__34824 = i;
return (target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__34816,G__34817,G__34818,G__34819,G__34820,G__34821,G__34822,G__34823,G__34824) : target_fn.call(null,G__34816,G__34817,G__34818,G__34819,G__34820,G__34821,G__34822,G__34823,G__34824));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = (function (a,b,c,d,e,f,g,h,i,j){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34825 = a;
var G__34826 = b;
var G__34827 = c;
var G__34828 = d;
var G__34829 = e;
var G__34830 = f;
var G__34831 = g;
var G__34832 = h;
var G__34833 = i;
var G__34834 = j;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__34825,G__34826,G__34827,G__34828,G__34829,G__34830,G__34831,G__34832,G__34833,G__34834) : self__.dispatch_fn.call(null,G__34825,G__34826,G__34827,G__34828,G__34829,G__34830,G__34831,G__34832,G__34833,G__34834));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34835 = a;
var G__34836 = b;
var G__34837 = c;
var G__34838 = d;
var G__34839 = e;
var G__34840 = f;
var G__34841 = g;
var G__34842 = h;
var G__34843 = i;
var G__34844 = j;
return (target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__34835,G__34836,G__34837,G__34838,G__34839,G__34840,G__34841,G__34842,G__34843,G__34844) : target_fn.call(null,G__34835,G__34836,G__34837,G__34838,G__34839,G__34840,G__34841,G__34842,G__34843,G__34844));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = (function (a,b,c,d,e,f,g,h,i,j,k){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34845 = a;
var G__34846 = b;
var G__34847 = c;
var G__34848 = d;
var G__34849 = e;
var G__34850 = f;
var G__34851 = g;
var G__34852 = h;
var G__34853 = i;
var G__34854 = j;
var G__34855 = k;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__34845,G__34846,G__34847,G__34848,G__34849,G__34850,G__34851,G__34852,G__34853,G__34854,G__34855) : self__.dispatch_fn.call(null,G__34845,G__34846,G__34847,G__34848,G__34849,G__34850,G__34851,G__34852,G__34853,G__34854,G__34855));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34856 = a;
var G__34857 = b;
var G__34858 = c;
var G__34859 = d;
var G__34860 = e;
var G__34861 = f;
var G__34862 = g;
var G__34863 = h;
var G__34864 = i;
var G__34865 = j;
var G__34866 = k;
return (target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__34856,G__34857,G__34858,G__34859,G__34860,G__34861,G__34862,G__34863,G__34864,G__34865,G__34866) : target_fn.call(null,G__34856,G__34857,G__34858,G__34859,G__34860,G__34861,G__34862,G__34863,G__34864,G__34865,G__34866));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = (function (a,b,c,d,e,f,g,h,i,j,k,l){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34867 = a;
var G__34868 = b;
var G__34869 = c;
var G__34870 = d;
var G__34871 = e;
var G__34872 = f;
var G__34873 = g;
var G__34874 = h;
var G__34875 = i;
var G__34876 = j;
var G__34877 = k;
var G__34878 = l;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__34867,G__34868,G__34869,G__34870,G__34871,G__34872,G__34873,G__34874,G__34875,G__34876,G__34877,G__34878) : self__.dispatch_fn.call(null,G__34867,G__34868,G__34869,G__34870,G__34871,G__34872,G__34873,G__34874,G__34875,G__34876,G__34877,G__34878));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34879 = a;
var G__34880 = b;
var G__34881 = c;
var G__34882 = d;
var G__34883 = e;
var G__34884 = f;
var G__34885 = g;
var G__34886 = h;
var G__34887 = i;
var G__34888 = j;
var G__34889 = k;
var G__34890 = l;
return (target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__34879,G__34880,G__34881,G__34882,G__34883,G__34884,G__34885,G__34886,G__34887,G__34888,G__34889,G__34890) : target_fn.call(null,G__34879,G__34880,G__34881,G__34882,G__34883,G__34884,G__34885,G__34886,G__34887,G__34888,G__34889,G__34890));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34891 = a;
var G__34892 = b;
var G__34893 = c;
var G__34894 = d;
var G__34895 = e;
var G__34896 = f;
var G__34897 = g;
var G__34898 = h;
var G__34899 = i;
var G__34900 = j;
var G__34901 = k;
var G__34902 = l;
var G__34903 = m;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__34891,G__34892,G__34893,G__34894,G__34895,G__34896,G__34897,G__34898,G__34899,G__34900,G__34901,G__34902,G__34903) : self__.dispatch_fn.call(null,G__34891,G__34892,G__34893,G__34894,G__34895,G__34896,G__34897,G__34898,G__34899,G__34900,G__34901,G__34902,G__34903));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34904 = a;
var G__34905 = b;
var G__34906 = c;
var G__34907 = d;
var G__34908 = e;
var G__34909 = f;
var G__34910 = g;
var G__34911 = h;
var G__34912 = i;
var G__34913 = j;
var G__34914 = k;
var G__34915 = l;
var G__34916 = m;
return (target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__34904,G__34905,G__34906,G__34907,G__34908,G__34909,G__34910,G__34911,G__34912,G__34913,G__34914,G__34915,G__34916) : target_fn.call(null,G__34904,G__34905,G__34906,G__34907,G__34908,G__34909,G__34910,G__34911,G__34912,G__34913,G__34914,G__34915,G__34916));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34917 = a;
var G__34918 = b;
var G__34919 = c;
var G__34920 = d;
var G__34921 = e;
var G__34922 = f;
var G__34923 = g;
var G__34924 = h;
var G__34925 = i;
var G__34926 = j;
var G__34927 = k;
var G__34928 = l;
var G__34929 = m;
var G__34930 = n;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__34917,G__34918,G__34919,G__34920,G__34921,G__34922,G__34923,G__34924,G__34925,G__34926,G__34927,G__34928,G__34929,G__34930) : self__.dispatch_fn.call(null,G__34917,G__34918,G__34919,G__34920,G__34921,G__34922,G__34923,G__34924,G__34925,G__34926,G__34927,G__34928,G__34929,G__34930));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34931 = a;
var G__34932 = b;
var G__34933 = c;
var G__34934 = d;
var G__34935 = e;
var G__34936 = f;
var G__34937 = g;
var G__34938 = h;
var G__34939 = i;
var G__34940 = j;
var G__34941 = k;
var G__34942 = l;
var G__34943 = m;
var G__34944 = n;
return (target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__34931,G__34932,G__34933,G__34934,G__34935,G__34936,G__34937,G__34938,G__34939,G__34940,G__34941,G__34942,G__34943,G__34944) : target_fn.call(null,G__34931,G__34932,G__34933,G__34934,G__34935,G__34936,G__34937,G__34938,G__34939,G__34940,G__34941,G__34942,G__34943,G__34944));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34945 = a;
var G__34946 = b;
var G__34947 = c;
var G__34948 = d;
var G__34949 = e;
var G__34950 = f;
var G__34951 = g;
var G__34952 = h;
var G__34953 = i;
var G__34954 = j;
var G__34955 = k;
var G__34956 = l;
var G__34957 = m;
var G__34958 = n;
var G__34959 = o;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__34945,G__34946,G__34947,G__34948,G__34949,G__34950,G__34951,G__34952,G__34953,G__34954,G__34955,G__34956,G__34957,G__34958,G__34959) : self__.dispatch_fn.call(null,G__34945,G__34946,G__34947,G__34948,G__34949,G__34950,G__34951,G__34952,G__34953,G__34954,G__34955,G__34956,G__34957,G__34958,G__34959));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34960 = a;
var G__34961 = b;
var G__34962 = c;
var G__34963 = d;
var G__34964 = e;
var G__34965 = f;
var G__34966 = g;
var G__34967 = h;
var G__34968 = i;
var G__34969 = j;
var G__34970 = k;
var G__34971 = l;
var G__34972 = m;
var G__34973 = n;
var G__34974 = o;
return (target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__34960,G__34961,G__34962,G__34963,G__34964,G__34965,G__34966,G__34967,G__34968,G__34969,G__34970,G__34971,G__34972,G__34973,G__34974) : target_fn.call(null,G__34960,G__34961,G__34962,G__34963,G__34964,G__34965,G__34966,G__34967,G__34968,G__34969,G__34970,G__34971,G__34972,G__34973,G__34974));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__34975 = a;
var G__34976 = b;
var G__34977 = c;
var G__34978 = d;
var G__34979 = e;
var G__34980 = f;
var G__34981 = g;
var G__34982 = h;
var G__34983 = i;
var G__34984 = j;
var G__34985 = k;
var G__34986 = l;
var G__34987 = m;
var G__34988 = n;
var G__34989 = o;
var G__34990 = p;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__34975,G__34976,G__34977,G__34978,G__34979,G__34980,G__34981,G__34982,G__34983,G__34984,G__34985,G__34986,G__34987,G__34988,G__34989,G__34990) : self__.dispatch_fn.call(null,G__34975,G__34976,G__34977,G__34978,G__34979,G__34980,G__34981,G__34982,G__34983,G__34984,G__34985,G__34986,G__34987,G__34988,G__34989,G__34990));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__34991 = a;
var G__34992 = b;
var G__34993 = c;
var G__34994 = d;
var G__34995 = e;
var G__34996 = f;
var G__34997 = g;
var G__34998 = h;
var G__34999 = i;
var G__35000 = j;
var G__35001 = k;
var G__35002 = l;
var G__35003 = m;
var G__35004 = n;
var G__35005 = o;
var G__35006 = p;
return (target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__34991,G__34992,G__34993,G__34994,G__34995,G__34996,G__34997,G__34998,G__34999,G__35000,G__35001,G__35002,G__35003,G__35004,G__35005,G__35006) : target_fn.call(null,G__34991,G__34992,G__34993,G__34994,G__34995,G__34996,G__34997,G__34998,G__34999,G__35000,G__35001,G__35002,G__35003,G__35004,G__35005,G__35006));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35007 = a;
var G__35008 = b;
var G__35009 = c;
var G__35010 = d;
var G__35011 = e;
var G__35012 = f;
var G__35013 = g;
var G__35014 = h;
var G__35015 = i;
var G__35016 = j;
var G__35017 = k;
var G__35018 = l;
var G__35019 = m;
var G__35020 = n;
var G__35021 = o;
var G__35022 = p;
var G__35023 = q;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__35007,G__35008,G__35009,G__35010,G__35011,G__35012,G__35013,G__35014,G__35015,G__35016,G__35017,G__35018,G__35019,G__35020,G__35021,G__35022,G__35023) : self__.dispatch_fn.call(null,G__35007,G__35008,G__35009,G__35010,G__35011,G__35012,G__35013,G__35014,G__35015,G__35016,G__35017,G__35018,G__35019,G__35020,G__35021,G__35022,G__35023));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35024 = a;
var G__35025 = b;
var G__35026 = c;
var G__35027 = d;
var G__35028 = e;
var G__35029 = f;
var G__35030 = g;
var G__35031 = h;
var G__35032 = i;
var G__35033 = j;
var G__35034 = k;
var G__35035 = l;
var G__35036 = m;
var G__35037 = n;
var G__35038 = o;
var G__35039 = p;
var G__35040 = q;
return (target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__35024,G__35025,G__35026,G__35027,G__35028,G__35029,G__35030,G__35031,G__35032,G__35033,G__35034,G__35035,G__35036,G__35037,G__35038,G__35039,G__35040) : target_fn.call(null,G__35024,G__35025,G__35026,G__35027,G__35028,G__35029,G__35030,G__35031,G__35032,G__35033,G__35034,G__35035,G__35036,G__35037,G__35038,G__35039,G__35040));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35041 = a;
var G__35042 = b;
var G__35043 = c;
var G__35044 = d;
var G__35045 = e;
var G__35046 = f;
var G__35047 = g;
var G__35048 = h;
var G__35049 = i;
var G__35050 = j;
var G__35051 = k;
var G__35052 = l;
var G__35053 = m;
var G__35054 = n;
var G__35055 = o;
var G__35056 = p;
var G__35057 = q;
var G__35058 = r;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__35041,G__35042,G__35043,G__35044,G__35045,G__35046,G__35047,G__35048,G__35049,G__35050,G__35051,G__35052,G__35053,G__35054,G__35055,G__35056,G__35057,G__35058) : self__.dispatch_fn.call(null,G__35041,G__35042,G__35043,G__35044,G__35045,G__35046,G__35047,G__35048,G__35049,G__35050,G__35051,G__35052,G__35053,G__35054,G__35055,G__35056,G__35057,G__35058));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35059 = a;
var G__35060 = b;
var G__35061 = c;
var G__35062 = d;
var G__35063 = e;
var G__35064 = f;
var G__35065 = g;
var G__35066 = h;
var G__35067 = i;
var G__35068 = j;
var G__35069 = k;
var G__35070 = l;
var G__35071 = m;
var G__35072 = n;
var G__35073 = o;
var G__35074 = p;
var G__35075 = q;
var G__35076 = r;
return (target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__35059,G__35060,G__35061,G__35062,G__35063,G__35064,G__35065,G__35066,G__35067,G__35068,G__35069,G__35070,G__35071,G__35072,G__35073,G__35074,G__35075,G__35076) : target_fn.call(null,G__35059,G__35060,G__35061,G__35062,G__35063,G__35064,G__35065,G__35066,G__35067,G__35068,G__35069,G__35070,G__35071,G__35072,G__35073,G__35074,G__35075,G__35076));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35077 = a;
var G__35078 = b;
var G__35079 = c;
var G__35080 = d;
var G__35081 = e;
var G__35082 = f;
var G__35083 = g;
var G__35084 = h;
var G__35085 = i;
var G__35086 = j;
var G__35087 = k;
var G__35088 = l;
var G__35089 = m;
var G__35090 = n;
var G__35091 = o;
var G__35092 = p;
var G__35093 = q;
var G__35094 = r;
var G__35095 = s;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__35077,G__35078,G__35079,G__35080,G__35081,G__35082,G__35083,G__35084,G__35085,G__35086,G__35087,G__35088,G__35089,G__35090,G__35091,G__35092,G__35093,G__35094,G__35095) : self__.dispatch_fn.call(null,G__35077,G__35078,G__35079,G__35080,G__35081,G__35082,G__35083,G__35084,G__35085,G__35086,G__35087,G__35088,G__35089,G__35090,G__35091,G__35092,G__35093,G__35094,G__35095));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35096 = a;
var G__35097 = b;
var G__35098 = c;
var G__35099 = d;
var G__35100 = e;
var G__35101 = f;
var G__35102 = g;
var G__35103 = h;
var G__35104 = i;
var G__35105 = j;
var G__35106 = k;
var G__35107 = l;
var G__35108 = m;
var G__35109 = n;
var G__35110 = o;
var G__35111 = p;
var G__35112 = q;
var G__35113 = r;
var G__35114 = s;
return (target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__35096,G__35097,G__35098,G__35099,G__35100,G__35101,G__35102,G__35103,G__35104,G__35105,G__35106,G__35107,G__35108,G__35109,G__35110,G__35111,G__35112,G__35113,G__35114) : target_fn.call(null,G__35096,G__35097,G__35098,G__35099,G__35100,G__35101,G__35102,G__35103,G__35104,G__35105,G__35106,G__35107,G__35108,G__35109,G__35110,G__35111,G__35112,G__35113,G__35114));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t){
var self__ = this;
var mf = this;
var dispatch_val = (function (){var G__35115 = a;
var G__35116 = b;
var G__35117 = c;
var G__35118 = d;
var G__35119 = e;
var G__35120 = f;
var G__35121 = g;
var G__35122 = h;
var G__35123 = i;
var G__35124 = j;
var G__35125 = k;
var G__35126 = l;
var G__35127 = m;
var G__35128 = n;
var G__35129 = o;
var G__35130 = p;
var G__35131 = q;
var G__35132 = r;
var G__35133 = s;
var G__35134 = t;
return (self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__35115,G__35116,G__35117,G__35118,G__35119,G__35120,G__35121,G__35122,G__35123,G__35124,G__35125,G__35126,G__35127,G__35128,G__35129,G__35130,G__35131,G__35132,G__35133,G__35134) : self__.dispatch_fn.call(null,G__35115,G__35116,G__35117,G__35118,G__35119,G__35120,G__35121,G__35122,G__35123,G__35124,G__35125,G__35126,G__35127,G__35128,G__35129,G__35130,G__35131,G__35132,G__35133,G__35134));
})();
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

var G__35135 = a;
var G__35136 = b;
var G__35137 = c;
var G__35138 = d;
var G__35139 = e;
var G__35140 = f;
var G__35141 = g;
var G__35142 = h;
var G__35143 = i;
var G__35144 = j;
var G__35145 = k;
var G__35146 = l;
var G__35147 = m;
var G__35148 = n;
var G__35149 = o;
var G__35150 = p;
var G__35151 = q;
var G__35152 = r;
var G__35153 = s;
var G__35154 = t;
return (target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__35135,G__35136,G__35137,G__35138,G__35139,G__35140,G__35141,G__35142,G__35143,G__35144,G__35145,G__35146,G__35147,G__35148,G__35149,G__35150,G__35151,G__35152,G__35153,G__35154) : target_fn.call(null,G__35135,G__35136,G__35137,G__35138,G__35139,G__35140,G__35141,G__35142,G__35143,G__35144,G__35145,G__35146,G__35147,G__35148,G__35149,G__35150,G__35151,G__35152,G__35153,G__35154));
});

cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = (function (a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest){
var self__ = this;
var mf = this;
var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null,dispatch_val);
if(cljs.core.truth_(target_fn)){
} else {
cljs.core.throw_no_method_error(self__.name,dispatch_val);
}

return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn,a,b,c,d,cljs.core.array_seq([e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,rest], 0));
});

cljs.core.MultiFn.cljs$lang$type = true;

cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";

cljs.core.MultiFn.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/MultiFn");
});

cljs.core.__GT_MultiFn = (function __GT_MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy){
return (new cljs.core.MultiFn(name,dispatch_fn,default_dispatch_val,hierarchy,method_table,prefer_table,method_cache,cached_hierarchy));
});

/**
* Removes all of the methods of multimethod.
*/
cljs.core.remove_all_methods = (function remove_all_methods(multifn){
return cljs.core._reset(multifn);
});
/**
* Removes the method of multimethod associated with dispatch-value.
*/
cljs.core.remove_method = (function remove_method(multifn,dispatch_val){
return cljs.core._remove_method(multifn,dispatch_val);
});
/**
* Causes the multimethod to prefer matches of dispatch-val-x over dispatch-val-y
* when there is a conflict
*/
cljs.core.prefer_method = (function prefer_method(multifn,dispatch_val_x,dispatch_val_y){
return cljs.core._prefer_method(multifn,dispatch_val_x,dispatch_val_y);
});
/**
* Given a multimethod, returns a map of dispatch values -> dispatch fns
*/
cljs.core.methods$ = (function methods$(multifn){
return cljs.core._methods(multifn);
});
/**
* Given a multimethod and a dispatch value, returns the dispatch fn
* that would apply to that value, or nil if none apply and no default
*/
cljs.core.get_method = (function get_method(multifn,dispatch_val){
return cljs.core._get_method(multifn,dispatch_val);
});
/**
* Given a multimethod, returns a map of preferred value -> set of other values
*/
cljs.core.prefers = (function prefers(multifn){
return cljs.core._prefers(multifn);
});

/**
* @constructor
*/
cljs.core.UUID = (function (uuid){
this.uuid = uuid;
this.cljs$lang$protocol_mask$partition1$ = 0;
this.cljs$lang$protocol_mask$partition0$ = 2153775104;
})
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = (function (this$){
var self__ = this;
var this$__$1 = this;
var G__35156 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
return goog.string.hashCode(G__35156);
});

cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (_,writer,___$1){
var self__ = this;
var ___$2 = this;
return cljs.core._write(writer,[cljs.core.str("#uuid \""),cljs.core.str(self__.uuid),cljs.core.str("\"")].join(''));
});

cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = (function (_,other){
var self__ = this;
var ___$1 = this;
return ((other instanceof cljs.core.UUID)) && ((self__.uuid === other.uuid));
});

cljs.core.UUID.prototype.toString = (function (){
var self__ = this;
var _ = this;
return self__.uuid;
});

cljs.core.UUID.prototype.equiv = (function (other){
var self__ = this;
var this$ = this;
return this$.cljs$core$IEquiv$_equiv$arity$2(null,other);
});

cljs.core.UUID.cljs$lang$type = true;

cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";

cljs.core.UUID.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/UUID");
});

cljs.core.__GT_UUID = (function __GT_UUID(uuid){
return (new cljs.core.UUID(uuid));
});


/**
* @constructor
*/
cljs.core.ExceptionInfo = (function (message,data,cause){
this.message = message;
this.data = data;
this.cause = cause;
})

cljs.core.ExceptionInfo.cljs$lang$type = true;

cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";

cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = (function (this__23551__auto__,writer__23552__auto__,opt__23553__auto__){
return cljs.core._write(writer__23552__auto__,"cljs.core/ExceptionInfo");
});

cljs.core.__GT_ExceptionInfo = (function __GT_ExceptionInfo(message,data,cause){
return (new cljs.core.ExceptionInfo(message,data,cause));
});

cljs.core.pr_writer_ex_info = (function pr_writer_ex_info(obj,writer,opts){
cljs.core._write(writer,"#ExceptionInfo{:message ");

cljs.core.pr_writer(obj.message,writer,opts);

if(cljs.core.truth_(obj.data)){
cljs.core._write(writer,", :data ");

cljs.core.pr_writer(obj.data,writer,opts);
} else {
}

if(cljs.core.truth_(obj.cause)){
cljs.core._write(writer,", :cause ");

cljs.core.pr_writer(obj.cause,writer,opts);
} else {
}

return cljs.core._write(writer,"}");
});
/**
* Alpha - subject to change.
* Create an instance of ExceptionInfo, an Error type that carries a
* map of additional data.
*/
cljs.core.ex_info = (function() {
var ex_info = null;
var ex_info__2 = (function (msg,data){
return ex_info.cljs$core$IFn$_invoke$arity$3(msg,data,null);
});
var ex_info__3 = (function (msg,data,cause){
cljs.core.ExceptionInfo.prototype = (function (){var G__35161 = msg;
return Error(G__35161);
})();

cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";

cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;

cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;

cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (obj,writer,opts){
var obj__$1 = this;
return cljs.core.pr_writer_ex_info(obj__$1,writer,opts);
});

return (new cljs.core.ExceptionInfo(msg,data,cause));
});
ex_info = function(msg,data,cause){
switch(arguments.length){
case 2:
return ex_info__2.call(this,msg,data);
case 3:
return ex_info__3.call(this,msg,data,cause);
}
throw(new Error('Invalid arity: ' + arguments.length));
};
ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
return ex_info;
})()
;
/**
* Alpha - subject to change.
* Returns exception data (a map) if ex is an ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_data = (function ex_data(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.data;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns the message attached to the given Error / ExceptionInfo object.
* For non-Errors returns nil.
*/
cljs.core.ex_message = (function ex_message(ex){
if((ex instanceof Error)){
return ex.message;
} else {
return null;
}
});
/**
* Alpha - subject to change.
* Returns exception cause (an Error / ExceptionInfo) if ex is an
* ExceptionInfo.
* Otherwise returns nil.
*/
cljs.core.ex_cause = (function ex_cause(ex){
if((ex instanceof cljs.core.ExceptionInfo)){
return ex.cause;
} else {
return null;
}
});
/**
* Returns an JavaScript compatible comparator based upon pred.
*/
cljs.core.comparator = (function comparator(pred){
return (function (x,y){
if(cljs.core.truth_((function (){var G__35166 = x;
var G__35167 = y;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__35166,G__35167) : pred.call(null,G__35166,G__35167));
})())){
return (-1);
} else {
if(cljs.core.truth_((function (){var G__35168 = y;
var G__35169 = x;
return (pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__35168,G__35169) : pred.call(null,G__35168,G__35169));
})())){
return (1);
} else {
return (0);

}
}
});
});
cljs.core.special_symbol_QMARK_ = (function special_symbol_QMARK_(x){
return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null,"&","&",-2144855648,null),null,new cljs.core.Symbol(null,"defrecord*","defrecord*",-1936366207,null),null,new cljs.core.Symbol(null,"try","try",-1273693247,null),null,new cljs.core.Symbol(null,"loop*","loop*",615029416,null),null,new cljs.core.Symbol(null,"do","do",1686842252,null),null,new cljs.core.Symbol(null,"letfn*","letfn*",-110097810,null),null,new cljs.core.Symbol(null,"if","if",1181717262,null),null,new cljs.core.Symbol(null,"new","new",-444906321,null),null,new cljs.core.Symbol(null,"ns","ns",2082130287,null),null,new cljs.core.Symbol(null,"deftype*","deftype*",962659890,null),null,new cljs.core.Symbol(null,"let*","let*",1920721458,null),null,new cljs.core.Symbol(null,"js*","js*",-1134233646,null),null,new cljs.core.Symbol(null,"fn*","fn*",-752876845,null),null,new cljs.core.Symbol(null,"recur","recur",1202958259,null),null,new cljs.core.Symbol(null,"set!","set!",250714521,null),null,new cljs.core.Symbol(null,".",".",1975675962,null),null,new cljs.core.Symbol(null,"quote","quote",1377916282,null),null,new cljs.core.Symbol(null,"throw","throw",595905694,null),null,new cljs.core.Symbol(null,"def","def",597100991,null),null], null), null),x);
});
/**
* test [v] finds fn at key :test in var metadata and calls it,
* presuming failure will throw exception
*/
cljs.core.test = (function test(v){
var f = v.cljs$lang$test;
if(cljs.core.truth_(f)){
(f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null));

return cljs.core.constant$keyword$18;
} else {
return cljs.core.constant$keyword$19;
}
});
